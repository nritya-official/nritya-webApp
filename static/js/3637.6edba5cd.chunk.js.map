{"version":3,"file":"static/js/3637.6edba5cd.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/base/useBadge/useBadge.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/material/Icon/iconClasses.js","../node_modules/@mui/material/Icon/Icon.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/node_modules/reselect/src/utils.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/lruMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/weakMapMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createSelectorCreator.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createStructuredSelector.ts","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/resolveProps/resolveProps.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/utils/platform.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/GridHeaders.js","../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-internals/EventManager/EventManager.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-internals/throttle/throttle.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/material/Toolbar/toolbarClasses.js","../node_modules/@mui/material/Toolbar/Toolbar.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useBadge } from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useThemeProps = createUseThemeProps('MuiBadge');\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme\n}) => {\n  var _theme$vars;\n  return {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    variants: [...Object.keys(((_theme$vars = theme.vars) != null ? _theme$vars : theme).palette).filter(key => {\n      var _theme$vars2, _theme$vars3;\n      return ((_theme$vars2 = theme.vars) != null ? _theme$vars2 : theme).palette[key].main && ((_theme$vars3 = theme.vars) != null ? _theme$vars3 : theme).palette[key].contrastText;\n    }).map(color => ({\n      props: {\n        color\n      },\n      style: {\n        backgroundColor: (theme.vars || theme).palette[color].main,\n        color: (theme.vars || theme).palette[color].contrastText\n      }\n    })), {\n      props: {\n        variant: 'dot'\n      },\n      style: {\n        borderRadius: RADIUS_DOT,\n        height: RADIUS_DOT * 2,\n        minWidth: RADIUS_DOT * 2,\n        padding: 0\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n      style: {\n        top: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n      style: {\n        bottom: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n      style: {\n        top: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n      style: {\n        bottom: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n      style: {\n        top: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n      style: {\n        bottom: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n      style: {\n        top: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n      style: {\n        bottom: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: {\n        invisible: true\n      },\n      style: {\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeInOut,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      }\n    }]\n  };\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nexport function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconUtilityClass(slot) {\n  return generateUtilityClass('MuiIcon', slot);\n}\nconst iconClasses = generateUtilityClasses('MuiIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default iconClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"baseClassName\", \"className\", \"color\", \"component\", \"fontSize\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getIconUtilityClass } from './iconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(36)\n  }[ownerState.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: (theme.vars || theme).palette.primary.main,\n    secondary: (theme.vars || theme).palette.secondary.main,\n    info: (theme.vars || theme).palette.info.main,\n    success: (theme.vars || theme).palette.success.main,\n    warning: (theme.vars || theme).palette.warning.main,\n    action: (theme.vars || theme).palette.action.active,\n    error: (theme.vars || theme).palette.error.main,\n    disabled: (theme.vars || theme).palette.action.disabled,\n    inherit: undefined\n  }[ownerState.color]\n}));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n      baseClassName = 'material-icons',\n      className,\n      color = 'inherit',\n      component: Component = 'span',\n      fontSize = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, _extends({\n    as: Component,\n    className: clsx(baseClassName,\n    // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default Icon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: `capitalize(string)` expects a string argument.' : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","/**\n * WARNING: Don't import this directly. It's imported by the code generated by\n * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`\n * constructors to ensure the plugin works as expected. Supported patterns include:\n *   throw new Error('My message');\n *   throw new Error(`My message: ${foo}`);\n *   throw new Error(`My message: ${foo}` + 'another string');\n *   ...\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code, ...args) {\n  const url = new URL(`https://mui.com/production-error/?code=${code}`);\n  args.forEach(arg => url.searchParams.append('args[]', arg));\n  return `Minified MUI error #${code}; visit ${url} for the full message.`;\n}","/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from \"../ClassNameGenerator/index.js\";\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from \"../generateUtilityClass/index.js\";\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","export const gridDimensionsSelector = state => state.dimensions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from \"../useEnhancedEffect/index.js\";\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","'use client';\n\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\nimport useOnMount from \"../useOnMount/useOnMount.js\";\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = null;\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== null) {\n      clearTimeout(this.currentId);\n      this.currentId = null;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? reactId;\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value: Boolean(value)\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","/**\n * Get a list column definition\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = selectableIds;\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.push(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = [];\n      }\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      const addRow = rowId => {\n        selectionLookup[rowId] = rowId;\n      };\n      const removeRow = rowId => {\n        delete selectionLookup[rowId];\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const isFirstRender = React.useRef(true);\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    if (isFirstRender.current) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (filteredRowsLookup[id] !== true) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n    if (hasChanged || isNestedData && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (isNestedData) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n  }, []);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const virtualScrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const virtualScrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && virtualScrollbarHorizontalRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      virtualScrollbarHorizontalRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && virtualScrollbarVerticalRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      virtualScrollbarVerticalRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, virtualScrollbarHorizontalRef, virtualScrollbarVerticalRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import ownerDocument from \"../ownerDocument/index.js\";\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set(['__check__', '__reorder__', '__detail_panel_toggle__']);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  })\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"disabled\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { isHostComponent } from '@mui/base/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  var _slotProps$select;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = (_slotProps$select = slotProps == null ? void 0 : slotProps.select) != null ? _slotProps$select : SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !selectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, selectProps, {\n        classes: _extends({}, selectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        }),\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (error) {\n      if (error instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw error;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../constants/gridDetailPanelToggleField.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useThemeProps","createUseThemeProps","BadgeRoot","styled","name","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","concat","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","_ref3","theme","_theme$vars","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","variants","Object","keys","vars","palette","filter","key","_theme$vars2","_theme$vars3","main","contrastText","map","style","backgroundColor","RADIUS_DOT","_ref4","top","right","transform","transformOrigin","badgeClasses","_ref5","bottom","_ref6","left","_ref7","_ref8","_ref9","_ref10","_ref11","leavingScreen","React","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","anchorOriginProp","className","component","components","componentsProps","children","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slots","slotProps","showZero","variantProp","other","_objectWithoutPropertiesLoose","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","useBadge","undefined","_extends","classes","composeClasses","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","getCircularProgressUtilityClass","_templateObject","_templateObject2","_templateObject3","_templateObject4","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","CircularProgressRoot","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","size","thickness","value","circleStyle","rootStyle","circumference","Math","PI","toFixed","round","width","role","viewBox","cx","cy","r","fill","strokeWidth","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","WebkitTextSizeAdjust","colorScheme","mode","body","text","primary","body1","background","default","common","white","GlobalStyles","arguments","length","_theme$components","colorSchemeStyles","colorSchemes","entries","forEach","scheme","_scheme$palette","getColorSchemeSelector","replace","defaultStyles","fontWeightBold","margin","themeOverrides","MuiCssBaseline","styleOverrides","getIconUtilityClass","IconRoot","userSelect","overflow","textAlign","inherit","small","medium","large","secondary","info","success","warning","action","active","error","disabled","Icon","baseClassName","Component","muiName","ListItemTextRoot","listItemTextClasses","inset","multiline","dense","flex","marginTop","marginBottom","paddingLeft","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","ListContext","getListItemTextUtilityClass","type","Typography","createSvgIcon","d","string","Error","code","url","URL","_len","args","Array","_key","arg","searchParams","append","_formatMuiErrorMessage","charAt","toUpperCase","slice","getUtilityClass","output","slotName","buffer","start","i","useForkRef","refs","every","instance","current","setRef","window","defaultGenerator","componentName","createClassNameGenerator","generate","configure","generator","reset","globalStateClasses","checked","completed","expanded","focused","focusVisible","open","readOnly","required","selected","globalStatePrefix","globalStateClass","ClassNameGenerator","result","getDataGridUtilityClass","gridClasses","is","fastObjectShallowCompare","a","b","aLength","bLength","_","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","useOnMount","fn","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","state","defaultCompare","objectShallowCompare","createRefs","equals","useGridSelector","didInit","setState","store","subscribe","newState","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","join","gridDimensionsSelector","dimensions","columnHeaderStyles","c","iconButtonContainer","visibility","menuIcon","separatorIconDragStyles","rx","x","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","_t$mixins$MuiDataGrid","_t$mixins$MuiDataGrid2","_t$mixins$MuiDataGrid3","_t$mixins$MuiDataGrid4","t","borderColor","TableCell","border","lighten","alpha","divider","darken","radius","shape","containerBackground","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedHoverOpacity","selectedBackground","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","borderWidth","borderStyle","body2","outline","minHeight","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","columnHeaderTitleContainerContent","whiteSpace","maxWidth","groupingCriteriaCell","WebkitTapHighlightColor","outlineOffset","focusOutlineWidth","opacity","hasScrollX","hasScrollY","scrollbarSize","shorter","gap","spacing","borderBottomWidth","borderBottomStyle","cursor","marginLeft","marginRight","columnHeaders","columnSeparatorOffset","touchAction","pointerEvents","shortest","borderBottom","filler","scrollbarFiller","breakInside","rowSkeleton","borderTop","textOverflow","borderTopColor","cellEmpty","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","virtualScrollerContent","cellOffsetLeft","alignSelf","groupingCriteriaCellToggle","pinnedRows","virtualScroller","overlay","gamma","f","o","decomposeColor","overlayColor","rgb","values","recomposeColor","removeOpacity","GridRootPropsContext","useGridRootProps","contextValue","NOT_FOUND","Symbol","assertIsFunction","func","errorMessage","TypeError","ensureIsArray","item","isArray","getDependencies","createSelectorArgs","dependencies","array","itemTypes","assertIsArrayOfFunctions","getPrototypeOf","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","cache","entry","get","put","getEntries","clear","createSingletonCache","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","resetResultsCount","Ref","WeakRef","constructor","deref","this","UNTERMINATED","TERMINATED","createCacheNode","s","v","p","weakMapMemoize","options","fnNode","lastResult","cacheNode","l","objectCache","WeakMap","objectNode","set","primitiveCache","Map","primitiveNode","terminatedNode","_lastResult$deref","_lastResult","_lastResult$deref2","lastResultValue","call","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","push","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","structuredSelector","_len3","_key4","reduce","composition","index","reselectCreateSelector","checkIsAPIRef","DEFAULT_INSTANCE_ID","id","e","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","GridRoot","handleRef","rootElementRef","showCellVerticalBorder","toolbar","mountedState","setMountedState","useEnhancedEffect","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","column","gridVisibleColumnFieldsSelector","visibleColumns","gridVisiblePinnedColumnDefinitionsSelector","pinnedColumns","isRtl","model","visibleColumnFields","visiblePinnedFields","invert","_pinnedColumns$left","_pinnedColumns$right","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","acc","gridHasColSpanSelector","some","colSpan","gridPreferencePanelStateSelector","preferencePanel","GridPreferencePanelsValue","GridApiContext","useGridApiContext","GridPreferencesPanel","_preferencePanelState","_rootProps$slotProps","_rootProps$slotProps2","preferencePanelState","panelContent","unstable_applyPipeProcessors","openedPanelValue","filters","panel","basePopper","panelId","labelId","GridHeader","fastMemo","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","event","details","_handlerRef$current","defaultMuiPrevented","subscribeEvent","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","Timeout","_defineProperty","currentId","delay","useTimeout","disposeEffect","resolveProps","defaultProps","prototype","hasOwnProperty","propName","defaultSlotProps","slotKey","slotPropName","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","inputRef","valueState","setValueState","handleChange","async","newValue","target","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","onChange","endAdornment","loadIcon","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","sorting","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","globalId","maybeReactUseId","useId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","GridFilterInputValue","_item$value","applyValue","focusElementRef","tabIndex","clearButton","InputProps","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","String","filterDebounceMs","newItem","fromInput","_item$value2","baseTextField","label","getLocaleText","placeholder","inputProps","InputLabelProps","shrink","isFunction","isObject","escapeRegExp","clamp","min","range","from","to","isDeepEqual","entriesA","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","toString","deepClone","obj","structuredClone","JSON","parse","stringify","_excluded2","GridFilterInputMultipleValue","helperText","TextFieldProps","itemValue","filterItemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","operator","filterOperators","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","filterItem","_filterItem$value","parser","ignoreDiacritics","newFilterItem","filterOperator","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","_filterModel$quickFil","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","_filterModel$quickFil2","_filterModel$quickFil3","Boolean","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","_isRowMatchingFilterI","_isRowMatchingQuickFi","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","filterRegex","matches","test","createEqualityFilterFn","sensitivity","usage","isEqual","compare","createEmptyFilterFn","isEmpty","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","align","InputComponent","requiresFilterValue","val","getGridStringOperators","renderEditCell","columnValue","getRowFormattedValue","parseNumericValue","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNaN","isNumber","toLocaleString","InputComponentProps","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","renderEditDateCell","throwIfNotDateObject","columnType","rowId","GRID_DATE_COL_DEF","gridDateFormatter","getRowId","toLocaleDateString","pastedValueParser","GRID_DATETIME_COL_DEF","gridDateTimeFormatter","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","_rawPinnedRows$bottom","_rawPinnedRows$bottom2","_rawPinnedRows$top$ma","_rawPinnedRows$top","rawPinnedRows","rowEntry","_rowEntry$model","_rowEntry$model2","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","_previousCache$update","_previousCache$update2","_previousCache$update3","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","getMinimalContentHeight","rowHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","htmlFor","baseCheckbox","BooleanOperatorContainer","GridFilterInputBoolean","_baseSelectProps$nati","_rootProps$slotProps3","labelProp","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","gridBooleanFormatter","valueAsBoolean","toLowerCase","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","MenuProps","otherBaseSelectProps","_inputRef$current","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","_resolvedColumn","_resolvedColumn2","_rootProps$slotProps4","resolvedColumn","currentValueOptions","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","GridMenuRoot","Popper","menu","modal","GridMenu","onExited","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","document","activeElement","HTMLElement","handleClickAway","contains","anchorEl","placement","TransitionProps","ClickAwayListener","onClickAway","mouseEvent","Grow","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useRtl","menuId","buttonId","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","handleButtonClick","onClick","onKeyDown","getNewIndex","direction","_options","indexMod","newIndex","preventDefault","stopPropagation","button","touchRippleRef","baseIconButton","showMenu","moreActionsIcon","MenuList","autoFocusItem","closeMenu","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","_headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","unwrappedGroupingModel","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","number","dateTime","boolean","singleSelect","custom","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","viewportOuterSize","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","_apiRef$current$getRo","_apiRef$current$getRo2","_apiRef$current","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getRootDimensions","getTotalHeaderHeight","_props$headerFilterHe","unstable_listView","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","viewportInnerSize","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","leftPinnedWidth","rightPinnedWidth","handleDragOver","useEventCallback","offset","clientX","getBoundingClientRect","scroll","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","onDragOver","noop","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnGroupHeaderSelector","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","gridSortColumnLookupSelector","res","sortItem","sortDirection","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","gridFilteredRowsLookupSelector","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","visibleSortedRows","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilterActiveItemsSelector","topLevelRowCount","columnLookup","_filterModel$items","_column$filterOperato","gridFilterActiveItemsLookupSelector","activeFilters","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","getVisibleRows","paginationMode","useGridVisibleRows","response","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","gridListColumnSelector","listViewColumn","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","isJSDOM","useGridVirtualScroller","listView","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","selectedRowsLookup","currentPage","gridRootRef","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","virtualScrollbarVerticalRef","scrollbarHorizontalRef","virtualScrollbarHorizontalRef","contentHeight","contentSize","hasColSpan","fnRef","ResizeObserver","frameID","observer","observe","cancelAnimationFrame","disconnect","useResizeObserver","resize","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","bufferForDirection","MINIMUM_COLUMN_WIDTH","focusedCell","rowIndex","columnIndex","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","ReactDOM","forceUpdateRenderContext","handleScroll","currentTarget","handleWheel","handleTouchMove","needsHorizontalScrollbar","scrollerStyle","overflowX","overflowY","flexBasis","currentPageTotalHeight","useRunOnce","condition","effect","didRun","initialRenderContext","getRows","_params$renderContext","_params$rows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","_currentPage$range","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","isNotVisible","tabbableCell","cellMode","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","offsetTop","focusedColumnIndex","_apiRef$current$getIn","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","platform","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","_lastColumn$computedW","_rootProps$unstable_l","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","_inputs$range","_inputs$range2","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","_columnPositions$rend","_columnPositions$pinn","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","GridOverlays","_rootProps$slots","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","_props$style","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","Memoized","rowsLength","minimumSize","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","_rowsMeta$positions$r","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","content","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","addEventListener","capture","removeEventListener","setProperty","Container","Scroller","scrollbarWidth","GridVirtualScroller","overlaysProps","useGridOverlays","visibleRowCount","noRows","loadingOverlay","TopContainer","GridHeaders","Overlays","Content","RenderZone","detailPanels","SpaceFiller","BottomContainer","GridFooterPlaceholder","hideFooter","footer","getGridRowGroupSelectableDescendants","groupId","sortedRowIds","groupNode","descendants","_rowTree$sortedRowIds","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","findRowsToSelect","selectedRow","autoSelectDescendants","autoSelectParents","addRow","filteredRows","selectedIdsLookup","selectedDescendants","add","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","parent","childId","findRowsToDeselect","deselectedRow","removeRow","allParents","getRowNodeParents","parents","descendant","GridContextProvider","Provider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","logger","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","Store","_value","listeners","getSnapshot","SYMBOL_API_PRIVATE","useGridApiInitialization","inputApiRef","_inputApiRef$current","_publicApiRef$current","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","api","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","useGridLoggerFactory","getLogger","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","context","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","_ref$current","added","setAdded","targetElement","wrapHandler","GridCellCheckboxForwardRef","_rootProps$rowSelecti","_rootProps$rowSelecti2","checkboxElement","rippleRef","element","getCellElement","_checkboxElement$curr","input","querySelector","handleKeyDown","isSelectable","checkboxPropsSelector","rowSelectionPropagation","rowSelectionLookup","isIndeterminate","isChecked","selectableDescendantsCount","selectedDescendantsCount","_rowTree$sortedRowIds2","indeterminateCheckboxAction","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","getColumnHeaderElement","handleSelectionChange","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","_cellParams$value","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","CSVHead","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isPasteShortcut","fromCharCode","keyCode","shiftKey","altKey","writeToClipboardPolyfill","data","span","createElement","textContent","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","isCopyShortcut","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","_state$pinnedColumns","mergeColumnsState","densityStateInitializer","_props$initialState$d","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","_options$getRowsToExp","_options$shouldAppend","_options$includeHeade","_options$includeColum","_options$escapeFormul","getRowsToExport","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","disableToolbarButton","ownerDocument","getDerivedPaginationModel","paginationState","paginationModelProp","_paginationModelProp$","_paginationModelProp$2","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","doc","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","_gridRootElement$quer","_gridRootElement$quer2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","_options$printOptions","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","_api$columnHeadersCon","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","_rowSpanHiddenCells$r","rowSpanHiddenCells","nextRowIndex","_rowSpanHiddenCells$n","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","Edit","getColumnIndexFn","rowIndexBefore","checkIfCanStartEditing","paginationStateInitializer","_props$paginationMode","_props$rowCount","_props$paginationMeta","_props$initialState3","paginationMeta","useGridPagination","useGridPaginationMeta","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","restoredPaginationMeta","stateToRestore","useGridPaginationModel","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","_context$stateToResto2","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","handlePaginationModelChange","_apiRef$current$virtu","useGridRowCount","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","preferencePanelStateInitializer","_props$initialState$p","gridEditRowsStateSelector","editRows","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","_editRowsState$id$fie","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","_rowModesModel$id","_copyOfPrevRowModesMo","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","rawValue","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","_getSelectionModelPro","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","_props$sortModel","scrollIntoView","containerSize","elementSize","elementOffset","elementEnd","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableColumnFilter","disableColumnReorder","disableColumnResize","disableColumnSelector","disableColumnSorting","disableDensitySelector","disableRowSelectionOnClick","filterMode","hideFooterPagination","hideFooterRowCount","hideFooterSelectedRowCount","keepColumnPositionIfDraggedOutside","keepNonExistentRowsSelected","pageSizeOptions","resizeThrottleMs","rowPositionsDebounceMs","rowSpacingType","showColumnVerticalBorder","sortingMode","throttleRowsMs","unstable_rowSpanning","EMPTY_SIZE","EMPTY_DIMENSIONS","groupHeaderHeight","rowWidth","headersTotalHeight","dimensionsStateInitializer","useGridDimensions","_props$columnGroupHea","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnGroupHeaderHeight","decimals","w","savedSize","setSavedSize","debouncedSetSavedSize","lastArgs","wait","later","throttled","throttle","previousSize","setDimensions","computedStyle","defaultView","getComputedStyle","newSize","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","_apiRef$current$updat","rootElement","pinnedRowsHeight","calculatePinnedRowsHeight","scrollDiv","offsetWidth","clientWidth","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPrivate","k","isFirstSizing","handleResize","onResize","globalThis","unobserve","rowsMetaStateInitializer","heights","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","cellProps","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","_getParents$depth","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","_unwrappedGroupingMod2","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","trackFinger","currentTouchId","changedTouches","touch","identifier","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","asyncCheck","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","_cell$getBoundingClie","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","header","_iconContainer$client","_menuContainer$client","columnHeaderTitle","iconContainer","menuContainer","paddingWidth","parseInt","paddingRight","scrollWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","_apiRef$current$rootE","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","pinnedPosition","updateProperty","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","_apiRef$current$colum","_elem$querySelectorAl","findGroupHeaderElementsFromField","_api$virtualScrollerR","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","side","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","_apiRef$current$rootE2","_userOptions$columns","userOptions","unstable_setColumnVirtualization","newColumns","totalWidth","total","_widthByField$column$","remainingWidth","widthPerColumn","updateColumns","_apiRef$current$colum2","passive","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","_colDef$rowSpanValueG","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","_hiddenCells$row$id","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","_state$filter$filterM","isFilteringPending","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","unstable_listColumn","getListColumnWidth","useDataGridComponent","useGridRowsPreProcessors","useGridRowSelection","_props$rowSelectionPr","_props$rowSelectionPr2","_props$rowSelectionPr15","_props$rowSelectionPr16","_props$rowSelectionPr29","_props$rowSelectionPr30","_props$rowSelectionPr32","runIfRowSelectionIsEnabled","applyAutoSelection","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","_props$rowSelectionPr3","_props$rowSelectionPr4","_props$rowSelectionPr5","_props$rowSelectionPr6","_props$rowSelectionPr7","_props$rowSelectionPr8","_props$rowSelectionPr9","_props$rowSelectionPr10","_props$rowSelectionPr11","_props$rowSelectionPr12","_props$rowSelectionPr13","_props$rowSelectionPr14","selectRows","selectableIds","_props$rowSelectionPr17","_props$rowSelectionPr18","_props$rowSelectionPr19","_props$rowSelectionPr20","selectionLookup","_props$rowSelectionPr21","_props$rowSelectionPr22","_props$rowSelectionPr23","_props$rowSelectionPr24","_props$rowSelectionPr25","_props$rowSelectionPr26","_props$rowSelectionPr27","_props$rowSelectionPr28","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","_props$rowSelectionPr31","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_event$target$closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","_props$initialState4","_props$slotProps2","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","_apiRef$current$updat2","_apiRef$current2","setColumnVisibility","isVisible","_columnVisibilityMode","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","columnReorderApi","_props$initialState$c","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$slotProps","ColumnsPanel","columnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","useGridRows","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","_idRowsLookup$id","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","_tree$childId","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","_props$rows","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRowSpanning","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","resetColSpan","columnSpanningPrivateApi","getCellColSpanInfo","_lookup$current$rowId","useGridColumnSpanning","useGridColumnGrouping","_unwrappedGroupingMod3","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","updateColumnGroupingState","_apiRef$current$getPi","_apiRef$current$getPi2","getPinnedColumns","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","_gridFocusCellSelecto","lastFocusedRowId","_nextRow$id","lastFocusedRowIndex","nextRow","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","hidePreferences","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortComparator","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","isHeightMetaValid","processHeightEntry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","_heightCache$get$cont","_heightCache$get","unstable_setLastMeasuredRowIndex","storeRowHeightMeasurement","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","_heightCache$get$auto","_heightCache$get2","useGridScroll","colRef","scrollCoordinates","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","getScrollPosition","showColumnMenu","hideColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setVirtualization","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","_CONTENT_WIDTH_RANGE_","Skeleton","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnHeaderSortIconRaw","icon","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","baseBadge","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","GridRowCountRoot","GridRowCount","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","pinnedRight","GridScrollbarFillerCell","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","_dimensions$viewportI","viewportHeight","skeletonRowsCount","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","_ref$current2","pinnedCells","_ref$current3","LOADING_VARIANTS","CircularProgress","LinearProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","getToolbarUtilityClass","ToolbarRoot","disableGutters","gutters","Toolbar","_slots$firstButton","_slots$lastButton","_slots$nextButton","_slots$previousButton","_slots$firstButtonIco","_slots$lastButtonIcon","_slots$nextButtonIcon","_slots$previousButton2","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","FirstButton","firstButton","IconButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","FirstPageIconDefault","LastButtonIcon","lastButtonIcon","LastPageIconDefault","NextButtonIcon","nextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","previousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","tablePaginationClasses","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","TablePagination","_slotProps$select","ActionsComponent","TablePaginationActions","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","maxHeight","estimated","GridPagination","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","wrapLabelDisplayedRows","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","_valueRef$current","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","baseButton","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","startAdornment","baseInputAdornment","quickFilterIcon","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagement","columnsManagementHeader","columnsManagementFooter","grey","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","elevation","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","VIRTUAL","EMPTY_CELL_PARAMS","GridCell","_column$getActions","_cellParams$formatted","_rootProps$cellSelect","_hiddenCells$rowId$fi","_hiddenCells$rowId","_spannedCells$rowId$f","_spannedCells$rowId","editCellState","styleProp","disableDragEvents","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","cellStyle","isLeftPinned","isRightPinned","focusableElement","elementToFocus","handleFocus","onFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","EmptyCell","GridRow","refProp","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","editRowsState","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","publishClick","rowReordering","heightEntry","rowStyle","rowClassNames","getRowClassName","getCell","indexRelativeToAllColumns","_cellColSpanInfo$cell","_cellColSpanInfo$cell2","_editRowsState$rowId$","_editRowsState$rowId","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","labelledby","GridColumnHeaderTitleRoot","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","clientHeight","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","ariaSort","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","_colDef$sortingOrder","_colDef$headerName","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onContextMenu","onBlur","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","columnHeaderFilterIconButton","counter","columnHeaderSortIcon","elementId","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","render","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","MemoizedGridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","GridColumnHeaderItem","getColumnGroupHeaders","_columnGroupsModel$fi","_columnGroupsModel$fi2","_columnGroupsModel$la","_columnGroupsModel$la2","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","_column$computedWidth","headerInfo","Left","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","autoFocus","ListItemIconRoot","alignItemsFlexStart","ListItemIcon","getListItemIconUtilityClass","GridColumnMenuHideItem","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","baseDivider","useGridColumnMenuSlots","otherProps","GridColumnMenu","GridNoResultsOverlay","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","openFilterButtonIcon","columnFilteredIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterClearIcon","columnMenuClearIcon","columnReorderIcon","MUIBadge","MUICheckbox","MUIDivider","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIMenuItem","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","GridSkeletonCell","toggleFilter","GridColumnHeaders","noResultsOverlay","noRowsOverlay","useProps","allProps","_props$forwardedProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","useDataGridProps","themedProps","overrides","computeSlots","injectDefaultProps","_themedProps$key","accessibleRowCount","pinnedRowsCount","ariaRowIndex","DataGridRaw","GridBody","propTypes","PropTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","location","propFullName","secret","getShim","ReactPropTypes","bigint","bool","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes"],"sourceRoot":""}