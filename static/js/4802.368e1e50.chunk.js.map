{"version":3,"file":"static/js/4802.368e1e50.chunk.js","mappings":"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","sources":["Components/ImageUpload.js","Components/TimeRange.js","Components/WorkshopCard.js","Components/WorkshopCardSlider.js","Components/WorkshopAdd.js","Components/WorkshopUpdate.js","Screens/CreatorWorkshop.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport { ref, getDownloadURL, listAll } from 'firebase/storage';\nimport { storage } from '../config';\nimport { useSelector } from 'react-redux'; // Import useSelector and useDispatch\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { deleteAllImagesInFolder,deleteImages,uploadImages} from '../utils/firebaseUtils'\nimport { Card, CardContent, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { STORAGES } from \"../constants\";\n\n\nconst ImageUpload = ({entityId,storageFolder,title, maxImageCount=10, updateMode, disable }) => {\n  const showSnackbar = useSnackbar();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [newFiles, setNewFiles] = useState([]); // Track new files to be added\n  const [deletedFiles, setDeletedFiles] = useState([]); // Track deleted files\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n  //console.log(\"Received props=> entityId:\", entityId, \"|storageFolder:\", storageFolder);\n  const [progressDelete, setProgressDelete] = useState(-1);\n  const [progressUpdate, setProgressUpdate] = useState(-1);\n\n  console.log(\"Kyc enitity id \",entityId, disable)\n  const filesizes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  useEffect(() => {\n   // console.log(\"Fetching image for\",entityId)\n    if(entityId){\n      fetchStudioImages(entityId); // Fetch images when component mounts\n    }\n  }, [entityId]);\n\n  useEffect(() => {\n   // console.log(\"Selected files:\", selectedFiles);\n    if (maxImageCount && selectedFiles.length > maxImageCount) {\n      const truncatedFiles = selectedFiles.slice(0, maxImageCount);\n      alert(`Exceeded maxImageCount, keeping first ${maxImageCount} files.`);\n      setSelectedFiles(truncatedFiles);\n    }\n  }, [selectedFiles, maxImageCount]);\n  \n\n  const handleInputChange = (e) => {\n    // console.log(\"handleInputChange\")\n    const files = Array.from(e.target.files);\n    const updatedFiles = [];\n    // console.log(\"file array \",files.length)\n    files.forEach((file) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        updatedFiles.push({\n          id: shortid.generate(),\n          filename: file.name,\n          filetype: file.type,\n          fileimage: reader.result,\n          datetime: file.lastModifiedDate.toLocaleString(\"en-IN\"),\n          filesize: filesizes(file.size),\n          file: file, // Store the actual file object\n        });\n\n        if (updatedFiles.length === files.length) {\n          setSelectedFiles((prevFiles) => [...prevFiles, ...updatedFiles]);\n          setNewFiles(updatedFiles);\n          // console.log(\"New files in total\",setNewFiles.length)\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleDeleteSelectedFile = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this image?\")) {\n      const fileToDelete = selectedFiles.find((file) => file.id === id);\n      setDeletedFiles((prevDeletedFiles) => [...prevDeletedFiles, fileToDelete]);\n      setSelectedFiles((prevFiles) =>\n        prevFiles.filter((file) => file.id !== id)\n      );\n    }\n  };\n\n  const handleUploadSubmit = async () => {\n    if (!entityId) {\n      alert(\"No studio selected\");\n      return;\n    }\n\n    try {\n      if (maxImageCount === 1) {\n        // Delete all previous images in the folder\n        await deleteAllImagesInFolder(storageFolder, entityId);\n        await uploadImages(storageFolder,newFiles, entityId);\n      } else {\n        // Calculate images to delete and add\n        const { imagesToDelete, newImages } = calculateDelta(selectedFiles, uploadedFiles);\n\n        // Delete images if there are any\n        if (imagesToDelete.length > 0) {\n          await deleteImages(storageFolder, imagesToDelete, entityId, setProgressDelete);\n        }\n\n        // Upload new images if there are any\n        if (newImages.length > 0) {\n          await uploadImages(storageFolder, newImages, entityId, setProgressUpdate);\n        }\n\n      }\n\n      // alert(\"Images Uploaded/Deleted\");\n      //showSnackbar(\"Images Uploaded/Deleted\", \"success\");\n    } catch (error) {\n      console.error(\"Error uploading/deleting images:\", error);\n    }\n  };\n\n  // Function to calculate images to delete and new images to upload\n  const calculateDelta = (selectedFiles, uploadedFiles) => {\n    const selectedFileIds = selectedFiles.map(file => file.id);\n    const uploadedFileIds = uploadedFiles.map(file => file.id);\n\n    const imagesToDelete = uploadedFiles.filter(file => !selectedFileIds.includes(file.id));\n    const newImages = selectedFiles.filter(file => !uploadedFileIds.includes(file.id));\n\n    return { imagesToDelete, newImages };\n  };\n\n\n  const fetchStudioImages = async (entityId) => {\n    setSelectedFiles([]);\n    setNewFiles([]);\n    setDeletedFiles([]);\n    try {\n      const folderPath = `${storageFolder}/${entityId}`;\n      console.log(folderPath)\n      const folderRef = ref(storage, folderPath);\n      const fileList = await listAll(folderRef);\n\n      const files = await Promise.all(\n        fileList.items.map(async (fileRef) => {\n          const downloadURL = await getDownloadURL(fileRef);\n\n          return {\n            id: fileRef.name,\n            filename: fileRef.name,\n            fileURL: downloadURL,\n          };\n        })\n      );\n      // console.log('File fetching',files);\n      setUploadedFiles(files); // Update the uploadedFiles state with fetched data\n      setSelectedFiles(files);\n    } catch (error) {\n      console.error('Error fetching user images:', error);\n    }\n  };\n\n  return (\n    <div className=\"fileupload-view\" style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n      <div className=\"row justify-content-center m-0\" style={{ flex: '1',justifyContent: 'center' }}>\n        <div className=\"col-md-6\" style={{ flex: '1' ,justifyContent: 'center'}}>\n          <div className=\"card mt-5\">\n            <div className=\"card-body\" style={{ backgroundColor: isDarkModeOn ? '#333333' : 'white' }}>\n              <div className=\"kb-data-box\">\n                <div className=\"kb-modal-data-title\">\n                  <div className=\"kb-data-title\" style={{justifyContent:'center',flex: '1'}}>\n                    <h4>{title}</h4>\n                    <p>Max no of image(s):{maxImageCount} {storageFolder === STORAGES.STUDIOIMAGES && <p>Add at least 5 images</p>}</p>\n                  </div>\n                </div>\n                <form style={{  backgroundColor: isDarkModeOn ? '#333333' : 'white'}}>\n                  <div className=\"kb-file-upload\">\n                    <div className=\"file-upload-box\">\n                      <input\n                        type=\"file\"\n                        id=\"fileupload\"\n                        className=\"file-upload-input\"\n                        onChange={handleInputChange}\n                        multiple\n                      />\n\n                    </div>\n                  </div>\n                  <br></br>\n                  <div className=\"kb-attach-box mb-3\">\n                  <div className=\"row\">\n                    {entityId && selectedFiles.length > 0 ? (\n                      selectedFiles.map((file) => (\n                        \n                        <div key={file.id} className=\"col-6 col-md-3 mb-3\" style={{ position: 'relative' }}>\n                          \n                          <Card sx={{ maxWidth: 345 }}>\n                            {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                              <div style={{ position: 'relative' }}>\n                                <img\n                                  src={file.fileimage ? file.fileimage : file.fileURL}\n                                  alt={file.filename}\n                                  className=\"card-img-top\"\n                                  style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                                />\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  disabled={disable}\n                                  onClick={() => handleDeleteSelectedFile(file.id)}\n                                  style={{ position: 'absolute', top: 0, right: 0, backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                                >\n                                  <DeleteIcon style={{color:\"ff0000\"}}/>\n                                </IconButton>\n                              </div>\n                            ) : (\n                              <CardContent>\n                                <i className=\"far fa-file-alt\"></i>\n                              </CardContent>\n                            )}\n                          </Card>\n                        </div>\n                        \n                      ))\n                    ) : (\n                      <div className=\"col-12 text-center\">\n                        <p>No images selected</p>\n                      </div>\n                    )}\n                  </div>\n\n                  </div>\n\n                  \n                  <div className=\"kb-buttons-box\">\n                    <button\n                      type=\"button\"\n                      className=\"btn form-submit\"\n                      style={{ backgroundColor: isDarkModeOn ? '#892CDC' : 'black', color:'white'  }}\n                      onClick={handleUploadSubmit}\n                      disabled={disable}\n                    >\n                      Image Upload\n                    </button>\n                  </div>\n                </form>\n                {selectedFiles.length > 0 && (\n                  <div className=\"kb-attach-box\" hidden>\n                    <div className=\"row\">\n                    <hr />\n                    {selectedFiles.map((file) => (\n                      <div key={file.id} className=\"col-6 col-md-3 mb-3\">\n                      <div className=\"card\">\n                        {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                          <img\n                            src={file.fileimage}\n                            alt={file.filename}\n                            className=\"card-img-top\"\n                            style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                          />\n                        ) : (\n                          <div className=\"card-body\">\n                            <i className=\"far fa-file-alt\"></i>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n              { progressDelete >= 0 && (\n                    <div>\n                        <p style={{ color: isDarkModeOn ? '#fff' : '#000' }}>\n                            Deleting images... {progressDelete.toFixed(2)}%\n                        </p>\n                        <progress \n                            value={progressDelete} \n                            max=\"100\" \n                            style={{\n                                color: isDarkModeOn ? '#fff' : '#000'\n                            }}\n                        >\n                            {progressDelete.toFixed(2)}%\n                        </progress>\n                    </div>\n                )}\n\n                { progressUpdate >= 0 && (\n                    <div>\n                        <p style={{ color: isDarkModeOn ? '#fff' : '#000' }}>\n                            Uploading images... {progressUpdate.toFixed(2)}%\n                        </p>\n                        <progress \n                            value={progressUpdate} \n                            max=\"100\" \n                            style={{\n                                color: isDarkModeOn ? '#fff' : '#000'\n                            }}\n                        >\n                            {progressUpdate.toFixed(2)}%\n                        </progress>\n                    </div>\n                )}\n\n                            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Set default prop values\nImageUpload.defaultProps = {\n  maxImageCount: 5, // Default maximum image count\n  updateMode: false,\n  disable:false,\n};\n\nexport default ImageUpload;","import React from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\n\nconst TimeRange = ({ defaultTime, handleSelect }) => {\n  const startTime_i = defaultTime.split(\"-\")[0].trim();\n  const endTime_i = defaultTime.split(\"-\")[1]?.trim();\n\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const generateTimeOptions = () => {\n    const options = [];\n    let option_AM = [];\n    let option_PM = [];\n    for (let hours = 0; hours < 24; hours++) {\n      for (let minutes = 0; minutes < 60; minutes += 30) {\n        const formattedHours = hours.toString().padStart(2, \"0\");\n        const formattedMinutes = minutes.toString().padStart(2, \"0\");\n        const timeString = `${formattedHours}:${formattedMinutes}`;\n\n        if (hours < 12) {\n          option_AM.push(`${timeString} AM`);\n        } else {\n          const formattedHours12 = (hours - 12).toString().padStart(2, \"0\");\n          option_PM.push(`${formattedHours12}:${formattedMinutes} PM`);\n        }\n      }\n    }\n\n    for (let i = 0; i < option_AM.length || i < option_PM.length; i++) {\n      if (i < option_AM.length) {\n        options.push(option_AM[i]);\n      }\n      if (i < option_PM.length) {\n        options.push(option_PM[i]);\n      }\n    }\n\n    return options;\n  };\n\n  const renderTimeOptions = (defaultValue) => {\n    const timeOptions = generateTimeOptions();\n\n    return (\n      <>\n        <option value={defaultValue}>{defaultValue}</option>\n        {timeOptions.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <Row>\n      <Col>\n        <Form.Group>\n          <Form.Label>Start Time</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => handleSelect(e.target.value, null)}\n            style={{\n              background: \"transparent\",\n              borderWidth: 1,\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n          >\n            {renderTimeOptions(startTime_i)}\n          </Form.Control>\n        </Form.Group>\n      </Col>\n      <Col>\n        <Form.Group>\n          <Form.Label>End Time</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => handleSelect(null, e.target.value)}\n            style={{\n              background: \"transparent\",\n              borderWidth: 1,\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n          >\n            {renderTimeOptions(endTime_i)}\n          </Form.Control>\n        </Form.Group>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TimeRange;\n","import React, { useEffect, useState } from \"react\";\nimport AspectRatio from \"@mui/joy/AspectRatio\";\nimport Card from \"@mui/joy/Card\";\nimport CardContent from \"@mui/joy/CardContent\";\nimport Chip from \"@mui/joy/Chip\";\nimport Typography from \"@mui/joy/Typography\";\nimport {\n  Box,\n  Grid,\n  Modal,\n  Stack,\n  Typography as MUITypography,\n  Button,\n  IconButton,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { COLLECTIONS, STORAGES } from \"../constants\";\nimport { readDocumentWithImageUrl } from \"../utils/firebaseUtils\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport dayjs from \"dayjs\";\nimport { addDoc, collection, doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../config\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport whatsAppImage from '../assets/images/whatsapp.png';\nimport callImage from '../assets/images/india_11009487.png';\nimport ShareButton from \"./ShareButton\";\n\nfunction WorkshopDetailsModal({\n  open,\n  handleClose,\n  dataItem,\n  activateWorkshop,\n  deactivateWorkshop,\n  actionsAllowed,\n}) {\n  const showSnackbar = useSnackbar();\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [isBooking, setIsBooking] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n\n  const currentUser = JSON.parse(localStorage.getItem(\"userInfo\"))?.UserId;\n\n  const handleBook = async () => {\n    try {\n      setIsBooking(true);\n\n      addDoc(collection(db, COLLECTIONS.BOOKINGS), {\n        StudioId: dataItem.StudioId,\n        WorkshopId: dataItem.id,\n        UserId: currentUser,\n        bookingDate: Date.now(),\n      });\n\n      const userRef = doc(db, \"User\", currentUser);\n      const userSnap = await getDoc(userRef);\n\n      if (userSnap.exists()) {\n        if (userSnap.data() != null) {\n          await updateDoc(userRef, {\n            BookedWorkshops: [\n              ...(userSnap.data().BookedWorkshops || []),\n              dataItem.id,\n            ],\n          });\n        }\n      }\n\n      setUserDetails(prev => ({ ...prev, BookedWorkshops: [...(prev?.BookedWorkshops || []), dataItem.id] }));\n\n      showSnackbar(\"Workshop booked\", \"success\");\n    } catch (error) {\n      console.error(error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsBooking(false);\n    }\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const userRef = doc(db, \"User\", currentUser);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) setUserDetails(userSnap.data());\n      } catch (error) {\n        console.log(\" error\");\n      }\n    };\n\n    getUser();\n  }, []);\n\n  const isCreatorOfWorkshop = dataItem.UserId === currentUser;\n\n  const whatsappMessage = encodeURIComponent(\"Hey, I found your Studio on nritya.co.in. I'm interested\");\n\n  const isBooked = userDetails?.BookedWorkshops?.includes?.(dataItem?.id);\n\n  const shareUrl = `${window.location.host}/nritya-webApp#/workshop/${dataItem.id}`;\n  \n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n      style={{zIndex:40}}\n    >\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          maxHeight: \"90%\",\n          overflow: \"auto\",\n          width: { xs: \"90%\", md: \"60%\" },\n          bgcolor: isDarkModeOn ? \"black\" : \"background.paper\",\n          borderWidth: \"2px\",\n          borderStyle: \"solid\",\n          borderColor: isDarkModeOn ? \"white\" : \"black\",\n          boxShadow: 24,\n          p: \"1rem\",\n          borderRadius: \"8px\",\n        }}\n      >\n        <Grid container spacing=\"8px\" rowGap={2}>\n          <Grid item xs={12} lg={8}>\n            <img\n              src={dataItem.imageUrl}\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"contain\",\n                borderRadius: \"8px\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <Box\n              sx={{\n                height: \"100%\",\n                bgcolor: isDarkModeOn ? \"#333333\" : \"#efefef\",\n                p: 2,\n                borderRadius: \"8px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Box sx={{ flex: 1 }}>\n                <MUITypography\n                  variant=\"h6\"\n                  component=\"p\"\n                  sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dayjs(dataItem.date).format(\"DD/MM/YYYY\")}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"h6\"\n                  component=\"p\"\n                  sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.time}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"body1\"\n                  component=\"p\"\n                  sx={{ mt: \"2rem\", color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.venue}\n                </MUITypography>\n              </Box>\n\n              <Box sx={{ mt: \"2rem\", display: \"flex\", justifyContent: \"space-between\", flexWrap: 'wrap' }}>\n                <MUITypography\n                  variant=\"h5\"\n                  sx={{\n                    alignSelf: \"center\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                >\n                  ₹{dataItem.price}\n                </MUITypography>\n                {!actionsAllowed && !isCreatorOfWorkshop && currentUser && <Button\n                  variant=\"outlined\"\n                  onClick={handleBook}\n                  disabled={isBooked || isBooking}\n                  sx={{\n                    alignSelf: \"center\",\n                    boxShadow: \"none\",\n                    textTransform: \"none\",\n                    fontSize: 16,\n                    padding: \"6px 12px\",\n                    border: \"1px solid\",\n                    lineHeight: 1.5,\n                    backgroundColor: \"transparent\",\n                    borderColor: isDarkModeOn ? \"white\" : \"black\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"transparent\",\n                      borderColor: isDarkModeOn ? \"white\" : \"black\",\n                      boxShadow: \"none\",\n                    },\n                    \"&:active\": {\n                      boxShadow: \"none\",\n                      backgroundColor: \"transparent\",\n                      borderColor: isDarkModeOn ? \"white\" : \"black\",\n                    },\n                    \"&:focus\": {\n                      boxShadow: \"none\",\n                    },\n                  }}\n                >\n                  {isBooked ? \"Booked\" : \"Book Now\"}\n                </Button>}\n              </Box>\n            </Box>\n            {!actionsAllowed && !isCreatorOfWorkshop && currentUser && <MUITypography component={'p'} variant=\"caption\" sx={{ my: '2px', color: isDarkModeOn ? \"white\" : \"black\", textAlign: 'center' }}>\n              Book here and pay at the venue\n            </MUITypography>}\n          </Grid>\n          <Grid item sx={{ mt: 1 }}>\n            <Box sx={{ display: 'flex', columnGap: 2 }}>\n            <MUITypography\n              variant=\"h5\"\n              component=\"p\"\n              sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            >\n              {dataItem.workshopName || \"\"}\n              {dataItem.danceStyles.map((dance) => ` | ${dance}`)}          \n              </MUITypography>\n              <ShareButton shareUrl={shareUrl} />\n            </Box>\n            <MUITypography\n              variant=\"body1\"\n              component=\"p\"\n              sx={{ mt: 1, color: isDarkModeOn ? \"white\" : \"black\" }}\n            >\n              <span>By {dataItem.studioDetails?.studioName || \"\"}</span>\n              {dataItem.studioDetails && dataItem.studioDetails?.whatsappNumber && (\n                <IconButton color=\"success\" size=\"small\" target=\"_blank\" href={`https://wa.me/91${dataItem.studioDetails.whatsappNumber}?text=${whatsappMessage}`}>\n                  <img src={whatsAppImage} alt=\"Whatsapp call\" style={{ width: 30, height: 28 }} />\n                </IconButton>\n              )}\n              {dataItem.studioDetails && dataItem.studioDetails?.mobileNumber && (\n                <IconButton color=\"primary\" size=\"small\" target=\"_blank\" href={`tel:${dataItem.studioDetails.mobileNumber}`}>\n                  <img src={callImage} alt=\"Phone call\" style={{ width: 30, height: 28 }} />\n                </IconButton>\n              )}\n            </MUITypography>\n            <div style={{ color: isDarkModeOn ? 'white ' : 'black' }} className=\"description-box\" dangerouslySetInnerHTML={{ __html: dataItem.description || \"Workshop Description\" }}></div>\n          </Grid>\n        </Grid>\n\n        <Box sx={{ mt: \"1rem\", textAlign: \"right\" }}>\n          {actionsAllowed && isCreatorOfWorkshop && (\n            <Button\n              onClick={() =>\n                dataItem?.active\n                  ? deactivateWorkshop(dataItem?.id)\n                  : activateWorkshop(dataItem?.id)\n              }\n              variant=\"outlined\"\n              sx={{\n                mr: \"1rem\",\n                color: \"white\",\n                boxShadow: \"none\",\n                border: \"1px solid\",\n                backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                borderColor: \"white\",\n                color: \"white\",\n                \"&:hover\": {\n                  backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                  borderColor: \"white\",\n                  boxShadow: \"none\",\n                },\n                \"&:active\": {\n                  boxShadow: \"none\",\n                  backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                  borderColor: \"white\",\n                },\n                \"&:focus\": {\n                  boxShadow: \"none\",\n                },\n              }}\n            >\n              {dataItem?.active ? \"Deactivate\" : \"Activate\"}\n            </Button>\n          )}\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            sx={{\n              color: \"white\",\n              boxShadow: \"none\",\n              border: \"1px solid\",\n              backgroundColor: \"transparent\",\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              color: isDarkModeOn ? \"white\" : \"black\",\n              \"&:hover\": {\n                backgroundColor: \"transparent\",\n                borderColor: isDarkModeOn ? \"white\" : \"black\",\n                boxShadow: \"none\",\n              },\n              \"&:active\": {\n                boxShadow: \"none\",\n                backgroundColor: \"transparent\",\n                borderColor: isDarkModeOn ? \"white\" : \"black\",\n              },\n              \"&:focus\": {\n                boxShadow: \"none\",\n              },\n            }}\n          >\n            Close\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default function WorkshopCard({\n  actionsAllowed,\n  dataItem,\n  activateWorkshop,\n  deactivateWorkshop,\n}) {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [isWorkshopDetailsModalOpen, setIsWorkshopDetailsModalOpen] =\n    useState(false);\n  const workshopId = dataItem.id;\n\n  const handleWorkshopDetailsModalOpen = () =>\n    setIsWorkshopDetailsModalOpen(true);\n\n  const handleWorkshopDetailsModalClose = () =>\n    setIsWorkshopDetailsModalOpen(false);\n\n  useEffect(() => {\n    const fetchImageUrl = async () => {\n      try {\n        const url = await readDocumentWithImageUrl(\n          STORAGES.WORKSHOPICON,\n          workshopId\n        );\n\n        setImageUrl(\n          url ||\n          \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      } catch (error) {\n        console.error(\"Error fetching image URL:\", error);\n      }\n    };\n\n    fetchImageUrl();\n  }, [dataItem.id]);\n\n  const cardStyle = {\n    backgroundColor: isDarkModeOn ? \"#444\" : \"white\",\n    padding: \"0px\",\n    color: isDarkModeOn ? \"white\" : \"black\",\n    marginRight: \"10px\",\n    width: 320,\n    maxWidth: \"100%\",\n    boxShadow: \"lg\",\n    transition: \"opacity 0.3s ease\",\n  };\n\n  const cardHoverStyle = {\n    transform: \"scale(1.01)\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <>\n      <Card\n        variant=\"solid\"\n        sx={{\n          ...cardStyle,\n          \"&:hover\": cardHoverStyle,\n          flex: \"none\",\n        }}\n        onClick={handleWorkshopDetailsModalOpen}\n      >\n        <AspectRatio ratio=\"1.78\" style={{ position: \"relative\" }}>\n          <img\n            src={imageUrl}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: \"100%\", objectFit: \"cover\", overflow: \"hidden\" }}\n          />\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", bottom: 0, left: 0, padding: \"1px\" }}\n          >\n            {dataItem && dataItem.danceStyles ? (\n              dataItem.danceStyles.slice(0, 3).map((form, index) => (\n                <Chip\n                  key={index}\n                  color={index % 2 === 0 ? \"danger\" : \"success\"}\n                  style={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                  }}\n                >\n                  {form.trim()}\n                </Chip>\n              ))\n            ) : (\n              <Chip\n                key={10}\n                color={10 % 2 === 0 ? \"danger\" : \"success\"}\n                style={{ marginBottom: \"10px\", fontSize: \"0.8rem\" }}\n              >\n                {\"No danceforms\"}\n              </Chip>\n            )}\n          </Stack>\n        </AspectRatio>\n        <CardContent style={{ padding: \"10px\", paddingTop: \"5px\" }}>\n          <Box\n            fontWeight=\"md\"\n            color=\"neutral\"\n            textColor=\"text.primary\"\n            underline=\"none\"\n            overlay\n            style={{\n              color: isDarkModeOn ? \"white\" : \"black\",\n              extDecoder: \"one\",\n            }}\n          >\n            <span>\n              {dataItem && dataItem.workshopName ? dataItem.workshopName : \"\"}\n            </span>\n            {!dataItem?.active && (\n              <span\n                style={{\n                  marginLeft: \"2px\",\n                  padding: \"2px 4px\",\n                  fontSize: \"14px\",\n                  borderRadius: \"4px\",\n                  background: \"red\",\n                }}\n              >\n                Inactive\n              </span>\n            )}\n          </Box>\n          <Typography\n            style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n            noWrap\n          >\n            By {dataItem.studioDetails?.studioName ? dataItem.studioDetails.studioName : \"\"}\n          </Typography>\n          <Typography\n            style={{ marginTop: 10, color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n            noWrap\n          >\n            {dataItem.venue ? dataItem.venue : \"\"}\n          </Typography>\n          <Typography\n            style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n          >\n            {dataItem.date || \"\"} | {dataItem.time || \"\"}\n          </Typography>\n        </CardContent>\n      </Card>\n\n      <WorkshopDetailsModal\n        dataItem={{ ...dataItem, imageUrl }}\n        open={isWorkshopDetailsModalOpen}\n        handleClose={handleWorkshopDetailsModalClose}\n        activateWorkshop={activateWorkshop}\n        deactivateWorkshop={deactivateWorkshop}\n        actionsAllowed={actionsAllowed}\n      />\n    </>\n  );\n}\n","import \"./WorkshopCardSlider.css\";\nimport React from \"react\";\nimport WorkshopCard from \"./WorkshopCard\";\n\nconst CardSlider = ({\n  actionsAllowed,\n  dataList,\n  activateWorkshop,\n  deactivateWorkshop,\n}) => {\n  return (\n    <div className={\"horizontal-scroll-wrapper\"}>\n      {dataList.map((dataItem, index) => (\n        <WorkshopCard\n          key={dataItem.id}\n          dataItem={dataItem}\n          activateWorkshop={activateWorkshop}\n          deactivateWorkshop={deactivateWorkshop}\n          actionsAllowed={actionsAllowed}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardSlider;\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { LinearProgress, Button as MuiButton } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { db } from \"../config\";\nimport {\n  doc,\n  getDoc,\n  addDoc,\n  updateDoc,\n  collection,\n  query,\n  where,\n  getDocs,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { COLLECTIONS, DRAFT_COLLECTIONS, LEVELS } from \"../constants\";\nimport ImageUpload from \"./ImageUpload\";\nimport { STORAGES } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport danceStyles from \"../danceStyles.json\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport TimeRange from \"./TimeRange\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport cities from '../cities.json';\nimport { postData } from \"../utils/common\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { isEqual } from 'lodash';\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\nconst DRAFT_INTERVAL_TIME = 1000 * 10;\n\nfunction WorkshopAdd({ instructors, studioId, setWorkshop }) {\n  const showSnackbar = useSnackbar();\n  const [newWorkshopId, setNewWorkshopId] = useState(\"\");\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [selectedInstructors, setSelectedInstructors] = useState([]);\n  const [selectedDanceStyles, setSelectedDanceStyles] = useState([]);\n\n  const instructorNamesWithIds = instructors.map(\n    (instructor) => `${instructor.name} - ${instructor.id}`\n  );\n\n  const danceStylesOptions = danceStyles.danceStyles;\n  const currentCity = localStorage.getItem(FILTER_LOCATION_KEY) || \"\";\n\n  const [isReady, setIsReady] = useState(false);\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n  const [selectedStudio, setSelectedStudio] = useState(null);\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState(currentCity);\n  const [workshopTime, setWorkshopTime] = useState(\"\");\n  const [workshopDate, setWorkshopDate] = useState(dayjs(new Date()));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [description, setDescription] = useState('');\n  const [step, setStep] = useState(1);\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleDanceStylesChange = (event, value) => {\n    setSelectedDanceStyles(value);\n  };\n\n  const handleDurationChange = (event, value) => {\n    setSelectedDuration(value);\n  };\n\n  const handleLevelChange = (event, value) => {\n    setSelectedLevel(value);\n  };\n\n  const handleCityChange = (event, value) => {\n    setSelectedCity(value);\n  };\n\n  const handleSelectStudio = (event, value) => {\n    setSelectedStudio(value);\n  };\n\n  const handleInstructorChange = (event, value) => {\n    setSelectedInstructors(value);\n  };\n\n  const isValidInputs = (form) => {\n    let validationFailed = true;\n    if (\n      !form.workshopName.value ||\n      !form.workshopFees.value ||\n      !selectedDanceStyles?.length ||\n      !selectedInstructors?.length ||\n      !description ||\n      !selectedStudio ||\n      !selectedDuration ||\n      !selectedLevel ||\n      !workshopTime ||\n      !workshopDate ||\n      !selectedCity\n    )\n      validationFailed = false;\n\n    return validationFailed;\n  };\n\n  const resetDraft = async () => {\n    const q = query(\n      collection(db, DRAFT_COLLECTIONS.DRAFT_WORKSHOPS),\n      where(\"UserId\", \"==\", JSON.parse(localStorage.getItem(\"userInfo\")).UserId)\n    );\n\n    const querySnapshot = await getDocs(q);\n\n    if (!querySnapshot.empty) {\n      let studios = [];\n\n      querySnapshot.forEach((doc) => {\n        studios.push({ id: doc.id, ...doc.data() });\n      });\n\n      let foundStudio = studios[0];\n\n      const studioRef = doc(\n        db,\n        DRAFT_COLLECTIONS.DRAFT_WORKSHOPS,\n        foundStudio.id\n      );\n\n      await deleteDoc(studioRef);\n    }\n  };\n\n  const handleAddWorkshop = async (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (!isValidInputs(form)) {\n      showSnackbar(\"Please fill all the fields.\", \"error\");\n      return;\n    }\n\n    try {\n      const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\")).email;\n      const dbPayload = {\n        workshopName: event.target.workshopName.value,\n        danceStyles: selectedDanceStyles,\n        instructors: selectedInstructors\n          ? selectedInstructors?.map?.(\n            (instructor) => instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n          )\n          : null,\n        author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n        UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n        creatorEmail: currentUserEmail,\n        StudioId: selectedStudio\n          ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n          : null,\n        duration: selectedDuration,\n        level: selectedLevel,\n        time: workshopTime,\n        description: description,\n        date: workshopDate.format(\"YYYY-MM-DD\"),\n        price: event.target.workshopFees.value,\n        capacity: event.target.capacity.value,\n        // venue: event.target.workshopVenue.value,\n        city: selectedCity,\n        active: true,\n        youtubeViedoLink: event.target.youtubeViedoLink.value,\n      };\n\n      setIsSubmitting(true);\n      const notifyEmails = currentUserEmail; \n      const metaData = {\n        entity_name: dbPayload.workshopName,\n        time: dbPayload.time,\n        date: dbPayload.date,\n        StudioId : dbPayload.StudioId\n      }\n      const response = await postData(dbPayload, COLLECTIONS.WORKSHOPS, notifyEmails, metaData) ;\n      if (response.ok) {\n        const result = await response.json();\n        setNewWorkshopId(result.id);\n        setWorkshop((prev) => [...prev, { id: result.id, ...dbPayload }]);\n        \n        clearForm(form);\n        resetDraft();\n        showSnackbar(\"Workshop successfully added.\", \"success\");\n        setStep((prev) => prev + 1);\n      }\n    } catch (error) {\n      console.error(\"Error adding workshop: \", error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const clearForm = (form) => {\n    form.reset();\n    setSelectedDanceStyles([]);\n    setSelectedInstructors([]);\n    setSelectedStudio(null);\n    setSelectedDuration(\"\");\n    setSelectedLevel(\"\");\n    setWorkshopTime(\"\");\n    setWorkshopDate(dayjs(new Date()));\n    setSelectedCity('');\n    setDescription('');\n  };\n\n  const handleTimeSelect = (startTime, endTime) => {\n    const [currentStartTime, currentEndTime] = workshopTime.split(\" - \");\n    let newTime = `${currentStartTime} - ${currentEndTime}`;\n\n    if (startTime !== null) newTime = `${startTime} - ${currentEndTime}`;\n    if (endTime !== null) newTime = `${currentStartTime} - ${endTime}`;\n\n    setWorkshopTime(newTime);\n  };\n\n  useEffect(() => {\n    async function main() {\n      const form = document.getElementById(\"addStudioForm\");\n\n      try {\n        const q = query(\n          collection(db, DRAFT_COLLECTIONS.DRAFT_WORKSHOPS),\n          where(\n            \"UserId\",\n            \"==\",\n            JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n          )\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n          let workshops = [];\n\n          querySnapshot.forEach((doc) => {\n            workshops.push({ id: doc.id, ...doc.data() });\n          });\n\n          let foundWorkshop = workshops[0];\n\n          form.workshopName.value = foundWorkshop?.workshopName || \"\";\n          form.workshopFees.value = foundWorkshop?.price || 0;\n          form.capacity.value = foundWorkshop?.capacity || 0;\n          // form.workshopVenue.value = foundWorkshop?.venue || \"\";\n          setDescription(foundWorkshop?.description || \"\");\n\n          setSelectedDanceStyles(\n            foundWorkshop?.danceStyles?.length ? foundWorkshop.danceStyles : []\n          );\n\n          setSelectedInstructors(\n            instructors\n              .filter((instructor) =>\n                foundWorkshop?.instructors.includes(instructor.id)\n              )\n              .map((instructor) => `${instructor.name} - ${instructor.id}`)\n          );\n\n          const studios = studioId.map((studio) => studio.split(\":\")[1].trim());\n          const currentStudioIndex = studios.findIndex(\n            (studio) => studio === foundWorkshop?.StudioId\n          );\n          if (currentStudioIndex > 0)\n            setSelectedStudio(studioId[currentStudioIndex]);\n\n          setSelectedDuration(foundWorkshop?.duration || \"\");\n\n          setSelectedLevel(foundWorkshop?.level || \"\");\n\n          setWorkshopTime(foundWorkshop?.time || \"\");\n\n          setWorkshopDate(dayjs(foundWorkshop?.date || Date.now()));\n\n          setSelectedCity(foundWorkshop?.city || '');\n        } else {\n          await addDoc(collection(db, DRAFT_COLLECTIONS.DRAFT_WORKSHOPS), {\n            workshopName: form.workshopName?.value || \"\",\n            price: form.workshopFees?.value || 0,\n            // venue: form.capacity?.value || 0,\n            // venue: form.workshopVenue?.value || \"\",\n            description: description,\n            danceStyles: selectedDanceStyles,\n            instructors: selectedInstructors\n              ? selectedInstructors?.map?.(\n                (instructor) =>\n                  instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n              )\n              : null,\n            author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n            UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n            creatorEmail: JSON.parse(localStorage.getItem(\"userInfo\")).email,\n            StudioId: selectedStudio\n              ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n              : null,\n            duration: selectedDuration,\n            level: selectedLevel,\n            time: workshopTime,\n            date: workshopDate.format(\"YYYY-MM-DD\"),\n            city: selectedCity,\n          });\n        }\n\n        setIsReady(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    main();\n  }, []);\n\n  useEffect(() => {\n    let intervalId = null;\n    let previousState = null; // Keep track of the previous form state.\n    async function main() {\n      const form = document.getElementById(\"addStudioForm\");\n\n      try {\n        const q = query(\n          collection(db, DRAFT_COLLECTIONS.DRAFT_WORKSHOPS),\n          where(\n            \"UserId\",\n            \"==\",\n            JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n          )\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n          let workshops = [];\n\n          querySnapshot.forEach((doc) => {\n            workshops.push({ id: doc.id, ...doc.data() });\n          });\n\n          let foundWorkshop = workshops[0];\n\n          const workshopRef = doc(\n            db,\n            DRAFT_COLLECTIONS.DRAFT_WORKSHOPS,\n            foundWorkshop.id\n          );\n\n          intervalId = setInterval(async () => {\n            try {\n              const currentState = {\n                workshopName: form.workshopName?.value || \"\",\n                price: form.workshopFees?.value || 0,\n                // venue: form.capacity?.value || 0,\n                // venue: form.workshopVenue?.value || \"\",\n                description: description,\n                danceStyles: selectedDanceStyles,\n                instructors: selectedInstructors\n                  ? selectedInstructors?.map?.(\n                    (instructor) =>\n                      instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n                  )\n                  : null,\n                StudioId: selectedStudio\n                  ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n                  : null,\n                duration: selectedDuration,\n                level: selectedLevel,\n                time: workshopTime,\n                date: workshopDate.format(\"YYYY-MM-DD\"),\n                city: selectedCity\n              }\n              // Check if the current state is different from the previous state\n              if (!isEqual(previousState, currentState)) {\n                try {\n                  await updateDoc(workshopRef, currentState);\n                  previousState = currentState; // Update previous state after successful save\n                  console.log(\"Next AutoSave in\",DRAFT_INTERVAL_TIME)\n                } catch (error) {\n                  console.error(error);\n                }\n              }else{\n                  console.log(\"Nothing for Autosave to save\")\n              }\n            } catch (error) {\n              console.error(error);\n            }\n          }, DRAFT_INTERVAL_TIME);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    if (isReady) main();\n\n    return () => clearInterval(intervalId);\n  }, [\n    isReady,\n    selectedDanceStyles,\n    selectedInstructors,\n    description,\n    selectedStudio,\n    selectedDuration,\n    selectedLevel,\n    workshopTime,\n    workshopDate,\n    selectedCity,\n  ]);\n\n  useEffect(() => {\n    if (isDarkModeOn) {\n      const toolbarEle = document.getElementsByClassName(\"ql-toolbar ql-snow\")[0]\n      toolbarEle.style.backgroundColor = \"white\";\n\n      const inputEle = document.getElementsByClassName(\"ql-container ql-snow\")[0];\n      inputEle.style.backgroundColor = \"white\";\n\n      const editEle = document.getElementsByClassName(\"ql-editor \")[0];\n      console.log(editEle);\n      inputEle.style.color = \"black\";      \n    }\n  }, [isDarkModeOn]);\n\n  return (\n    <div>\n      {step === 1 && (\n        <Form\n          id=\"addStudioForm\"\n          onSubmit={handleAddWorkshop}\n          style={{\n            backgroundColor: isDarkModeOn ? \"#202020\" : \"\",\n            color: isDarkModeOn ? \"white\" : \"black\",\n          }}\n        >\n          <Form.Group controlId=\"formBasicAdd\">\n            <div>\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Workshop Name</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"textarea\"\n                    placeholder=\"Enter workshop name\"\n                    name=\"workshopName\"\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Dance Styles</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      multiple\n                      id=\"tags-standard\"\n                      options={danceStylesOptions}\n                      value={selectedDanceStyles}\n                      onChange={handleDanceStylesChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Dance Styles\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Names of Instructors</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      multiple\n                      id=\"tags-standard\"\n                      options={instructorNamesWithIds}\n                      value={selectedInstructors}\n                      onChange={handleInstructorChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Instructors\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Duration (in hours)</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\n                      value={selectedDuration}\n                      onChange={handleDurationChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Duration\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <TimeRange\n                    defaultTime={workshopTime || \"00:00-00:00\"}\n                    handleSelect={handleTimeSelect}\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Date</Form.Label>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DemoContainer components={[\"DatePicker\"]}>\n                      <ThemeProvider theme={darkTheme}>\n                        <CssBaseline />\n                        <DatePicker\n                          sx={{ width: \"100%\" }}\n                          value={workshopDate}\n                          onChange={(newValue) => setWorkshopDate(newValue)}\n                        />\n                      </ThemeProvider>\n                    </DemoContainer>\n                  </LocalizationProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Level</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={[LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]}\n                      value={selectedLevel}\n                      onChange={handleLevelChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Level\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Fees/Price</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"number\"\n                    placeholder=\"Enter fees/price\"\n                    name=\"workshopFees\"\n                  />\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Maximum capacity</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"number\"\n                    placeholder=\"Enter capacity\"\n                    name=\"capacity\"\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>City</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={cities.cities}\n                      value={selectedCity}\n                      onChange={handleCityChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select City\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Studio</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={studioId}\n                      value={selectedStudio}\n                      onChange={handleSelectStudio}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Studio\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Brief Description</Form.Label>\n                  {/* <Form.Control\n                    rows={3}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    as=\"textarea\"\n                    placeholder=\"Enter Description\"\n                    name=\"description\"\n                  /> */}\n\n\n                  <ReactQuill\n                    theme=\"snow\"\n                    placeholder=\"Enter Description\"\n                    value={description}\n                    onChange={setDescription}\n                  />\n\n                </Col>\n              </Row>\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Youtube video link</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"text\"\n                    placeholder=\"Enter youtube video link\"\n                    name=\"youtubeViedoLink\"\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <hr></hr>\n                <Col xs={6}></Col>\n                <Col xs={6} className=\"d-flex justify-content-end\">\n                  <MuiButton\n                    variant=\"contained\"\n                    style={{\n                      color: \"white\",\n                      backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                    }}\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    Next\n                  </MuiButton>\n                </Col>\n              </Row>\n            </div>\n          </Form.Group>\n        </Form>\n      )}\n      {isSubmitting && <LinearProgress />}\n      {step === 2 && (\n        <>\n          <Row>\n            <Col>\n              <ImageUpload\n                entityId={newWorkshopId}\n                title={\"Workshop Images\"}\n                storageFolder={STORAGES.WORKSHOPICON}\n                maxImageCount={1}\n              ></ImageUpload>\n            </Col>\n          </Row>\n          <Row style={{ margin: \"1rem 0\" }}>\n            <Col style={{ textAlign: \"right\" }}>\n              <MuiButton\n                variant=\"contained\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                }}\n                onClick={() => setStep((prev) => prev - 1)}\n              >\n                Done\n              </MuiButton>\n            </Col>\n          </Row>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default WorkshopAdd;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { Button as MuiButton } from \"@mui/material\";\nimport { db } from \"../config\";\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { COLLECTIONS, LEVELS } from \"../constants\";\nimport ImageUpload from \"./ImageUpload\";\nimport { STORAGES } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport danceStyles from \"../danceStyles.json\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport TimeRange from \"./TimeRange\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport cities from '../cities.json';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\n\nfunction WorkshopUpdate({ workshopId, instructors, studioId }) {\n  const currentCity = localStorage.getItem(FILTER_LOCATION_KEY) || \"\";\n\n  const showSnackbar = useSnackbar();\n\n  const [selectedStudio, setSelectedStudio] = useState(null);\n  const [selectedInstructors, setSelectedInstructors] = useState([]);\n\n  const danceStylesOptions = danceStyles.danceStyles;\n  const [selectedDanceStyles, setSelectedDanceStyles] = useState([]);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState(currentCity);\n  const [description, setDescription] = useState('');\n  const [workshopTime, setWorkshopTime] = useState(\"\");\n  const [workshopDate, setWorkshopDate] = useState(dayjs(new Date()));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const instructorNamesWithIds = instructors.map(\n    (instructor) => `${instructor.name} - ${instructor.id}`\n  );\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleDanceStylesChange = (event, value) => {\n    setSelectedDanceStyles(value);\n  };\n\n  const [selectedWorkshopId, setSelectedWorkshopId] = useState(\"\");\n  const [selectedWorkshop, setSelectedWorkshop] = useState(null);\n\n  const handleSelectStudio = async (event) => {\n    event.preventDefault();\n    const selected = event.target.value;\n    const selectedId = selected.split(\":\").pop().trim();\n    setSelectedWorkshopId(selectedId);\n    try {\n      const studioDoc = await getDoc(\n        doc(db, COLLECTIONS.WORKSHOPS, selectedId)\n      );\n      if (studioDoc.exists) {\n        setSelectedWorkshop(studioDoc.data());\n      } else {\n        setSelectedWorkshop(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching workshop data:\", error, selectedId);\n    }\n  };\n\n  const isValidInputs = (form) => {\n    let validationFailed = true;\n    if (\n      !form.workshopName.value ||\n      !form.workshopFees.value ||\n      !description ||\n      !selectedDanceStyles?.length ||\n      !selectedInstructors?.length ||\n      !selectedStudio ||\n      !selectedDuration ||\n      !selectedLevel ||\n      !workshopTime ||\n      !workshopDate ||\n      !selectedCity\n    )\n      validationFailed = false;\n\n    return validationFailed;\n  };\n\n  const handleUpdateStudio = async (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (!selectedWorkshopId) return;\n\n    if (!isValidInputs(form)) {\n      showSnackbar(\"Please fill all the fields.\", \"error\");\n      return;\n    }\n\n    try {\n      const dbPayload = {\n        workshopName: form.workshopName.value,\n        price: form.workshopFees.value,\n        capacity: form.capacity.value,\n        // venue: form.workshopVenue.value,\n        description: description,\n        danceStyles: selectedDanceStyles,\n        instructors: selectedInstructors\n          ? selectedInstructors?.map?.(\n            (instructor) => instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n          )\n          : null,\n        author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n        UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n        creatorEmail: JSON.parse(localStorage.getItem(\"userInfo\")).email,\n        StudioId: selectedStudio\n          ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n          : null,\n        duration: selectedDuration,\n        level: selectedLevel,\n        time: workshopTime,\n        date: workshopDate.format(\"YYYY-MM-DD\"),\n        city: selectedCity,\n        youtubeViedoLink: form.youtubeViedoLink.value,\n      };\n\n      setIsSubmitting(true);\n\n      const studioRef = doc(db, COLLECTIONS.WORKSHOPS, selectedWorkshopId);\n\n      await updateDoc(studioRef, dbPayload);\n\n      clearForm(form);\n      showSnackbar(\"Workshop successfully updated.\", \"success\");\n    } catch (error) {\n      console.error(\"Error updating workshop: \", error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n    document.getElementById(\"updateStudioForm\").reset();\n  };\n\n  const clearForm = (form) => {\n    form.reset();\n    setSelectedDanceStyles([]);\n    setSelectedInstructors([]);\n    setSelectedStudio(null);\n    setSelectedDuration(\"\");\n    setSelectedLevel(\"\");\n    setWorkshopTime(\"\");\n    setWorkshopDate(dayjs(new Date()));\n    setSelectedCity('');\n    setSelectedWorkshop(null);\n    setSelectedWorkshopId(\"\");\n    setDescription('');\n  };\n\n  const handleDurationChange = (event, value) => {\n    setSelectedDuration(value);\n  };\n\n  const handleLevelChange = (event, value) => {\n    setSelectedLevel(value);\n  };\n\n  const handleCityChange = (event, value) => {\n    setSelectedCity(value);\n  };\n\n  const handleSelectStudioValue = (event, value) => {\n    setSelectedStudio(value);\n  };\n\n  const handleInstructorChange = (event, value) => {\n    setSelectedInstructors(value);\n  };\n\n  const handleTimeSelect = (startTime, endTime) => {\n    const [currentStartTime, currentEndTime] = workshopTime.split(\" - \");\n    let newTime = `${currentStartTime} - ${currentEndTime}`;\n\n    if (startTime !== null) newTime = `${startTime} - ${currentEndTime}`;\n    if (endTime !== null) newTime = `${currentStartTime} - ${endTime}`;\n\n    setWorkshopTime(newTime);\n  };\n\n  useEffect(() => {\n    if (selectedWorkshop) {\n      const addedInstructors = instructors\n        .filter((instructor) =>\n          selectedWorkshop.instructors.includes(instructor.id)\n        )\n        .map((instructor) => `${instructor.name} - ${instructor.id}`);\n\n      setSelectedInstructors(addedInstructors);\n      if (selectedWorkshop && selectedWorkshop.danceStyles)\n        setSelectedDanceStyles(selectedWorkshop.danceStyles);\n\n      if (selectedWorkshop && selectedWorkshop.duration)\n        setSelectedDuration(selectedWorkshop.duration);\n\n      if (selectedWorkshop && selectedWorkshop.level)\n        setSelectedLevel(selectedWorkshop.level);\n\n      if (selectedWorkshop && selectedWorkshop.time)\n        setWorkshopTime(selectedWorkshop.time);\n\n      if (selectedWorkshop && selectedWorkshop.date)\n        setWorkshopDate(dayjs(selectedWorkshop.date));\n\n      if (selectedWorkshop && selectedWorkshop.StudioId) {\n        const studios = studioId.map((studio) => studio.split(\":\")[1].trim());\n        const currentStudioIndex = studios.findIndex(\n          (studio) => studio === selectedWorkshop.StudioId\n        );\n        setSelectedStudio(studioId[currentStudioIndex] || null);\n      }\n\n      setSelectedCity(selectedWorkshop?.city || '');\n      setDescription(selectedWorkshop?.description || '');\n    }\n  }, [selectedWorkshop]);\n\n  useEffect(() => {\n    if (isDarkModeOn) {\n      const toolbarEle = document.getElementsByClassName(\"ql-toolbar ql-snow\")[0]\n      toolbarEle.style.backgroundColor = \"white\";\n\n      const inputEle = document.getElementsByClassName(\"ql-container ql-snow\")[0];\n      inputEle.style.backgroundColor = \"white\";\n\n      const editEle = document.getElementsByClassName(\"ql-editor \")[0];\n      console.log(editEle);\n      inputEle.style.color = \"black\";\n    }\n  }, [isDarkModeOn]);\n\n  return (\n    <div\n      style={{\n        backgroundColor: isDarkModeOn ? \"#202020\" : \"\",\n        color: isDarkModeOn ? \"white\" : \"black\",\n      }}\n    >\n      <br></br>\n      <Form id=\"updateStudioForm\" onSubmit={handleUpdateStudio}>\n        <Form.Group controlId=\"formBasicUpdate\">\n          <Form.Label>Id</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"nameId\"\n            style={{\n              backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n              color: isDarkModeOn ? \"white\" : \"black\",\n            }}\n            onChange={handleSelectStudio}\n          >\n            <option value=\"\">Select a workshop...</option>\n            {workshopId && workshopId.length > 0 ? (\n              workshopId.map((workshopItem) => (\n                <option key={workshopItem} value={workshopItem}>\n                  {workshopItem}\n                </option>\n              ))\n            ) : (\n              <option value=\"\">No workshop yet!</option>\n            )}\n          </Form.Control>\n\n          <div>\n            <Row>\n              <Col md={6}>\n                <ImageUpload\n                  entityId={selectedWorkshopId}\n                  title={\"Workshop Images\"}\n                  storageFolder={STORAGES.WORKSHOPICON}\n                  maxImageCount={1}\n                ></ImageUpload>\n              </Col>\n\n              <Col md={6}>\n                <br />\n\n                <Form.Label>Workshop Name</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={\n                    selectedWorkshop ? selectedWorkshop.workshopName : \"\"\n                  }\n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"textarea\"\n                  placeholder=\"Enter workshop name\"\n                  name=\"workshopName\"\n                />\n\n                <br />\n\n                <Form.Label>Dance Styles</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    multiple\n                    id=\"tags-standard\"\n                    options={danceStylesOptions}\n                    value={selectedDanceStyles}\n                    onChange={handleDanceStylesChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Dance Styles\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n\n                <br />\n\n                <Form.Label>Names of Instructors</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    multiple\n                    id=\"tags-standard\"\n                    options={instructorNamesWithIds}\n                    value={selectedInstructors}\n                    onChange={handleInstructorChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Instructors\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Duration (in hours)</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\n                    value={selectedDuration}\n                    onChange={handleDurationChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Duration\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n\n              <Col md={6}>\n                <TimeRange\n                  defaultTime={workshopTime || \"00:00-00:00\"}\n                  handleSelect={handleTimeSelect}\n                />\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Date</Form.Label>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={[\"DatePicker\"]}>\n                    <ThemeProvider theme={darkTheme}>\n                      <CssBaseline />\n                      <DatePicker\n                        sx={{ width: \"100%\" }}\n                        value={workshopDate}\n                        onChange={(newValue) => setWorkshopDate(newValue)}\n                      />\n                    </ThemeProvider>\n                  </DemoContainer>\n                </LocalizationProvider>\n              </Col>\n              <Col md={6}>\n                <Form.Label>Level</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={[LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]}\n                    value={selectedLevel}\n                    onChange={handleLevelChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Level\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Fees/Price</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={selectedWorkshop ? selectedWorkshop.price : \"\"}\n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"number\"\n                  placeholder=\"Enter fees/price\"\n                  name=\"workshopFees\"\n                />\n              </Col>\n              <Col md={6}>\n                <Form.Label>Maximum capacity</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={selectedWorkshop ? selectedWorkshop.capacity : 0}\n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"number\"\n                  placeholder=\"Enter capacity\"\n                  name=\"capacity\"\n                />\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>City</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={cities.cities}\n                    value={selectedCity}\n                    onChange={handleCityChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select City\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n              <Col md={6}>\n                <Form.Label>Studio</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={studioId}\n                    value={selectedStudio}\n                    onChange={handleSelectStudioValue}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Studio\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Brief Description</Form.Label>\n                <ReactQuill\n                  theme=\"snow\"\n                  placeholder=\"Enter Description\"\n                  value={description}\n                  onChange={setDescription}\n                />\n              </Col>\n              <Col md={6}>\n                <Form.Label>Youtube video Id</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={\n                    selectedWorkshop ? selectedWorkshop.youtubeId : \"\"\n                  }\n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"text\"\n                  placeholder=\"Enter youtube videoId\"\n                  name=\"youtubeId\"\n                />\n              </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                  <Form.Label>Youtube video Link</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    defaultValue={\n                      selectedWorkshop ? selectedWorkshop.youtubeViedoLink : \"\"\n                    }\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"text\"\n                    placeholder=\"Enter youtube video link\"\n                    name=\"youtubeViedoLink\"\n                  />\n                </Col>\n              </Row>\n            <hr></hr>\n\n            <Row>\n              <Col xs={6}></Col>\n              <Col xs={6} className=\"d-flex justify-content-end\">\n                <MuiButton\n                  variant=\"contained\"\n                  style={{\n                    color: \"white\",\n                    backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                  }}\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update Workshop\n                </MuiButton>\n              </Col>\n            </Row>\n          </div>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n\nexport default WorkshopUpdate;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../config\";\nimport { doc, getDoc, collection, where, getDocs, query,updateDoc} from \"firebase/firestore\";\nimport { COLLECTIONS } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport { useAuth } from \"../context/AuthContext\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport { Box } from \"@mui/material\";\nimport WorkshopAdd from \"../Components/WorkshopAdd\";\nimport WorkshopUpdate from \"../Components/WorkshopUpdate\";\nimport CardSlider from \"../Components/WorkshopCardSlider\";\n\nfunction CreatorWorkshop() {\n  const [studioId, setStudioId] = useState([]);\n  const [workshop, setWorkshop] = useState([]);\n  const [workshopId, setWorkshopId] = useState([]);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [instructors, setInstructors] = useState([]);\n  const [isCreator, setIsCreator] = useState(false);\n  const [premiumTill, setPremiumTill] = useState(-1);\n  const { currentUser } = useAuth();\n  const [value, setValue] = React.useState(\"1\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const activateWorkshop = async (workshopId) => {\n    try {\n      const docRef = doc(db, COLLECTIONS.WORKSHOPS, workshopId);\n      await updateDoc(docRef, { active: true });\n\n      setWorkshop((prev) =>\n        prev.map((workshop) =>\n          workshop.id === workshopId ? { ...workshop, active: true } : workshop\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deactivateWorkshop = async (workshopId) => {\n    try {\n      const docRef = doc(db, COLLECTIONS.WORKSHOPS, workshopId);\n      await updateDoc(docRef, { active: false });\n\n      setWorkshop((prev) =>\n        prev.map((workshop) =>\n          workshop.id === workshopId ? { ...workshop, active: false } : workshop\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const getCreatorMode = async (event) => {\n      try {\n        const userRef = doc(db, \"User\", currentUser.uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          if (userSnap.data() != null) {\n            setIsCreator(userSnap.data().CreatorMode);\n            setPremiumTill(userSnap.data().isPremium);\n          }\n        }\n      } catch (error) {\n        console.log(\" error\");\n      }\n    };\n\n    getCreatorMode();\n  }, [isCreator]);\n\n  useEffect(() => {\n    const fetchInstructors = async () => {\n      let userId = null;\n      if (\n        JSON.parse(localStorage.getItem(\"userInfo\")) &&\n        JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n      ) {\n        userId = JSON.parse(localStorage.getItem(\"userInfo\")).UserId;\n      }\n      if (!userId) {\n        alert(\"User not found\");\n        return;\n      }\n\n      const instructorRef = collection(db, COLLECTIONS.INSTRUCTORS);\n      const q = query(instructorRef, where(\"createdBy\", \"==\", userId));\n      const querySnapshot = await getDocs(q);\n\n      const instructorsList = [];\n      querySnapshot.forEach((doc) => {\n        instructorsList.push({\n          id: doc.id,\n          name: doc.data().name,\n        });\n      });\n      setInstructors(instructorsList);\n    };\n\n    fetchInstructors();\n  }, []);\n\n  useEffect(() => {\n    const getStudioCreated = async () => {\n      const q = query(\n        collection(db, COLLECTIONS.STUDIO),\n        where(\n          \"UserId\",\n          \"==\",\n          JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n        )\n      );\n\n      const querySnapshot = await getDocs(q);\n      const studiosOfUser = querySnapshot.docs\n        .filter((doc) => doc.data().studioName)\n        .map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n          };\n        });\n      setStudioId(\n        studiosOfUser.map(\n          (studio) => String(studio.studioName) + \" :\" + String(studio.id)\n        )\n      );\n    };\n\n    getStudioCreated();\n  }, []);\n\n  useEffect(() => {\n    const getWorkshopCreated = async () => {\n      const q = query(\n        collection(db, COLLECTIONS.WORKSHOPS),\n        where(\n          \"UserId\",\n          \"==\",\n          JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n        )\n      );\n      const querySnapshot = await getDocs(q);\n      const workshopsOfUserPromise = querySnapshot.docs\n        .filter((doc) => doc.data().workshopName)\n        .map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n          };\n        })\n        .map(async (workshop) => {\n          const docRef = doc(db, COLLECTIONS.STUDIO, workshop?.StudioId);\n          const docSnap = await getDoc(docRef);\n          return { ...workshop, studioDetails: docSnap.data() };\n        });\n      const workshopsOfUser = await Promise.all(workshopsOfUserPromise);\n      localStorage.setItem(\"WorkshopCreated\", JSON.stringify(workshopsOfUser));\n      setWorkshop(workshopsOfUser);\n      setWorkshopId(\n        workshopsOfUser.map(\n          (workshop) =>\n            String(workshop.workshopName) + \" :\" + String(workshop.id)\n        )\n      );\n    };\n\n    getWorkshopCreated();\n  }, [setWorkshop]);\n\n  useEffect(() => {\n    const workshopsOfUser =\n      JSON.parse(localStorage.getItem(\"WorkshopCreated\")) || [];\n    setWorkshop(workshopsOfUser);\n\n    const workshopIdList = workshopsOfUser.map(\n      (workshop) => `${workshop.workshopName} : ${workshop.id}`\n    );\n    setWorkshopId(workshopIdList);\n  }, [setWorkshopId]);\n\n  return (\n    <div>\n      <br></br>\n      {isCreator ? (\n        <>\n          <Box sx={{ width: \"100%\", typography: \"body1\" }}>\n            <TabContext value={value}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab\n                    style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                    label=\"Add Workshop\"\n                    value=\"1\"\n                  />\n                  <Tab\n                    style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                    label=\"Update Workshop\"\n                    value=\"2\"\n                  />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <WorkshopAdd\n                  instructors={instructors}\n                  studioId={studioId}\n                  setWorkshop={setWorkshop}\n                />\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <>\n                  <WorkshopUpdate\n                    instructors={instructors}\n                    workshopId={workshopId}\n                    studioId={studioId}\n                  />\n                </>\n              </TabPanel>\n            </TabContext>\n          </Box>\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {workshop.length > 0 && (\n        <>\n          <h3 style={{ color: isDarkModeOn ? \"white\" : \"black\" }}>\n            Your Workshops\n          </h3>\n\n          <CardSlider\n            dataList={workshop}\n            activateWorkshop={activateWorkshop}\n            deactivateWorkshop={deactivateWorkshop}\n            actionsAllowed\n          />\n        </>\n      )}\n    </div>\n  );\n}\nexport default CreatorWorkshop;\n"],"names":["ImageUpload","_ref","entityId","storageFolder","title","maxImageCount","updateMode","disable","useSnackbar","selectedFiles","setSelectedFiles","useState","uploadedFiles","setUploadedFiles","newFiles","setNewFiles","deletedFiles","setDeletedFiles","isDarkModeOn","useSelector","selectDarkModeStatus","progressDelete","setProgressDelete","progressUpdate","setProgressUpdate","console","log","filesizes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","useEffect","fetchStudioImages","truncatedFiles","slice","alert","calculateDelta","selectedFileIds","map","file","id","uploadedFileIds","imagesToDelete","filter","includes","newImages","async","folderPath","folderRef","ref","storage","fileList","listAll","files","Promise","all","items","downloadURL","getDownloadURL","fileRef","name","filename","fileURL","error","_jsx","className","style","display","width","justifyContent","children","flex","_jsxs","backgroundColor","STORAGES","STUDIOIMAGES","type","onChange","e","Array","from","target","updatedFiles","forEach","reader","FileReader","onloadend","push","shortid","filetype","fileimage","result","datetime","lastModifiedDate","toLocaleString","filesize","size","prevFiles","readAsDataURL","multiple","position","Card","sx","maxWidth","match","src","alt","maxHeight","objectFit","IconButton","disabled","onClick","window","confirm","fileToDelete","find","prevDeletedFiles","handleDeleteSelectedFile","top","right","DeleteIcon","color","CardContent","deleteAllImagesInFolder","uploadImages","deleteImages","hidden","value","max","defaultProps","_defaultTime$split$","defaultTime","handleSelect","startTime_i","split","trim","endTime_i","renderTimeOptions","defaultValue","timeOptions","generateTimeOptions","options","option_AM","option_PM","hours","minutes","formattedHours","toString","padStart","formattedMinutes","timeString","formattedHours12","_Fragment","option","Row","Col","Form","Group","Label","Control","as","background","borderWidth","borderColor","height","WorkshopDetailsModal","_JSON$parse","_userDetails$BookedWo","_userDetails$BookedWo2","_dataItem$studioDetai","_dataItem$studioDetai2","_dataItem$studioDetai3","open","handleClose","dataItem","activateWorkshop","deactivateWorkshop","actionsAllowed","showSnackbar","isBooking","setIsBooking","userDetails","setUserDetails","currentUser","JSON","parse","localStorage","getItem","UserId","userRef","doc","db","userSnap","getDoc","exists","data","getUser","isCreatorOfWorkshop","whatsappMessage","encodeURIComponent","isBooked","BookedWorkshops","call","shareUrl","location","host","Modal","onClose","zIndex","Box","left","transform","overflow","xs","md","bgcolor","borderStyle","boxShadow","p","borderRadius","Grid","container","spacing","rowGap","item","lg","imageUrl","flexDirection","MUITypography","variant","component","dayjs","date","format","time","mt","venue","flexWrap","alignSelf","price","Button","addDoc","collection","COLLECTIONS","BOOKINGS","StudioId","WorkshopId","bookingDate","Date","now","updateDoc","prev","message","textTransform","fontSize","padding","border","lineHeight","my","textAlign","columnGap","workshopName","danceStyles","dance","ShareButton","studioDetails","studioName","whatsappNumber","href","whatsAppImage","mobileNumber","callImage","dangerouslySetInnerHTML","__html","description","active","mr","WorkshopCard","_ref2","_dataItem$studioDetai4","setImageUrl","isWorkshopDetailsModalOpen","setIsWorkshopDetailsModalOpen","workshopId","url","readDocumentWithImageUrl","WORKSHOPICON","fetchImageUrl","cardStyle","marginRight","transition","cursor","handleWorkshopDetailsModalOpen","AspectRatio","ratio","loading","Stack","direction","bottom","form","index","Chip","marginLeft","marginBottom","paddingTop","fontWeight","textColor","underline","overlay","extDecoder","Typography","level","noWrap","marginTop","handleWorkshopDetailsModalClose","dataList","instructors","studioId","setWorkshop","newWorkshopId","setNewWorkshopId","selectedInstructors","setSelectedInstructors","selectedDanceStyles","setSelectedDanceStyles","instructorNamesWithIds","instructor","danceStylesOptions","currentCity","isReady","setIsReady","selectedDuration","setSelectedDuration","selectedStudio","setSelectedStudio","selectedLevel","setSelectedLevel","selectedCity","setSelectedCity","workshopTime","setWorkshopTime","workshopDate","setWorkshopDate","isSubmitting","setIsSubmitting","setDescription","step","setStep","darkTheme","createTheme","palette","mode","clearForm","reset","document","getElementById","q","query","DRAFT_COLLECTIONS","DRAFT_WORKSHOPS","where","querySnapshot","getDocs","empty","_form$workshopName","_form$workshopFees","_selectedInstructors$2","_selectedStudio$split5","_selectedStudio$split6","_selectedStudio$split7","_selectedStudio$split8","workshopFees","_instructor$split2","_instructor$split2$ca","_instructor$split2$ca2","_instructor$split2$ca3","author","displayName","creatorEmail","email","duration","city","_foundWorkshop$danceS","workshops","foundWorkshop","capacity","currentStudioIndex","studio","findIndex","main","intervalId","previousState","workshopRef","setInterval","_form$workshopName2","_form$workshopFees2","_selectedInstructors$3","_selectedStudio$split9","_selectedStudio$split10","_selectedStudio$split11","_selectedStudio$split12","currentState","_instructor$split3","_instructor$split3$ca","_instructor$split3$ca2","_instructor$split3$ca3","isEqual","err","clearInterval","getElementsByClassName","inputEle","editEle","onSubmit","event","preventDefault","validationFailed","isValidInputs","_selectedInstructors$","_selectedStudio$split","_selectedStudio$split2","_selectedStudio$split3","_selectedStudio$split4","currentUserEmail","dbPayload","_instructor$split","_instructor$split$cal","_instructor$split$cal2","_instructor$split$cal3","youtubeViedoLink","notifyEmails","metaData","entity_name","response","postData","WORKSHOPS","ok","json","studios","foundStudio","studioRef","deleteDoc","resetDraft","controlId","rows","placeholder","ThemeProvider","theme","CssBaseline","Autocomplete","handleDanceStylesChange","renderInput","params","TextField","handleInstructorChange","handleDurationChange","TimeRange","handleTimeSelect","startTime","endTime","currentStartTime","currentEndTime","newTime","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DatePicker","newValue","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","handleLevelChange","cities","handleCityChange","handleSelectStudio","ReactQuill","MuiButton","LinearProgress","margin","selectedWorkshopId","setSelectedWorkshopId","selectedWorkshop","setSelectedWorkshop","addedInstructors","selectedId","pop","studioDoc","workshopItem","handleSelectStudioValue","youtubeId","setStudioId","workshop","setWorkshopId","setInstructors","isCreator","setIsCreator","premiumTill","setPremiumTill","useAuth","setValue","React","uid","CreatorMode","isPremium","getCreatorMode","userId","instructorRef","INSTRUCTORS","instructorsList","fetchInstructors","STUDIO","studiosOfUser","docs","String","getStudioCreated","workshopsOfUserPromise","docRef","docSnap","workshopsOfUser","setItem","stringify","getWorkshopCreated","workshopIdList","typography","TabContext","borderBottom","TabList","handleChange","Tab","label","TabPanel","WorkshopAdd","WorkshopUpdate","CardSlider"],"sourceRoot":""}