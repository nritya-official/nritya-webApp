{"version":3,"file":"static/js/5413.89d8b8c5.chunk.js","mappings":"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","sources":["Screens/NrityaPolicyPages.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/material/utils/debounce.js","../node_modules/@mui/material/utils/ownerDocument.js","../node_modules/@mui/material/utils/ownerWindow.js","../node_modules/@mui/material/utils/useEnhancedEffect.js","../node_modules/@mui/system/esm/RtlProvider/index.js","../node_modules/@mui/utils/debounce/debounce.js","../node_modules/@mui/utils/ownerWindow/ownerWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, Box, Typography,tabsClasses } from '@mui/material';\nimport policies from '../policies.json'; // Importing the policies JSON\nimport { useSelector} from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\n\nconst NrityaPolicyPages = () => {\n  const { selected } = useParams() || 0; \n  const [selectedTab, setSelectedTab] = useState(0);\n  const [policyData, setPolicyData] = useState(null);\n  const isDarkModeOn = useSelector(selectDarkModeStatus); \n  useEffect(() => {\n    setPolicyData(policies);\n  }, []);\n\n  useEffect(() => {\n    const selectedTabValue = parseInt(selected) || 0; // Convert selected to an integer, default to 0 if NaN or undefined\n    if (selectedTabValue >= 0 && selectedTabValue <= 3) {\n      setSelectedTab(selectedTabValue); // Only allow valid values between 0 and 3\n    } else {\n      setSelectedTab(0); // Default to 0 if the value is out of range\n    }\n  }, [selected]);\n\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  const colorstyles = {\n      color: isDarkModeOn ? 'white' : 'black',\n  };\n  const renderPolicyContent = () => {\n    if (!policyData) return null;\n\n    const getEffectiveDate = () => {\n        switch (selectedTab) {\n            case 0: return policyData.privacyPolicy.effectiveDate;\n            case 1: return policyData.termsConditions.effectiveDate;\n            case 2: return policyData.cancellationRefundPolicy.effectiveDate;\n            case 3: return policyData.serviceDeliveryPolicy.effectiveDate;\n            default: return '';\n        }\n    };\n\n    const getPolicyContent = () => {\n        switch (selectedTab) {\n            case 0: return policyData.privacyPolicy.content;\n            case 1: return policyData.termsConditions.content;\n            case 2: return policyData.cancellationRefundPolicy.content;\n            case 3: return policyData.serviceDeliveryPolicy.content;\n            default: return [];\n        }\n    };\n\n    const effectiveDate = getEffectiveDate();\n    const policyContent = getPolicyContent();\n\n    return (\n        <Box>\n            <Typography variant=\"subtitle1\" style={{ ...colorstyles, fontStyle: 'italic', textTransform: 'none' }}>\n                Effective Date: {effectiveDate}\n            </Typography>\n\n            {policyContent.map((paragraph, index) => {\n                // Split the paragraph by newline characters\n                const segments = paragraph.split('\\n');\n\n                return (\n                    <div key={index} style={{ ...colorstyles, whiteSpace: 'pre-wrap', marginTop: '16px' }}>\n                        {segments.map((segment, segmentIndex) => {\n                            // Check if the segment starts with a number or a letter\n                            const isNumberedList = /^\\d+\\.\\s/.test(segment); // Matches segments like \"1. \"\n                            const isLetteredList = /^\\s*[a-z]\\.\\s/.test(segment); // Matches segments like \"a. \"\n\n                            let fontSize = 'inherit'; // Default font size\n                            let fontWeight = 'normal'; // Default font weight\n\n                            if (isNumberedList) {\n                                fontSize = '1.2rem'; // Larger size for numbered lists\n                                fontWeight = 'bold';\n                            } else if (isLetteredList) {\n                                fontSize = '1.1rem'; // Slightly larger size for lettered lists\n                                fontWeight = 'bold';\n                            }\n\n                            return (\n                                <Typography\n                                    key={segmentIndex}\n                                    variant=\"body1\"\n                                    style={{\n                                        fontSize,\n                                        fontWeight,\n                                    }}\n                                >\n                                    {segment}\n                                </Typography>\n                            );\n                        })}\n                    </div>\n                );\n            })}\n        </Box>\n    );\n};\n\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Tabs\n        value={selectedTab}\n        onChange={handleTabChange}\n        variant=\"scrollable\"\n        centered\n        aria-label=\"visible arrows tabs example\"\n        sx={{\n            [`& .${tabsClasses.scrollButtons}`]: {\n              '&.Mui-disabled': { opacity: 0.3 },\n            },\n          }}\n      >\n        <Tab style={colorstyles} label=\"Privacy Policy\" />\n        <Tab style={colorstyles} label=\"Terms & Conditions\" />\n        <Tab style={colorstyles} label=\"Cancellation & Refund\" />\n        <Tab style={colorstyles} label=\"Service Delivery\" />\n      </Tabs>\n      <Box sx={{ p: 3 }}>\n        {renderPolicyContent()}\n      </Box>\n    </Box>\n  );\n};\n\nexport default NrityaPolicyPages;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import debounce from '@mui/utils/debounce';\nexport default debounce;","import ownerDocument from '@mui/utils/ownerDocument';\nexport default ownerDocument;","import ownerWindow from '@mui/utils/ownerWindow';\nexport default ownerWindow;","'use client';\n\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport default useEnhancedEffect;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RtlContext = /*#__PURE__*/React.createContext();\nfunction RtlProvider(_ref) {\n  let {\n      value\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/_jsx(RtlContext.Provider, _extends({\n    value: value != null ? value : true\n  }, props));\n}\nprocess.env.NODE_ENV !== \"production\" ? RtlProvider.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.bool\n} : void 0;\nexport const useRtl = () => {\n  const value = React.useContext(RtlContext);\n  return value != null ? value : false;\n};\nexport default RtlProvider;","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n  function debounced(...args) {\n    const later = () => {\n      // @ts-ignore\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n  return debounced;\n}","import ownerDocument from '../ownerDocument';\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}"],"names":["NrityaPolicyPages","selected","useParams","selectedTab","setSelectedTab","useState","policyData","setPolicyData","isDarkModeOn","useSelector","selectDarkModeStatus","useEffect","policies","selectedTabValue","parseInt","colorstyles","color","_jsxs","Box","sx","width","children","Tabs","value","onChange","handleTabChange","event","newValue","variant","centered","tabsClasses","scrollButtons","opacity","_jsx","Tab","style","label","p","renderPolicyContent","effectiveDate","getEffectiveDate","privacyPolicy","termsConditions","cancellationRefundPolicy","serviceDeliveryPolicy","policyContent","getPolicyContent","content","Typography","fontStyle","textTransform","map","paragraph","index","segments","split","whiteSpace","marginTop","segment","segmentIndex","isNumberedList","test","isLetteredList","fontSize","fontWeight","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","_ref","theme","_extends","margin","font","typography","textAlign","overflow","textOverflow","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx","RtlContext","useRtl","Provider","debounce","func","timeout","wait","arguments","length","undefined","debounced","_len","args","Array","_key","clearTimeout","setTimeout","later","apply","this","clear","ownerWindow","node","ownerDocument","defaultView","window"],"sourceRoot":""}