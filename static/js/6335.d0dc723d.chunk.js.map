{"version":3,"file":"static/js/6335.d0dc723d.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/ModalContext.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","dataProp","activeElement","doc","ownerDocument","active","nodeName","e","body","resolveContainerRef","ref","document","canUseDOM","getBoundingClientRect","_ref","children","in","inProp","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","useEventCallback","combinedRef","useMergedRefs","child","cloneElement","ImperativeTransition","_ref2","onEntered","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","renderTransition","Component","runTransition","props","_jsx","Object","assign","NoopTransition","_excluded","manager","useModalManager","provided","window","useWindow","modalManager","ModalManager","getManager","modal","dialog","backdrop","add","remove","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","className","style","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","container","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","undefined","tabIndex","React","appear","arguments","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","overflow","paddingProp","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","removeContainerStyle","removeAttribute","modalIdx","push","state","splice","Context","createContext","Provider","useContext","addClass","classList","baseVal","hasClass","context","node","compareDocumentPosition","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","closeLabel","closeVariant","closeButton","ModalContext","handleClick","CloseButton","variant","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","marginProp","el","sharedManager","getSharedManager"],"sourceRoot":""}