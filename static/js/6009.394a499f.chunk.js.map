{"version":3,"file":"static/js/6009.394a499f.chunk.js","mappings":"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","sources":["Screens/OpenClassFullPage.js","constants.js","utils/common.js","utils/firebaseUtils.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  IconButton,\n  Typography as MUITypography,\n  Button,\n  TextField,\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n  CircularProgress,\n  Chip,\n} from \"@mui/material\";\nimport { Remove, Add } from \"@mui/icons-material\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { CHIP_LEVELS_DESIGN, COLLECTIONS, STORAGES } from \"../constants\"; // Adjust the import paths as necessary\nimport {\n  readDocument,\n  readDocumentWithImageUrl,\n} from \"../utils/firebaseUtils\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport { FaMinus, FaPlus } from 'react-icons/fa';\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { bookEntity } from \"../utils/common\";\n\nimport whatsAppImage from \"../assets/images/whatsapp.png\";\nimport callImage from \"../assets/images/india_11009487.png\";\n\nfunction OpenClassFullPage() {\n  const { openClassId } = useParams();\n  console.log(\"From OpenClassFullPage,\", openClassId);\n  const navigate = useNavigate();\n  const showSnackbar = useSnackbar();\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [dataItem, setDataItem] = useState(null);\n  const [personsAllowed, setPersonsAllowed] = useState(1); // Number of persons\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state\n\n  const currentUser = JSON.parse(localStorage.getItem(\"userInfo\"))?.UserId;\n  const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\"))?.email;\n\n  // Define Internet Conversion Charges\n  const INTERNET_CONV_CHARGES = 50; // Adjust as needed\n\n  // Calculate Total Price\n  const totalPrice =\n    dataItem && personsAllowed\n      ? 0 * personsAllowed \n      : 0;\n\n  const handleBook = async () => {\n    if (!currentUser) {\n      showSnackbar(\"Please login to book\", \"warning\");\n      navigate(\"/login\"); // Redirect to login page if not logged in\n      return;\n    }\n    try {\n      const bookingData = {\n        userId: currentUser,\n        entityType: COLLECTIONS.OPEN_CLASSES,\n        openClassId: openClassId,\n        associatedStudioId: dataItem.StudioId,\n        emailLearner: currentUserEmail,\n        personsAllowed: personsAllowed,\n        pricePerPerson: dataItem.price,\n        internetConvCharges: INTERNET_CONV_CHARGES,\n        totalPrice: totalPrice,\n        // Add other necessary fields here\n      };\n\n      const result = await bookEntity(bookingData);\n      if (result && result.nSuccessCode === 200) {\n        showSnackbar(\"Workshop booked\", \"success\");\n      } else if (result && result.nSuccessCode === 205) {\n        const timestampInSeconds = result.bookedAt;\n        const timestampInMilliseconds = timestampInSeconds * 1000;\n        const date = new Date(timestampInMilliseconds);\n        const formattedDate = date.toLocaleString();\n        showSnackbar(`Workshop already booked at ${formattedDate}`, \"info\");\n      } else {\n        const errorMessage = result\n          ? `Error: ${JSON.stringify(result)}`\n          : \"An unknown error occurred.\";\n        showSnackbar(errorMessage, \"error\");\n      }\n    } catch (error) {\n      console.error(error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    }\n  };\n\n  console.log(\"OpenClassFullPage before useEffect\");\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(\"OpenClassFullPage fetchData\");\n      try {\n        const data = await readDocument(COLLECTIONS.OPEN_CLASSES, openClassId);\n        console.log(\"OpenClassFullPage fetchData data\", data);\n        setDataItem(data);\n        console.log(\"OpenClassFullPage before useEffect\", data);\n        if (data && data.StudioId) {\n          const studioDetails = await readDocument(\n            COLLECTIONS.STUDIO,\n            data.StudioId\n          );\n          setDataItem((prevData) => ({ ...prevData, studioDetails }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching workshop data:\", error);\n        showSnackbar(\"Failed to load workshop details.\", \"error\");\n      }\n    };\n\n    const fetchImage = async () => {\n      try {\n        const url = await readDocumentWithImageUrl(\n          STORAGES.OPENCLASSICON,\n          openClassId\n        );\n        setImageUrl(\n          url ||\n            \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      } catch (error) {\n        console.error(\"Error fetching image URL:\", error);\n        setImageUrl(\n          \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      }\n    };\n\n    if (openClassId) {\n      fetchData();\n      fetchImage();\n    }\n  }, [openClassId, showSnackbar]);\n\n  if (!dataItem) {\n    return (\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <CircularProgress color=\"primary\" />\n      </Box>\n    );\n  }\n\n  const whatsappMessage = encodeURIComponent(\n    \"Hey, I found your Studio on nritya.co.in. I'm interested\"\n  );\n\n  // Handlers for Modal\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"2rem\",\n        minHeight: \"100vh\",\n        color: isDarkModeOn ? \"white\" : \"black\",\n      }}\n    >\n      <Grid container spacing={4}>\n        {/* Workshop Image */}\n        <Grid item xs={12} lg={8}>\n          <Box\n            component=\"img\"\n            src={imageUrl}\n            alt={dataItem.openClassName || \"Open Class Name Image\"}\n            sx={{\n              width: \"100%\",\n              height: \"auto\",\n              objectFit: \"cover\",\n              borderRadius: \"8px\",\n            }}\n          />\n        </Grid>\n\n        {/* Workshop Details */}\n        <Grid item xs={12} lg={4}>\n          <Box\n            sx={{\n              bgcolor: isDarkModeOn ? \"#333333\" : \"#efefef\",\n              p: 3,\n              borderRadius: \"8px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100%\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {/* Workshop Info */}\n            <Box>\n              <MUITypography variant=\"h4\" style={{color: isDarkModeOn ? 'white' : 'black', textTransform: 'none',textDecoration: 'none'}}>\n                {dataItem.openClassName || \"Open Class Name\"}\n              </MUITypography>\n              <MUITypography variant=\"subtitle \"style={{color: isDarkModeOn ? 'white' : 'black'}}>\n                {(dataItem.date)}\n              </MUITypography>\n              <br/>\n              <MUITypography variant=\"subtitle\" style={{color: isDarkModeOn ? 'white' : 'black'}}>{dataItem.time}</MUITypography>\n              <MUITypography variant=\"body1\" sx={{ mt: \"1rem\",color: isDarkModeOn ? 'white' : 'black' }}>\n                {dataItem.city || \"City\"}\n              </MUITypography>\n            </Box>\n\n            {/* Booking Section */}\n            <Box\n              sx={{\n                mt: \"2rem\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"1rem\",\n                color: isDarkModeOn ? 'white' : 'black'\n              }}\n            >\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n      <tbody>\n        <tr>\n          <td style={{ padding: '8px', color: isDarkModeOn ? 'white' : 'black' }}>\n            {dataItem && dataItem.price && (\n              <span>Price per person</span>\n            )}\n          </td>\n          <td style={{ padding: '8px', color: isDarkModeOn ? 'white' : 'black' }}>\n            {dataItem && dataItem.price && (\n              <span> ₹{dataItem.price}</span>\n            )}\n          </td>\n        </tr>\n        <tr>\n         <td style={{ padding: '8px', color: isDarkModeOn ? 'white' : 'black' }}>\n            <span sx={{ color: isDarkModeOn ? 'white' : 'black' }}>Person(s)</span>\n          </td>\n          <td style={{ padding: '8px' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n              \n              <Stack direction=\"row\" spacing={0} alignItems=\"center\">\n                <Button\n                    variant=\"contained\"\n                    onClick={() => setPersonsAllowed((prev) => Math.max(prev - 1, 1))}\n                    disabled={personsAllowed <= 1}\n                    sx={{\n                    flex: 1, // Make the button take full available width\n                    height: '40px', // Set the height for uniformity\n                    border: '1px solid',\n                    borderColor: isDarkModeOn ? 'white' : 'black',\n                    color: isDarkModeOn ? 'white' : 'black',\n                    backgroundColor: 'red',\n                    '&:hover': {\n                        backgroundColor: 'darkred',\n                    },\n                    }}\n                >\n                    <FaMinus />\n                </Button>\n\n                <Button\n                    variant=\"contained\"\n                    sx={{\n                    flex: 1,\n                    height: '40px',\n                    border: '1px solid',\n                    borderColor: isDarkModeOn ? 'white' : 'black',\n                    color: isDarkModeOn ? 'white' : 'black', // Adjust text color for contrast\n                    backgroundColor: 'rgba(255, 255, 255, 0.2)', // Semi-transparent background\n                    backdropFilter: 'blur(10px)', // Glassmorphism effect\n                    boxShadow: '0 4px 10px rgba(0, 0, 0, 0.3)', // Shadow for depth\n                    '&:hover': {\n                        backgroundColor: 'rgba(255, 255, 255, 0.2)', // Slightly more opaque on hover\n                    },\n                    }}\n                >\n                    {personsAllowed}\n                </Button>\n\n                <Button\n                    variant=\"contained\"\n                    onClick={() => setPersonsAllowed((prev) => Math.min(prev + 1, 2))}\n                    disabled={personsAllowed >= 2}\n                    sx={{\n                    flex: 1,\n                    height: '40px',\n                    border: '1px solid',\n                    borderColor: isDarkModeOn ? 'white' : 'black',\n                    color: isDarkModeOn ? 'white' : 'black',\n                    backgroundColor: 'green',\n                    '&:hover': {\n                        backgroundColor: 'darkgreen',\n                    },\n                    }}\n                >\n                    <FaPlus />\n                </Button>\n                </Stack>\n            </Box>\n          </td>\n        </tr>\n        </tbody>\n        </table>\n\n              {/* Book Now Button */}\n              <Button\n                variant=\"contained\"\n                onClick={handleBook}\n                sx={{\n                  textTransform: \"none\",\n                  fontSize: 16,\n                  padding: \"8px 16px\",\n                  backgroundColor: isDarkModeOn ? \"white\" : \"black\",\n                  color: isDarkModeOn ? \"black\" : \"white\",\n                  \"&:hover\": {\n                    backgroundColor: isDarkModeOn ? \"#f0f0f0\" : \"#333333\",\n                  },\n                }}\n              >\n                {currentUser ? `Book Now @${totalPrice}` : \"Login to Book\"}\n              </Button>\n              <Button\n              hidden={totalPrice===0}\n              variant=\"text\"\n              onClick={handleOpenModal}\n              sx={{\n                textTransform: 'none',\n                fontSize: 16,\n                color: isDarkModeOn ? 'white' : 'black',\n                '&:hover': {\n                  backgroundColor: 'transparent',\n                  textDecoration: 'none',\n                },\n              }}\n            >\n              Price Breakdown (i)\n            </Button>\n\n              {/* Payment Info */}\n              {currentUser && (\n                <MUITypography\n                  variant=\"caption\"\n                  sx={{ mt: \"0.5rem\", textAlign: \"center\" }}\n                >\n                  Book and groove at the venue\n                </MUITypography>\n              )}\n            </Box>\n          </Box>\n        </Grid>\n\n        {/* Additional Workshop Details */}\n        <Grid item xs={12}>\n          <MUITypography variant=\"h4\" style={{color: isDarkModeOn ? 'white' : 'black',  textTransform: 'none',textDecoration: 'none'}} gutterBottom>\n            {dataItem.openClassName || \"Open Class Name \"}\n          </MUITypography>\n          <MUITypography variant=\"subtitle1\" style={{color: isDarkModeOn ? 'white' : 'black',  textTransform: 'none',textDecoration: 'none'}} gutterBottom>\n            By {dataItem.studioDetails?.studioName || \"Studio Name\"}\n            {dataItem.danceStyles && dataItem.danceStyles.length > 0 && (\n              <>\n                {\" \"}\n                | {dataItem.danceStyles.join(\", \")}\n              </>\n            )}\n          </MUITypography>\n          <Chip\n                sx={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                    bgcolor: CHIP_LEVELS_DESIGN[dataItem.level]?.backgroundColor || 'grey',  // Fallback to grey\n                    color: CHIP_LEVELS_DESIGN[dataItem.level]?.color || 'white',  // Fallback to white\n                }}\n                label={dataItem.level}\n                >\n                </Chip>\n          <Box sx={{ display: \"flex\", gap: \"0.5rem\", mb: \"1rem\" , color: isDarkModeOn ? 'white' : 'black'}}>\n            {dataItem.studioDetails?.whatsappNumber && (\n              <IconButton\n                color=\"success\"\n                size=\"small\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://wa.me/91${dataItem.studioDetails.whatsappNumber}?text=${whatsappMessage}`}\n              >\n                <Box\n                  component=\"img\"\n                  src={whatsAppImage}\n                  alt=\"WhatsApp\"\n                  sx={{ width: 30, height: 28 }}\n                />\n              </IconButton>\n            )}\n            {dataItem.studioDetails?.mobileNumber && (\n              <IconButton\n                color=\"primary\"\n                size=\"small\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`tel:${dataItem.studioDetails.mobileNumber}`}\n              >\n                <Box\n                  component=\"img\"\n                  src={callImage}\n                  alt=\"Phone Call\"\n                  sx={{ width: 30, height: 28 }}\n                />\n              </IconButton>\n            )}\n          </Box>\n          <MUITypography variant=\"body1 \" style={{color: isDarkModeOn ? 'white' : 'black'}}>\n            {dataItem.description || \"Workshop Description\"}\n          </MUITypography>\n        </Grid>\n      </Grid>\n\n      {/* Price Breakdown Modal */}\n      <Dialog\n        open={isModalOpen}\n        onClose={handleCloseModal}\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        <DialogTitle>Price Breakdown</DialogTitle>\n        <DialogContent>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell><strong>Item</strong></TableCell>\n                <TableCell align=\"right\"><strong>Amount (₹)</strong></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>Price per Person</TableCell>\n                <TableCell align=\"right\">{dataItem.price}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Number of Persons</TableCell>\n                <TableCell align=\"right\">{personsAllowed}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Subtotal</TableCell>\n                <TableCell align=\"right\">\n                  {dataItem.price * personsAllowed}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Internet Convenience Charges</TableCell>\n                <TableCell align=\"right\">{INTERNET_CONV_CHARGES}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell><strong>Total Price</strong></TableCell>\n                <TableCell align=\"right\">\n                  <strong>₹{totalPrice}</strong>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseModal} variant=\"outlined\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default OpenClassFullPage;\n\n\n\n","import { FaSnowflake, FaWifi, FaTint, FaToilet, FaPlug, FaFireExtinguisher, FaFirstAid, FaVideo, FaCreditCard, FaParking  } from 'react-icons/fa';\n\nexport const STATUSES = {\n    SUBMITTED: \"Submitted\",\n    UNDER_REVIEW: \"Under Review\",\n    REVIEWED: \"Reviewed\",\n    VERIFIED: \"Verified\",\n    VERIFICATION_FAILED: \"Verification Failed\",\n};\n\nexport const DRAFT_COLLECTIONS = {\n    DRAFT_STUDIOS: 'DraftStudios',\n    DRAFT_WORKSHOPS: 'DraftWorkshops',\n    DRAFT_OPEN_CLASSES: 'DraftOpenClasses',\n    DRAFT_COURSES: 'DraftCourses'\n};\n\nexport const LEVELS = {\n    ALL : \"All\",\n    BEGINNERS : \"Beginner\", \n    INTERMEDIATE :\"Intermediate\", \n    ADVANCED :\"Advanced\"\n}\nexport const INTERNET_CONV_CHARGES = 30;\nexport const SERVER_URLS = {\n    PROD : 'https://nrityaserver-2b241e0a97e5.herokuapp.com/',\n    LOCAL : 'http://127.0.0.1:8000/'\n}\n\nexport const COLORS = {\n    GREEN: { backgroundColor: \"#28a745\", color: \"#fff\" },     // Green background, white text\n    BLUE: { backgroundColor: \"#007bff\", color: \"#fff\" },      // Blue background, white text\n    YELLOW: { backgroundColor: \"#ffc107\", color: \"#000\" },    // Yellow background, black text\n    RED: { backgroundColor: \"#dc3545\", color: \"#fff\" },       // Red background, white text\n    PURPLE: { backgroundColor: \"#6f42c1\", color: \"#fff\" },    // Purple background, white text\n    ORANGE: { backgroundColor: \"#fd7e14\", color: \"#fff\" },    // Orange background, white text\n    TEAL: { backgroundColor: \"#20c997\", color: \"#fff\" },      // Teal background, white text\n    PINK: { backgroundColor: \"#e83e8c\", color: \"#fff\" },      // Pink background, white text\n    GRAY: { backgroundColor: \"#6c757d\", color: \"#fff\" },       // Gray background, white text\n\n    LIGHTBLUE: { backgroundColor: \"#17a2b8\", color: \"#fff\" }, // Light blue background, white text\n    DARKBLUE: { backgroundColor: \"#343a40\", color: \"#fff\" },  // Dark blue background, white text\n    CYAN: { backgroundColor: \"#00bcd4\", color: \"#fff\" },      // Cyan background, white text\n    INDIGO: { backgroundColor: \"#6610f2\", color: \"#fff\" },    // Indigo background, white text\n    LIME: { backgroundColor: \"#cddc39\", color: \"#000\" },      // Lime background, black text\n    AMBER: { backgroundColor: \"#ffca28\", color: \"#000\" },     // Amber background, black text\n    BROWN: { backgroundColor: \"#795548\", color: \"#fff\" },     // Brown background, white text\n    LIGHTGREEN: { backgroundColor: \"#8bc34a\", color: \"#000\" },// Light green background, black text\n    DEEPPURPLE: { backgroundColor: \"#673ab7\", color: \"#fff\" },// Deep purple background, white text\n    DEEPORANGE: { backgroundColor: \"#ff5722\", color: \"#fff\" },// Deep orange background, white text\n    BLACK: { backgroundColor: \"#000000\", color: \"#fff\" },     // Black background, white text\n    WHITE: { backgroundColor: \"#ffffff\", color: \"#000\" },     // White background, black text\n    SILVER: { backgroundColor: \"#c0c0c0\", color: \"#000\" },    // Silver background, black text\n    GOLD: { backgroundColor: \"#ffd700\", color: \"#000\" },      // Gold background, black text\n    NAVY: { backgroundColor: \"#001f3f\", color: \"#fff\" },      // Navy background, white text\n    OLIVE: { backgroundColor: \"#3d9970\", color: \"#fff\" },     // Olive background, white text\n\n  };\n\nexport const CHIP_LEVELS_DESIGN = {\n    [LEVELS.ALL]: COLORS.GREEN,           // Green background, white text\n    [LEVELS.BEGINNERS]: COLORS.BLUE,     // Blue background, white text\n    [LEVELS.INTERMEDIATE]: COLORS.YELLOW,  // Yellow background, black text\n    [LEVELS.ADVANCED]: COLORS.RED      // Red background, white text\n  };\n  \n\n  \nexport const danceStylesColorChips = [COLORS.PURPLE,COLORS.ORANGE,COLORS.TEAL,COLORS.LIME]\n\nexport const COLLECTIONS = {\n    USER: \"User\",\n    USER_KYC:\"UserKyc\",\n    ADMIN:\"Admin\",\n    REVIEWS: \"Reviews\",\n    TRANSACTIONS: \"Transactions\",\n    STUDIO: \"Studio\",\n    INSTRUCTORS: \"Instructors\",\n    FREE_TRIAL_BOOKINGS:\"FreeTrialBookings\",\n    WORKSHOPS: 'Workshops',\n    OPEN_CLASSES: 'OpenClasses',\n    COURSES: 'Courses',\n    BOOKINGS: 'Bookings',\n}\n\nexport const STORAGES ={\n    STUDIOIMAGES:'StudioImages',\n    STUDIOICON:'StudioIcon',\n    STUDIOANNOUNCEMENTS :'StudioAnnouncements',\n    USERIMAGE:'UserImage',\n    INSTRUCTORIMAGES: 'InstructorImages',\n    WORKSHOPICON :\"WorkshopIcon\",\n    WORKSHOPIMAGES :\"WorkshopImages\",\n    OPENCLASSICON :\"OpenClassIcon\",\n    COURSEICON :\"CourseIcon\",\n    CREATORS_KYC_DOCUMENTS :\"CreatorKycDocuments\"\n}\n\nexport const SEARCH_FILTERS ={\n    DANCEFORMS:'danceforms',\n    DISTANCES:'distances',\n}\n\nexport const BASEURL_DEV = \"http://127.0.0.1:8000/\"\nexport const BASEURL_PROD= \"https://nrityaserver-2b241e0a97e5.herokuapp.com/\"\n\nexport const AMENITIES_ICONS = {\n    \"AC\": <FaSnowflake />,\n    \"Free Wifi\": <FaWifi />,\n    \"RO Water\": <FaTint />,\n    \"Toilet\": <FaToilet />,\n    \"Power Backup\": <FaPlug />,\n    \"Fire Extinguisher\": <FaFireExtinguisher />,\n    \"First Aid Kit\": <FaFirstAid />,\n    \"CCTV Camera\": <FaVideo />,\n    \"Card Payment\": <FaCreditCard />,\n    \"Parking Space\": <FaParking />,\n};\n\n","import { COLORS, SERVER_URLS } from \"../constants\";\n\nexport const getRandomColor = () => {\n  const colorKeys = Object.keys(COLORS);\n  const randomKey = colorKeys[Math.floor(Math.random() * colorKeys.length)];\n  return COLORS[randomKey];\n};\n\nexport const bookEntity = async (bookingData) => {\n  const url = `${SERVER_URLS.PROD}bookings/bookEntity/`; \n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userId: bookingData.userId,\n        entityType: bookingData.entityType,\n        entityId: bookingData.entityId,\n        associatedStudioId: bookingData.associatedStudioId,\n        emailLearner: bookingData.emailLearner,\n        personsAllowed: bookingData.personsAllowed,\n        pricePerPerson: bookingData.pricePerPerson,\n      })\n    });\n\n    const result = await response.json();\n    \n    if (response.ok) {\n      console.log('Booking successful:', result);\n      return result;  // Return the successful result\n    } else {\n      console.error('Booking failed:', result);\n      return result;  // Return null or an error message\n    }\n    \n  } catch (error) {\n    console.error('Error occurred while booking:', error);\n    return null;  // Return null or an error message\n  }\n};\n\n\n// Function to decode a Unicode (UTF-8) encoded string back to the original text\nexport const decodeUnicode = (unicodeString) => {\n  const utf8Encoded = unicodeString.split('').map((c) => c.charCodeAt(0));\n  const textDecoder = new TextDecoder();\n  return textDecoder.decode(new Uint8Array(utf8Encoded));\n};\n\nexport const convertToHtmlEntities= (text) =>{\n  return text.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\n      return '&#' + i.charCodeAt(0) + ';';\n  });\n}\n\nexport const gradientStyles = [\n  { background: 'linear-gradient(to bottom right, #FFD700, #FFA500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #00BFFF, #1E90FF)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #32CD32, #008000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #FFA500, #FF4500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #DC143C, #8B0000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #000000, #2F4F4F)', color: 'white' },\n];","import { doc, getDoc, setDoc, updateDoc, deleteDoc, collection, query, getDocs, where, getCountFromServer } from 'firebase/firestore';\nimport { db } from '../config';\nimport {ref,listAll,getDownloadURL,uploadBytes, deleteObject, uploadBytesResumable  } from \"firebase/storage\";\nimport { storage } from '../config';\nimport { COLLECTIONS } from '../constants';\nimport secureLocalStorage from 'react-secure-storage';\n\nexport const setCreatorMode = async (uid) => {\n  console.log(\"creatorMode uid\",uid)\n  try{\n  const userRef = doc(db, COLLECTIONS.USER, uid);\n  const userSnap = await getDoc(userRef);\n  if (userSnap.exists()) {\n    if(userSnap.data() != null){\n      const mode = userSnap.data().CreatorMode\n      console.log(\"setCreatorMode: Is User a creator?\",mode)\n      secureLocalStorage.setItem('CreatorMode', mode);\n        \n    }else{\n      console.log(\"userSnap.data() null\")\n      \n    }\n  } else {\n    console.log(\"User not found\");\n  }\n  }catch(error){\n    console.log(\" error\",error);\n  }\n}\n\nexport const getCreatorMode = async () => {\n  try{\n    const mode = secureLocalStorage.getItem('CreatorMode');\n    console.log(\"getCreatorMode \",mode)\n    if (mode){\n      return mode\n    }else{\n      return false\n    }\n  } \n  catch(error){\n    console.log(\" error\");\n    return false\n  }\n}\n\n// Read operation with image URL\nexport const readDocumentWithImageUrl = async (collectionName, productId) => {\n    console.log(\"Debug \",`${collectionName}/${productId}`)\n    const storagePath = `${collectionName}/${productId}`;\n    const folderRef = ref(storage,storagePath);\n    try {\n        const result = await listAll(folderRef);\n        if (result.items.length > 0) {\n            const firstFileRef = result.items[0];\n            const url = await getDownloadURL(firstFileRef);\n            console.log('Debug URL:', url);\n            return url;\n          } else {\n            console.log('Debug No files found in the folder.');\n            return null;\n          }\n    } catch (error) {\n      console.error('Error getting image URL:', error);\n      return null;\n    }\n  };\n\n// Read operation\nexport const readDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    const docSnapshot = await getDoc(docRef);\n    return docSnapshot.exists() ? docSnapshot.data() : null;\n};\n\n// Create or Update operation\nexport const saveDocument = async (collectionName, documentId, data) => {\n    const docRef = doc(db, collectionName, documentId);\n    await setDoc(docRef, data, { merge: true });\n    return data;\n};\n\n\nexport const handleSavePostOTPSuccess = async (collectionName, documentId, phoneNumber) => {\n  const docRef = doc(db, collectionName, documentId);\n  await updateDoc(docRef, {isPhoneNumberVerified:true,phoneNumber});\n  return true;\n};\n\n// Update specific fields in a document\nexport const updateDocumentFields = async (collectionName, documentId, fields) => {\n    const docRef = doc(db, collectionName, documentId);\n    await updateDoc(docRef, fields);\n    return { id: documentId, ...fields };\n};\n\n// Delete operation\nexport const deleteDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    await deleteDoc(docRef);\n    return { id: documentId };\n};\n\n// Query operation\nexport const queryDocuments = async (collectionName, conditions) => {\n    const q = query(collection(db, collectionName, conditions));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n};\n\nexport const queryDocumentsCount = async (collectionName,field,operation,value) => {\n    console.log(\"Hiii \",collectionName,field,operation,value)\n    const q = query(collection(db, collectionName), where(field,operation,value));\n    const snapshot = await getCountFromServer(q);\n    return snapshot.data().count;\n};\n\n\n  // Function to delete all images in a folder\nexport  const deleteAllImagesInFolder = async (storageFolder, entityId) => {\n    /*\n    Description: Deletes all images in the specified folder associated with the given entityId.\n\n    Args:\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: The unique identifier of the entity whose images are to be deleted eg UserId,StudioId like thing.\n    */\n    const folderPath = `${storageFolder}/${entityId}`;\n    const folderRef = ref(storage, folderPath);\n    const fileList = await listAll(folderRef);\n\n    await Promise.all(fileList.items.map(async (fileRef) => {\n      await deleteObject(fileRef);\n    }));\n  };\n\n    // Function to delete all images in a folder\n  export  const deleteAllImagesInFolder2 = async (storageFolder, entityId,subfolder) => {\n    /*\n    Description: Deletes all images in the specified folder associated with the given entityId.\n\n    Args:\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: The unique identifier of the entity whose images are to be deleted eg UserId,StudioId like thing.\n    */\n    const folderPath = `${storageFolder}/${entityId}/${subfolder}`;\n    const folderRef = ref(storage, folderPath);\n    const fileList = await listAll(folderRef);\n\n    await Promise.all(fileList.items.map(async (fileRef) => {\n      await deleteObject(fileRef);\n    }));\n  };\n\n  // Function to delete images\nexport const deleteImages = async (storageFolder,imagesToDelete,entityId,setProgress,thirdFolder=null) => {\n    /*\n    Description: Deletes specific images associated with the given entityId.\n\n    Args:\n      imagesToDelete <array>: An array of image objects to be deleted.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n    const total = imagesToDelete.length;\n    let done = 0;\n    await Promise.all(imagesToDelete.map(async (file) => {\n      let folderPath = `${storageFolder}/${entityId}/${file.filename}`;\n      if (thirdFolder){\n         folderPath = `${storageFolder}/${entityId}/${thirdFolder}/${file.filename}`;\n      }\n      const fileRefToDelete = ref(storage, folderPath);\n      await deleteObject(fileRefToDelete);\n      done += 1;\n      setProgress((done / total) * 100);\n    }));\n  };\n\n  // Function to upload new images\nexport const uploadImages = async (storageFolder, newImages, entityId,setProgress,thirdFolder=null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n\n    Args:\n      newImages <array>: An array of new image objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n   console.log(storageFolder,entityId)\n   const total = newImages.length;\n    let done = 0;\n    await Promise.all(newImages.map(async (newFileData) => {\n      let folderPath = `${storageFolder}/${entityId}`;\n      if (thirdFolder){\n         folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n      }\n      const fileRef = ref(storage, `${folderPath}/${newFileData.file.name}`);\n      await uploadBytes(fileRef, newFileData.file);\n      done += 1;\n      setProgress((done / total) * 100);\n    }));\n  };\n\n  export const uploadImages2 = async (storageFolder, newImages, entityId, thirdFolder = null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    uploadBytesResumable(storageRef, newImages).then((snapshot) => {\n      console.log('Uploaded a blob or file!');\n    });\n  };\n\n  export const uploadImages3 = async (storageFolder, newImages, entityId, thirdFolder = null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, newImages);\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, \n      (error) => {\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, \n      () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log('File available at', downloadURL);\n        });\n      }\n    );\n    \n  };\n\n\n  export const uploadImages4 = async (storageFolder, newImages, entityId, thirdFolder = null, onProgress, onComplete) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages,newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, newImages);\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const totalBytes = snapshot.totalBytes;\n        const bytesTransferred = snapshot.bytesTransferred;\n        const progress = totalBytes > 0 ? ((bytesTransferred / totalBytes) * 100).toFixed(2) : -1;\n        onProgress(progress);\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, \n      (error) => {\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, \n      () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log('File available at', downloadURL);\n          onComplete(downloadURL);\n        });\n\n      }\n    );\n    \n  };\n\n\n export const uploadOneImageAndGetURL = async (storageFolder, file, entityId) => {\n    try {\n      const folderPath = `${storageFolder}/${entityId}/${file.name}`;\n      console.log(folderPath)\n      const fileRef = ref(storage, folderPath);\n      \n      await uploadBytes(fileRef, file);\n  \n      const imageUrl = await getDownloadURL(fileRef);\n      console.log(imageUrl)\n      return imageUrl;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error; \n    }\n  };\n  \n  export const getAllFilesFromFolder = async (storageFolder) => {\n    const folderPath = `${storageFolder}`;\n    const folderRef = ref(storage, folderPath);\n    \n    try {\n        const fileList = await listAll(folderRef);\n\n        const imageUrlsComprehensive = await Promise.all(\n          fileList.items.map(async (fileRef) => {\n            const downloadURL = await getDownloadURL(fileRef);\n  \n            return {\n              id: fileRef.name,\n              filename: fileRef.name,\n              fileURL: downloadURL,\n            };\n          })\n        );\n\n        // return imageUrls;\n        return imageUrlsComprehensive\n    } catch (error) {\n        console.error('Error retrieving images:', error);\n        throw error;\n    }\n};\n\n"],"names":["_JSON$parse","_JSON$parse2","_dataItem$studioDetai","_CHIP_LEVELS_DESIGN$d","_CHIP_LEVELS_DESIGN$d2","_dataItem$studioDetai2","_dataItem$studioDetai3","openClassId","useParams","console","log","navigate","useNavigate","showSnackbar","useSnackbar","isDarkModeOn","useSelector","selectDarkModeStatus","imageUrl","setImageUrl","useState","dataItem","setDataItem","personsAllowed","setPersonsAllowed","isModalOpen","setIsModalOpen","currentUser","JSON","parse","localStorage","getItem","UserId","currentUserEmail","email","totalPrice","useEffect","async","data","readDocument","COLLECTIONS","OPEN_CLASSES","StudioId","studioDetails","STUDIO","prevData","error","fetchData","url","readDocumentWithImageUrl","STORAGES","OPENCLASSICON","fetchImage","_jsx","Box","sx","display","justifyContent","alignItems","height","children","CircularProgress","color","whatsappMessage","encodeURIComponent","handleCloseModal","_jsxs","padding","minHeight","Grid","container","spacing","item","xs","lg","component","src","alt","openClassName","width","objectFit","borderRadius","bgcolor","p","flexDirection","MUITypography","variant","style","textTransform","textDecoration","date","time","mt","city","gap","borderCollapse","price","Stack","direction","Button","onClick","prev","Math","max","disabled","flex","border","borderColor","backgroundColor","FaMinus","backdropFilter","boxShadow","min","FaPlus","bookingData","userId","entityType","associatedStudioId","emailLearner","pricePerPerson","internetConvCharges","result","bookEntity","nSuccessCode","timestampInSeconds","bookedAt","formattedDate","Date","toLocaleString","errorMessage","stringify","message","fontSize","hidden","handleOpenModal","textAlign","gutterBottom","studioName","danceStyles","length","_Fragment","join","Chip","marginLeft","marginBottom","CHIP_LEVELS_DESIGN","level","label","mb","whatsappNumber","IconButton","size","target","rel","href","whatsAppImage","mobileNumber","callImage","description","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","Table","TableHead","TableRow","TableCell","align","TableBody","DialogActions","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","DRAFT_COLLECTIONS","DRAFT_STUDIOS","DRAFT_WORKSHOPS","DRAFT_OPEN_CLASSES","DRAFT_COURSES","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","INTERNET_CONV_CHARGES","SERVER_URLS","PROD","LOCAL","COLORS","GREEN","BLUE","YELLOW","RED","PURPLE","ORANGE","TEAL","PINK","GRAY","LIGHTBLUE","DARKBLUE","CYAN","INDIGO","LIME","AMBER","BROWN","LIGHTGREEN","DEEPPURPLE","DEEPORANGE","BLACK","WHITE","SILVER","GOLD","NAVY","OLIVE","danceStylesColorChips","USER","USER_KYC","ADMIN","REVIEWS","TRANSACTIONS","INSTRUCTORS","FREE_TRIAL_BOOKINGS","WORKSHOPS","COURSES","BOOKINGS","STUDIOIMAGES","STUDIOICON","STUDIOANNOUNCEMENTS","USERIMAGE","INSTRUCTORIMAGES","WORKSHOPICON","WORKSHOPIMAGES","COURSEICON","CREATORS_KYC_DOCUMENTS","BASEURL_PROD","AMENITIES_ICONS","FaSnowflake","FaWifi","FaTint","FaToilet","FaPlug","FaFireExtinguisher","FaFirstAid","FaVideo","FaCreditCard","FaParking","response","fetch","method","headers","body","entityId","json","ok","setCreatorMode","uid","userRef","doc","db","userSnap","getDoc","exists","mode","CreatorMode","secureLocalStorage","setItem","collectionName","productId","storagePath","folderRef","ref","storage","listAll","items","firstFileRef","getDownloadURL","documentId","docRef","docSnapshot","saveDocument","setDoc","merge","handleSavePostOTPSuccess","phoneNumber","updateDoc","isPhoneNumberVerified","updateDocumentFields","fields","id","queryDocumentsCount","field","operation","value","q","query","collection","where","getCountFromServer","count","deleteAllImagesInFolder","storageFolder","folderPath","fileList","Promise","all","map","deleteObject","fileRef","deleteAllImagesInFolder2","subfolder","deleteImages","imagesToDelete","setProgress","thirdFolder","arguments","undefined","total","done","file","filename","fileRefToDelete","uploadImages","newImages","newFileData","name","uploadBytes","uploadImages4","onProgress","onComplete","storageRef","uploadTask","uploadBytesResumable","on","snapshot","totalBytes","bytesTransferred","progress","toFixed","state","code","then","downloadURL","getAllFilesFromFolder","fileURL"],"sourceRoot":""}