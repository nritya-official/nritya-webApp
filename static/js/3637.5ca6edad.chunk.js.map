{"version":3,"file":"static/js/3637.5ca6edad.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/base/useBadge/useBadge.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/material/Icon/iconClasses.js","../node_modules/@mui/material/Icon/Icon.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/Table/TableContext.js","../node_modules/@mui/material/Table/Tablelvl2Context.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/node_modules/reselect/src/utils.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/lruMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/weakMapMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createSelectorCreator.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createStructuredSelector.ts","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/resolveProps/resolveProps.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/utils/platform.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/GridHeaders.js","../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-internals/EventManager/EventManager.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-internals/throttle/throttle.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/material/Toolbar/toolbarClasses.js","../node_modules/@mui/material/Toolbar/Toolbar.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useBadge } from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useThemeProps = createUseThemeProps('MuiBadge');\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme\n}) => {\n  var _theme$vars;\n  return {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    variants: [...Object.keys(((_theme$vars = theme.vars) != null ? _theme$vars : theme).palette).filter(key => {\n      var _theme$vars2, _theme$vars3;\n      return ((_theme$vars2 = theme.vars) != null ? _theme$vars2 : theme).palette[key].main && ((_theme$vars3 = theme.vars) != null ? _theme$vars3 : theme).palette[key].contrastText;\n    }).map(color => ({\n      props: {\n        color\n      },\n      style: {\n        backgroundColor: (theme.vars || theme).palette[color].main,\n        color: (theme.vars || theme).palette[color].contrastText\n      }\n    })), {\n      props: {\n        variant: 'dot'\n      },\n      style: {\n        borderRadius: RADIUS_DOT,\n        height: RADIUS_DOT * 2,\n        minWidth: RADIUS_DOT * 2,\n        padding: 0\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n      style: {\n        top: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n      style: {\n        bottom: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n      style: {\n        top: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n      style: {\n        bottom: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n      style: {\n        top: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n      style: {\n        bottom: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n      style: {\n        top: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n      style: {\n        bottom: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: {\n        invisible: true\n      },\n      style: {\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeInOut,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      }\n    }]\n  };\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nexport function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconUtilityClass(slot) {\n  return generateUtilityClass('MuiIcon', slot);\n}\nconst iconClasses = generateUtilityClasses('MuiIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default iconClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"baseClassName\", \"className\", \"color\", \"component\", \"fontSize\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getIconUtilityClass } from './iconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(36)\n  }[ownerState.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: (theme.vars || theme).palette.primary.main,\n    secondary: (theme.vars || theme).palette.secondary.main,\n    info: (theme.vars || theme).palette.info.main,\n    success: (theme.vars || theme).palette.success.main,\n    warning: (theme.vars || theme).palette.warning.main,\n    action: (theme.vars || theme).palette.action.active,\n    error: (theme.vars || theme).palette.error.main,\n    disabled: (theme.vars || theme).palette.action.disabled,\n    inherit: undefined\n  }[ownerState.color]\n}));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n      baseClassName = 'material-icons',\n      className,\n      color = 'inherit',\n      component: Component = 'span',\n      fontSize = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, _extends({\n    as: Component,\n    className: clsx(baseClassName,\n    // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default Icon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n      align = 'inherit',\n      className,\n      component: componentProp,\n      padding: paddingProp,\n      scope: scopeProp,\n      size: sizeProp,\n      sortDirection,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: `capitalize(string)` expects a string argument.' : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","/**\n * WARNING: Don't import this directly. It's imported by the code generated by\n * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`\n * constructors to ensure the plugin works as expected. Supported patterns include:\n *   throw new Error('My message');\n *   throw new Error(`My message: ${foo}`);\n *   throw new Error(`My message: ${foo}` + 'another string');\n *   ...\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code, ...args) {\n  const url = new URL(`https://mui.com/production-error/?code=${code}`);\n  args.forEach(arg => url.searchParams.append('args[]', arg));\n  return `Minified MUI error #${code}; visit ${url} for the full message.`;\n}","/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from \"../ClassNameGenerator/index.js\";\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from \"../generateUtilityClass/index.js\";\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","export const gridDimensionsSelector = state => state.dimensions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from \"../useEnhancedEffect/index.js\";\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","'use client';\n\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\nimport useOnMount from \"../useOnMount/useOnMount.js\";\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = null;\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== null) {\n      clearTimeout(this.currentId);\n      this.currentId = null;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? reactId;\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value: Boolean(value)\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","/**\n * Get a list column definition\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = selectableIds;\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.push(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = [];\n      }\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      const addRow = rowId => {\n        selectionLookup[rowId] = rowId;\n      };\n      const removeRow = rowId => {\n        delete selectionLookup[rowId];\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const isFirstRender = React.useRef(true);\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    if (isFirstRender.current) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (filteredRowsLookup[id] !== true) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n    if (hasChanged || isNestedData && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (isNestedData) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n  }, []);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const virtualScrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const virtualScrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && virtualScrollbarHorizontalRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      virtualScrollbarHorizontalRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && virtualScrollbarVerticalRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      virtualScrollbarVerticalRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, virtualScrollbarHorizontalRef, virtualScrollbarVerticalRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import ownerDocument from \"../ownerDocument/index.js\";\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set(['__check__', '__reorder__', '__detail_panel_toggle__']);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  })\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"disabled\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { isHostComponent } from '@mui/base/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  var _slotProps$select;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = (_slotProps$select = slotProps == null ? void 0 : slotProps.select) != null ? _slotProps$select : SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !selectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, selectProps, {\n        classes: _extends({}, selectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        }),\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (error) {\n      if (error instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw error;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../constants/gridDetailPanelToggleField.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useThemeProps","createUseThemeProps","BadgeRoot","styled","name","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","concat","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","_ref3","theme","_theme$vars","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","variants","Object","keys","vars","palette","filter","key","_theme$vars2","_theme$vars3","main","contrastText","map","style","backgroundColor","RADIUS_DOT","_ref4","top","right","transform","transformOrigin","badgeClasses","_ref5","bottom","_ref6","left","_ref7","_ref8","_ref9","_ref10","_ref11","leavingScreen","React","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","anchorOriginProp","className","component","components","componentsProps","children","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slots","slotProps","showZero","variantProp","other","_objectWithoutPropertiesLoose","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","useBadge","undefined","_extends","classes","composeClasses","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","getCircularProgressUtilityClass","_templateObject","_templateObject2","_templateObject3","_templateObject4","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","CircularProgressRoot","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","size","thickness","value","circleStyle","rootStyle","circumference","Math","PI","toFixed","round","width","role","viewBox","cx","cy","r","fill","strokeWidth","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","WebkitTextSizeAdjust","colorScheme","mode","body","text","primary","body1","background","default","common","white","GlobalStyles","arguments","length","_theme$components","colorSchemeStyles","colorSchemes","entries","forEach","scheme","_scheme$palette","getColorSchemeSelector","replace","defaultStyles","fontWeightBold","margin","themeOverrides","MuiCssBaseline","styleOverrides","getIconUtilityClass","IconRoot","userSelect","overflow","textAlign","inherit","small","medium","large","secondary","info","success","warning","action","active","error","disabled","Icon","baseClassName","Component","muiName","ListItemTextRoot","listItemTextClasses","inset","multiline","dense","flex","marginTop","marginBottom","paddingLeft","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","ListContext","getListItemTextUtilityClass","type","Typography","getTableCellUtilityClass","TableCellRoot","align","stickyHeader","body2","borderBottom","TableCell","border","lighten","alpha","divider","darken","tableCellClasses","paddingCheckbox","componentProp","paddingProp","scope","scopeProp","sizeProp","sortDirection","table","TableContext","tablelvl2","Tablelvl2Context","isHeadCell","ariaSort","createSvgIcon","d","string","Error","code","url","URL","_len","args","Array","_key","arg","searchParams","append","_formatMuiErrorMessage","charAt","toUpperCase","slice","getUtilityClass","output","slotName","buffer","start","i","useForkRef","refs","every","instance","current","setRef","window","defaultGenerator","componentName","createClassNameGenerator","generate","configure","generator","reset","globalStateClasses","checked","completed","expanded","focused","focusVisible","open","readOnly","required","selected","globalStatePrefix","globalStateClass","ClassNameGenerator","result","getDataGridUtilityClass","gridClasses","is","fastObjectShallowCompare","a","b","aLength","bLength","_","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","useOnMount","fn","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","state","defaultCompare","objectShallowCompare","createRefs","equals","useGridSelector","didInit","setState","store","subscribe","newState","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","join","gridDimensionsSelector","dimensions","columnHeaderStyles","c","iconButtonContainer","visibility","menuIcon","separatorIconDragStyles","rx","x","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","_t$mixins$MuiDataGrid","_t$mixins$MuiDataGrid2","_t$mixins$MuiDataGrid3","_t$mixins$MuiDataGrid4","t","borderColor","radius","shape","containerBackground","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedHoverOpacity","selectedBackground","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","borderWidth","borderStyle","outline","minHeight","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","columnHeaderTitleContainerContent","whiteSpace","maxWidth","groupingCriteriaCell","WebkitTapHighlightColor","outlineOffset","focusOutlineWidth","opacity","hasScrollX","hasScrollY","scrollbarSize","shorter","gap","spacing","borderBottomWidth","borderBottomStyle","cursor","marginLeft","marginRight","columnHeaders","columnSeparatorOffset","touchAction","pointerEvents","shortest","filler","scrollbarFiller","breakInside","rowSkeleton","borderTop","textOverflow","borderTopColor","cellEmpty","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","virtualScrollerContent","cellOffsetLeft","alignSelf","groupingCriteriaCellToggle","pinnedRows","virtualScroller","overlay","gamma","f","o","decomposeColor","overlayColor","rgb","values","recomposeColor","removeOpacity","GridRootPropsContext","useGridRootProps","contextValue","NOT_FOUND","Symbol","assertIsFunction","func","errorMessage","TypeError","ensureIsArray","item","isArray","getDependencies","createSelectorArgs","dependencies","array","itemTypes","assertIsArrayOfFunctions","getPrototypeOf","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","cache","entry","get","put","getEntries","clear","createSingletonCache","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","resetResultsCount","Ref","WeakRef","constructor","deref","this","UNTERMINATED","TERMINATED","createCacheNode","s","v","p","weakMapMemoize","options","fnNode","lastResult","cacheNode","l","objectCache","WeakMap","objectNode","set","primitiveCache","Map","primitiveNode","terminatedNode","_lastResult$deref","_lastResult","_lastResult$deref2","lastResultValue","call","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","push","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","structuredSelector","_len3","_key4","reduce","composition","index","reselectCreateSelector","checkIsAPIRef","DEFAULT_INSTANCE_ID","id","e","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","GridRoot","handleRef","rootElementRef","showCellVerticalBorder","toolbar","mountedState","setMountedState","useEnhancedEffect","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","column","gridVisibleColumnFieldsSelector","visibleColumns","gridVisiblePinnedColumnDefinitionsSelector","pinnedColumns","isRtl","model","visibleColumnFields","visiblePinnedFields","invert","_pinnedColumns$left","_pinnedColumns$right","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","acc","gridHasColSpanSelector","some","colSpan","gridPreferencePanelStateSelector","preferencePanel","GridPreferencePanelsValue","GridApiContext","useGridApiContext","GridPreferencesPanel","_preferencePanelState","_rootProps$slotProps","_rootProps$slotProps2","preferencePanelState","panelContent","unstable_applyPipeProcessors","openedPanelValue","filters","panel","basePopper","panelId","labelId","GridHeader","fastMemo","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","event","details","_handlerRef$current","defaultMuiPrevented","subscribeEvent","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","Timeout","_defineProperty","currentId","delay","useTimeout","disposeEffect","resolveProps","defaultProps","prototype","hasOwnProperty","propName","defaultSlotProps","slotKey","slotPropName","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","inputRef","valueState","setValueState","handleChange","async","newValue","target","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","onChange","endAdornment","loadIcon","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","sorting","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","globalId","maybeReactUseId","useId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","GridFilterInputValue","_item$value","applyValue","focusElementRef","tabIndex","clearButton","InputProps","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","String","filterDebounceMs","newItem","fromInput","_item$value2","baseTextField","label","getLocaleText","placeholder","inputProps","InputLabelProps","shrink","isFunction","isObject","escapeRegExp","clamp","min","range","from","to","isDeepEqual","entriesA","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","toString","deepClone","obj","structuredClone","JSON","parse","stringify","_excluded2","GridFilterInputMultipleValue","helperText","TextFieldProps","itemValue","filterItemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","operator","filterOperators","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","filterItem","_filterItem$value","parser","ignoreDiacritics","newFilterItem","filterOperator","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","_filterModel$quickFil","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","_filterModel$quickFil2","_filterModel$quickFil3","Boolean","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","_isRowMatchingFilterI","_isRowMatchingQuickFi","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","filterRegex","matches","test","createEqualityFilterFn","sensitivity","usage","isEqual","compare","createEmptyFilterFn","isEmpty","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","InputComponent","requiresFilterValue","val","getGridStringOperators","renderEditCell","columnValue","getRowFormattedValue","parseNumericValue","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNaN","isNumber","toLocaleString","InputComponentProps","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","renderEditDateCell","throwIfNotDateObject","columnType","rowId","GRID_DATE_COL_DEF","gridDateFormatter","getRowId","toLocaleDateString","pastedValueParser","GRID_DATETIME_COL_DEF","gridDateTimeFormatter","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","_rawPinnedRows$bottom","_rawPinnedRows$bottom2","_rawPinnedRows$top$ma","_rawPinnedRows$top","rawPinnedRows","rowEntry","_rowEntry$model","_rowEntry$model2","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","_previousCache$update","_previousCache$update2","_previousCache$update3","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","getMinimalContentHeight","rowHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","htmlFor","baseCheckbox","BooleanOperatorContainer","GridFilterInputBoolean","_baseSelectProps$nati","_rootProps$slotProps3","labelProp","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","gridBooleanFormatter","valueAsBoolean","toLowerCase","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","MenuProps","otherBaseSelectProps","_inputRef$current","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","_resolvedColumn","_resolvedColumn2","_rootProps$slotProps4","resolvedColumn","currentValueOptions","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","GridMenuRoot","Popper","menu","modal","GridMenu","onExited","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","document","activeElement","HTMLElement","handleClickAway","contains","anchorEl","placement","TransitionProps","ClickAwayListener","onClickAway","mouseEvent","Grow","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useRtl","menuId","buttonId","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","handleButtonClick","onClick","onKeyDown","getNewIndex","direction","_options","indexMod","newIndex","preventDefault","stopPropagation","button","touchRippleRef","baseIconButton","showMenu","moreActionsIcon","MenuList","autoFocusItem","closeMenu","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","_headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","unwrappedGroupingModel","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","number","dateTime","boolean","singleSelect","custom","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","viewportOuterSize","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","_apiRef$current$getRo","_apiRef$current$getRo2","_apiRef$current","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getRootDimensions","getTotalHeaderHeight","_props$headerFilterHe","unstable_listView","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","viewportInnerSize","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","leftPinnedWidth","rightPinnedWidth","handleDragOver","useEventCallback","offset","clientX","getBoundingClientRect","scroll","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","onDragOver","noop","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnGroupHeaderSelector","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","gridSortColumnLookupSelector","res","sortItem","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","gridFilteredRowsLookupSelector","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","visibleSortedRows","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilterActiveItemsSelector","topLevelRowCount","columnLookup","_filterModel$items","_column$filterOperato","gridFilterActiveItemsLookupSelector","activeFilters","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","getVisibleRows","paginationMode","useGridVisibleRows","response","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","gridListColumnSelector","listViewColumn","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","isJSDOM","useGridVirtualScroller","listView","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","selectedRowsLookup","currentPage","gridRootRef","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","virtualScrollbarVerticalRef","scrollbarHorizontalRef","virtualScrollbarHorizontalRef","contentHeight","contentSize","hasColSpan","fnRef","ResizeObserver","frameID","observer","observe","cancelAnimationFrame","disconnect","useResizeObserver","resize","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","bufferForDirection","MINIMUM_COLUMN_WIDTH","focusedCell","rowIndex","columnIndex","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","ReactDOM","forceUpdateRenderContext","handleScroll","currentTarget","handleWheel","handleTouchMove","needsHorizontalScrollbar","scrollerStyle","overflowX","overflowY","flexBasis","currentPageTotalHeight","useRunOnce","condition","effect","didRun","initialRenderContext","getRows","_params$renderContext","_params$rows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","_currentPage$range","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","isNotVisible","tabbableCell","cellMode","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","offsetTop","focusedColumnIndex","_apiRef$current$getIn","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","platform","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","_lastColumn$computedW","_rootProps$unstable_l","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","_inputs$range","_inputs$range2","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","_columnPositions$rend","_columnPositions$pinn","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","GridOverlays","_rootProps$slots","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","_props$style","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","Memoized","rowsLength","minimumSize","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","_rowsMeta$positions$r","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","content","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","addEventListener","capture","removeEventListener","setProperty","Container","Scroller","scrollbarWidth","GridVirtualScroller","overlaysProps","useGridOverlays","visibleRowCount","noRows","loadingOverlay","TopContainer","GridHeaders","Overlays","Content","RenderZone","detailPanels","SpaceFiller","BottomContainer","GridFooterPlaceholder","hideFooter","footer","getGridRowGroupSelectableDescendants","groupId","sortedRowIds","groupNode","descendants","_rowTree$sortedRowIds","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","findRowsToSelect","selectedRow","autoSelectDescendants","autoSelectParents","addRow","filteredRows","selectedIdsLookup","selectedDescendants","add","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","parent","childId","findRowsToDeselect","deselectedRow","removeRow","allParents","getRowNodeParents","parents","descendant","GridContextProvider","Provider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","logger","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","Store","_value","listeners","getSnapshot","SYMBOL_API_PRIVATE","useGridApiInitialization","inputApiRef","_inputApiRef$current","_publicApiRef$current","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","api","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","useGridLoggerFactory","getLogger","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","context","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","_ref$current","added","setAdded","targetElement","wrapHandler","GridCellCheckboxForwardRef","_rootProps$rowSelecti","_rootProps$rowSelecti2","checkboxElement","rippleRef","element","getCellElement","_checkboxElement$curr","input","querySelector","handleKeyDown","isSelectable","checkboxPropsSelector","rowSelectionPropagation","rowSelectionLookup","isIndeterminate","isChecked","selectableDescendantsCount","selectedDescendantsCount","_rowTree$sortedRowIds2","indeterminateCheckboxAction","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","getColumnHeaderElement","handleSelectionChange","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","_cellParams$value","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","CSVHead","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isPasteShortcut","fromCharCode","keyCode","shiftKey","altKey","writeToClipboardPolyfill","data","span","createElement","textContent","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","isCopyShortcut","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","_state$pinnedColumns","mergeColumnsState","densityStateInitializer","_props$initialState$d","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","_options$getRowsToExp","_options$shouldAppend","_options$includeHeade","_options$includeColum","_options$escapeFormul","getRowsToExport","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","disableToolbarButton","ownerDocument","getDerivedPaginationModel","paginationState","paginationModelProp","_paginationModelProp$","_paginationModelProp$2","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","doc","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","_gridRootElement$quer","_gridRootElement$quer2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","_options$printOptions","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","_api$columnHeadersCon","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","_rowSpanHiddenCells$r","rowSpanHiddenCells","nextRowIndex","_rowSpanHiddenCells$n","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","Edit","getColumnIndexFn","rowIndexBefore","checkIfCanStartEditing","paginationStateInitializer","_props$paginationMode","_props$rowCount","_props$paginationMeta","_props$initialState3","paginationMeta","useGridPagination","useGridPaginationMeta","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","restoredPaginationMeta","stateToRestore","useGridPaginationModel","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","_context$stateToResto2","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","handlePaginationModelChange","_apiRef$current$virtu","useGridRowCount","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","preferencePanelStateInitializer","_props$initialState$p","gridEditRowsStateSelector","editRows","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","_editRowsState$id$fie","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","_rowModesModel$id","_copyOfPrevRowModesMo","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","rawValue","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","_getSelectionModelPro","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","_props$sortModel","scrollIntoView","containerSize","elementSize","elementOffset","elementEnd","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableColumnFilter","disableColumnReorder","disableColumnResize","disableColumnSelector","disableColumnSorting","disableDensitySelector","disableRowSelectionOnClick","filterMode","hideFooterPagination","hideFooterRowCount","hideFooterSelectedRowCount","keepColumnPositionIfDraggedOutside","keepNonExistentRowsSelected","pageSizeOptions","resizeThrottleMs","rowPositionsDebounceMs","rowSpacingType","showColumnVerticalBorder","sortingMode","throttleRowsMs","unstable_rowSpanning","EMPTY_SIZE","EMPTY_DIMENSIONS","groupHeaderHeight","rowWidth","headersTotalHeight","dimensionsStateInitializer","useGridDimensions","_props$columnGroupHea","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnGroupHeaderHeight","decimals","w","savedSize","setSavedSize","debouncedSetSavedSize","lastArgs","wait","later","throttled","throttle","previousSize","setDimensions","computedStyle","defaultView","getComputedStyle","newSize","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","_apiRef$current$updat","rootElement","pinnedRowsHeight","calculatePinnedRowsHeight","scrollDiv","offsetWidth","clientWidth","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPrivate","k","isFirstSizing","handleResize","onResize","globalThis","unobserve","rowsMetaStateInitializer","heights","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","cellProps","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","_getParents$depth","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","_unwrappedGroupingMod2","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","trackFinger","currentTouchId","changedTouches","touch","identifier","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","asyncCheck","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","_cell$getBoundingClie","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","header","_iconContainer$client","_menuContainer$client","columnHeaderTitle","iconContainer","menuContainer","paddingWidth","parseInt","paddingRight","scrollWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","_apiRef$current$rootE","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","pinnedPosition","updateProperty","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","_apiRef$current$colum","_elem$querySelectorAl","findGroupHeaderElementsFromField","_api$virtualScrollerR","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","side","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","_apiRef$current$rootE2","_userOptions$columns","userOptions","unstable_setColumnVirtualization","newColumns","totalWidth","total","_widthByField$column$","remainingWidth","widthPerColumn","updateColumns","_apiRef$current$colum2","passive","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","_colDef$rowSpanValueG","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","_hiddenCells$row$id","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","_state$filter$filterM","isFilteringPending","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","unstable_listColumn","getListColumnWidth","useDataGridComponent","useGridRowsPreProcessors","useGridRowSelection","_props$rowSelectionPr","_props$rowSelectionPr2","_props$rowSelectionPr15","_props$rowSelectionPr16","_props$rowSelectionPr29","_props$rowSelectionPr30","_props$rowSelectionPr32","runIfRowSelectionIsEnabled","applyAutoSelection","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","_props$rowSelectionPr3","_props$rowSelectionPr4","_props$rowSelectionPr5","_props$rowSelectionPr6","_props$rowSelectionPr7","_props$rowSelectionPr8","_props$rowSelectionPr9","_props$rowSelectionPr10","_props$rowSelectionPr11","_props$rowSelectionPr12","_props$rowSelectionPr13","_props$rowSelectionPr14","selectRows","selectableIds","_props$rowSelectionPr17","_props$rowSelectionPr18","_props$rowSelectionPr19","_props$rowSelectionPr20","selectionLookup","_props$rowSelectionPr21","_props$rowSelectionPr22","_props$rowSelectionPr23","_props$rowSelectionPr24","_props$rowSelectionPr25","_props$rowSelectionPr26","_props$rowSelectionPr27","_props$rowSelectionPr28","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","_props$rowSelectionPr31","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_event$target$closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","_props$initialState4","_props$slotProps2","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","_apiRef$current$updat2","_apiRef$current2","setColumnVisibility","isVisible","_columnVisibilityMode","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","columnReorderApi","_props$initialState$c","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$slotProps","ColumnsPanel","columnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","useGridRows","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","_idRowsLookup$id","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","_tree$childId","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","_props$rows","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRowSpanning","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","resetColSpan","columnSpanningPrivateApi","getCellColSpanInfo","_lookup$current$rowId","useGridColumnSpanning","useGridColumnGrouping","_unwrappedGroupingMod3","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","updateColumnGroupingState","_apiRef$current$getPi","_apiRef$current$getPi2","getPinnedColumns","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","_gridFocusCellSelecto","lastFocusedRowId","_nextRow$id","lastFocusedRowIndex","nextRow","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","hidePreferences","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortComparator","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","isHeightMetaValid","processHeightEntry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","_heightCache$get$cont","_heightCache$get","unstable_setLastMeasuredRowIndex","storeRowHeightMeasurement","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","_heightCache$get$auto","_heightCache$get2","useGridScroll","colRef","scrollCoordinates","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","getScrollPosition","showColumnMenu","hideColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setVirtualization","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","_CONTENT_WIDTH_RANGE_","Skeleton","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnHeaderSortIconRaw","icon","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","baseBadge","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","GridRowCountRoot","GridRowCount","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","pinnedRight","GridScrollbarFillerCell","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","_dimensions$viewportI","viewportHeight","skeletonRowsCount","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","_ref$current2","pinnedCells","_ref$current3","LOADING_VARIANTS","CircularProgress","LinearProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","getToolbarUtilityClass","ToolbarRoot","disableGutters","gutters","Toolbar","_slots$firstButton","_slots$lastButton","_slots$nextButton","_slots$previousButton","_slots$firstButtonIco","_slots$lastButtonIcon","_slots$nextButtonIcon","_slots$previousButton2","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","FirstButton","firstButton","IconButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","FirstPageIconDefault","LastButtonIcon","lastButtonIcon","LastPageIconDefault","NextButtonIcon","nextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","previousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","tablePaginationClasses","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","TablePagination","_slotProps$select","ActionsComponent","TablePaginationActions","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","maxHeight","estimated","GridPagination","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","wrapLabelDisplayedRows","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","_valueRef$current","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","baseButton","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","startAdornment","baseInputAdornment","quickFilterIcon","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagement","columnsManagementHeader","columnsManagementFooter","grey","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","elevation","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","VIRTUAL","EMPTY_CELL_PARAMS","GridCell","_column$getActions","_cellParams$formatted","_rootProps$cellSelect","_hiddenCells$rowId$fi","_hiddenCells$rowId","_spannedCells$rowId$f","_spannedCells$rowId","editCellState","styleProp","disableDragEvents","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","cellStyle","isLeftPinned","isRightPinned","focusableElement","elementToFocus","handleFocus","onFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","EmptyCell","GridRow","refProp","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","editRowsState","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","publishClick","rowReordering","heightEntry","rowStyle","rowClassNames","getRowClassName","getCell","indexRelativeToAllColumns","_cellColSpanInfo$cell","_cellColSpanInfo$cell2","_editRowsState$rowId$","_editRowsState$rowId","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","labelledby","GridColumnHeaderTitleRoot","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","clientHeight","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","_colDef$sortingOrder","_colDef$headerName","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onContextMenu","onBlur","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","columnHeaderFilterIconButton","counter","columnHeaderSortIcon","elementId","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","render","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","MemoizedGridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","GridColumnHeaderItem","getColumnGroupHeaders","_columnGroupsModel$fi","_columnGroupsModel$fi2","_columnGroupsModel$la","_columnGroupsModel$la2","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","_column$computedWidth","headerInfo","Left","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","autoFocus","ListItemIconRoot","alignItemsFlexStart","ListItemIcon","getListItemIconUtilityClass","GridColumnMenuHideItem","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","baseDivider","useGridColumnMenuSlots","otherProps","GridColumnMenu","GridNoResultsOverlay","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","openFilterButtonIcon","columnFilteredIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterClearIcon","columnMenuClearIcon","columnReorderIcon","MUIBadge","MUICheckbox","MUIDivider","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIMenuItem","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","GridSkeletonCell","toggleFilter","GridColumnHeaders","noResultsOverlay","noRowsOverlay","useProps","allProps","_props$forwardedProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","useDataGridProps","themedProps","overrides","computeSlots","injectDefaultProps","_themedProps$key","accessibleRowCount","pinnedRowsCount","ariaRowIndex","DataGridRaw","GridBody","propTypes","PropTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","location","propFullName","secret","getShim","ReactPropTypes","bigint","bool","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes"],"sourceRoot":""}