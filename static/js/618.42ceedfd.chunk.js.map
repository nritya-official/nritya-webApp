{"version":3,"file":"static/js/618.42ceedfd.chunk.js","mappings":"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","sources":["Components/CardSlider.js","Components/ImageUpload.js","Components/KycStepper.js","Components/Kyc.js","utils/validationUtils.js","Components/NStudioCard.js","Components/EditProfileModal.js","Screens/UserPage.js"],"sourcesContent":["import React from 'react';\nimport { Card as MuiCard } from '@mui/joy';\nimport { useState } from 'react';\nimport { Dialog, DialogContent, Button } from '@mui/material';\nimport CardCover from '@mui/joy/CardCover';\nimport ProductCard from './NStudioCard';\n\nconst CardSlider = ({ dataList, imgOnly = false }) => {\n  console.log(\"Debug from CardSlider\", imgOnly);\n  console.log(dataList);\n  const formattedDataList = Array.isArray(dataList) ? dataList : Object.values(dataList);\n  console.log(formattedDataList)\n\n  const [open, setOpen] = useState(false);\n  const [selectedEntity, setSelectedEntity] = useState(null);\n\n  const handleOpen = (url) => {\n    console.log(url)\n    setSelectedEntity(url);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedEntity(null);\n  };\n\n  const cardHoverStyle = {\n    transform: 'scale(1.01)', // Scale up slightly on hover\n  };\n\n  return (\n    <div className=\"horizontal-scroll-wrapper\">\n      {formattedDataList.map((entity, index) => (\n        imgOnly ? (\n          // Image-only case with anchor <a> no link just to make card UI look proper\n          <a key={index} onClick={() => handleOpen(entity)}>\n          <MuiCard\n            key={index}\n            style={{ marginRight: \"0.5rem\" }}\n            component=\"li\"\n            sx={{\n              height: 300,\n              width: 534,\n              '&:hover': {\n                ...cardHoverStyle,\n              },\n            }}\n          >\n            <CardCover>\n              <img\n                src={entity} // Use studio.iconUrl for the image source\n                loading=\"lazy\"\n                alt=\"Studio image\" // Use studioName for alt text\n              />\n            </CardCover>\n          </MuiCard>\n          </a>\n        ) : (\n\n          <a key={index} href={`#/studio/${entity.id}`}>\n            <ProductCard\n              key={entity.id}\n              data={entity}\n              img_src={entity.iconUrl}\n            />\n          </a>\n        )\n      ))}\n      <Dialog open={open} onClose={handleClose}>\n        {selectedEntity && (\n          <>\n            <DialogContent sx={{ padding: 0 }}>\n              <img\n                src={selectedEntity}\n                alt={\"Image\"}\n                style={{ maxWidth: '100%', height: 'auto' }}\n              />\n            </DialogContent>\n            <Button sx={{\n                          '&:hover': {\n                            backgroundColor: '#735EAB',\n                            color: 'white',\n                          }\n                        }} \n                        onClick={handleClose}>Close</Button>\n          </>\n        )}\n      </Dialog>\n    </div>\n\n  );\n};\n\nexport default CardSlider;\n","import React, { useState,useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport { ref, getDownloadURL, listAll } from 'firebase/storage';\nimport { storage } from '../config';\nimport { useSelector } from 'react-redux'; // Import useSelector and useDispatch\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { deleteAllImagesInFolder,deleteImages,uploadImages} from '../utils/firebaseUtils'\nimport { Card, CardContent, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { STORAGES } from \"../constants\";\n\n\nconst ImageUpload = ({entityId,storageFolder,title, maxImageCount=10, updateMode, disable }) => {\n  const showSnackbar = useSnackbar();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [newFiles, setNewFiles] = useState([]); // Track new files to be added\n  const [deletedFiles, setDeletedFiles] = useState([]); // Track deleted files\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n  //console.log(\"Received props=> entityId:\", entityId, \"|storageFolder:\", storageFolder);\n  console.log(\"Kyc enitity id \",entityId, disable)\n  const filesizes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  useEffect(() => {\n   // console.log(\"Fetching image for\",entityId)\n    if(entityId){\n      fetchStudioImages(entityId); // Fetch images when component mounts\n    }\n  }, [entityId]);\n\n  useEffect(() => {\n   // console.log(\"Selected files:\", selectedFiles);\n    if (maxImageCount && selectedFiles.length > maxImageCount) {\n      const truncatedFiles = selectedFiles.slice(0, maxImageCount);\n      alert(`Exceeded maxImageCount, keeping first ${maxImageCount} files.`);\n      setSelectedFiles(truncatedFiles);\n    }\n  }, [selectedFiles, maxImageCount]);\n  \n\n  const handleInputChange = (e) => {\n    // console.log(\"handleInputChange\")\n    const files = Array.from(e.target.files);\n    const updatedFiles = [];\n    // console.log(\"file array \",files.length)\n    files.forEach((file) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        updatedFiles.push({\n          id: shortid.generate(),\n          filename: file.name,\n          filetype: file.type,\n          fileimage: reader.result,\n          datetime: file.lastModifiedDate.toLocaleString(\"en-IN\"),\n          filesize: filesizes(file.size),\n          file: file, // Store the actual file object\n        });\n\n        if (updatedFiles.length === files.length) {\n          setSelectedFiles((prevFiles) => [...prevFiles, ...updatedFiles]);\n          setNewFiles(updatedFiles);\n          // console.log(\"New files in total\",setNewFiles.length)\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleDeleteSelectedFile = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this image?\")) {\n      const fileToDelete = selectedFiles.find((file) => file.id === id);\n      setDeletedFiles((prevDeletedFiles) => [...prevDeletedFiles, fileToDelete]);\n      setSelectedFiles((prevFiles) =>\n        prevFiles.filter((file) => file.id !== id)\n      );\n    }\n  };\n\n  const handleUploadSubmit = async () => {\n    if (!entityId) {\n      alert(\"No studio selected\");\n      return;\n    }\n\n    try {\n      if (maxImageCount === 1) {\n        // Delete all previous images in the folder\n        await deleteAllImagesInFolder(storageFolder, entityId);\n        await uploadImages(storageFolder,newFiles, entityId);\n      } else {\n        // Calculate images to delete and add\n        const { imagesToDelete, newImages } = calculateDelta(selectedFiles, uploadedFiles);\n\n        // Delete images if there are any\n        if (imagesToDelete.length > 0) {\n          await deleteImages(storageFolder, imagesToDelete, entityId);\n        }\n\n        // Upload new images if there are any\n        if (newImages.length > 0) {\n          await uploadImages(storageFolder, newImages, entityId);\n        }\n\n      }\n\n      // alert(\"Images Uploaded/Deleted\");\n      showSnackbar(\"Images Uploaded/Deleted\", \"success\");\n    } catch (error) {\n      console.error(\"Error uploading/deleting images:\", error);\n    }\n  };\n\n  // Function to calculate images to delete and new images to upload\n  const calculateDelta = (selectedFiles, uploadedFiles) => {\n    const selectedFileIds = selectedFiles.map(file => file.id);\n    const uploadedFileIds = uploadedFiles.map(file => file.id);\n\n    const imagesToDelete = uploadedFiles.filter(file => !selectedFileIds.includes(file.id));\n    const newImages = selectedFiles.filter(file => !uploadedFileIds.includes(file.id));\n\n    return { imagesToDelete, newImages };\n  };\n\n\n  const fetchStudioImages = async (entityId) => {\n    setSelectedFiles([]);\n    setNewFiles([]);\n    setDeletedFiles([]);\n    try {\n      const folderPath = `${storageFolder}/${entityId}`;\n      console.log(folderPath)\n      const folderRef = ref(storage, folderPath);\n      const fileList = await listAll(folderRef);\n\n      const files = await Promise.all(\n        fileList.items.map(async (fileRef) => {\n          const downloadURL = await getDownloadURL(fileRef);\n\n          return {\n            id: fileRef.name,\n            filename: fileRef.name,\n            fileURL: downloadURL,\n          };\n        })\n      );\n      // console.log('File fetching',files);\n      setUploadedFiles(files); // Update the uploadedFiles state with fetched data\n      setSelectedFiles(files);\n    } catch (error) {\n      console.error('Error fetching user images:', error);\n    }\n  };\n\n  return (\n    <div className=\"fileupload-view\" style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n      <div className=\"row justify-content-center m-0\" style={{ flex: '1',justifyContent: 'center' }}>\n        <div className=\"col-md-6\" style={{ flex: '1' ,justifyContent: 'center'}}>\n          <div className=\"card mt-5\">\n            <div className=\"card-body\" style={{ backgroundColor: isDarkModeOn ? '#333333' : 'white' }}>\n              <div className=\"kb-data-box\">\n                <div className=\"kb-modal-data-title\">\n                  <div className=\"kb-data-title\" style={{justifyContent:'center',flex: '1'}}>\n                    <h4>{title}</h4>\n                    <p>Max no of image(s):{maxImageCount} {storageFolder === STORAGES.STUDIOIMAGES && <p>Add at least 5 images</p>}</p>\n                  </div>\n                </div>\n                <form style={{  backgroundColor: isDarkModeOn ? '#333333' : 'white'}}>\n                  <div className=\"kb-file-upload\">\n                    <div className=\"file-upload-box\">\n                      <input\n                        type=\"file\"\n                        id=\"fileupload\"\n                        className=\"file-upload-input\"\n                        onChange={handleInputChange}\n                        multiple\n                      />\n\n                    </div>\n                  </div>\n                  <br></br>\n                  <div className=\"kb-attach-box mb-3\">\n                  <div className=\"row\">\n                    {entityId && selectedFiles.length > 0 ? (\n                      selectedFiles.map((file) => (\n                        \n                        <div key={file.id} className=\"col-6 col-md-3 mb-3\" style={{ position: 'relative' }}>\n                          \n                          <Card sx={{ maxWidth: 345 }}>\n                            {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                              <div style={{ position: 'relative' }}>\n                                <img\n                                  src={file.fileimage ? file.fileimage : file.fileURL}\n                                  alt={file.filename}\n                                  className=\"card-img-top\"\n                                  style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                                />\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  disabled={disable}\n                                  onClick={() => handleDeleteSelectedFile(file.id)}\n                                  style={{ position: 'absolute', top: 0, right: 0, backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                                >\n                                  <DeleteIcon style={{color:\"ff0000\"}}/>\n                                </IconButton>\n                              </div>\n                            ) : (\n                              <CardContent>\n                                <i className=\"far fa-file-alt\"></i>\n                              </CardContent>\n                            )}\n                          </Card>\n                        </div>\n                        \n                      ))\n                    ) : (\n                      <div className=\"col-12 text-center\">\n                        <p>No images selected</p>\n                      </div>\n                    )}\n                  </div>\n\n                  </div>\n\n                  \n                  <div className=\"kb-buttons-box\">\n                    <button\n                      type=\"button\"\n                      className=\"btn form-submit\"\n                      style={{ backgroundColor: isDarkModeOn ? '#892CDC' : 'black', color:'white'  }}\n                      onClick={handleUploadSubmit}\n                      disabled={disable}\n                    >\n                      Image Upload\n                    </button>\n                  </div>\n                </form>\n                {selectedFiles.length > 0 && (\n                  <div className=\"kb-attach-box\" hidden>\n                    <div className=\"row\">\n                    <hr />\n                    {selectedFiles.map((file) => (\n                      <div key={file.id} className=\"col-6 col-md-3 mb-3\">\n                      <div className=\"card\">\n                        {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                          <img\n                            src={file.fileimage}\n                            alt={file.filename}\n                            className=\"card-img-top\"\n                            style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                          />\n                        ) : (\n                          <div className=\"card-body\">\n                            <i className=\"far fa-file-alt\"></i>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Set default prop values\nImageUpload.defaultProps = {\n  maxImageCount: 5, // Default maximum image count\n  updateMode: false,\n  disable:false,\n};\n\nexport default ImageUpload;","import React, { useState, useEffect } from 'react';\nimport { Stepper, Step, StepLabel, Typography, Paper, ThemeProvider, createTheme } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { styled } from '@mui/material/styles';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport { readDocument } from '../utils/firebaseUtils';\nimport { STATUSES, COLLECTIONS } from '../constants';\nimport './KycStepper.css';\n\nconst QontoConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      borderColor: 'green',\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      borderColor: 'green',\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    borderColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n}));\n\nconst stages = [STATUSES.SUBMITTED, STATUSES.UNDER_REVIEW, STATUSES.REVIEWED, STATUSES.VERIFIED];\nconst map = {\n  [STATUSES.SUBMITTED]: 0,\n  [STATUSES.UNDER_REVIEW]: 1,\n  [STATUSES.REVIEWED]: 2,\n  [STATUSES.VERIFIED]: 3,\n  [STATUSES.VERIFICATION_FAILED]: 3\n};\n\nconst KycStepper = ({ kycId, status }) => {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [kycData, setKycData] = useState({});\n\n  console.log(status)\n\n  const theme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? 'dark' : 'light',\n      primary: {\n        main: isDarkModeOn ? '#90caf9' : '#1976d2',\n      },\n    },\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await readDocument(COLLECTIONS.USER_KYC, kycId);\n        setKycData(data);\n      } catch (error) {\n        console.error(`Error fetching KYC data for KYC ID ${kycId}:`, error);\n      }\n    };\n    fetchData();\n  }, [kycId]);\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper sx={{ textAlign: 'center', marginBottom: '1rem' }} elevation={2}>\n        <Typography variant=\"h5\" component=\"p\">Application Status: {status}</Typography>\n        <br/>\n        <Stepper activeStep={map[status]} alternativeLabel connector={<QontoConnector />}>\n          {stages.map((stage, index) => (\n            <Step key={index}>\n              <StepLabel error={stage === STATUSES.VERIFIED && status === STATUSES.VERIFICATION_FAILED}>\n                {stage === STATUSES.VERIFIED && status === STATUSES.VERIFICATION_FAILED ? 'Failed Verification' : stage}\n              </StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <br/>\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default KycStepper;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { saveDocument, updateDocumentFields, readDocument } from '../utils/firebaseUtils.js';\nimport { STATUSES, COLLECTIONS, STORAGES } from '../constants.js';\nimport KycStepper from './KycStepper.js';\nimport CryptoJS from 'crypto-js';\nimport { validateField } from '../utils/validationUtils';\nimport ImageUpload from './ImageUpload.js';\n\nconst names_map = new Map([\n  [\"first_name\" , \"First Name\"],\n  [\"middle_last_name\" , \"Middle & Last Name\"],\n  [\"phone_number\" , \"Phone Number\"],\n  [\"street_address\" , \"Street Address\"],\n  [\"city\" , \"City\"],\n  [\"state_province\" , \"State\"],\n  [\"state\" , \"State\"],\n  [\"zip_pin_code\" , \"PIN Code/ZIP\"],\n  [\"aadhar\" , \"Aadhar Number\"],\n  [\"gstin\" , \"GST Number\"],\n  [\"comments\" , \"Remark(s)\"]\n  ])\n\nfunction Kyc() {\n  const [formData, setFormData] = useState({\n    first_name: '',\n    middle_last_name: '',\n    phone_number: '',\n    street_address: '',\n    city: '',\n    state_province: '',\n    zip_pin_code: '',\n    country: 'India',\n    aadhar: '',\n    gstin: '',\n    comments : '',\n    status: STATUSES.SUBMITTED,\n    tncAgreed: false,\n    hash: '',\n  });\n  const [kycData, setKycData] = useState(null);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [errors, setErrors] = useState({});\n  const user_id = JSON.parse(localStorage.getItem('userInfo')).UserId;\n  const kycId = `${user_id}_Kyc`;\n\n  const calculateHash = (data) => {\n    const filteredData = Object.keys(data).filter(key => key !== 'hash' && key !== 'status');\n    const sortedData = filteredData.sort().map(key => `${key}:${data[key]}`).join('|');\n  // Calculate hash using SHA-256\n    return CryptoJS.SHA256(sortedData).toString();\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleTnCAgreement = (e) => {\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      tncAgreed: e.target.checked,\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n\n      const formFields = Object.keys(formData).filter(\n          (key) => !['hash', 'status', 'country', 'comments', 'UserId'].includes(key)\n      );\n\n      let isValid = true;\n      let errorMessages = [];\n      let errorNum = 0;\n\n      formFields.forEach((field) => {\n          const error = validateField(field, formData[field]);\n          if (error) {\n              isValid = false;\n              errorNum = errorNum + 1;\n              errorMessages.push(`${errorNum}: ${error}`);\n              setErrors((prevErrors) => ({\n                  ...prevErrors,\n                  [field]: error,\n              }));\n          }\n      });\n\n      // If there are errors, prompt the user and stop the submission\n      if (!isValid) {\n          alert(`Please correct the following errors before submitting:\\n\\n${errorMessages.join('\\n')}`);\n          return;\n      }\n\n\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      const newHash = calculateHash(formData);\n\n      if (kycDoc) {\n        if (kycDoc.hash !== newHash) {\n          await updateDocumentFields(COLLECTIONS.USER_KYC, kycId, {\n            ...formData,\n            hash: newHash,\n          });\n          alert(\"KYC updated successfully\");\n        } else {\n          alert(\"No changes detected\");\n        }\n      } else {\n        // If no KYC record exists, create a new one\n        await saveDocument(COLLECTIONS.USER_KYC, kycId, {\n          ...formData,\n          UserId: user_id,\n          hash: newHash,\n        });\n        alert(\"KYC added successfully\");\n      }\n\n      await updateDocumentFields(COLLECTIONS.USER, user_id, {\n        KycIdList: { [kycId]: formData.status },\n      });\n\n      event.target.reset();\n    } catch (error) {\n      console.error(\"Error processing KYC: \", error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchKycData = async () => {\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      if (kycDoc) {\n        setKycData(kycDoc);\n        setFormData({ ...kycDoc, status: kycDoc.status || STATUSES.SUBMITTED });\n      } else {\n        setKycData(null);\n      }\n    };\n\n    fetchKycData();\n  }, [kycId]);\n\n  return (\n    <div style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n      <Container style={{ margin: 'auto', border: isDarkModeOn ? '1px solid white' : '1px solid black', borderRadius: '5px', padding: '20px' }}>\n        <Form onSubmit={handleSubmit}>\n          <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform: 'capitalize' }}>Verify yourself</h1>\n          <div className=\"row\">\n            { Object.keys(formData).map((key) => (\n              key !== 'status' && key !== 'hash' && key !== 'country'&& key !== 'tncAgreed' &&key !== 'comments' && key !== 'UserId' && (\n                <div className=\"col-md-6 col-lg-4\" key={key}>\n                  <Form.Group controlId={`formBasic${key}`}>\n                    <Form.Label>{names_map.get(String(key))}</Form.Label>\n                    <Form.Control\n                      type={key === 'age' || key === 'phone_number' ? 'number' : 'text'}\n                      placeholder={`Enter ${names_map.get(String(key))}`}\n                      name={key}\n                      value={formData[key]}\n                      onChange={handleChange}\n                      required\n                      style={{ backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5', color: isDarkModeOn ? 'white' : 'black' }}\n                    />\n                  </Form.Group>\n                </div>\n              )\n            ))}\n          </div>\n          <ImageUpload disable={formData.status === \"Verified\"} entityId={user_id} title={\"Upload Documents\"}  storageFolder={STORAGES.CREATORS_KYC_DOCUMENTS} ></ImageUpload>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"tnc-switch\" checked={formData.tncAgreed}\n            onChange={handleTnCAgreement}/>\n            <label class=\"form-check-label\" for=\"exampleCheck1\">\n            <span>\n                I agree to the <a href=\"#/npolicies/1\" style={{ color: isDarkModeOn ? 'lightblue' : 'blue' }}>Terms and Conditions. Click to read.</a>\n              </span>\n            </label>\n          </div>\n          <br/>\n          {formData.comments && (\n            <div className=\"col-md-12 col-lg-12\">\n              <br/>\n              <Form.Group controlId=\"formBasicComments\">\n                <Form.Label>{names_map.get('comments')}</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"comments\"\n                  value={formData.comments}\n                  readOnly\n                  style={{\n                    backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                    color: isDarkModeOn ? 'white' : 'black'\n                  }}\n                />\n              </Form.Group>\n            </div>\n          )}\n          <Button variant=\"success\" type=\"submit\" disabled={formData.status === \"Verified\" || !formData.tncAgreed}          >\n            Submit\n          </Button>\n\n        </Form>\n        <br/>\n        <>\n          {formData.hash && <KycStepper kycId={kycId} status={formData.status} />}\n        </>\n      </Container>\n      <br />\n    </div>\n  );\n}\n\nexport default Kyc;\n","export const validateField = (name, value) => {\n  let error = '';\n  console.log(name, value)\n  switch (name) {\n      case 'phone_number':\n          if (!/^\\d{10}$/.test(value)) {\n              error = 'Phone number must be exactly 10 digits.';\n          }\n          break;\n      case 'zip_pin_code':\n          if (!/^\\d{6}$/.test(value)) {\n              error = 'ZIP/Pin code must be exactly 6 digits.';\n          }\n          break;\n      case 'aadhar':\n          if (!/^\\d{12}$/.test(value)) {\n              error = 'Aadhar number must be exactly 12 digits.';\n          }\n          break;\n      case 'gstin':\n          if (!/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}[Z]{1}[0-9A-Z]{1}$/.test(value)) {\n              error = 'GSTIN must be a valid format (e.g., 22AAAAA0000A1Z5).';\n          }\n          break;\n      default:\n          break;\n  }\n  console.log(error)\n\n  return error;\n};\n","\nimport React from 'react';\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport Chip from '@mui/joy/Chip';\nimport Link from '@mui/joy/Link';\nimport Typography from '@mui/joy/Typography';\nimport { Stack } from '@mui/material';\nimport { useSelector } from 'react-redux'; // Import useSelector\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { danceStylesColorChips } from '../constants';\nimport IconButton from '@mui/joy/IconButton';\nimport Favorite from '@mui/icons-material/Favorite';\n\n\nexport default function NStudioCard({img_src,data}) {\n    const isDarkModeOn = useSelector(selectDarkModeStatus);\n    \n    const studioId = data.id?data.id:data.studioId;\n\n    const cardStyle = {\n      backgroundColor: isDarkModeOn ? '#444' : 'white',\n      padding: '0px',\n      color: isDarkModeOn ? 'white' : 'black',\n      marginRight: \"10px\",\n      width: 320,\n      maxWidth: \"100%\",\n      boxShadow: 'lg',\n      transition: 'opacity 0.3s ease',\n    };\n  \n    const cardHoverStyle = {\n      transform: 'scale(1.01)',\n    };\n  \n  return (\n    <Card variant=\"solid\" sx={{\n      ...cardStyle,\n      '&:hover': cardHoverStyle,\n    }}>\n      \n        <AspectRatio ratio=\"1.78\" style={{ position: 'relative'}}>\n          <img\n            src={data && data.iconUrl ? data.iconUrl :\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: '100%', height: 'auto', overflow: 'hidden' }}\n            \n          />\n          <Stack direction=\"row\" spacing={2} style={{ position: 'absolute', bottom: 0, left: 0, padding: '1px' }}>\n        {data && data.danceStyles && typeof data.danceStyles === 'string' ? (data.danceStyles.split(\",\").slice(0, 3).map((form, index) => (\n        <Chip\n            key={index}\n            color={index % 2 === 0 ? \"danger\" : \"success\"}  \n            sx={{ marginBottom: \"10px\", fontSize: '0.8rem',  \n                    bgcolor: danceStylesColorChips[index].backgroundColor,\n                    color: danceStylesColorChips[index].color, \n            }}\n        >\n            {form.trim()}\n        </Chip>\n        ))):(\n            <Chip\n            key={10}\n            color={10 % 2 === 0 ? \"danger\" : \"success\"} \n            style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n        >\n            {\"No danceforms\"}\n        </Chip>\n        )}\n\n        </Stack>\n\n        </AspectRatio>\n      <CardContent style={{padding:'10px'}}>\n        <Link\n          href={`#/studio/${studioId}`}\n          fontWeight=\"md\"\n          color=\"neutral\"\n          textColor=\"text.primary\"\n          underline='none'\n          overlay\n          style={{color: isDarkModeOn?'white':'black',extDecoder:\"one\"}}\n        >\n          {data && data.studioName?data.studioName:\"    \"}\n        </Link>\n        <Typography style={{color: isDarkModeOn?'white':'black'}} level=\"body-xs\">{data.street?data.street:\".  \"}</Typography>\n        <IconButton\n          hidden\n          aria-label=\"Like minimal photography\"\n          size=\"md\"\n          variant=\"solid\"\n          color=\"danger\"\n          sx={{\n            position: 'absolute',\n            zIndex: 2,\n            borderRadius: '50%',\n            right: '1rem',\n            bottom: '2rem',\n            transform: 'translateY(50%)',\n          }}\n        >\n          <Favorite />\n        </IconButton>\n        <Typography style={{color: isDarkModeOn?'white':'black'}}>⭐ {data && data.avgRating? data.avgRating.toFixed(1):\" Not rated yet\"}</Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Modal, Box, Button, TextField, Typography, FormControl, InputLabel, Select, MenuItem, Autocomplete, Alert, Snackbar } from '@mui/material';\nimport danceStyles from '../danceStyles.json';\nimport { COLLECTIONS } from '../constants';\nimport { useAuth } from '../context/AuthContext';\nimport { saveDocument, handleSavePostOTPSuccess } from '../utils/firebaseUtils';\nimport axios from \"axios\";\nimport qs from 'qs';\n\nconst PROD_BASE_URL = \"https://nrityaserver-2b241e0a97e5.herokuapp.com\"\nconst LOCAL_BASE_URL = \"http://127.0.0.1:8000\"\nconst BASE_URL = PROD_BASE_URL\n\nconst EditProfileModal = ({ open, onClose, userProfileInfo, setUserProfileInfo }) => {\n  const { currentUser } = useAuth();\n  const danceStylesOptions = danceStyles.danceStyles;\n  const [userDanceStyles, setUserDanceStyles] = useState([]);\n  const [userPhoneNumber, setUserPhoneNumber] = useState();\n  const [isOTPModalOpen, setIsOTPModalOpen] = useState(false); // To handle OTP modal\n  const [otp, setOtp] = useState('');\n  const [isPhoneVerified, setIsPhoneVerified] = useState(userProfileInfo?.isPhoneNumberVerified || false);\n  const [otpSent, setOtpSent] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('info');\n\n  useEffect(() => {\n    if (userProfileInfo && userProfileInfo.DanceStyles && userProfileInfo.DanceStyles !== \"\") {\n      setUserDanceStyles(userProfileInfo.DanceStyles);\n    }\n    if (userProfileInfo && userProfileInfo.PhoneNumber && userProfileInfo.setUserPhoneNumber !== \"\") {\n      setUserPhoneNumber(userProfileInfo.PhoneNumber);\n    }\n  }, [userProfileInfo]);\n\n  const handleChange = (e) => {\n    setUserProfileInfo({ ...userProfileInfo, [e.target.name]: e.target.value });\n  };\n\n  const handleDanceStylesChange = (event, value) => {\n    setUserDanceStyles(value);\n  };\n\n\n  const handleSave = async () => {\n    userProfileInfo.DanceStyles = userDanceStyles;\n    const data = await saveDocument(COLLECTIONS.USER, currentUser.uid, userProfileInfo);\n    if (data) {\n      setSnackbarMessage(\"Profile Updated\");\n      setSnackbarSeverity(\"success\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleSavePostOTP = async () => {\n    const docRef = handleSavePostOTPSuccess(COLLECTIONS.USER, currentUser.uid,userProfileInfo.PhoneNumber);\n  };\n\n  const handleVerifyPhoneNumber = async () => {\n    try {\n      //console.log(userProfileInfo.PhoneNumber);\n  \n      const response = await axios.post(\n        `${BASE_URL}/djSms/request_otp/`,\n        qs.stringify({\n          phone_number: userProfileInfo.PhoneNumber, // use qs to stringify the data\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n  \n      if (response.status === 200) {\n        setOtpSent(true);\n        setIsOTPModalOpen(true); // Open OTP modal\n        setSnackbarMessage(\"OTP sent to your phone number.\");\n        setSnackbarSeverity(\"info\");\n        setSnackbarOpen(true);\n      } else {\n        throw new Error('Failed to send OTP.');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setSnackbarMessage('Error sending OTP, please try again.');\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n  \n\n  const handleOtpSubmit = async () => {\n    //console.log(userProfileInfo.PhoneNumber,otp)\n    try {\n      const response = await axios.post(\n        `${BASE_URL}/djSms/confirm_otp/`, \n        qs.stringify({\n          \"phone_number\": userProfileInfo.PhoneNumber,\n          \"otp\": otp,\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n      console.log(response)\n      if (response && response.data && response.data.status === \"success\") {\n        setIsPhoneVerified(true);\n        setUserProfileInfo({ ...userProfileInfo, isPhoneNumberVerified: true });\n        setIsOTPModalOpen(false);\n        handleSavePostOTP()\n        setSnackbarMessage('Phone number verified successfully.');\n        setSnackbarSeverity(\"success\");\n        setSnackbarOpen(true);\n      } else {\n        setSnackbarMessage(response.message || 'Invalid OTP.');\n        setSnackbarSeverity(\"error\");\n        setSnackbarOpen(true);\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setSnackbarMessage('Error verifying OTP, please try again.');\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n\n  return (\n    <>\n      <Modal open={open} onClose={onClose} style={{ overflow: 'scroll' }}>\n        <Box sx={{ p: 4, backgroundColor: 'white', margin: 'auto', mt: 5, maxWidth: 400, borderRadius: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Edit Profile\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            name=\"Name\"\n            value={userProfileInfo.Name}\n            onChange={handleChange}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            label=\"Age\"\n            name=\"Age\"\n            type=\"number\"\n            value={userProfileInfo.Age}\n            onChange={handleChange}\n            margin=\"normal\"\n          />\n\n          <TextField\n            fullWidth\n            label=\"Phone Number\"\n            name=\"PhoneNumber\"\n            type=\"number\"\n            value={userProfileInfo.PhoneNumber}\n            onChange={handleChange}\n            margin=\"normal\"\n            InputProps={{\n              readOnly: isPhoneVerified || userProfileInfo.isPhoneNumberVerified, // If verified, make it read-only\n            }}\n          />\n          {isPhoneVerified || userProfileInfo.isPhoneNumberVerified? (\n            <Typography color=\"green\">Phone Number Verified</Typography>\n          ) : (\n            <Button variant=\"outlined\" onClick={handleVerifyPhoneNumber}>\n              {otpSent ? \"Resend OTP\" : \"Verify Phone Number\"}\n            </Button>\n          )}\n\n          <Autocomplete\n            multiple\n            id=\"tags-standard\"\n            options={danceStylesOptions}\n            value={userDanceStyles}\n            onChange={handleDanceStylesChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                placeholder=\"Select Dance Styles\"\n                style={{ backgroundColor: 'white', color: 'black' }}\n              />\n            )}\n          />\n\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Gender</InputLabel>\n            <Select\n              name=\"Gender\"\n              value={userProfileInfo.Gender}\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Male\">Male</MenuItem>\n              <MenuItem value=\"Female\">Female</MenuItem>\n              <MenuItem value=\"Other\">Other</MenuItem>\n            </Select>\n          </FormControl>\n\n          <TextField\n            fullWidth\n            label=\"Bio\"\n            name=\"Bio\"\n            value={userProfileInfo.Bio}\n            onChange={handleChange}\n            multiline\n            rows={4}\n            margin=\"normal\"\n          />\n          <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"outlined\" onClick={onClose}>Cancel</Button>\n            <Button variant=\"contained\" onClick={handleSave}>Save</Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      {/* OTP Verification Modal */}\n      <Modal open={isOTPModalOpen} onClose={() => setIsOTPModalOpen(false)}>\n        <Box sx={{ p: 4, backgroundColor: 'white', margin: 'auto', mt: 5, maxWidth: 300, borderRadius: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Enter OTP\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"4-Digit OTP\"\n            value={otp}\n            onChange={(e) => setOtp(e.target.value)}\n            margin=\"normal\"\n          />\n          <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"outlined\" onClick={() => setIsOTPModalOpen(false)}>Cancel</Button>\n            <Button variant=\"contained\" onClick={handleOtpSubmit}>Submit OTP</Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      <Snackbar open={snackbarOpen} autoHideDuration={600}  anchorOrigin={ {vertical:'top', horizontal:'center'} } onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default EditProfileModal;\n","import { useState, useEffect } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Button as MUIButton } from '@mui/joy';\nimport { COLLECTIONS } from '../constants';\nimport { useSelector } from 'react-redux'; // Import useSelector and useDispatch\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { useAuth } from '../context/AuthContext';\nimport { readDocument } from '../utils/firebaseUtils';\nimport './UserPage.css';\nimport Kyc from '../Components/Kyc';\nimport {Card as MUICard,CardHeader,Avatar, CardContent, Typography, Tooltip} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport EditProfileModal from '../Components/EditProfileModal';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  doc,\n  getDoc,\n} from \"firebase/firestore\";\nimport {\n  faClock,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CardSlider from \"../Components/CardSlider\";\nimport { db } from \"../config\";\n\n\nfunction UserPage() {\n\n  const [isCreator, setIsCreator] = useState(false);\n  const [userProfileInfo,setUserProfileInfo] = useState(\n    {\n      Name: '',\n      Age: '',\n      DanceStyles: '',\n      Gender: '',\n      Bio: '',\n    }\n  );\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n\n  const { currentUser } = useAuth();\n  console.log(\"currentUser\",currentUser)\n  const cardData = [\n    ['Transactions', 'All', '#/transactions'],\n    ['My Bookings', 'All', '#/myBookings'],\n    ['Instructors', 'Creator', '#/modifyInstructors'],\n    ['Studios', 'Creator', '#/modifyStudios'],\n    ['DashBoard', 'Creator', '#/creatorDashboard']\n  ];\n  const [open, setOpen] = useState(false);\n  const [recentlyWatchedStudios, setRecentlyWatchedStudios] = useState([]);\n\n\n  const fetchRecentlyWatchedStudios = async (userId) => {\n    try {\n      const userRef = doc(db, COLLECTIONS.USER, userId);\n      const userDoc = await getDoc(userRef);\n      const recentlyWatchedMap = userDoc.exists()\n        ? userDoc.data().recentlyWatched\n        : {};\n\n      const studioIds = Object.values(recentlyWatchedMap);\n      //console.log(\"got\",studioIds)\n      const studioDataPromises = studioIds.map(async (studioId) => {\n        //console.log(studioId)\n        if (!studioId) {\n          console.warn(\"Invalid studioId:\", studioId);\n          return null;\n        }\n        console.log(\"studioId\", studioId);\n        const studioRef = doc(db, COLLECTIONS.STUDIO, studioId);\n        const studioDoc = await getDoc(studioRef);\n        if (studioDoc.exists()) {\n          //console.log(studioDoc.data())\n          return { id: studioId, ...studioDoc.data() };\n        } else {\n          console.warn(`Studio document not found for ID: ${studioId}`);\n          return null;\n        }\n      });\n\n      const studioData = await Promise.all(studioDataPromises);\n      const validStudioData = studioData.filter((studio) => studio !== null);\n\n      setRecentlyWatchedStudios(validStudioData);\n    } catch (error) {\n      console.error(\"Error fetching recently watched studios:\", error);\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // Sort the array by the card name\n  cardData.sort((a, b) => a[0].localeCompare(b[0]));\n \n  useEffect(() => {\n  \n    if (currentUser && currentUser.uid) {\n      \n        fetchRecentlyWatchedStudios(currentUser.uid);\n      \n    }\n    const getCreatorMode = async () => {\n      try{\n      const userData = await readDocument(COLLECTIONS.USER, currentUser.uid);\n      if (userData) {\n          setUserProfileInfo(\n            {\n              Name: userData.Name || '',\n              Age: userData.Age || '',\n              DanceStyles: userData.DanceStyles || '',\n              Gender: userData.Gender || '',\n              Bio: userData.Bio || '',\n              PhoneNumber : userData.PhoneNumber || '',\n              isPhoneNumberVerified : userData.isPhoneNumberVerified || false,\n            }\n          )\n          setIsCreator(userData.CreatorMode)\n      } else {\n        console.log(\"User not found but workshop created... error\");\n      }\n      }catch(error){\n        console.log(\" error\");\n      }\n    }\n  \n    getCreatorMode();\n  }, [isCreator]); // Run once on mount\n\n  const cardStyle = {\n    background: isDarkModeOn ? 'black' : 'white',\n    color: isDarkModeOn ? 'white' : 'black',\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"10px\",\n    cursor: 'pointer' ,\n  };\n\n  return (\n    <div >\n      <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform:'capitalize' }}>Profile</h1>\n      <MUICard sx={{ maxWidth: 400,background: isDarkModeOn ? 'black' : 'white',color: isDarkModeOn ? 'white' : 'black'}}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt={\"Picture\"}\n              src={currentUser.photoURL}\n              sx={{ width: 40, height: 40 }}\n            />\n          }\n          title={\n            <Typography variant=\"h6\" component=\"div\" sx={{ display: 'flex',color: isDarkModeOn ? 'white' : 'black', alignItems: 'center' }}>\n              {currentUser.displayName}\n              {isCreator && (\n                 <Tooltip title=\"You are a verified user.\" arrow>\n                 <CheckCircleIcon sx={{ color: 'green', marginLeft: 0.5, fontSize: 20 }} />\n               </Tooltip>\n              )}\n            </Typography>\n          }\n          subheader={\n            <>\n              <Typography variant=\"body2\" component=\"div\" sx={{ color: isDarkModeOn ? 'white' : 'black' }}>\n                {[currentUser.email, userProfileInfo.Age]\n                  .filter(Boolean)\n                  .join(' || ')}\n              </Typography>\n              {userProfileInfo.DanceStyles && (\n                <Typography variant=\"body2\" component=\"div\" sx={{ mt: 1, color: isDarkModeOn ? 'white' : 'black' }}>\n                  {userProfileInfo.DanceStyles}\n                </Typography>\n              )}\n              {userProfileInfo.Bio && (\n                <Typography variant=\"body2\" component=\"div\" sx={{ mt: 1, color: isDarkModeOn ? 'white' : 'black' }}>\n                  {userProfileInfo.Bio}\n                </Typography>\n              )}\n            </>\n          }\n      \n          \n          subheaderTypographyProps={{\n            sx: {\n              color: isDarkModeOn ? 'gray' : 'darkgray'\n            }\n          }}\n        />\n        <MUIButton sx={{ ml: 2 }} variant=\"outlined\" onClick={handleOpen}>\n          Edit Profile\n        </MUIButton>\n        <EditProfileModal open={open} onClose={handleClose} userProfileInfo={userProfileInfo} setUserProfileInfo={setUserProfileInfo} />\n        <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\" style={{color: isDarkModeOn ? 'white' : 'black'}}>\n          {isCreator ? \"List your studios now!!\" : \"Welcome to the Nritya! \\n Verify your profile to list your studio.\"}\n        </Typography>\n      </CardContent>\n      </MUICard>\n      <br/>\n      <Row>\n      {cardData.map(([name, type, link]) => {\n        if (type === 'Creator' && !isCreator) return null;\n\n        return (\n          <Col\n            key={name}\n            xs={12}\n            sm={6}\n            md={6}\n            lg={3}\n            xl={3}\n            className=\"mb-4\"\n          >\n            <a href={link} >\n              <Card style={cardStyle}>\n                <Card.Body>\n                  <Card.Title>{name}</Card.Title>\n                </Card.Body>\n              </Card>\n            </a>\n          </Col>\n        );\n      })}\n    </Row>\n    <Kyc/>\n    <Row>\n          {recentlyWatchedStudios.length > 0 && (\n            <h4 style={{ color: isDarkModeOn ? \"white\" : \"black\" }}>\n              {\" \"}\n              <FontAwesomeIcon icon={faClock} size=\"1x\" /> Recently Viewed\n            </h4>\n          )}\n          {recentlyWatchedStudios.length > 0 ? (\n            <CardSlider dataList={recentlyWatchedStudios} imgOnly={false} />\n          ) : (\n            \"\"\n          )}\n        </Row>\n    </div>\n  );\n}\n\nexport default UserPage\n\nconst formatDateTime = (timestamp) => {\n  const options = {\n    timeZone: 'Asia/Kolkata', // Set the time zone to IST\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n  };\n\n  return new Date(timestamp).toLocaleString('en-IN', options);\n};\n\n"],"names":["_ref","dataList","imgOnly","console","log","formattedDataList","Array","isArray","Object","values","open","setOpen","useState","selectedEntity","setSelectedEntity","handleClose","cardHoverStyle","transform","_jsxs","className","children","map","entity","index","_jsx","onClick","handleOpen","url","MuiCard","style","marginRight","component","sx","height","width","CardCover","src","loading","alt","href","id","ProductCard","data","img_src","iconUrl","Dialog","onClose","_Fragment","DialogContent","padding","maxWidth","Button","backgroundColor","color","ImageUpload","entityId","storageFolder","title","maxImageCount","updateMode","disable","showSnackbar","useSnackbar","selectedFiles","setSelectedFiles","uploadedFiles","setUploadedFiles","newFiles","setNewFiles","deletedFiles","setDeletedFiles","isDarkModeOn","useSelector","selectDarkModeStatus","filesizes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","useEffect","fetchStudioImages","truncatedFiles","slice","alert","calculateDelta","selectedFileIds","file","uploadedFileIds","imagesToDelete","filter","includes","newImages","async","folderPath","folderRef","ref","storage","fileList","listAll","files","Promise","all","items","downloadURL","getDownloadURL","fileRef","name","filename","fileURL","error","display","justifyContent","flex","STORAGES","STUDIOIMAGES","type","onChange","e","from","target","updatedFiles","forEach","reader","FileReader","onloadend","push","shortid","filetype","fileimage","result","datetime","lastModifiedDate","toLocaleString","filesize","size","prevFiles","readAsDataURL","multiple","position","Card","match","maxHeight","objectFit","IconButton","disabled","window","confirm","fileToDelete","find","prevDeletedFiles","handleDeleteSelectedFile","top","right","DeleteIcon","CardContent","deleteAllImagesInFolder","uploadImages","deleteImages","hidden","defaultProps","QontoConnector","styled","StepConnector","theme","stepConnectorClasses","alternativeLabel","left","active","line","borderColor","completed","palette","mode","grey","borderTopWidth","borderRadius","stages","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","_ref2","kycId","status","kycData","setKycData","createTheme","primary","main","readDocument","COLLECTIONS","USER_KYC","fetchData","ThemeProvider","Paper","textAlign","marginBottom","elevation","Typography","variant","Stepper","activeStep","connector","stage","Step","StepLabel","names_map","Map","formData","setFormData","first_name","middle_last_name","phone_number","street_address","city","state_province","zip_pin_code","country","aadhar","gstin","comments","tncAgreed","hash","errors","setErrors","user_id","JSON","parse","localStorage","getItem","UserId","handleChange","value","prevFormData","kycDoc","fetchKycData","Container","margin","border","Form","onSubmit","event","preventDefault","formFields","keys","key","isValid","errorMessages","errorNum","field","validateField","test","prevErrors","join","newHash","sortedData","sort","CryptoJS","toString","calculateHash","updateDocumentFields","saveDocument","USER","KycIdList","reset","textTransform","Group","controlId","Label","get","String","Control","placeholder","required","CREATORS_KYC_DOCUMENTS","class","checked","for","as","readOnly","KycStepper","NStudioCard","studioId","cardStyle","boxShadow","transition","AspectRatio","ratio","overflow","Stack","direction","spacing","bottom","danceStyles","split","form","Chip","fontSize","bgcolor","danceStylesColorChips","trim","Link","fontWeight","textColor","underline","overlay","extDecoder","studioName","level","street","zIndex","Favorite","avgRating","BASE_URL","userProfileInfo","setUserProfileInfo","currentUser","useAuth","danceStylesOptions","userDanceStyles","setUserDanceStyles","userPhoneNumber","setUserPhoneNumber","isOTPModalOpen","setIsOTPModalOpen","otp","setOtp","isPhoneVerified","setIsPhoneVerified","isPhoneNumberVerified","otpSent","setOtpSent","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","DanceStyles","PhoneNumber","handleSnackbarClose","Modal","Box","p","mt","gutterBottom","TextField","fullWidth","label","Name","Age","InputProps","axios","qs","headers","Error","Autocomplete","options","handleDanceStylesChange","renderInput","params","FormControl","InputLabel","Select","Gender","MenuItem","Bio","multiline","rows","uid","response","handleSavePostOTPSuccess","handleSavePostOTP","message","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","isCreator","setIsCreator","cardData","recentlyWatchedStudios","setRecentlyWatchedStudios","a","b","localeCompare","userRef","doc","db","userId","userDoc","getDoc","recentlyWatchedMap","exists","recentlyWatched","studioDataPromises","warn","studioRef","STUDIO","studioDoc","validStudioData","studio","fetchRecentlyWatchedStudios","userData","CreatorMode","getCreatorMode","background","cursor","MUICard","CardHeader","avatar","Avatar","photoURL","alignItems","displayName","Tooltip","arrow","CheckCircleIcon","marginLeft","subheader","email","Boolean","subheaderTypographyProps","MUIButton","ml","EditProfileModal","Row","link","Col","xs","sm","md","lg","xl","Body","Title","Kyc","FontAwesomeIcon","icon","faClock","CardSlider"],"sourceRoot":""}