{"version":3,"file":"static/js/1893.26138ae4.chunk.js","mappings":"kWAUA,MAAMA,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAsBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC3D,CAAC,KAADE,OAAMC,EAAAA,EAAqBC,mBAAqB,CAC9CC,IAAK,GACLC,KAAM,oBACNC,MAAO,oBAET,CAAC,KAADL,OAAMC,EAAAA,EAAqBK,SAAW,CACpC,CAAC,MAADN,OAAOC,EAAAA,EAAqBM,OAAS,CACnCC,YAAa,UAGjB,CAAC,KAADR,OAAMC,EAAAA,EAAqBQ,YAAc,CACvC,CAAC,MAADT,OAAOC,EAAAA,EAAqBM,OAAS,CACnCC,YAAa,UAGjB,CAAC,MAADR,OAAOC,EAAAA,EAAqBM,OAAS,CACnCC,YAAoC,SAAvBT,EAAMW,QAAQC,KAAkBZ,EAAMW,QAAQE,KAAK,KAAO,UACvEC,eAAgB,EAChBC,aAAc,GAEjB,IAEKC,EAAS,CAACC,EAAAA,GAASC,UAAWD,EAAAA,GAASE,aAAcF,EAAAA,GAASG,SAAUH,EAAAA,GAASI,UACjFC,EAAM,CACV,CAACL,EAAAA,GAASC,WAAY,EACtB,CAACD,EAAAA,GAASE,cAAe,EACzB,CAACF,EAAAA,GAASG,UAAW,EACrB,CAACH,EAAAA,GAASI,UAAW,EACrB,CAACJ,EAAAA,GAASM,qBAAsB,GAmDlC,EAhDmBC,IAAwB,IAAvB,MAAEC,EAAK,OAAEC,GAAQF,EACnC,MAAMG,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,CAAC,GAExCC,QAAQC,IAAIR,GAEZ,MAAM1B,GAAQmC,EAAAA,EAAAA,GAAY,CACxBxB,QAAS,CACPC,KAAMe,EAAe,OAAS,QAC9BS,QAAS,CACPC,KAAMV,EAAe,UAAY,cAkBvC,OAbAW,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAaC,EAAAA,EAAAA,IAAaC,EAAAA,GAAYC,SAAUlB,GACtDM,EAAWS,EACb,CAAE,MAAOI,GACPX,QAAQW,MAAM,sCAAD3C,OAAuCwB,EAAK,KAAKmB,EAChE,GAEFC,EAAW,GACV,CAACpB,KAIFqB,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAAC/C,MAAOA,EAAMgD,UAC1BC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,GAAI,CAAEC,UAAW,SAAUC,aAAc,QAAUC,UAAW,EAAEN,SAAA,EACrEC,EAAAA,EAAAA,MAACM,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,IAAGT,SAAA,CAAC,uBAAqBtB,MAC5DoB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACY,EAAAA,EAAO,CAACC,WAAYrC,EAAII,GAASvB,kBAAgB,EAACyD,WAAWd,EAAAA,EAAAA,KAAClD,EAAc,IAAIoD,SAC9EhC,EAAOM,KAAI,CAACuC,EAAOC,KAClBhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAI,CAAAf,UACHF,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAACpB,MAAOiB,IAAU5C,EAAAA,GAASI,UAAYK,IAAWT,EAAAA,GAASM,oBAAoByB,SACtFa,IAAU5C,EAAAA,GAASI,UAAYK,IAAWT,EAAAA,GAASM,oBAAsB,sBAAwBsC,KAF3FC,QAOfhB,EAAAA,EAAAA,KAAA,aAEY,E,wBCtFb,MAAMmB,EAAgBA,CAACC,EAAMC,KAClC,IAAIvB,EAAQ,GAEZ,OADAX,QAAQC,IAAIgC,EAAMC,GACVD,GACJ,IAAK,eACI,WAAWE,KAAKD,KACjBvB,EAAQ,2CAEZ,MACJ,IAAK,eACI,UAAUwB,KAAKD,KAChBvB,EAAQ,0CAEZ,MACJ,IAAK,SACI,WAAWwB,KAAKD,KACjBvB,EAAQ,4CAEZ,MACJ,IAAK,QACM,8EAA8EwB,KAAKD,KACpFvB,EAAQ,yDAStB,OAFAX,QAAQC,IAAIU,GAELA,CAAK,E,gDCfd,MAAMyB,EAAY,IAAIC,IAAI,CACxB,CAAC,aAAe,cAChB,CAAC,mBAAqB,sBACtB,CAAC,eAAiB,gBAClB,CAAC,iBAAmB,kBACpB,CAAC,OAAS,QACV,CAAC,iBAAmB,SACpB,CAAC,QAAU,SACX,CAAC,eAAiB,gBAClB,CAAC,SAAW,iBACZ,CAAC,QAAU,cACX,CAAC,WAAa,eAGRC,EAAc,CAClB,CAAC,cACD,CAAC,oBACD,CAAC,gBACD,CAAC,kBACD,CAAC,QACD,CAAC,iBAAkB,SACnB,CAAC,iBAGCC,EAAkBC,EAAAA,EAClBC,EAAeC,EAAAA,EA6crB,QA3cA,WAAgB,IAADC,EACb,MAAOC,EAAUC,IAAe9C,EAAAA,EAAAA,UAAS,CACvC+C,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,eAAgB,GAChBC,KAAM,GACNC,eAAgB,GAChBC,aAAc,GACdC,QAAS,QACTC,OAAQ,GACRC,MAAO,GACPC,SAAW,GACX/D,OAAQT,EAAAA,GAASC,UACjBwE,WAAW,EACXC,KAAM,MAED7D,EAASC,IAAcC,EAAAA,EAAAA,UAAS,MACjCL,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B+D,EAAQC,IAAa7D,EAAAA,EAAAA,UAAS,CAAC,GAChC8D,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,aAAaC,OACvD1E,EAAK,GAAAxB,OAAM6F,EAAO,SACjBM,EAAaC,IAAkBrE,EAAAA,EAAAA,UAAS,OACxCsE,EAAUC,IAAevE,EAAAA,EAAAA,UAAS,OAClCwE,EAAgBC,IAAqBzE,EAAAA,EAAAA,UAAS,KAC9C0E,EAAaC,IAAkB3E,EAAAA,EAAAA,UAAS,KACxC4E,EAAgBC,IAAqB7E,EAAAA,EAAAA,WAAS,IAC9C8E,EAAgBC,IAAqB/E,EAAAA,EAAAA,WAAU,IAC/CgF,EAAaC,IAAkBjF,EAAAA,EAAAA,WAAU,IACzCkF,EAAcC,IAAmBnF,EAAAA,EAAAA,WAAS,GAC3CoF,EAAmBrB,KAAKC,MAAMC,aAAaC,QAAQ,aAAamB,MAChEC,EAA0D,QAA/C1C,EAAGmB,KAAKC,MAAMC,aAAaC,QAAQ,oBAAY,IAAAtB,OAAA,EAA5CA,EAA8C2C,YAU5DC,EAAgBC,IACpB,MAAM,KAAEvD,EAAI,MAAEC,GAAUsD,EAAEC,OAGpB9E,EAAQqB,EAAcC,EAAMC,GAElC0B,GAAW8B,IAAU,IAChBA,EACH,CAACzD,GAAOtB,MAIVkC,GAAa8C,IAAY,IACpBA,EACH,CAAC1D,GAAOC,KACP,GA4IL7B,EAAAA,EAAAA,YAAU,KACaC,WACnB,MAAMsF,QAAepF,EAAAA,EAAAA,IAAaC,EAAAA,GAAYC,SAAUlB,GACpDoG,GACF9F,EAAW8F,GACX/C,EAAY,IAAK+C,EAAQnG,OAAQmG,EAAOnG,QAAUT,EAAAA,GAASC,aAE3Da,EAAW,KACb,EA+BF+F,GA7BuBvF,WACrB,MAAMwF,EAAW,GAAA9H,OAAM+H,EAAAA,GAASC,uBAAsB,KAAAhI,OAAI6F,GAC1D,IAEE,MAAOoC,EAAaC,SAAkBC,QAAQC,IAAI,EACxCC,EAAAA,EAAAA,IAAsB,GAADrI,OAAI8H,EAAW,cACpCO,EAAAA,EAAAA,IAAsB,GAADrI,OAAI8H,EAAW,YAI1CG,GAAeA,EAAYK,OAAS,EACpClC,EAAe6B,IAEf7B,EAAe,MACfpE,QAAQuG,KAAK,+BAGbL,GAAYA,EAASI,OAAS,EAC9BhC,EAAY4B,IAEZ5B,EAAY,MACZtE,QAAQuG,KAAK,2BAEnB,CAAE,MAAO5F,GACLX,QAAQW,MAAM,gCAAiCA,EACnD,GAKF6F,EAAgB,GACf,CAAChH,IACJ,MAAMiH,EAAe,CAAC,SAAU,OAAQ,UAAW,YAAa,WAAY,SAAU,QAAS,UAC/F,OACEzF,EAAAA,EAAAA,MAAA,OAAK0F,MAAO,CAAEC,MAAOjH,EAAe,QAAU,SAAUqB,SAAA,EACtDC,EAAAA,EAAAA,MAAC4F,EAAAA,EAAS,CAACC,UAAU,yBAAyBH,MAAO,CAAEI,OAAQ,OAAQC,OAAQrH,EAAe,kBAAoB,kBAAmBZ,aAAc,MAAOkI,QAAS,QAASjG,SAAA,EAC1KC,EAAAA,EAAAA,MAACiG,EAAAA,EAAI,CAACC,SAtKS5G,UACnB6G,EAAMC,iBACNlC,GAAgB,GAChB,IAEE,MAAMmC,EAAaC,OAAOC,KAAK3E,GAAU4E,QACpCC,IAAS,CAAC,OAAQ,SAAU,UAAW,WAAY,UAAUC,SAASD,KAG3E,IAAIE,GAAU,EACVC,EAAgB,GAChBC,EAAW,EAgBf,GAdAR,EAAWS,SAASC,IAChB,MAAMpH,EAAQqB,EAAc+F,EAAOnF,EAASmF,IACxCpH,IACAgH,GAAU,EACVE,GAAsB,EACtBD,EAAcI,KAAK,GAADhK,OAAI6J,EAAQ,MAAA7J,OAAK2C,IACnCiD,GAAW8B,IAAU,IACdA,EACH,CAACqC,GAAQpH,MAEjB,KAICgH,EAED,YADAM,MAAM,6DAADjK,OAA8D4J,EAAcM,KAAK,QAK1F,MAAMtC,QAAepF,EAAAA,EAAAA,IAAaC,EAAAA,GAAYC,SAAUlB,GAClD2I,EA5Ea5H,KACrB,MACM6H,EADed,OAAOC,KAAKhH,GAAMiH,QAAOC,GAAe,SAARA,GAA0B,WAARA,IACvCY,OAAOhJ,KAAIoI,GAAG,GAAAzJ,OAAOyJ,EAAG,KAAAzJ,OAAIuC,EAAKkH,MAAQS,KAAK,KAE9E,OAAOI,IAAAA,OAAgBF,GAAYG,UAAU,EAwE3BC,CAAc5F,GAC9B5C,QAAQC,IAAIkI,EAAc,OAANvC,QAAM,IAANA,OAAM,EAANA,EAAQlC,MAC5B,MAAM+E,EAAetD,EACfuD,EAAW,CACfC,UAAUtD,GAEZ,GAAIO,GACF,GAAIA,EAAOlC,OAASyE,EAAS,CAC3B,MAAMS,EAAY,IAAIhG,EAASc,KAAMyE,SACdU,EAAAA,EAAAA,IAASD,EAAWnI,EAAAA,GAAYC,SAAU+H,EAAaC,EAEhF,MAGK,CAEL,MAAME,EAAY,IAAIhG,EAASc,KAAMyE,GACrCO,EAAW,SACYG,EAAAA,EAAAA,IAASD,EAAWnI,EAAAA,GAAYC,SAAU+H,EAAaC,EAEhF,CAeInE,IACFvE,QAAQC,IAAIsE,SACNuE,EAAAA,EAAAA,IAAyB/C,EAAAA,GAASC,uBAAuBnC,EAAQ,UACvEiB,EAAkB,SACZiE,EAAAA,EAAAA,IACJhD,EAAAA,GAASC,uBACTzB,EACAV,EACA,UACCmF,GAAalE,EAAkBkE,KAC/BC,IACC7E,EAAe6E,GACfjJ,QAAQC,IAAIgJ,EAAI,KAMlBxE,IACFzE,QAAQC,IAAIwE,SACNqE,EAAAA,EAAAA,IAAyB/C,EAAAA,GAASC,uBAAuBnC,EAAQ,OACvEmB,EAAe,SACT+D,EAAAA,EAAAA,IACJhD,EAAAA,GAASC,uBACTvB,EACAZ,EACA,OACCmF,GAAahE,EAAegE,KAC5BC,IACC3E,EAAY2E,GACZjJ,QAAQC,IAAIgJ,EAAI,WAShBC,EAAAA,EAAAA,IAAqBzI,EAAAA,GAAY0I,KAAMtF,EAAS,CACpDuF,UAAW,CAAE,CAAC5J,GAAQoD,EAASnD,UAGjC0H,EAAM1B,OAAO4D,OACf,CAAE,MAAO1I,GACPX,QAAQW,MAAM,yBAA0BA,EAC1C,CAAC,QACCuE,GAAgB,EAClB,GAiDiCnE,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAI6F,MAAO,CAAEC,MAAOjH,EAAe,QAAU,QAAS4J,cAAe,cAAevI,SAAC,qBACrFF,EAAAA,EAAAA,KAAA,OAAKgG,UAAU,MAAK9F,SAClBuB,EAAYjD,KAAKkK,IAEf,MAAMC,EAAiBD,EAAOE,MAAK1B,IAAUtB,EAAaiB,SAASK,SAA8B2B,IAApB9G,EAASmF,KAGtF,OAAOyB,GACH3I,EAAAA,EAAAA,KAAA,OAAKgG,UAAU,oBAAmB9F,UAC9BC,EAAAA,EAAAA,MAACiG,EAAAA,EAAK0C,MAAK,CAACC,UAAS,YAAA5L,OAAcwL,GAAiBzI,SAAA,EAChDF,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACoF,MAAO,CAACC,MAAOjH,EAAe,QAAU,SAASqB,SAAEqB,EAAUyH,IAAIL,KAC5E,CAAC,OAAQ,kBAAkB9B,SAAS8B,IAAkBxI,EAAAA,EAAAA,MAACiG,EAAAA,EAAK6C,QAAO,CAChEC,GAAG,SACHC,YAAW,SAAAhM,OAAWoE,EAAUyH,IAAIL,IACpCvH,KAAMuH,EACNtH,MAAOU,EAAS4G,GAChBS,SAAU1E,EACV2E,UAAQ,EACRrD,UAAU,qBACVH,MAAO,CACHyD,gBAAiBzK,EAAe,UAAY,UAC5CiH,MAAOjH,EAAe,QAAU,QAChC0K,WAAY,EACZC,cAAe,GACjBtJ,SAAA,EAEJC,EAAAA,EAAAA,MAAA,UAAQkB,MAAM,GAAEnB,SAAA,CAAC,YAAUqB,EAAUyH,IAAIL,MACtC,IAAwB,SAAnBA,EAA4BjH,EAAkBE,GAAepD,KAAI,CAAC6D,EAAMrB,KAC1EhB,EAAAA,EAAAA,KAAA,UAAoBqB,MAAOgB,EAAKnC,SAC3BmC,GADQrB,SAIDhB,EAAAA,EAAAA,KAACoG,EAAAA,EAAK6C,QAAO,CACzBQ,KAAyB,QAAnBd,GAA+C,iBAAnBA,EAAoC,SAAW,OACjFQ,YAAW,SAAAhM,OAAWoE,EAAUyH,IAAIL,IACpCvH,KAAMuH,EACNtH,MAAOU,EAAS4G,GAChBS,SAAU1E,EACV2E,UAAQ,EACRrD,UAAU,qBACVH,MAAO,CACHyD,gBAAiBzK,EAAe,UAAY,UAC5CiH,MAAOjH,EAAe,QAAU,WAI3CiE,EAAO6F,KAAmB3I,EAAAA,EAAAA,KAAA,QAAM6F,MAAO,CAAEC,MAAO,OAAQ5F,SAAE4C,EAAO6F,KAAwB,QAtC1DA,GAyCxC,IAAI,OAIZ3I,EAAAA,EAAAA,KAAA,OAAKgG,UAAU,MAAK9F,UAClBC,EAAAA,EAAAA,MAAA,OAAK6F,UAAU,oBAAmB9F,SAAA,EAChCC,EAAAA,EAAAA,MAACiG,EAAAA,EAAK0C,MAAK,CAACC,UAAU,kBAAiB7I,SAAA,EACrCF,EAAAA,EAAAA,KAACoG,EAAAA,EAAKsD,MAAK,CAAC7D,MAAO,CAACC,MAAOjH,EAAe,QAAU,SAASqB,SAAC,YAC9DC,EAAAA,EAAAA,MAAA,OAAK6F,UAAU,4BAA2B9F,SAAA,EACxCF,EAAAA,EAAAA,KAACoG,EAAAA,EAAK6C,QAAO,CACXQ,KAAK,OACLN,YAAY,sBACZ/H,KAAK,SACL4E,UAAU,qBACV3E,MAAOU,EAASU,OAChB2G,SAAU1E,EACV2E,UAAQ,EACRxD,MAAO,CACLyD,gBAAiBzK,EAAe,UAAY,UAC5CiH,MAAOjH,EAAe,QAAU,QAChC8K,YAAa,WAGjB3J,EAAAA,EAAAA,KAAC4J,EAAAA,EAAM,CAACC,QAA6B,aAApB9H,EAASnD,OAAuB8B,QAAQ,QAAQoJ,QAASA,IAAMC,SAASC,eAAe,gBAAgBC,QAASpE,MAAO,CAElIM,QAAS,SACTmD,gBAAiBzK,EAAe,OAAS,UACzCiH,MAAOjH,EAAe,QAAU,QAChCqL,OAAQ,WACVhK,SAAC,YAGLF,EAAAA,EAAAA,KAAA,SACEyJ,KAAK,OACLU,GAAG,eACHC,OAAO,OACPvE,MAAO,CAAEwE,QAAS,QAClBjB,SAAWzE,GA9QDA,KAC1BhB,EAAkBgB,EAAEC,OAAO0F,MAAM,IACjCvG,GAAkB,EAAK,EA4QUwG,CAAmB5F,QAGvCrB,GAAeA,EAAYmC,OAAS,GAAKnC,EAAY,GAAGkH,SACvDxK,EAAAA,EAAAA,KAAC4J,EAAAA,EAAM,CACHlJ,QAAQ,OACRmF,MAAO,CAAEC,MAAO,UAAW2E,eAAgB,QAC3CX,QAASA,IAAMY,OAAOC,KAAKrH,EAAY,GAAGkH,QAAS,UAAUtK,SAChE,8BAIJF,EAAAA,EAAAA,KAAA,KAAG6F,MAAO,CAACC,MAAOjH,EAAe,QAAU,SAASqB,UAAgB,OAAdwD,QAAc,IAAdA,OAAc,EAAdA,EAAgBtC,OAAQ,oCAG9E0B,EAAe,SAAK9C,EAAAA,EAAAA,KAAA,QAAM6F,MAAO,CAAEC,MAAO,OAAQ5F,SAAE4C,EAAe,UACpE9C,EAAAA,EAAAA,KAAA,OAAAE,SACG8D,GAAgB,IAAG7D,EAAAA,EAAAA,MAAAyK,EAAAA,SAAA,CAAA1K,SAAA,EAClBF,EAAAA,EAAAA,KAAA,YAAUqB,MAAO2C,EAAgB6G,IAAI,SACrC1K,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAI8D,EAAe,2BAO3BhE,EAAAA,EAAAA,KAAA,OAAKgG,UAAU,MAAK9F,UAClBC,EAAAA,EAAAA,MAAA,OAAK6F,UAAU,oBAAmB9F,SAAA,EAChCC,EAAAA,EAAAA,MAACiG,EAAAA,EAAK0C,MAAK,CAACC,UAAU,eAAc7I,SAAA,EAClCF,EAAAA,EAAAA,KAACoG,EAAAA,EAAKsD,MAAK,CAAC7D,MAAO,CAACC,MAAOjH,EAAe,QAAU,SAASqB,SAAC,SAC9DC,EAAAA,EAAAA,MAAA,OAAK6F,UAAU,4BAA2B9F,SAAA,EACxCF,EAAAA,EAAAA,KAACoG,EAAAA,EAAK6C,QAAO,CACXQ,KAAK,OACLN,YAAY,mBACZ/H,KAAK,QACLC,MAAOU,EAASW,MAChB0G,SAAU1E,EACVsB,UAAU,qBACVqD,UAAQ,EACRxD,MAAO,CACLyD,gBAAiBzK,EAAe,UAAY,UAC5CiH,MAAOjH,EAAe,QAAU,QAChC8K,YAAa,WAGjB3J,EAAAA,EAAAA,KAAC4J,EAAAA,EAAM,CAACC,QAA6B,aAApB9H,EAASnD,OAAuB8B,QAAQ,QAAQoJ,QAASA,IAAMC,SAASC,eAAe,aAAaC,QAAUpE,MAAO,CAE/HM,QAAS,SACVmD,gBAAiBzK,EAAe,OAAS,UACzCiH,MAAOjH,EAAe,QAAU,QAChCqL,OAAQ,WACVhK,SAAC,YAGLF,EAAAA,EAAAA,KAAA,SACEyJ,KAAK,OACLU,GAAG,YACHC,OAAO,OACPvE,MAAO,CAAEwE,QAAS,QAClBjB,SAAWzE,GApUJA,KACvBd,EAAec,EAAEC,OAAO0F,MAAM,IAC9BvG,GAAkB,EAAK,EAkUU+G,CAAgBnG,QAGpCnB,GAAYA,EAASiC,OAAS,GAAKjC,EAAS,GAAGgH,SAC9CxK,EAAAA,EAAAA,KAAC4J,EAAAA,EAAM,CACHlJ,QAAQ,OACRmF,MAAO,CAAEC,MAAO,UAAW2E,eAAgB,QAC3CX,QAASA,IAAMY,OAAOC,KAAKnH,EAAS,GAAGgH,QAAS,UAAUtK,SAC7D,2BAIAC,EAAAA,EAAAA,MAAA,KAAG0F,MAAO,CAACC,MAAOjH,EAAe,QAAU,SAASqB,SAAA,CAAC,KAAa,OAAX0D,QAAW,IAAXA,OAAW,EAAXA,EAAaxC,OAAQ,kCAGhF0B,EAAc,QAAK9C,EAAAA,EAAAA,KAAA,QAAM6F,MAAO,CAAEC,MAAO,OAAQ5F,SAAE4C,EAAc,SAClE9C,EAAAA,EAAAA,KAAA,OAAAE,SACGgE,GAAa,IAAG/D,EAAAA,EAAAA,MAAAyK,EAAAA,SAAA,CAAA1K,SAAA,EACfF,EAAAA,EAAAA,KAAA,YAAUqB,MAAO6C,EAAa2G,IAAI,SAClC1K,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAIgE,EAAY,2BAOxB/D,EAAAA,EAAAA,MAAA,OAAK4K,MAAM,aAAY7K,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOyJ,KAAK,WAAWsB,MAAM,mBAAmBZ,GAAG,aAAaa,QAASjJ,EAASa,UAClFwG,SA3VkBzE,IAC1B3C,GAAa8C,IAAY,IACpBA,EACHlC,UAAW+B,EAAEC,OAAOoG,WACnB,KAwVKhL,EAAAA,EAAAA,KAAA,SAAO+K,MAAM,mBAAmBE,IAAI,gBAAe/K,UACnDC,EAAAA,EAAAA,MAAA,QAAM0F,MAAO,CAACC,MAAOjH,EAAe,QAAU,SAASqB,SAAA,CAAC,mBACrCF,EAAAA,EAAAA,KAAA,KAAGkL,KAAK,oBAAoBrF,MAAO,CAAEC,MAAOjH,EAAe,YAAc,QAASqB,SAAC,kDAIxGF,EAAAA,EAAAA,KAAA,SACC+B,EAASY,WACRxC,EAAAA,EAAAA,MAAA,OAAK6F,UAAU,sBAAqB9F,SAAA,EAClCF,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAACiG,EAAAA,EAAK0C,MAAK,CAACC,UAAU,oBAAmB7I,SAAA,EACvCF,EAAAA,EAAAA,KAACoG,EAAAA,EAAKsD,MAAK,CAAAxJ,SAAEqB,EAAUyH,IAAI,eAC3BhJ,EAAAA,EAAAA,KAACoG,EAAAA,EAAK6C,QAAO,CACXC,GAAG,WACH9H,KAAK,WACLC,MAAOU,EAASY,SAChBwI,UAAQ,EACRtF,MAAO,CACLyD,gBAAiBzK,EAAe,UAAY,UAC5CiH,MAAOjH,EAAe,QAAU,kBAM1CmB,EAAAA,EAAAA,KAAC4J,EAAAA,EAAM,CAAClJ,QAAQ,OAAO+I,KAAK,SAAS2B,SAA8B,aAApBrJ,EAASnD,SAA0BmD,EAASa,UAAU1C,SAAW,cAKjHkE,IAAgBpE,EAAAA,EAAAA,KAACqL,EAAAA,EAAc,KAChCrL,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA4K,EAAAA,SAAA,CAAA1K,SACG6B,EAASc,OAAQ7C,EAAAA,EAAAA,KAACsL,EAAU,CAAC3M,MAAOA,EAAOC,OAAQmD,EAASnD,eAGjEoB,EAAAA,EAAAA,KAAA,WAIN,C,wEC9eA,QAJkCuL,EAAAA,cAAoB,MCCvC,SAASC,IAMtB,OALcD,EAAAA,WAAiBE,EAMjC,CCTA,MACA,EADoC,oBAAXC,QAAyBA,OAAOT,IAC9BS,OAAOT,IAAI,cAAgB,mB,eC+DtD,QApCA,SAAuBU,GACrB,MAAM,SACJzL,EACAhD,MAAO0O,GACLD,EACEE,EAAaL,IAMbtO,EAAQqO,EAAAA,SAAc,KAC1B,MAAMO,EAAwB,OAAfD,EAAsBD,EA9BzC,SAA8BC,EAAYD,GACxC,GAA0B,oBAAfA,EAOT,OANoBA,EAAWC,GAQjC,OAAOE,EAAAA,EAAAA,GAAS,CAAC,EAAGF,EAAYD,EAClC,CAmBsDI,CAAqBH,EAAYD,GAInF,OAHc,MAAVE,IACFA,EAAOG,GAAyB,OAAfJ,GAEZC,CAAM,GACZ,CAACF,EAAYC,IAChB,OAAoB7L,EAAAA,EAAAA,KAAKyL,EAAaS,SAAU,CAC9C7K,MAAOnE,EACPgD,SAAUA,GAEd,E,oCCvCA,MAAMiM,EAAc,CAAC,EACrB,SAASC,EAAgBC,EAASC,EAAYV,GAA+B,IAAnBW,EAASC,UAAA/G,OAAA,QAAAoD,IAAA2D,UAAA,IAAAA,UAAA,GACjE,OAAOjB,EAAAA,SAAc,KACnB,MAAMkB,EAAgBJ,GAAUC,EAAWD,IAAyBC,EACpE,GAA0B,oBAAfV,EAA2B,CACpC,MAAMc,EAAcd,EAAWa,GACzBE,EAASN,GAAUN,EAAAA,EAAAA,GAAS,CAAC,EAAGO,EAAY,CAChD,CAACD,GAAUK,IACRA,EAGL,OAAIH,EACK,IAAMI,EAERA,CACT,CACA,OAAON,GAAUN,EAAAA,EAAAA,GAAS,CAAC,EAAGO,EAAY,CACxC,CAACD,GAAUT,KACRG,EAAAA,EAAAA,GAAS,CAAC,EAAGO,EAAYV,EAAW,GACxC,CAACS,EAASC,EAAYV,EAAYW,GACvC,CAyDA,QAhDA,SAAuBZ,GACrB,MAAM,SACJzL,EACAhD,MAAO0O,EAAU,QACjBS,GACEV,EACEW,GAAaM,EAAAA,EAAAA,GAAuBT,GACpCU,EAAoBC,KAAqBX,EAMzCY,EAAcX,EAAgBC,EAASC,EAAYV,GACnDoB,EAAeZ,EAAgBC,EAASQ,EAAmBjB,GAAY,GACvEqB,EAAqC,QAA1BF,EAAYG,UAC7B,OAAoBlN,EAAAA,EAAAA,KAAKmN,EAAkB,CACzCjQ,MAAO8P,EACP9M,UAAuBF,EAAAA,EAAAA,KAAKoN,EAAAA,EAAyBlB,SAAU,CAC7D7K,MAAO0L,EACP7M,UAAuBF,EAAAA,EAAAA,KAAKqN,EAAAA,EAAa,CACvChM,MAAO4L,EACP/M,SAAUA,OAIlB,E,aC9DA,MAAMoN,EAAY,CAAC,SAMJ,SAASrN,EAAchD,GACpC,IACIC,MAAOqQ,GACLtQ,EACJ0O,GAAQ6B,EAAAA,EAAAA,GAA8BvQ,EAAMqQ,GAC9C,MAAMG,EAAcF,EAAWG,EAAAA,GAC/B,OAAoB1N,EAAAA,EAAAA,KAAK2N,GAAqB5B,EAAAA,EAAAA,GAAS,CAAC,EAAGJ,EAAO,CAChEU,QAASoB,EAAcC,EAAAA,OAAW7E,EAClC3L,MAAOuQ,GAAeF,IAE1B,C,0FClBA,MAAMD,EAAY,CAAC,SAIbM,EAA0BrC,EAAAA,gBAczB,MAAMsC,EAASA,KACpB,MAAMxM,EAAQkK,EAAAA,WAAiBqC,GAC/B,OAAgB,MAATvM,GAAgBA,CAAa,EAEtC,EAjBA,SAAqBpE,GACnB,IAAI,MACAoE,GACEpE,EACJ0O,GAAQ6B,EAAAA,EAAAA,GAA8BvQ,EAAMqQ,GAC9C,OAAoBtN,EAAAA,EAAAA,KAAK4N,EAAW1B,UAAUH,EAAAA,EAAAA,GAAS,CACrD1K,MAAgB,MAATA,GAAgBA,GACtBsK,GACL,C","sources":["Components/KycStepper.js","utils/validationUtils.js","Components/Kyc.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js","../node_modules/@mui/system/esm/RtlProvider/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Stepper, Step, StepLabel, Typography, Paper, ThemeProvider, createTheme } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { styled } from '@mui/material/styles';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport { readDocument } from '../utils/firebaseUtils';\nimport { STATUSES, COLLECTIONS } from '../constants';\nimport './KycStepper.css';\n\nconst QontoConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      borderColor: 'green',\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      borderColor: 'green',\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    borderColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n}));\n\nconst stages = [STATUSES.SUBMITTED, STATUSES.UNDER_REVIEW, STATUSES.REVIEWED, STATUSES.VERIFIED];\nconst map = {\n  [STATUSES.SUBMITTED]: 0,\n  [STATUSES.UNDER_REVIEW]: 1,\n  [STATUSES.REVIEWED]: 2,\n  [STATUSES.VERIFIED]: 3,\n  [STATUSES.VERIFICATION_FAILED]: 3\n};\n\nconst KycStepper = ({ kycId, status }) => {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [kycData, setKycData] = useState({});\n\n  console.log(status)\n\n  const theme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? 'dark' : 'light',\n      primary: {\n        main: isDarkModeOn ? '#90caf9' : '#1976d2',\n      },\n    },\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await readDocument(COLLECTIONS.USER_KYC, kycId);\n        setKycData(data);\n      } catch (error) {\n        console.error(`Error fetching KYC data for KYC ID ${kycId}:`, error);\n      }\n    };\n    fetchData();\n  }, [kycId]);\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper sx={{ textAlign: 'center', marginBottom: '1rem' }} elevation={2}>\n        <Typography variant=\"h5\" component=\"p\">Application Status: {status}</Typography>\n        <br/>\n        <Stepper activeStep={map[status]} alternativeLabel connector={<QontoConnector />}>\n          {stages.map((stage, index) => (\n            <Step key={index}>\n              <StepLabel error={stage === STATUSES.VERIFIED && status === STATUSES.VERIFICATION_FAILED}>\n                {stage === STATUSES.VERIFIED && status === STATUSES.VERIFICATION_FAILED ? 'Failed Verification' : stage}\n              </StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <br/>\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default KycStepper;\n","export const validateField = (name, value) => {\n  let error = '';\n  console.log(name, value)\n  switch (name) {\n      case 'phone_number':\n          if (!/^\\d{10}$/.test(value)) {\n              error = 'Phone number must be exactly 10 digits.';\n          }\n          break;\n      case 'zip_pin_code':\n          if (!/^\\d{6}$/.test(value)) {\n              error = 'ZIP/Pin code must be exactly 6 digits.';\n          }\n          break;\n      case 'aadhar':\n          if (!/^\\d{12}$/.test(value)) {\n              error = 'Aadhar number must be exactly 12 digits.';\n          }\n          break;\n      case 'gstin':\n            if (!/^[0-9]{2}[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}[1-9A-Za-z]{1}[Zz]{1}[0-9A-Za-z]{1}$/.test(value)) {\n                error = 'GSTIN must be a valid format (e.g., 22ABCDE0000A1Z5).';\n            }\n            break;\n\n      default:\n          break;\n  }\n  console.log(error)\n\n  return error;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { saveDocument, updateDocumentFields, readDocument, uploadImages4, deleteAllImagesInFolder2, getAllFilesFromFolder } from '../utils/firebaseUtils.js';\nimport { STATUSES, COLLECTIONS, STORAGES } from '../constants.js';\nimport KycStepper from './KycStepper.js';\nimport CryptoJS from 'crypto-js';\nimport { validateField } from '../utils/validationUtils';\nimport { postData } from '../utils/common.js';\nimport './Kyc.css';\nimport { LinearProgress, Typography } from '@mui/material';\nimport indianCities from '../cities.json';\nimport indianStates from '../states.json';\n\nconst names_map = new Map([\n  [\"first_name\" , \"First Name\"],\n  [\"middle_last_name\" , \"Middle & Last Name\"],\n  [\"phone_number\" , \"Phone Number\"],\n  [\"street_address\" , \"Street Address\"],\n  [\"city\" , \"City\"],\n  [\"state_province\" , \"State\"],\n  [\"state\" , \"State\"],\n  [\"zip_pin_code\" , \"PIN Code/ZIP\"],\n  [\"aadhar\" , \"Aadhar Number\"],\n  [\"gstin\" , \"GST Number\"],\n  [\"comments\" , \"Remark(s)\"]\n  ])\n\n  const orderedKeys = [\n    ['first_name'],\n    ['middle_last_name'],\n    ['phone_number'],\n    ['street_address'],\n    ['city'],\n    ['state_province', 'state'], // Include this key, either of them is present\n    ['zip_pin_code']\n];\n\nconst locationOptions = indianCities.cities;\nconst stateOptions = indianStates.states;\n\nfunction Kyc() {\n  const [formData, setFormData] = useState({\n    first_name: '',\n    middle_last_name: '',\n    phone_number: '',\n    street_address: '',\n    city: '',\n    state_province: '',\n    zip_pin_code: '',\n    country: 'India',\n    aadhar: '',\n    gstin: '',\n    comments : '',\n    status: STATUSES.SUBMITTED,\n    tncAgreed: false,\n    hash: '',\n  });\n  const [kycData, setKycData] = useState(null);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [errors, setErrors] = useState({});\n  const user_id = JSON.parse(localStorage.getItem('userInfo')).UserId;\n  const kycId = `${user_id}_Kyc`;\n  const [filesAadhar, setFilesAadhar] = useState(null);\n  const [filesGst, setFilesGst] = useState(null);\n  const [newFilesAadhar, setNewFilesAadhar] = useState([]);\n  const [newFilesGst, setNewFilesGst] = useState([]);\n  const [hasTextChanged, setHasTextChanged] = useState(false);\n  const [progressAadhar, setProgressAadhar] = useState(-1);\n  const [progressGst, setProgressGst] = useState(-1);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\")).email;\n  const currentName = JSON.parse(localStorage.getItem(\"userInfo\"))?.displayName;\n\n\n  const calculateHash = (data) => {\n    const filteredData = Object.keys(data).filter(key => key !== 'hash' && key !== 'status');\n    const sortedData = filteredData.sort().map(key => `${key}:${data[key]}`).join('|');\n  // Calculate hash using SHA-256\n    return CryptoJS.SHA256(sortedData).toString();\n  };\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n  \n    // Perform field validation as the user types\n    const error = validateField(name, value);\n  \n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: error,\n    }));\n  \n    // Update form data\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleAadharUpload = (e) => {\n    setNewFilesAadhar(e.target.files[0]);  // Store the new files\n    setHasTextChanged(true);            // Mark that a change has occurred\n  };\n  \n  const handleGstUpload = (e) => {\n    setNewFilesGst(e.target.files[0]);  // Store the new files\n    setHasTextChanged(true);         // Mark that a change has occurred\n  };\n\n  const handleTnCAgreement = (e) => {\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      tncAgreed: e.target.checked,\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    try {\n\n      const formFields = Object.keys(formData).filter(\n          (key) => !['hash', 'status', 'country', 'comments', 'UserId'].includes(key)\n      );\n\n      let isValid = true;\n      let errorMessages = [];\n      let errorNum = 0;\n\n      formFields.forEach((field) => {\n          const error = validateField(field, formData[field]);\n          if (error) {\n              isValid = false;\n              errorNum = errorNum + 1;\n              errorMessages.push(`${errorNum}: ${error}`);\n              setErrors((prevErrors) => ({\n                  ...prevErrors,\n                  [field]: error,\n              }));\n          }\n      });\n\n      // If there are errors, prompt the user and stop the submission\n      if (!isValid) {\n          alert(`Please correct the following errors before submitting:\\n\\n${errorMessages.join('\\n')}`);\n          return;\n      }\n\n\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      const newHash = calculateHash(formData);\n      console.log(newHash,kycDoc?.hash)\n      const notifyEmails = currentUserEmail;\n      const metaData = {\n        user_name:currentName,\n      }; \n      if (kycDoc) {\n        if (kycDoc.hash !== newHash) {\n          const dbPayload = {...formData,hash: newHash,}\n          const response = await postData(dbPayload, COLLECTIONS.USER_KYC, notifyEmails,metaData);\n          //alert(\"KYC updated successfully\");\n        } else {\n          //alert(\"No changes detected\");\n        }\n      } else {\n        // If no KYC record exists, create a new one\n        const dbPayload = {...formData,hash: newHash,}\n        metaData = ''\n        const response = await postData(dbPayload, COLLECTIONS.USER_KYC, notifyEmails,metaData);\n        //alert(\"KYC added successfully\");\n      }\n      /*\n      if (newFilesAadhar) {\n        // Delete old files in the folder and upload the new files for Aadhar\n        console.log(newFilesAadhar)\n        await uploadImages3(STORAGES.CREATORS_KYC_DOCUMENTS, newFilesAadhar, user_id, \"Aadhar\");\n        alert(\"Aadhar files uploaded successfully\");\n      }\n  \n      if (newFilesGst) {\n        // Delete old files in the folder and upload the new files for GST\n        await uploadImages3(STORAGES.CREATORS_KYC_DOCUMENTS, newFilesGst, user_id, \"Gst\");\n        alert(\"GST files uploaded successfully\");\n      }\n        */\n      if (newFilesAadhar) {\n        console.log(newFilesAadhar)\n        await deleteAllImagesInFolder2(STORAGES.CREATORS_KYC_DOCUMENTS,user_id,\"Aadhar\");\n        setProgressAadhar(0)\n        await uploadImages4(\n          STORAGES.CREATORS_KYC_DOCUMENTS,\n          newFilesAadhar,\n          user_id,\n          \"Aadhar\",\n          (progress) => setProgressAadhar(progress), // Update Aadhar progress state\n          (url) => {\n            setFilesAadhar(url); // Reset or update state if necessary\n            console.log(url);\n          }\n        );\n        //alert(\"Aadhar files uploaded successfully\");\n      }\n  \n      if (newFilesGst) {\n        console.log(newFilesGst)\n        await deleteAllImagesInFolder2(STORAGES.CREATORS_KYC_DOCUMENTS,user_id,\"Gst\");\n        setProgressGst(0);\n        await uploadImages4(\n          STORAGES.CREATORS_KYC_DOCUMENTS,\n          newFilesGst,\n          user_id,\n          \"Gst\",\n          (progress) => setProgressGst(progress), // Update GST progress state\n          (url) => {\n            setFilesGst(url); // Collect download URLs\n            console.log(url);\n            //setNewFilesGst(null); // Reset or update state if necessary\n          }\n        );\n        //alert(\"GST files uploaded successfully\");\n      }\n  \n  \n\n      await updateDocumentFields(COLLECTIONS.USER, user_id, {\n        KycIdList: { [kycId]: formData.status },\n      });\n\n      event.target.reset();\n    } catch (error) {\n      console.error(\"Error processing KYC: \", error);\n    } finally{\n      setIsSubmitting(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchKycData = async () => {\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      if (kycDoc) {\n        setKycData(kycDoc);\n        setFormData({ ...kycDoc, status: kycDoc.status || STATUSES.SUBMITTED });\n      } else {\n        setKycData(null);\n      }\n    };\n    const fetchKycImages = async () => {\n      const folder_path = `${STORAGES.CREATORS_KYC_DOCUMENTS}/${user_id}`\n      try {\n        // Fetch both Aadhar and GST files concurrently\n        const [aadharFiles, gstFiles] = await Promise.all([\n                  getAllFilesFromFolder(`${folder_path}/Aadhar/`),\n                  getAllFilesFromFolder(`${folder_path}/Gst/`)\n        ]);\n\n        // Check if files are fetched successfully\n        if (aadharFiles && aadharFiles.length > 0) {\n            setFilesAadhar(aadharFiles);\n        } else {\n            setFilesAadhar(null); // Set to empty if no files found\n            console.warn(\"No Aadhar documents found.\");\n        }\n\n        if (gstFiles && gstFiles.length > 0) {\n            setFilesGst(gstFiles);\n        } else {\n            setFilesGst(null); // Set to empty if no files found\n            console.warn(\"No GST documents found.\");\n        }\n      } catch (error) {\n          console.error(\"Error fetching KYC documents:\", error);\n      }\n\n    }\n\n    fetchKycData();\n    fetchKycImages();\n  }, [kycId]);\n  const excludedKeys = ['status', 'hash', 'country', 'tncAgreed', 'comments', 'UserId', 'gstin', 'aadhar'];\n  return (\n    <div style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n      <Container className=\"glassmorphic-container\" style={{ margin: 'auto', border: isDarkModeOn ? '1px solid white' : '1px solid black', borderRadius: '5px', padding: '20px' }}>\n        <Form onSubmit={handleSubmit}>\n          <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform: 'capitalize' }}>Verify yourself</h1>\n          <div className=\"row\">\n          { orderedKeys.map((fields) => {\n              // Check which field is present in formData and not excluded\n              const availableField = fields.find(field => !excludedKeys.includes(field) && formData[field] !== undefined);\n              \n              // If an available field is found, render it\n              return availableField ? (\n                  <div className=\"col-md-6 col-lg-4\" key={availableField}>\n                      <Form.Group controlId={`formBasic${availableField}`}>\n                          <Typography style={{color: isDarkModeOn ? 'white' : 'black'}}>{names_map.get(availableField)}</Typography>\n                          {['city', 'state_province'].includes(availableField) ? <Form.Control\n                              as=\"select\"\n                              placeholder={`Enter ${names_map.get(availableField)}`}\n                              name={availableField}\n                              value={formData[availableField]}\n                              onChange={handleChange}\n                              required\n                              className=\"glassmorphic-input\"\n                              style={{\n                                  backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                                  color: isDarkModeOn ? 'white' : 'black',\n                                  paddingTop: 0,\n                                  paddingBottom: 0,\n                              }}\n                          >\n                            <option value=\"\">Select a {names_map.get(availableField)}</option>\n                              {[...(availableField === 'city' ? locationOptions : stateOptions)].map((city, index) => (\n                                  <option key={index} value={city}>\n                                      {city}\n                                  </option>\n                              ))}\n                            </Form.Control> : <Form.Control\n                                  type={availableField === 'age' || availableField === 'phone_number' ? 'number' : 'text'}\n                                  placeholder={`Enter ${names_map.get(availableField)}`}\n                                  name={availableField}\n                                  value={formData[availableField]}\n                                  onChange={handleChange}\n                                  required\n                                  className=\"glassmorphic-input\"\n                                  style={{\n                                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                                      color: isDarkModeOn ? 'white' : 'black',\n                                  }}\n                              />\n                            }\n                          {errors[availableField] && <span style={{ color: 'red' }}>{errors[availableField]}</span>} {/* Show validation error */}\n                      </Form.Group>\n                  </div>\n              ) : null; // Return null if no field is available\n          })}\n\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-4\">\n              <Form.Group controlId=\"formBasicAadhar\">\n                <Form.Label style={{color: isDarkModeOn ? 'white' : 'black'}}>Aadhar</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Aadhar Number\"\n                    name=\"aadhar\"\n                    className=\"glassmorphic-input\"\n                    value={formData.aadhar}\n                    onChange={handleChange}\n                    required\n                    style={{\n                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                      color: isDarkModeOn ? 'white' : 'black',\n                      marginRight: '10px'\n                    }}\n                  />\n                  <Button disable={formData.status === \"Verified\"} variant=\"light\" onClick={() => document.getElementById('aadharUpload').click()} style={{ \n                         \n                        padding: '0.5rem', \n                        backgroundColor: isDarkModeOn ? '#333' : '#f8f9fa', // Dark mode background\n                        color: isDarkModeOn ? 'white' : 'black', // Dark mode text color\n                        cursor: 'pointer'\n                    }}>\n                    Upload\n                  </Button>\n                  <input\n                    type=\"file\"\n                    id=\"aadharUpload\"\n                    accept=\".pdf\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => handleAadharUpload(e)}\n                  />\n                </div>\n                {filesAadhar && filesAadhar.length > 0 && filesAadhar[0].fileURL ? (\n                  <Button \n                      variant=\"link\" \n                      style={{ color: '#007bff', textDecoration: 'none' }} \n                      onClick={() => window.open(filesAadhar[0].fileURL, '_blank')}\n                  >\n                      Download Aadhar Document\n                  </Button>\n              ) : (\n               <p style={{color: isDarkModeOn ? 'white' : 'black'}}>{newFilesAadhar?.name || \"No new Aadhar file uploaded.\"}</p>\n              )}\n              </Form.Group>\n              {errors['aadhar'] && <span style={{ color: 'red' }}>{errors['aadhar']}</span>}\n              <div>\n                {progressAadhar>=0&&<>\n                  <progress value={progressAadhar} max=\"100\" /> \n                  <p>{progressAadhar}% uploaded</p>\n                </>}\n              </div>\n              \n\n            </div>\n          </div>\n          <div className=\"row\">         \n            <div className=\"col-md-6 col-lg-4\">\n              <Form.Group controlId=\"formBasicGst\">\n                <Form.Label style={{color: isDarkModeOn ? 'white' : 'black'}}>GST</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter GST Number\"\n                    name=\"gstin\"\n                    value={formData.gstin}\n                    onChange={handleChange}\n                    className=\"glassmorphic-input\"\n                    required\n                    style={{\n                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                      color: isDarkModeOn ? 'white' : 'black',\n                      marginRight: '10px'\n                    }}\n                  />\n                  <Button disable={formData.status === \"Verified\"} variant=\"light\" onClick={() => document.getElementById('gstUpload').click()}  style={{ \n                         \n                         padding: '0.5rem', \n                        backgroundColor: isDarkModeOn ? '#333' : '#f8f9fa', // Dark mode background\n                        color: isDarkModeOn ? 'white' : 'black', // Dark mode text color\n                        cursor: 'pointer'\n                    }}>\n                    Upload\n                  </Button>\n                  <input\n                    type=\"file\"\n                    id=\"gstUpload\"\n                    accept=\".pdf\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => handleGstUpload(e)}\n                  />\n                </div>\n                {filesGst && filesGst.length > 0 && filesGst[0].fileURL ? (\n                  <Button \n                      variant=\"link\" \n                      style={{ color: '#007bff', textDecoration: 'none' }} \n                      onClick={() => window.open(filesGst[0].fileURL, '_blank')}\n                  >\n                      Download GST Document\n                  </Button>\n              ) : (\n                   <p style={{color: isDarkModeOn ? 'white' : 'black'}}> {newFilesGst?.name || \"No new GST file uploaded.\"}</p>\n              )}\n              </Form.Group>\n              {errors['gstin'] && <span style={{ color: 'red' }}>{errors['gstin']}</span>}\n              <div>\n                {progressGst>=0&&<>\n                  <progress value={progressGst} max=\"100\" /> \n                  <p>{progressGst}% uploaded</p>\n                </>}\n              </div>\n              \n            </div>\n          </div>\n\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"tnc-switch\" checked={formData.tncAgreed}\n            onChange={handleTnCAgreement}/>\n            <label class=\"form-check-label\" for=\"exampleCheck1\">\n            <span style={{color: isDarkModeOn ? 'white' : 'black'}}>\n                I agree to the <a href=\"#/npoliciesStudio\" style={{ color: isDarkModeOn ? 'lightblue' : 'blue' }}>Terms and Conditions. Click to read.</a>\n              </span>\n            </label>\n          </div>\n          <br/>\n          {formData.comments && (\n            <div className=\"col-md-12 col-lg-12\">\n              <br/>\n              <Form.Group controlId=\"formBasicComments\">\n                <Form.Label>{names_map.get('comments')}</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"comments\"\n                  value={formData.comments}\n                  readOnly\n                  style={{\n                    backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                    color: isDarkModeOn ? 'white' : 'black'\n                  }}\n                />\n              </Form.Group>\n            </div>\n          )}\n          <Button variant=\"info\" type=\"submit\" disabled={formData.status === \"Verified\" || !formData.tncAgreed}          >\n            Submit\n          </Button>\n\n        </Form>\n        {isSubmitting && <LinearProgress/>}\n        <br/>\n        <>\n          {formData.hash && <KycStepper kycId={kycId} status={formData.status} />}\n        </>\n      </Container>\n      <br />\n    </div>\n    \n  );\n}\n\nexport default Kyc;\n","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport RtlProvider from '../RtlProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = engineTheme.direction === 'rtl';\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: children\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RtlContext = /*#__PURE__*/React.createContext();\nfunction RtlProvider(_ref) {\n  let {\n      value\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/_jsx(RtlContext.Provider, _extends({\n    value: value != null ? value : true\n  }, props));\n}\nprocess.env.NODE_ENV !== \"production\" ? RtlProvider.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.bool\n} : void 0;\nexport const useRtl = () => {\n  const value = React.useContext(RtlContext);\n  return value != null ? value : false;\n};\nexport default RtlProvider;"],"names":["QontoConnector","styled","StepConnector","_ref","theme","concat","stepConnectorClasses","alternativeLabel","top","left","right","active","line","borderColor","completed","palette","mode","grey","borderTopWidth","borderRadius","stages","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","map","VERIFICATION_FAILED","_ref2","kycId","status","isDarkModeOn","useSelector","selectDarkModeStatus","kycData","setKycData","useState","console","log","createTheme","primary","main","useEffect","async","data","readDocument","COLLECTIONS","USER_KYC","error","fetchData","_jsx","ThemeProvider","children","_jsxs","Paper","sx","textAlign","marginBottom","elevation","Typography","variant","component","Stepper","activeStep","connector","stage","index","Step","StepLabel","validateField","name","value","test","names_map","Map","orderedKeys","locationOptions","indianCities","stateOptions","indianStates","_JSON$parse","formData","setFormData","first_name","middle_last_name","phone_number","street_address","city","state_province","zip_pin_code","country","aadhar","gstin","comments","tncAgreed","hash","errors","setErrors","user_id","JSON","parse","localStorage","getItem","UserId","filesAadhar","setFilesAadhar","filesGst","setFilesGst","newFilesAadhar","setNewFilesAadhar","newFilesGst","setNewFilesGst","hasTextChanged","setHasTextChanged","progressAadhar","setProgressAadhar","progressGst","setProgressGst","isSubmitting","setIsSubmitting","currentUserEmail","email","currentName","displayName","handleChange","e","target","prevErrors","prevFormData","kycDoc","fetchKycData","folder_path","STORAGES","CREATORS_KYC_DOCUMENTS","aadharFiles","gstFiles","Promise","all","getAllFilesFromFolder","length","warn","fetchKycImages","excludedKeys","style","color","Container","className","margin","border","padding","Form","onSubmit","event","preventDefault","formFields","Object","keys","filter","key","includes","isValid","errorMessages","errorNum","forEach","field","push","alert","join","newHash","sortedData","sort","CryptoJS","toString","calculateHash","notifyEmails","metaData","user_name","dbPayload","postData","deleteAllImagesInFolder2","uploadImages4","progress","url","updateDocumentFields","USER","KycIdList","reset","textTransform","fields","availableField","find","undefined","Group","controlId","get","Control","as","placeholder","onChange","required","backgroundColor","paddingTop","paddingBottom","type","Label","marginRight","Button","disable","onClick","document","getElementById","click","cursor","id","accept","display","files","handleAadharUpload","fileURL","textDecoration","window","open","_Fragment","max","handleGstUpload","class","checked","for","href","readOnly","disabled","LinearProgress","KycStepper","React","useTheme","ThemeContext","Symbol","props","localTheme","outerTheme","output","_extends","mergeOuterLocalTheme","nested","Provider","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","arguments","resolvedTheme","mergedTheme","result","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","rtlValue","direction","MuiThemeProvider","StyledEngineThemeContext","RtlProvider","_excluded","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider","RtlContext","useRtl"],"sourceRoot":""}