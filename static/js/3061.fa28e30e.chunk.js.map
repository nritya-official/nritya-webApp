{"version":3,"file":"static/js/3061.fa28e30e.chunk.js","mappings":"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","sources":["Components/Kyc.js","Components/KycStepper.js","utils/validationUtils.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { saveDocument, updateDocumentFields, readDocument, uploadImages4, deleteAllImagesInFolder2, getAllFilesFromFolder } from '../utils/firebaseUtils.js';\nimport { STATUSES, COLLECTIONS, STORAGES } from '../constants.js';\nimport KycStepper from './KycStepper.js';\nimport CryptoJS from 'crypto-js';\nimport { validateField } from '../utils/validationUtils';\nimport { postData } from '../utils/common.js';\nimport './Kyc.css';\nimport { LinearProgress, Typography } from '@mui/material';\nimport indianCities from '../cities.json';\nimport indianStates from '../states.json';\n\nconst names_map = new Map([\n  [\"first_name\" , \"First Name\"],\n  [\"middle_last_name\" , \"Middle & Last Name\"],\n  [\"phone_number\" , \"Phone Number\"],\n  [\"street_address\" , \"Street Address\"],\n  [\"city\" , \"City\"],\n  [\"state_province\" , \"State\"],\n  [\"state\" , \"State\"],\n  [\"zip_pin_code\" , \"PIN Code/ZIP\"],\n  [\"aadhar\" , \"Aadhar Number\"],\n  [\"gstin\" , \"GST Number\"],\n  [\"comments\" , \"Remark(s)\"]\n  ])\n\n  const orderedKeys = [\n    ['first_name'],\n    ['middle_last_name'],\n    ['phone_number'],\n    ['street_address'],\n    ['city'],\n    ['state_province', 'state'], // Include this key, either of them is present\n    ['zip_pin_code']\n];\n\nconst locationOptions = indianCities.cities;\nconst stateOptions = indianStates.states;\n\nfunction Kyc() {\n  const [formData, setFormData] = useState({\n    first_name: '',\n    middle_last_name: '',\n    phone_number: '',\n    street_address: '',\n    city: '',\n    state_province: '',\n    zip_pin_code: '',\n    country: 'India',\n    aadhar: '',\n    gstin: '',\n    comments : '',\n    status: STATUSES.SUBMITTED,\n    tncAgreed: false,\n    hash: '',\n  });\n  const [kycData, setKycData] = useState(null);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [errors, setErrors] = useState({});\n  const user_id = JSON.parse(localStorage.getItem('userInfo'))?.UserId;\n  const kycId = `${user_id}_Kyc`;\n  const [filesAadhar, setFilesAadhar] = useState(null);\n  const [filesGst, setFilesGst] = useState(null);\n  const [newFilesAadhar, setNewFilesAadhar] = useState([]);\n  const [newFilesGst, setNewFilesGst] = useState([]);\n  const [hasTextChanged, setHasTextChanged] = useState(false);\n  const [progressAadhar, setProgressAadhar] = useState(-1);\n  const [progressGst, setProgressGst] = useState(-1);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\"))?.email;\n  const currentName = JSON.parse(localStorage.getItem(\"userInfo\"))?.displayName;\n\n\n  const calculateHash = (data) => {\n    const filteredData = Object.keys(data).filter(key => key !== 'hash' && key !== 'status');\n    const sortedData = filteredData.sort().map(key => `${key}:${data[key]}`).join('|');\n  // Calculate hash using SHA-256\n    return CryptoJS.SHA256(sortedData).toString();\n  };\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n  \n    // Perform field validation as the user types\n    const error = validateField(name, value);\n  \n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: error,\n    }));\n  \n    // Update form data\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleAadharUpload = (e) => {\n    setNewFilesAadhar(e.target.files[0]);  // Store the new files\n    setHasTextChanged(true);            // Mark that a change has occurred\n  };\n  \n  const handleGstUpload = (e) => {\n    setNewFilesGst(e.target.files[0]);  // Store the new files\n    setHasTextChanged(true);         // Mark that a change has occurred\n  };\n\n  const handleTnCAgreement = (e) => {\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      tncAgreed: e.target.checked,\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    try {\n\n      const formFields = Object.keys(formData).filter(\n          (key) => !['hash', 'status', 'country', 'comments', 'UserId'].includes(key)\n      );\n\n      let isValid = true;\n      let errorMessages = [];\n      let errorNum = 0;\n\n      formFields.forEach((field) => {\n          const error = validateField(field, formData[field]);\n          if (error) {\n              isValid = false;\n              errorNum = errorNum + 1;\n              errorMessages.push(`${errorNum}: ${error}`);\n              setErrors((prevErrors) => ({\n                  ...prevErrors,\n                  [field]: error,\n              }));\n          }\n      });\n\n      // If there are errors, prompt the user and stop the submission\n      if (!isValid) {\n          alert(`Please correct the following errors before submitting:\\n\\n${errorMessages.join('\\n')}`);\n          return;\n      }\n\n\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      const newHash = calculateHash(formData);\n      console.log(newHash,kycDoc?.hash)\n      const notifyEmails = currentUserEmail;\n      const metaData = {\n        user_name:currentName,\n        user_id: user_id,\n      }; \n      if (kycDoc) {\n        if (kycDoc.hash !== newHash) {\n          const dbPayload = {...formData,hash: newHash,}\n          const response = await postData(dbPayload, COLLECTIONS.USER_KYC, notifyEmails,metaData);\n          //alert(\"KYC updated successfully\");\n        } else {\n          //alert(\"No changes detected\");\n        }\n      } else {\n        // If no KYC record exists, create a new one\n        const dbPayload = {...formData,hash: newHash,}\n        const response = await postData(dbPayload, COLLECTIONS.USER_KYC, notifyEmails,metaData);\n        //alert(\"KYC added successfully\");\n      }\n      /*\n      if (newFilesAadhar) {\n        // Delete old files in the folder and upload the new files for Aadhar\n        console.log(newFilesAadhar)\n        await uploadImages3(STORAGES.CREATORS_KYC_DOCUMENTS, newFilesAadhar, user_id, \"Aadhar\");\n        alert(\"Aadhar files uploaded successfully\");\n      }\n  \n      if (newFilesGst) {\n        // Delete old files in the folder and upload the new files for GST\n        await uploadImages3(STORAGES.CREATORS_KYC_DOCUMENTS, newFilesGst, user_id, \"Gst\");\n        alert(\"GST files uploaded successfully\");\n      }\n        */\n      if (newFilesAadhar) {\n        console.log(newFilesAadhar)\n        await deleteAllImagesInFolder2(STORAGES.CREATORS_KYC_DOCUMENTS,user_id,\"Aadhar\");\n        setProgressAadhar(0)\n        await uploadImages4(\n          STORAGES.CREATORS_KYC_DOCUMENTS,\n          newFilesAadhar,\n          user_id,\n          \"Aadhar\",\n          (progress) => setProgressAadhar(progress), // Update Aadhar progress state\n          (url) => {\n            setFilesAadhar(url); // Reset or update state if necessary\n            console.log(url);\n          }\n        );\n        //alert(\"Aadhar files uploaded successfully\");\n      }\n  \n      if (newFilesGst) {\n        console.log(newFilesGst)\n        await deleteAllImagesInFolder2(STORAGES.CREATORS_KYC_DOCUMENTS,user_id,\"Gst\");\n        setProgressGst(0);\n        await uploadImages4(\n          STORAGES.CREATORS_KYC_DOCUMENTS,\n          newFilesGst,\n          user_id,\n          \"Gst\",\n          (progress) => setProgressGst(progress), // Update GST progress state\n          (url) => {\n            setFilesGst(url); // Collect download URLs\n            console.log(url);\n            //setNewFilesGst(null); // Reset or update state if necessary\n          }\n        );\n        //alert(\"GST files uploaded successfully\");\n      }\n  \n  \n\n      await updateDocumentFields(COLLECTIONS.USER, user_id, {\n        KycIdList: { [kycId]: formData.status },\n      });\n\n      event.target.reset();\n    } catch (error) {\n      console.error(\"Error processing KYC: \", error);\n    } finally{\n      setIsSubmitting(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchKycData = async () => {\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      if (kycDoc) {\n        setKycData(kycDoc);\n        setFormData({ ...kycDoc, status: kycDoc.status || STATUSES.SUBMITTED });\n      } else {\n        setKycData(null);\n      }\n    };\n    const fetchKycImages = async () => {\n      const folder_path = `${STORAGES.CREATORS_KYC_DOCUMENTS}/${user_id}`\n      try {\n        // Fetch both Aadhar and GST files concurrently\n        const [aadharFiles, gstFiles] = await Promise.all([\n                  getAllFilesFromFolder(`${folder_path}/Aadhar/`),\n                  getAllFilesFromFolder(`${folder_path}/Gst/`)\n        ]);\n\n        // Check if files are fetched successfully\n        if (aadharFiles && aadharFiles.length > 0) {\n            setFilesAadhar(aadharFiles);\n        } else {\n            setFilesAadhar(null); // Set to empty if no files found\n            console.warn(\"No Aadhar documents found.\");\n        }\n\n        if (gstFiles && gstFiles.length > 0) {\n            setFilesGst(gstFiles);\n        } else {\n            setFilesGst(null); // Set to empty if no files found\n            console.warn(\"No GST documents found.\");\n        }\n      } catch (error) {\n          console.error(\"Error fetching KYC documents:\", error);\n      }\n\n    }\n\n    fetchKycData();\n    fetchKycImages();\n  }, [kycId]);\n  const excludedKeys = ['status', 'hash', 'country', 'tncAgreed', 'comments', 'UserId', 'gstin', 'aadhar'];\n  return (\n    <div style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n      <Container className=\"glassmorphic-container\" style={{ margin: 'auto', border: isDarkModeOn ? '1px solid white' : '1px solid black', borderRadius: '5px', padding: '20px' }}>\n        <Form onSubmit={handleSubmit}>\n          <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform: 'capitalize' }}>Verify yourself</h1>\n          <div className=\"row\">\n          { orderedKeys.map((fields) => {\n              // Check which field is present in formData and not excluded\n              const availableField = fields.find(field => !excludedKeys.includes(field) && formData[field] !== undefined);\n              \n              // If an available field is found, render it\n              return availableField ? (\n                  <div className=\"col-md-6 col-lg-4\" key={availableField}>\n                      <Form.Group controlId={`formBasic${availableField}`}>\n                          <Typography style={{color: isDarkModeOn ? 'white' : 'black'}}>{names_map.get(availableField)}</Typography>\n                          {['city', 'state_province'].includes(availableField) ? <Form.Control\n                              as=\"select\"\n                              placeholder={`Enter ${names_map.get(availableField)}`}\n                              name={availableField}\n                              value={formData[availableField]}\n                              onChange={handleChange}\n                              required\n                              className=\"glassmorphic-input\"\n                              style={{\n                                  backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                                  color: isDarkModeOn ? 'white' : 'black',\n                                  paddingTop: 0,\n                                  paddingBottom: 0,\n                              }}\n                          >\n                            <option value=\"\">Select a {names_map.get(availableField)}</option>\n                              {[...(availableField === 'city' ? locationOptions : stateOptions)].map((city, index) => (\n                                  <option key={index} value={city}>\n                                      {city}\n                                  </option>\n                              ))}\n                            </Form.Control> : <Form.Control\n                                  type={availableField === 'age' || availableField === 'phone_number' ? 'number' : 'text'}\n                                  placeholder={`Enter ${names_map.get(availableField)}`}\n                                  name={availableField}\n                                  value={formData[availableField]}\n                                  onChange={handleChange}\n                                  required\n                                  className=\"glassmorphic-input\"\n                                  style={{\n                                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                                      color: isDarkModeOn ? 'white' : 'black',\n                                  }}\n                              />\n                            }\n                          {errors[availableField] && <span style={{ color: 'red' }}>{errors[availableField]}</span>} {/* Show validation error */}\n                      </Form.Group>\n                  </div>\n              ) : null; // Return null if no field is available\n          })}\n\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-4\">\n              <Form.Group controlId=\"formBasicAadhar\">\n                <Form.Label style={{color: isDarkModeOn ? 'white' : 'black'}}>Aadhar</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Aadhar Number\"\n                    name=\"aadhar\"\n                    className=\"glassmorphic-input\"\n                    value={formData.aadhar}\n                    onChange={handleChange}\n                    style={{\n                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                      color: isDarkModeOn ? 'white' : 'black',\n                      marginRight: '10px'\n                    }}\n                  />\n                  <Button disable={formData.status === \"Verified\"} variant=\"light\" onClick={() => document.getElementById('aadharUpload').click()} style={{ \n                         \n                        padding: '0.5rem', \n                        backgroundColor: isDarkModeOn ? '#333' : '#f8f9fa', // Dark mode background\n                        color: isDarkModeOn ? 'white' : 'black', // Dark mode text color\n                        cursor: 'pointer'\n                    }}>\n                    Upload\n                  </Button>\n                  <input\n                    type=\"file\"\n                    id=\"aadharUpload\"\n                    accept=\".pdf\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => handleAadharUpload(e)}\n                  />\n                </div>\n                {filesAadhar && filesAadhar.length > 0 && filesAadhar[0].fileURL ? (\n                  <Button \n                      variant=\"link\" \n                      style={{ color: '#007bff', textDecoration: 'none' }} \n                      onClick={() => window.open(filesAadhar[0].fileURL, '_blank')}\n                  >\n                      Download Aadhar Document\n                  </Button>\n              ) : (\n               <p style={{color: isDarkModeOn ? 'white' : 'black'}}>{newFilesAadhar?.name || \"No new Aadhar file uploaded.\"}</p>\n              )}\n              </Form.Group>\n              {errors['aadhar'] && <span style={{ color: 'red' }}>{errors['aadhar']}</span>}\n              <div>\n                {progressAadhar>=0&&<>\n                  <progress value={progressAadhar} max=\"100\" /> \n                  <p>{progressAadhar}% uploaded</p>\n                </>}\n              </div>\n              \n\n            </div>\n          </div>\n          <div className=\"row\">         \n            <div className=\"col-md-6 col-lg-4\">\n              <Form.Group controlId=\"formBasicGst\">\n                <Form.Label style={{color: isDarkModeOn ? 'white' : 'black'}}>GST</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter GST Number\"\n                    name=\"gstin\"\n                    value={formData.gstin}\n                    onChange={handleChange}\n                    className=\"glassmorphic-input\"\n                    style={{\n                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                      color: isDarkModeOn ? 'white' : 'black',\n                      marginRight: '10px'\n                    }}\n                  />\n                  <Button disable={formData.status === \"Verified\"} variant=\"light\" onClick={() => document.getElementById('gstUpload').click()}  style={{ \n                         \n                         padding: '0.5rem', \n                        backgroundColor: isDarkModeOn ? '#333' : '#f8f9fa', // Dark mode background\n                        color: isDarkModeOn ? 'white' : 'black', // Dark mode text color\n                        cursor: 'pointer'\n                    }}>\n                    Upload\n                  </Button>\n                  <input\n                    type=\"file\"\n                    id=\"gstUpload\"\n                    accept=\".pdf\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => handleGstUpload(e)}\n                  />\n                </div>\n                {filesGst && filesGst.length > 0 && filesGst[0].fileURL ? (\n                  <Button \n                      variant=\"link\" \n                      style={{ color: '#007bff', textDecoration: 'none' }} \n                      onClick={() => window.open(filesGst[0].fileURL, '_blank')}\n                  >\n                      Download GST Document\n                  </Button>\n              ) : (\n                   <p style={{color: isDarkModeOn ? 'white' : 'black'}}> {newFilesGst?.name || \"No new GST file uploaded.\"}</p>\n              )}\n              </Form.Group>\n              {errors['gstin'] && <span style={{ color: 'red' }}>{errors['gstin']}</span>}\n              <div>\n                {progressGst>=0&&<>\n                  <progress value={progressGst} max=\"100\" /> \n                  <p>{progressGst}% uploaded</p>\n                </>}\n              </div>\n              \n            </div>\n          </div>\n\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"tnc-switch\" checked={formData.tncAgreed}\n            onChange={handleTnCAgreement}/>\n            <label class=\"form-check-label\" for=\"exampleCheck1\">\n            <span style={{color: isDarkModeOn ? 'white' : 'black'}}>\n                I agree to the <a href=\"#/npoliciesStudio\" style={{ color: isDarkModeOn ? 'lightblue' : 'blue' }}>Terms and Conditions. Click to read.</a>\n              </span>\n            </label>\n          </div>\n          <br/>\n          {formData.comments && (\n            <div className=\"col-md-12 col-lg-12\">\n              <br/>\n              <Form.Group controlId=\"formBasicComments\">\n                <Form.Label>{names_map.get('comments')}</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"comments\"\n                  value={formData.comments}\n                  readOnly\n                  style={{\n                    backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                    color: isDarkModeOn ? 'white' : 'black'\n                  }}\n                />\n              </Form.Group>\n            </div>\n          )}\n          <Button variant=\"info\" type=\"submit\" disabled={formData.status === \"Verified\" || !formData.tncAgreed}          >\n            Submit\n          </Button>\n\n        </Form>\n        {isSubmitting && <LinearProgress/>}\n        <br/>\n        <>\n          {formData.hash && <KycStepper kycId={kycId} status={formData.status} />}\n        </>\n      </Container>\n      <br />\n    </div>\n    \n  );\n}\n\nexport default Kyc;\n","import { useSelector } from \"react-redux\";\nimport { Stepper, Step, StepLabel } from \"@mui/material\";\n\nimport { STATUSES } from \"../constants\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\n\nconst stages = [\n  STATUSES.SUBMITTED,\n  STATUSES.UNDER_REVIEW,\n  STATUSES.REVIEWED,\n  STATUSES.VERIFIED,\n];\nconst map = {\n  [STATUSES.SUBMITTED]: 0,\n  [STATUSES.UNDER_REVIEW]: 1,\n  [STATUSES.REVIEWED]: 2,\n  [STATUSES.VERIFIED]: 3,\n  [STATUSES.VERIFICATION_FAILED]: 3,\n};\n\nconst KycStepper = ({ status }) => {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const primaryColor = \"#67569E\";\n  const textColor = isDarkModeOn ? \"white\" : \"black\";\n\n  return (\n    <Stepper\n      activeStep={map[status]}\n      alternativeLabel\n      sx={{\n        my: 3,\n        \"& .MuiStepLabel-iconContainer .Mui-completed\": {\n          color: primaryColor,\n        },\n        \"& .MuiStepLabel-iconContainer .Mui-active\": {\n          color: primaryColor,\n        },\n        \"& .MuiStepLabel-label\": {\n          color: textColor,\n          letterSpacing: \"0.85px\",\n          fontFamily: \"Nunito Sans\",\n          fontWeight: 500,\n          fontSize: \"16.98px\",\n\n          \"&.Mui-error\": {\n            color: \"error.main\",\n          },\n        },\n      }}\n    >\n      {stages.map((stage, index) => (\n        <Step key={index}>\n          <StepLabel\n            error={\n              stage === STATUSES.VERIFIED &&\n              status === STATUSES.VERIFICATION_FAILED\n            }\n          >\n            {stage === STATUSES.VERIFIED &&\n            status === STATUSES.VERIFICATION_FAILED\n              ? \"Failed Verification\"\n              : stage}\n          </StepLabel>\n        </Step>\n      ))}\n    </Stepper>\n  );\n};\n\nexport default KycStepper;\n","export const validateField = (name, value) => {\n  let error = \"\";\n  const trimmedValue = typeof value === \"string\" ? value.trim() : value;\n\n  switch (name) {\n    case \"first_name\":\n      if (!trimmedValue) {\n        error = \"First name is required.\";\n      }\n      break;\n\n    case \"middle_last_name\":\n      if (!trimmedValue) {\n        error = \"Last name is required.\";\n      }\n      break;\n\n    case \"street_address\":\n      if (!trimmedValue) {\n        error = \"Street address is required.\";\n      }\n      break;\n\n    case \"city\":\n      if (!trimmedValue) {\n        error = \"City is required.\";\n      }\n      break;\n\n    case \"state_province\":\n      if (!trimmedValue) {\n        error = \"State is required.\";\n      }\n      break;\n\n    case \"zip_pin_code\":\n      if (!trimmedValue || !/^\\d{6}$/.test(trimmedValue)) {\n        error = \"ZIP/Pin code must be exactly 6 digits.\";\n      }\n      break;\n\n    case \"phone_number\":\n      if (!trimmedValue || !/^\\d{10}$/.test(trimmedValue)) {\n        error = \"Phone number must be a valid 10-digit number.\";\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  return error;\n};\n","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["names_map","Map","orderedKeys","locationOptions","indianCities","stateOptions","indianStates","_JSON$parse","_JSON$parse2","_JSON$parse3","formData","setFormData","useState","first_name","middle_last_name","phone_number","street_address","city","state_province","zip_pin_code","country","aadhar","gstin","comments","status","STATUSES","SUBMITTED","tncAgreed","hash","kycData","setKycData","isDarkModeOn","useSelector","selectDarkModeStatus","errors","setErrors","user_id","JSON","parse","localStorage","getItem","UserId","kycId","concat","filesAadhar","setFilesAadhar","filesGst","setFilesGst","newFilesAadhar","setNewFilesAadhar","newFilesGst","setNewFilesGst","hasTextChanged","setHasTextChanged","progressAadhar","setProgressAadhar","progressGst","setProgressGst","isSubmitting","setIsSubmitting","currentUserEmail","email","currentName","displayName","handleChange","e","name","value","target","error","validateField","prevErrors","prevFormData","useEffect","async","kycDoc","readDocument","COLLECTIONS","USER_KYC","fetchKycData","folder_path","STORAGES","CREATORS_KYC_DOCUMENTS","aadharFiles","gstFiles","Promise","all","getAllFilesFromFolder","length","console","warn","fetchKycImages","excludedKeys","_jsxs","style","color","children","Container","className","margin","border","borderRadius","padding","Form","onSubmit","event","preventDefault","formFields","Object","keys","filter","key","includes","isValid","errorMessages","errorNum","forEach","field","push","alert","join","newHash","data","sortedData","sort","map","CryptoJS","toString","calculateHash","log","notifyEmails","metaData","user_name","dbPayload","postData","deleteAllImagesInFolder2","uploadImages4","progress","url","updateDocumentFields","USER","KycIdList","reset","_jsx","textTransform","fields","availableField","find","undefined","Group","controlId","Typography","get","Control","as","placeholder","onChange","required","backgroundColor","paddingTop","paddingBottom","index","type","Label","marginRight","Button","disable","variant","onClick","document","getElementById","click","cursor","id","accept","display","files","handleAadharUpload","fileURL","textDecoration","window","open","_Fragment","max","handleGstUpload","class","checked","for","href","readOnly","disabled","LinearProgress","KycStepper","stages","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","_ref","primaryColor","textColor","Stepper","activeStep","alternativeLabel","sx","my","letterSpacing","fontFamily","fontWeight","fontSize","stage","Step","StepLabel","trimmedValue","trim","test","_excluded","useButtonProps","_ref2","tagName","rel","role","tabIndex","meta","handleClick","isTrivialHref","stopPropagation","onKeyDown","React","ref","asProp","props","source","excluded","i","sourceKeys","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","bsPrefix","size","active","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}