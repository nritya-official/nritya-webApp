{"version":3,"file":"static/js/5422.ce9af65d.chunk.js","mappings":"8RAMA,MAAMA,GAAQC,EAAAA,EAAAA,KAkDd,EAhDgBC,KACd,MAAMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAE3BC,EAAU,GAEhB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAACR,MAAOA,EAAMS,UAC1BC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CACRC,GAAI,CACFC,QAASb,EAAMc,QAAQ,GACvBC,gBAAiBZ,EAAe,UAAY,QAC5Ca,MAAOb,EAAe,QAAU,QAChCc,UAAW,QACXR,SAAA,EAEFF,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CACTC,QAAQ,KACRP,GAAI,CAAEQ,aAAcpB,EAAMc,QAAQ,GAAIE,MAAOb,EAAe,QAAUH,EAAMqB,QAAQC,QAAQC,MAAOd,SACpG,iBAGmB,IAAnBH,EAAQkB,QACPjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAG,CAACb,GAAI,CAAEc,UAAW,SAAUC,UAAW3B,EAAMc,QAAQ,IAAKL,UAC5DF,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAACC,QAAQ,KAAKP,GAAI,CAAEI,MAAOb,EAAe,QAAU,SAAUM,SAAC,iCAK5EF,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAAChB,GAAI,CAAEC,QAASb,EAAMc,QAAQ,GAAIC,gBAAiBZ,EAAe,OAAS,QAASa,MAAOb,EAAe,QAAU,SAAUM,UAClIF,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAAApB,SACFH,EAAQwB,KAAI,CAACC,EAAKC,KACjBzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAQ,CAAAxB,UACPF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAY,CACXZ,QAASS,EAAII,MACbC,UAAWL,EAAIM,YACfC,uBAAwB,CAAEC,MAAO,CAAEvB,MAAOb,EAAe,QAAU,UACnEqC,yBAA0B,CAAED,MAAO,CAAEvB,MAAOb,EAAe,QAAU,aAL1D6B,aAaX,C,gKChDpB,MAAMS,EAAY,CAAC,WAAY,YAAa,oBAAqB,QAAS,UAAW,yBAA0B,YAAa,4BA2BtHC,GAAmBC,EAAAA,EAAAA,IAAO,MAAO,CACrCC,KAAM,kBACNC,KAAM,OACNC,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAAC,CACN,CAAC,MAADG,OAAOC,EAAAA,EAAoB7B,UAAY0B,EAAO1B,SAC7C,CACD,CAAC,MAAD4B,OAAOC,EAAAA,EAAoBf,YAAcY,EAAOZ,WAC/CY,EAAOI,KAAMH,EAAWI,OAASL,EAAOK,MAAOJ,EAAW3B,SAAW2B,EAAWb,WAAaY,EAAOM,UAAWL,EAAWM,OAASP,EAAOO,MAAM,GAX9HZ,EAatBa,IAAA,IAAC,WACFP,GACDO,EAAA,OAAKC,EAAAA,EAAAA,GAAS,CACbC,KAAM,WACNC,SAAU,EACVhC,UAAW,EACXP,aAAc,GACb6B,EAAW3B,SAAW2B,EAAWb,WAAa,CAC/CT,UAAW,EACXP,aAAc,GACb6B,EAAWI,OAAS,CACrBO,YAAa,IACb,IAgHF,EA/GkCC,EAAAA,YAAiB,SAAsBC,EAASC,GAChF,MAAMhB,GAAQiB,EAAAA,EAAAA,GAAc,CAC1BjB,MAAOe,EACPlB,KAAM,qBAEF,SACFnC,EAAQ,UACRwD,EAAS,kBACTC,GAAoB,EAAK,MACzBb,GAAQ,EACR/B,QAAS6C,EAAW,uBACpB7B,EACAF,UAAWgC,EAAa,yBACxB5B,GACEO,EACJsB,GAAQC,EAAAA,EAAAA,GAA8BvB,EAAON,IACzC,MACJc,GACEM,EAAAA,WAAiBU,EAAAA,GACrB,IAAIjD,EAAyB,MAAf6C,EAAsBA,EAAc1D,EAC9C2B,EAAYgC,EAChB,MAAMnB,GAAaQ,EAAAA,EAAAA,GAAS,CAAC,EAAGV,EAAO,CACrCmB,oBACAb,QACA/B,UAAWA,EACXc,YAAaA,EACbmB,UAEIiB,EArEkBvB,KACxB,MAAM,QACJuB,EAAO,MACPnB,EAAK,QACL/B,EAAO,UACPc,EAAS,MACTmB,GACEN,EACEwB,EAAQ,CACZrB,KAAM,CAAC,OAAQC,GAAS,QAASE,GAAS,QAASjC,GAAWc,GAAa,aAC3Ed,QAAS,CAAC,WACVc,UAAW,CAAC,cAEd,OAAOsC,EAAAA,EAAAA,GAAeD,EAAOE,EAAAA,EAA6BH,EAAQ,EAwDlDI,CAAkB3B,GAqBlC,OApBe,MAAX3B,GAAmBA,EAAQuD,OAAS3D,EAAAA,GAAegD,IACrD5C,GAAuBf,EAAAA,EAAAA,KAAKW,EAAAA,GAAYuC,EAAAA,EAAAA,GAAS,CAC/CtC,QAASoC,EAAQ,QAAU,QAC3BU,UAAWO,EAAQlD,QACnBwD,UAAqC,MAA1BxC,GAAkCA,EAAuBnB,aAAU4D,EAAY,OAC1FC,QAAS,SACR1C,EAAwB,CACzB7B,SAAUa,MAGG,MAAbc,GAAqBA,EAAUyC,OAAS3D,EAAAA,GAAegD,IACzD9B,GAAyB7B,EAAAA,EAAAA,KAAKW,EAAAA,GAAYuC,EAAAA,EAAAA,GAAS,CACjDtC,QAAS,QACT8C,UAAWO,EAAQpC,UACnBpB,MAAO,iBACPgE,QAAS,SACRxC,EAA0B,CAC3B/B,SAAU2B,OAGM1B,EAAAA,EAAAA,MAAMgC,GAAkBe,EAAAA,EAAAA,GAAS,CACnDQ,WAAWgB,EAAAA,EAAAA,GAAKT,EAAQpB,KAAMa,GAC9BhB,WAAYA,EACZc,IAAKA,GACJM,EAAO,CACR5D,SAAU,CAACa,EAASc,KAExB,G","sources":["Screens/JobHire.js","../node_modules/@mui/material/ListItemText/ListItemText.js"],"sourcesContent":["import React from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Box, Paper } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\n\nconst theme = createTheme();\n\nconst JobHire = () => {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const jobList = []; // Example job list. Replace with actual job data from state or props.\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container\n        sx={{\n          padding: theme.spacing(4),\n          backgroundColor: isDarkModeOn ? '#202020' : 'white',\n          color: isDarkModeOn ? 'white' : 'black',\n          minHeight: '75vh',\n        }}\n      >\n        <Typography\n          variant=\"h5\"\n          sx={{ marginBottom: theme.spacing(2), color: isDarkModeOn ? 'white' : theme.palette.primary.main }}\n        >\n          Job Openings\n        </Typography>\n        {jobList.length === 0 ? (\n          <Box sx={{ textAlign: 'center', marginTop: theme.spacing(4) }}>\n            <Typography variant=\"h6\" sx={{ color: isDarkModeOn ? 'white' : 'black' }}>\n              Job openings coming soon!\n            </Typography>\n          </Box>\n        ) : (\n          <Paper sx={{ padding: theme.spacing(2), backgroundColor: isDarkModeOn ? '#333' : 'white', color: isDarkModeOn ? 'white' : 'black' }}>\n            <List>\n              {jobList.map((job, index) => (\n                <ListItem key={index}>\n                  <ListItemText\n                    primary={job.title}\n                    secondary={job.description}\n                    primaryTypographyProps={{ style: { color: isDarkModeOn ? 'white' : 'black' } }}\n                    secondaryTypographyProps={{ style: { color: isDarkModeOn ? 'white' : 'black' } }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default JobHire;\n","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;"],"names":["theme","createTheme","JobHire","isDarkModeOn","useSelector","selectDarkModeStatus","jobList","_jsx","ThemeProvider","children","_jsxs","Container","sx","padding","spacing","backgroundColor","color","minHeight","Typography","variant","marginBottom","palette","primary","main","length","Box","textAlign","marginTop","Paper","List","map","job","index","ListItem","ListItemText","title","secondary","description","primaryTypographyProps","style","secondaryTypographyProps","_excluded","ListItemTextRoot","styled","name","slot","overridesResolver","props","styles","ownerState","concat","listItemTextClasses","root","inset","multiline","dense","_ref","_extends","flex","minWidth","paddingLeft","React","inProps","ref","useThemeProps","className","disableTypography","primaryProp","secondaryProp","other","_objectWithoutPropertiesLoose","ListContext","classes","slots","composeClasses","getListItemTextUtilityClass","useUtilityClasses","type","component","undefined","display","clsx"],"sourceRoot":""}