{"version":3,"file":"static/js/865.2f3f1964.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/Icon/iconClasses.js","../node_modules/@mui/material/Icon/Icon.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/node_modules/reselect/src/utils.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/lruMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/weakMapMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createSelectorCreator.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createStructuredSelector.ts","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/resolveProps/resolveProps.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/utils/platform.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/GridHeaders.js","../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-internals/EventManager/EventManager.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-internals/throttle/throttle.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/material/Toolbar/toolbarClasses.js","../node_modules/@mui/material/Toolbar/Toolbar.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from '../FormControl';\nimport Stack from '../Stack';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(Stack, {\n      display: \"block\",\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconUtilityClass(slot) {\n  return generateUtilityClass('MuiIcon', slot);\n}\nconst iconClasses = generateUtilityClasses('MuiIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default iconClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"baseClassName\", \"className\", \"color\", \"component\", \"fontSize\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getIconUtilityClass } from './iconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(36)\n  }[ownerState.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: (theme.vars || theme).palette.primary.main,\n    secondary: (theme.vars || theme).palette.secondary.main,\n    info: (theme.vars || theme).palette.info.main,\n    success: (theme.vars || theme).palette.success.main,\n    warning: (theme.vars || theme).palette.warning.main,\n    action: (theme.vars || theme).palette.action.active,\n    error: (theme.vars || theme).palette.error.main,\n    disabled: (theme.vars || theme).palette.action.disabled,\n    inherit: undefined\n  }[ownerState.color]\n}));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n      baseClassName = 'material-icons',\n      className,\n      color = 'inherit',\n      component: Component = 'span',\n      fontSize = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, _extends({\n    as: Component,\n    className: clsx(baseClassName,\n    // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default Icon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: `capitalize(string)` expects a string argument.' : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","/**\n * WARNING: Don't import this directly. It's imported by the code generated by\n * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`\n * constructors to ensure the plugin works as expected. Supported patterns include:\n *   throw new Error('My message');\n *   throw new Error(`My message: ${foo}`);\n *   throw new Error(`My message: ${foo}` + 'another string');\n *   ...\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code, ...args) {\n  const url = new URL(`https://mui.com/production-error/?code=${code}`);\n  args.forEach(arg => url.searchParams.append('args[]', arg));\n  return `Minified MUI error #${code}; visit ${url} for the full message.`;\n}","/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from \"../ClassNameGenerator/index.js\";\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from \"../generateUtilityClass/index.js\";\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","export const gridDimensionsSelector = state => state.dimensions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from \"../useEnhancedEffect/index.js\";\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","'use client';\n\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\nimport useOnMount from \"../useOnMount/useOnMount.js\";\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = null;\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== null) {\n      clearTimeout(this.currentId);\n      this.currentId = null;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? reactId;\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value: Boolean(value)\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","/**\n * Get a list column definition\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = selectableIds;\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.push(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = [];\n      }\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      const addRow = rowId => {\n        selectionLookup[rowId] = rowId;\n      };\n      const removeRow = rowId => {\n        delete selectionLookup[rowId];\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const isFirstRender = React.useRef(true);\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    if (isFirstRender.current) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (filteredRowsLookup[id] !== true) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n    if (hasChanged || isNestedData && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (isNestedData) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n  }, []);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const virtualScrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const virtualScrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && virtualScrollbarHorizontalRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      virtualScrollbarHorizontalRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && virtualScrollbarVerticalRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      virtualScrollbarVerticalRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, virtualScrollbarHorizontalRef, virtualScrollbarVerticalRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import ownerDocument from \"../ownerDocument/index.js\";\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set(['__check__', '__reorder__', '__detail_panel_toggle__']);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  })\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"disabled\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { isHostComponent } from '@mui/base/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  var _slotProps$select;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = (_slotProps$select = slotProps == null ? void 0 : slotProps.select) != null ? _slotProps$select : SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !selectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, selectProps, {\n        classes: _extends({}, selectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        }),\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (error) {\n      if (error instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw error;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../constants/gridDetailPanelToggleField.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};"],"names":["getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","styled","name","overridesResolver","props","styles","ownerState","concat","formControlLabelClasses","label","root","capitalize","labelPlacement","_ref2","theme","_extends","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","disabled","flexDirection","color","vars","palette","text","AsteriskComponent","asterisk","_ref3","error","main","React","inProps","ref","_ref","_slotProps$typography","useThemeProps","className","componentsProps","control","disabledProp","disableTypography","labelProp","required","requiredProp","slotProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","classes","slots","composeClasses","useUtilityClasses","typographySlotProps","typography","type","Typography","_jsx","component","clsx","children","_jsxs","Stack","getIconUtilityClass","IconRoot","fontSize","userSelect","width","height","overflow","textAlign","flexShrink","inherit","small","pxToRem","medium","large","primary","secondary","info","success","warning","action","active","undefined","Icon","baseClassName","Component","as","muiName","ListItemTextRoot","listItemTextClasses","inset","multiline","dense","flex","minWidth","marginTop","marginBottom","paddingLeft","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","ListContext","getListItemTextUtilityClass","variant","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","size","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","position","opacity","top","left","margin","zIndex","autoFocus","checked","checkedProp","checkedIcon","defaultChecked","disableFocusRipple","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","tabIndex","value","setCheckedState","useControlled","controlled","default","Boolean","state","hasLabelFor","input","centerRipple","focusRipple","role","event","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","d","string","Error","code","url","URL","_len","arguments","length","args","Array","_key","arg","searchParams","append","_formatMuiErrorMessage","charAt","toUpperCase","slice","getUtilityClass","output","slotName","buffer","start","i","useForkRef","refs","every","instance","current","setRef","window","defaultGenerator","componentName","createClassNameGenerator","generate","configure","generator","reset","globalStateClasses","completed","expanded","focused","focusVisible","open","selected","globalStatePrefix","globalStateClass","ClassNameGenerator","result","getDataGridUtilityClass","gridClasses","is","Object","fastObjectShallowCompare","a","b","aLength","bLength","_","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","useOnMount","fn","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","defaultCompare","objectShallowCompare","createRefs","equals","useGridSelector","didInit","setState","store","subscribe","newState","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","join","gridDimensionsSelector","dimensions","columnHeaderStyles","c","iconButtonContainer","visibility","menuIcon","separatorIconDragStyles","rx","x","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","_t$mixins$MuiDataGrid","_t$mixins$MuiDataGrid2","_t$mixins$MuiDataGrid3","_t$mixins$MuiDataGrid4","t","borderColor","TableCell","border","mode","lighten","alpha","divider","darken","radius","shape","containerBackground","background","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedHoverOpacity","selectedBackground","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","backgroundColor","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","fontWeightMedium","boxSizing","borderWidth","borderStyle","body2","outline","minHeight","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","columnHeaderTitleContainerContent","whiteSpace","maxWidth","groupingCriteriaCell","outlineOffset","focusOutlineWidth","hasScrollX","hasScrollY","scrollbarSize","justifyContent","transition","transitions","create","duration","shorter","gap","spacing","borderBottomWidth","borderBottomStyle","columnHeaders","right","columnSeparatorOffset","touchAction","pointerEvents","shortest","borderBottom","filler","scrollbarFiller","breakInside","rowSkeleton","lineHeight","borderTop","textOverflow","borderTopColor","cellEmpty","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","virtualScrollerContent","cellOffsetLeft","alignSelf","groupingCriteriaCellToggle","pinnedRows","virtualScroller","overlay","gamma","f","o","Math","round","decomposeColor","overlayColor","rgb","values","recomposeColor","removeOpacity","GridRootPropsContext","useGridRootProps","contextValue","NOT_FOUND","Symbol","assertIsFunction","func","errorMessage","TypeError","ensureIsArray","item","isArray","getDependencies","createSelectorArgs","dependencies","array","itemTypes","map","assertIsArrayOfFunctions","getPrototypeOf","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","cache","entry","get","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","resetResultsCount","Ref","WeakRef","constructor","deref","this","UNTERMINATED","TERMINATED","createCacheNode","s","v","p","weakMapMemoize","options","fnNode","lastResult","cacheNode","l","objectCache","WeakMap","objectNode","set","primitiveCache","Map","primitiveNode","terminatedNode","_lastResult$deref","_lastResult","_lastResult$deref2","lastResultValue","call","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","push","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","keys","structuredSelector","_len3","_key4","reduce","composition","index","reselectCreateSelector","checkIsAPIRef","DEFAULT_INSTANCE_ID","e","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","GridRoot","rootProps","handleRef","rootElementRef","showCellVerticalBorder","toolbar","mountedState","setMountedState","useEnhancedEffect","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridVisibleColumnFieldsSelector","visibleColumns","gridVisiblePinnedColumnDefinitionsSelector","pinnedColumns","isRtl","model","visibleColumnFields","visiblePinnedFields","invert","_pinnedColumns$left","_pinnedColumns$right","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","acc","gridHasColSpanSelector","some","colSpan","gridPreferencePanelStateSelector","preferencePanel","GridPreferencePanelsValue","GridApiContext","useGridApiContext","GridPreferencesPanel","_preferencePanelState","_rootProps$slotProps","_rootProps$slotProps2","preferencePanelState","panelContent","unstable_applyPipeProcessors","openedPanelValue","filters","panel","basePopper","panelId","labelId","GridHeader","fastMemo","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","details","_handlerRef$current","defaultMuiPrevented","subscribeEvent","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","Timeout","_defineProperty","currentId","delay","useTimeout","disposeEffect","resolveProps","defaultProps","prototype","hasOwnProperty","propName","defaultSlotProps","slotKey","slotPropName","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","valueState","setValueState","handleChange","async","newValue","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","endAdornment","loadIcon","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","sorting","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","Number","gridDateComparator","globalId","maybeReactUseId","useId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","GridFilterInputValue","_item$value","applyValue","focusElementRef","clearButton","InputProps","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","String","filterDebounceMs","newItem","fromInput","_item$value2","baseTextField","getLocaleText","placeholder","InputLabelProps","shrink","isFunction","isObject","escapeRegExp","replace","clamp","min","max","range","from","to","isDeepEqual","entriesA","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","toString","deepClone","obj","structuredClone","JSON","parse","stringify","_excluded2","GridFilterInputMultipleValue","helperText","TextFieldProps","itemValue","filterItemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","operator","filterOperators","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","filterItem","_filterItem$value","parser","ignoreDiacritics","newFilterItem","filterOperator","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","_filterModel$quickFil","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","_filterModel$quickFil2","_filterModel$quickFil3","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","_isRowMatchingFilterI","_isRowMatchingQuickFi","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","filterRegex","matches","test","createEqualityFilterFn","sensitivity","usage","isEqual","compare","createEmptyFilterFn","isEmpty","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","align","InputComponent","requiresFilterValue","val","getGridStringOperators","renderEditCell","columnValue","getRowFormattedValue","parseNumericValue","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNaN","isNumber","toLocaleString","InputComponentProps","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","renderEditDateCell","throwIfNotDateObject","columnType","rowId","GRID_DATE_COL_DEF","gridDateFormatter","getRowId","toLocaleDateString","pastedValueParser","GRID_DATETIME_COL_DEF","gridDateTimeFormatter","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","_rawPinnedRows$bottom","_rawPinnedRows$bottom2","_rawPinnedRows$top$ma","_rawPinnedRows$top","rawPinnedRows","bottom","rowEntry","_rowEntry$model","_rowEntry$model2","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","_ref4","_previousCache$update","_previousCache$update2","_previousCache$update3","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","getMinimalContentHeight","rowHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","htmlFor","baseCheckbox","BooleanOperatorContainer","GridFilterInputBoolean","_baseSelectProps$nati","_rootProps$slotProps3","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","gridBooleanFormatter","valueAsBoolean","toLowerCase","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","MenuProps","otherBaseSelectProps","_inputRef$current","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","_resolvedColumn","_resolvedColumn2","_rootProps$slotProps4","resolvedColumn","currentValueOptions","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","GridMenuRoot","Popper","menu","modal","transformOrigin","GridMenu","onExited","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","document","activeElement","HTMLElement","handleClickAway","contains","anchorEl","placement","TransitionProps","ClickAwayListener","onClickAway","mouseEvent","Grow","style","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useRtl","menuId","buttonId","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","handleButtonClick","onClick","onKeyDown","getNewIndex","direction","_options","indexMod","newIndex","preventDefault","stopPropagation","button","touchRippleRef","baseIconButton","showMenu","moreActionsIcon","MenuList","autoFocusItem","closeMenu","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","_headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","unwrappedGroupingModel","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","number","dateTime","boolean","singleSelect","custom","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","viewportOuterSize","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","_apiRef$current$getRo","_apiRef$current$getRo2","_apiRef$current","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getRootDimensions","getTotalHeaderHeight","_props$headerFilterHe","unstable_listView","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","viewportInnerSize","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","leftPinnedWidth","rightPinnedWidth","handleDragOver","useEventCallback","offset","clientX","getBoundingClientRect","scroll","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","onDragOver","noop","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnGroupHeaderSelector","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","gridSortColumnLookupSelector","res","sortItem","sortDirection","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","gridFilteredRowsLookupSelector","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","visibleSortedRows","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilterActiveItemsSelector","topLevelRowCount","columnLookup","_filterModel$items","_column$filterOperato","gridFilterActiveItemsLookupSelector","activeFilters","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","getVisibleRows","paginationMode","useGridVisibleRows","response","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","gridListColumnSelector","listViewColumn","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","isJSDOM","useGridVirtualScroller","listView","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","selectedRowsLookup","currentPage","gridRootRef","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","virtualScrollbarVerticalRef","scrollbarHorizontalRef","virtualScrollbarHorizontalRef","contentHeight","contentSize","hasColSpan","fnRef","ResizeObserver","frameID","observer","observe","cancelAnimationFrame","disconnect","useResizeObserver","resize","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","bufferForDirection","MINIMUM_COLUMN_WIDTH","focusedCell","rowIndex","columnIndex","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","ReactDOM","forceUpdateRenderContext","handleScroll","currentTarget","handleWheel","handleTouchMove","needsHorizontalScrollbar","scrollerStyle","overflowX","overflowY","flexBasis","currentPageTotalHeight","useRunOnce","condition","effect","didRun","initialRenderContext","getRows","_params$renderContext","_params$rows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","_currentPage$range","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","isNotVisible","tabbableCell","cellMode","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","offsetTop","focusedColumnIndex","_apiRef$current$getIn","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","platform","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","_lastColumn$computedW","_rootProps$unstable_l","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","_ref5","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","_inputs$range","_inputs$range2","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","_columnPositions$rend","_columnPositions$pinn","GridOverlayWrapperRoot","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","GridOverlays","_rootProps$slots","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","_props$style","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","Memoized","rowsLength","minimumSize","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","_rowsMeta$positions$r","transform","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","content","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","addEventListener","capture","removeEventListener","setProperty","Container","Scroller","scrollbarWidth","GridVirtualScroller","overlaysProps","useGridOverlays","visibleRowCount","noRows","loadingOverlay","TopContainer","GridHeaders","Overlays","Content","RenderZone","detailPanels","SpaceFiller","BottomContainer","GridFooterPlaceholder","hideFooter","footer","getGridRowGroupSelectableDescendants","groupId","sortedRowIds","groupNode","descendants","_rowTree$sortedRowIds","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","findRowsToSelect","selectedRow","autoSelectDescendants","autoSelectParents","addRow","filteredRows","selectedIdsLookup","selectedDescendants","add","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","parent","childId","findRowsToDeselect","deselectedRow","removeRow","allParents","getRowNodeParents","parents","descendant","GridContextProvider","Provider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","logger","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","Store","_value","listeners","getSnapshot","SYMBOL_API_PRIVATE","useGridApiInitialization","inputApiRef","_inputApiRef$current","_publicApiRef$current","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","api","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","useGridLoggerFactory","getLogger","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","context","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","_ref$current","added","setAdded","targetElement","wrapHandler","GridCellCheckboxForwardRef","_rootProps$rowSelecti","_rootProps$rowSelecti2","checkboxElement","rippleRef","element","getCellElement","_checkboxElement$curr","querySelector","handleKeyDown","isSelectable","checkboxPropsSelector","rowSelectionPropagation","rowSelectionLookup","isIndeterminate","isChecked","selectableDescendantsCount","selectedDescendantsCount","_rowTree$sortedRowIds2","indeterminateCheckboxAction","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","getColumnHeaderElement","handleSelectionChange","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","_cellParams$value","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","CSVHead","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isPasteShortcut","fromCharCode","keyCode","shiftKey","altKey","writeToClipboardPolyfill","data","span","createElement","textContent","body","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","isCopyShortcut","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","_state$pinnedColumns","mergeColumnsState","densityStateInitializer","_props$initialState$d","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","_options$getRowsToExp","_options$shouldAppend","_options$includeHeade","_options$includeColum","_options$escapeFormul","getRowsToExport","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","disableToolbarButton","ownerDocument","getDerivedPaginationModel","paginationState","paginationModelProp","_paginationModelProp$","_paginationModelProp$2","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","doc","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","_gridRootElement$quer","_gridRootElement$quer2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","_options$printOptions","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","_api$columnHeadersCon","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","_rowSpanHiddenCells$r","rowSpanHiddenCells","nextRowIndex","_rowSpanHiddenCells$n","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","Edit","getColumnIndexFn","rowIndexBefore","checkIfCanStartEditing","paginationStateInitializer","_props$paginationMode","_props$rowCount","_props$paginationMeta","_props$initialState3","paginationMeta","useGridPagination","useGridPaginationMeta","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","restoredPaginationMeta","stateToRestore","useGridPaginationModel","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","_context$stateToResto2","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","handlePaginationModelChange","_apiRef$current$virtu","useGridRowCount","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","preferencePanelStateInitializer","_props$initialState$p","gridEditRowsStateSelector","editRows","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","_editRowsState$id$fie","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","_rowModesModel$id","_copyOfPrevRowModesMo","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","rawValue","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","_getSelectionModelPro","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","_props$sortModel","scrollIntoView","containerSize","elementSize","elementOffset","elementEnd","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableColumnFilter","disableColumnReorder","disableColumnResize","disableColumnSelector","disableColumnSorting","disableDensitySelector","disableRowSelectionOnClick","filterMode","hideFooterPagination","hideFooterRowCount","hideFooterSelectedRowCount","keepColumnPositionIfDraggedOutside","keepNonExistentRowsSelected","pageSizeOptions","resizeThrottleMs","rowPositionsDebounceMs","rowSpacingType","showColumnVerticalBorder","sortingMode","throttleRowsMs","unstable_rowSpanning","EMPTY_SIZE","EMPTY_DIMENSIONS","groupHeaderHeight","rowWidth","headersTotalHeight","dimensionsStateInitializer","useGridDimensions","_props$columnGroupHea","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnGroupHeaderHeight","decimals","w","savedSize","setSavedSize","debouncedSetSavedSize","lastArgs","wait","later","throttled","throttle","previousSize","setDimensions","computedStyle","defaultView","getComputedStyle","newSize","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","_apiRef$current$updat","rootElement","pinnedRowsHeight","calculatePinnedRowsHeight","scrollDiv","offsetWidth","clientWidth","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPrivate","k","isFirstSizing","handleResize","onResize","globalThis","unobserve","rowsMetaStateInitializer","heights","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","cellProps","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","_getParents$depth","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","_unwrappedGroupingMod2","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","trackFinger","currentTouchId","changedTouches","touch","identifier","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","asyncCheck","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","_cell$getBoundingClie","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","header","_iconContainer$client","_menuContainer$client","columnHeaderTitle","iconContainer","menuContainer","paddingWidth","parseInt","paddingRight","scrollWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","_apiRef$current$rootE","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","pinnedPosition","updateProperty","finishResize","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","_apiRef$current$colum","_elem$querySelectorAl","findGroupHeaderElementsFromField","_api$virtualScrollerR","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","side","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","_apiRef$current$rootE2","_userOptions$columns","userOptions","unstable_setColumnVirtualization","newColumns","totalWidth","total","_widthByField$column$","remainingWidth","widthPerColumn","updateColumns","_apiRef$current$colum2","passive","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","_colDef$rowSpanValueG","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","_hiddenCells$row$id","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","_state$filter$filterM","isFilteringPending","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","unstable_listColumn","getListColumnWidth","useDataGridComponent","useGridRowsPreProcessors","useGridRowSelection","_props$rowSelectionPr","_props$rowSelectionPr2","_props$rowSelectionPr15","_props$rowSelectionPr16","_props$rowSelectionPr29","_props$rowSelectionPr30","_props$rowSelectionPr32","runIfRowSelectionIsEnabled","applyAutoSelection","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","_props$rowSelectionPr3","_props$rowSelectionPr4","_props$rowSelectionPr5","_props$rowSelectionPr6","_props$rowSelectionPr7","_props$rowSelectionPr8","_props$rowSelectionPr9","_props$rowSelectionPr10","_props$rowSelectionPr11","_props$rowSelectionPr12","_props$rowSelectionPr13","_props$rowSelectionPr14","selectRows","selectableIds","_props$rowSelectionPr17","_props$rowSelectionPr18","_props$rowSelectionPr19","_props$rowSelectionPr20","selectionLookup","_props$rowSelectionPr21","_props$rowSelectionPr22","_props$rowSelectionPr23","_props$rowSelectionPr24","_props$rowSelectionPr25","_props$rowSelectionPr26","_props$rowSelectionPr27","_props$rowSelectionPr28","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","_props$rowSelectionPr31","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_event$target$closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","_props$initialState4","_props$slotProps2","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","_apiRef$current$updat2","_apiRef$current2","setColumnVisibility","isVisible","_columnVisibilityMode","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","columnReorderApi","_props$initialState$c","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$slotProps","ColumnsPanel","columnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","useGridRows","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","_idRowsLookup$id","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","_tree$childId","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","_props$rows","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRowSpanning","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","resetColSpan","columnSpanningPrivateApi","getCellColSpanInfo","_lookup$current$rowId","useGridColumnSpanning","useGridColumnGrouping","_unwrappedGroupingMod3","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","updateColumnGroupingState","_apiRef$current$getPi","_apiRef$current$getPi2","getPinnedColumns","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","_gridFocusCellSelecto","lastFocusedRowId","_nextRow$id","lastFocusedRowIndex","nextRow","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","hidePreferences","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortComparator","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","isHeightMetaValid","processHeightEntry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","_heightCache$get$cont","_heightCache$get","unstable_setLastMeasuredRowIndex","storeRowHeightMeasurement","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","_heightCache$get$auto","_heightCache$get2","useGridScroll","colRef","scrollCoordinates","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","getScrollPosition","showColumnMenu","hideColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setVirtualization","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","_CONTENT_WIDTH_RANGE_","Skeleton","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","baseBadge","badgeContent","overlap","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","GridRowCountRoot","GridRowCount","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","pinnedRight","GridScrollbarFillerCell","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","_dimensions$viewportI","viewportHeight","skeletonRowsCount","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","_ref$current2","pinnedCells","_ref$current3","LOADING_VARIANTS","CircularProgress","LinearProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","getToolbarUtilityClass","ToolbarRoot","disableGutters","gutters","Toolbar","_slots$firstButton","_slots$lastButton","_slots$nextButton","_slots$previousButton","_slots$firstButtonIco","_slots$lastButtonIcon","_slots$nextButtonIcon","_slots$previousButton2","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","FirstButton","firstButton","IconButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","FirstPageIconDefault","LastButtonIcon","lastButtonIcon","LastPageIconDefault","NextButtonIcon","nextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","previousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","tablePaginationClasses","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","TablePagination","_slotProps$select","ActionsComponent","TablePaginationActions","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","maxHeight","estimated","GridPagination","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","wrapLabelDisplayedRows","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","_valueRef$current","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","baseButton","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","startAdornment","baseInputAdornment","quickFilterIcon","pl","GridColumnsManagementBody","FormControlLabel","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagement","columnsManagementHeader","columnsManagementFooter","grey","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","elevation","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","VIRTUAL","EMPTY_CELL_PARAMS","GridCell","_column$getActions","_cellParams$formatted","_rootProps$cellSelect","_hiddenCells$rowId$fi","_hiddenCells$rowId","_spannedCells$rowId$f","_spannedCells$rowId","editCellState","styleProp","disableDragEvents","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","cellStyle","isLeftPinned","isRightPinned","focusableElement","elementToFocus","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","EmptyCell","GridRow","refProp","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","editRowsState","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","publishClick","rowReordering","heightEntry","rowStyle","rowClassNames","getRowClassName","getCell","indexRelativeToAllColumns","_cellColSpanInfo$cell","_cellColSpanInfo$cell2","_editRowsState$rowId$","_editRowsState$rowId","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","labelledby","GridColumnHeaderTitleRoot","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","clientHeight","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","ariaSort","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","_colDef$sortingOrder","_colDef$headerName","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onContextMenu","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","columnHeaderFilterIconButton","counter","columnHeaderSortIcon","elementId","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","render","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","MemoizedGridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","GridColumnHeaderItem","getColumnGroupHeaders","_columnGroupsModel$fi","_columnGroupsModel$fi2","_columnGroupsModel$la","_columnGroupsModel$la2","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","_column$computedWidth","headerInfo","Left","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","ListItemIconRoot","alignItemsFlexStart","ListItemIcon","getListItemIconUtilityClass","GridColumnMenuHideItem","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","baseDivider","useGridColumnMenuSlots","otherProps","GridColumnMenu","GridNoResultsOverlay","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","disableRipple","activeChannel","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","openFilterButtonIcon","columnFilteredIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterClearIcon","columnMenuClearIcon","columnReorderIcon","MUIBadge","MUICheckbox","MUIDivider","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIMenuItem","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","GridSkeletonCell","toggleFilter","GridColumnHeaders","noResultsOverlay","noRowsOverlay","useProps","allProps","_props$forwardedProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","useDataGridProps","themedProps","overrides","computeSlots","injectDefaultProps","_themedProps$key","accessibleRowCount","pinnedRowsCount","ariaRowIndex","DataGridRaw","GridBody","propTypes","PropTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange"],"sourceRoot":""}