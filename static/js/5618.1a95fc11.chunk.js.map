{"version":3,"file":"static/js/5618.1a95fc11.chunk.js","mappings":"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","sources":["Components/CardSlider.js","Components/KycStepper.js","utils/validationUtils.js","Components/Kyc.js","Components/NStudioCard.js","Components/EditProfileModal.js","Screens/UserPage.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Card as MuiCard } from '@mui/joy';\nimport { useState } from 'react';\nimport { Dialog, DialogContent, Button, Box } from '@mui/material';\nimport CardCover from '@mui/joy/CardCover';\nimport { FiZoomIn } from \"react-icons/fi\";\nimport { MdArrowBackIosNew, MdArrowForwardIos } from \"react-icons/md\";\nimport './MagnifyImage.css';\nimport ProductCard from './NStudioCard';\n\nconst CardSlider = ({ dataList, imgOnly = false }) => {\n  //console.log(\"Debug from CardSlider\", imgOnly);\n  //console.log(dataList);\n  const formattedDataList = Array.isArray(dataList) ? dataList : Object.values(dataList);\n  //console.log(formattedDataList)\n\n  const [open, setOpen] = useState(false);\n  const [selectedEntity, setSelectedEntity] = useState(null);\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\n  const [canScrollRight, setCanScrollRight] = useState(false);\n\n  const scrollRef = useRef(null);\n\n  const updateScrollButtons = () => {\n    const container = scrollRef.current;\n    if (container) {\n      setCanScrollLeft(container.scrollLeft > 0);\n      setCanScrollRight(\n        container.scrollLeft < container.scrollWidth - container.clientWidth\n      );\n    }\n  };\n\n  const scroll = (direction) => {\n    const container = scrollRef.current;\n    if (direction === \"left\") {\n      container.scrollBy({ left: -330, behavior: \"smooth\" });\n    } else if (direction === \"right\") {\n      container.scrollBy({ left: 330, behavior: \"smooth\" });\n    }\n  };\n\n  const handleOpen = (url) => {\n    console.log(url)\n    setSelectedEntity(url);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedEntity(null);\n  };\n\n  const cardHoverStyle = {\n    transform: 'scale(1.01)', // Scale up slightly on hover\n  };\n\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (container) {\n      updateScrollButtons();\n      container.addEventListener(\"scroll\", updateScrollButtons);\n      return () => container.removeEventListener(\"scroll\", updateScrollButtons);\n    }\n  }, []);\n\n  return (\n    <Box sx={{ display: 'flex', p: 0, m: 0, position: 'relative' }}>\n      {canScrollLeft && <button className=\"scroll-button left\" onClick={() => scroll(\"left\")}>\n      <MdArrowBackIosNew />\n      </button>}\n    <div ref={scrollRef} className=\"horizontal-scroll-wrapper no-important scroll-wrapper\">\n      {formattedDataList.map((entity, index) => (\n        imgOnly ? (\n          <a className=\"no-important\" key={index} onClick={() => handleOpen(entity)}>\n          <MuiCard\n            key={index}\n            style={{ marginRight: \"0.5rem\" }}\n            component=\"li\"\n            sx={{\n              height: 300,\n              width: 534,\n              '&:hover': {\n                ...cardHoverStyle,\n              },\n            }}\n          >\n            <CardCover>\n              <img\n                src={entity} // Use studio.iconUrl for the image source\n                loading=\"lazy\"\n                alt=\"Studio image\" // Use studioName for alt text\n              />\n              <div className=\"gallery-image-overlay\">\n                <FiZoomIn size={50} color='white' className='' />\n              </div>\n            </CardCover>\n          </MuiCard>\n          </a>\n        ) : (\n\n          <a key={index} href={`#/studio/${entity.id}`}>\n            <ProductCard\n              key={entity.id}\n              data={entity}\n              img_src={entity.iconUrl}\n            />\n          </a>\n        )\n      ))}\n      <Dialog open={open} onClose={handleClose}>\n        {selectedEntity && (\n          <>\n            <DialogContent sx={{ padding: 0 }}>\n              <img\n                src={selectedEntity}\n                alt={\"Image\"}\n                style={{ maxWidth: '100%', height: 'auto' }}\n              />\n            </DialogContent>\n            <Button sx={{\n                          '&:hover': {\n                            backgroundColor: '#735EAB',\n                            color: 'white',\n                          }\n                        }} \n                        onClick={handleClose}>Close</Button>\n          </>\n        )}\n      </Dialog>\n    </div>\n    {canScrollRight && <button className=\"scroll-button right\" onClick={() => scroll(\"right\")}>\n    <MdArrowForwardIos />\n      </button>}\n    </Box>\n  );\n};\n\nexport default CardSlider;\n","import React, { useState, useEffect } from 'react';\nimport { Stepper, Step, StepLabel, Typography, Paper, ThemeProvider, createTheme } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { styled } from '@mui/material/styles';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport { readDocument } from '../utils/firebaseUtils';\nimport { STATUSES, COLLECTIONS } from '../constants';\nimport './KycStepper.css';\n\nconst QontoConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      borderColor: 'green',\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      borderColor: 'green',\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    borderColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n}));\n\nconst stages = [STATUSES.SUBMITTED, STATUSES.UNDER_REVIEW, STATUSES.REVIEWED, STATUSES.VERIFIED];\nconst map = {\n  [STATUSES.SUBMITTED]: 0,\n  [STATUSES.UNDER_REVIEW]: 1,\n  [STATUSES.REVIEWED]: 2,\n  [STATUSES.VERIFIED]: 3,\n  [STATUSES.VERIFICATION_FAILED]: 3\n};\n\nconst KycStepper = ({ kycId, status }) => {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [kycData, setKycData] = useState({});\n\n  console.log(status)\n\n  const theme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? 'dark' : 'light',\n      primary: {\n        main: isDarkModeOn ? '#90caf9' : '#1976d2',\n      },\n    },\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await readDocument(COLLECTIONS.USER_KYC, kycId);\n        setKycData(data);\n      } catch (error) {\n        console.error(`Error fetching KYC data for KYC ID ${kycId}:`, error);\n      }\n    };\n    fetchData();\n  }, [kycId]);\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper sx={{ textAlign: 'center', marginBottom: '1rem' }} elevation={2}>\n        <Typography variant=\"h5\" component=\"p\">Application Status: {status}</Typography>\n        <br/>\n        <Stepper activeStep={map[status]} alternativeLabel connector={<QontoConnector />}>\n          {stages.map((stage, index) => (\n            <Step key={index}>\n              <StepLabel error={stage === STATUSES.VERIFIED && status === STATUSES.VERIFICATION_FAILED}>\n                {stage === STATUSES.VERIFIED && status === STATUSES.VERIFICATION_FAILED ? 'Failed Verification' : stage}\n              </StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <br/>\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default KycStepper;\n","export const validateField = (name, value) => {\n  let error = '';\n  console.log(name, value)\n  switch (name) {\n      case 'phone_number':\n          if (!/^\\d{10}$/.test(value)) {\n              error = 'Phone number must be exactly 10 digits.';\n          }\n          break;\n      case 'zip_pin_code':\n          if (!/^\\d{6}$/.test(value)) {\n              error = 'ZIP/Pin code must be exactly 6 digits.';\n          }\n          break;\n      case 'aadhar':\n          if (!/^\\d{12}$/.test(value)) {\n              error = 'Aadhar number must be exactly 12 digits.';\n          }\n          break;\n      case 'gstin':\n            if (!/^[0-9]{2}[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}[1-9A-Za-z]{1}[Zz]{1}[0-9A-Za-z]{1}$/.test(value)) {\n                error = 'GSTIN must be a valid format (e.g., 22ABCDE0000A1Z5).';\n            }\n            break;\n\n      default:\n          break;\n  }\n  console.log(error)\n\n  return error;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { saveDocument, updateDocumentFields, readDocument, uploadImages4, deleteAllImagesInFolder2, getAllFilesFromFolder } from '../utils/firebaseUtils.js';\nimport { STATUSES, COLLECTIONS, STORAGES } from '../constants.js';\nimport KycStepper from './KycStepper.js';\nimport CryptoJS from 'crypto-js';\nimport { validateField } from '../utils/validationUtils';\nimport { postData } from '../utils/common.js';\nimport './Kyc.css';\nimport { LinearProgress, Typography } from '@mui/material';\nimport indianCities from '../cities.json';\nimport indianStates from '../states.json';\n\nconst names_map = new Map([\n  [\"first_name\" , \"First Name\"],\n  [\"middle_last_name\" , \"Middle & Last Name\"],\n  [\"phone_number\" , \"Phone Number\"],\n  [\"street_address\" , \"Street Address\"],\n  [\"city\" , \"City\"],\n  [\"state_province\" , \"State\"],\n  [\"state\" , \"State\"],\n  [\"zip_pin_code\" , \"PIN Code/ZIP\"],\n  [\"aadhar\" , \"Aadhar Number\"],\n  [\"gstin\" , \"GST Number\"],\n  [\"comments\" , \"Remark(s)\"]\n  ])\n\n  const orderedKeys = [\n    ['first_name'],\n    ['middle_last_name'],\n    ['phone_number'],\n    ['street_address'],\n    ['city'],\n    ['state_province', 'state'], // Include this key, either of them is present\n    ['zip_pin_code']\n];\n\nconst locationOptions = indianCities.cities;\nconst stateOptions = indianStates.states;\n\nfunction Kyc() {\n  const [formData, setFormData] = useState({\n    first_name: '',\n    middle_last_name: '',\n    phone_number: '',\n    street_address: '',\n    city: '',\n    state_province: '',\n    zip_pin_code: '',\n    country: 'India',\n    aadhar: '',\n    gstin: '',\n    comments : '',\n    status: STATUSES.SUBMITTED,\n    tncAgreed: false,\n    hash: '',\n  });\n  const [kycData, setKycData] = useState(null);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [errors, setErrors] = useState({});\n  const user_id = JSON.parse(localStorage.getItem('userInfo'))?.UserId;\n  const kycId = `${user_id}_Kyc`;\n  const [filesAadhar, setFilesAadhar] = useState(null);\n  const [filesGst, setFilesGst] = useState(null);\n  const [newFilesAadhar, setNewFilesAadhar] = useState([]);\n  const [newFilesGst, setNewFilesGst] = useState([]);\n  const [hasTextChanged, setHasTextChanged] = useState(false);\n  const [progressAadhar, setProgressAadhar] = useState(-1);\n  const [progressGst, setProgressGst] = useState(-1);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\"))?.email;\n  const currentName = JSON.parse(localStorage.getItem(\"userInfo\"))?.displayName;\n\n\n  const calculateHash = (data) => {\n    const filteredData = Object.keys(data).filter(key => key !== 'hash' && key !== 'status');\n    const sortedData = filteredData.sort().map(key => `${key}:${data[key]}`).join('|');\n  // Calculate hash using SHA-256\n    return CryptoJS.SHA256(sortedData).toString();\n  };\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n  \n    // Perform field validation as the user types\n    const error = validateField(name, value);\n  \n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: error,\n    }));\n  \n    // Update form data\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleAadharUpload = (e) => {\n    setNewFilesAadhar(e.target.files[0]);  // Store the new files\n    setHasTextChanged(true);            // Mark that a change has occurred\n  };\n  \n  const handleGstUpload = (e) => {\n    setNewFilesGst(e.target.files[0]);  // Store the new files\n    setHasTextChanged(true);         // Mark that a change has occurred\n  };\n\n  const handleTnCAgreement = (e) => {\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      tncAgreed: e.target.checked,\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    try {\n\n      const formFields = Object.keys(formData).filter(\n          (key) => !['hash', 'status', 'country', 'comments', 'UserId'].includes(key)\n      );\n\n      let isValid = true;\n      let errorMessages = [];\n      let errorNum = 0;\n\n      formFields.forEach((field) => {\n          const error = validateField(field, formData[field]);\n          if (error) {\n              isValid = false;\n              errorNum = errorNum + 1;\n              errorMessages.push(`${errorNum}: ${error}`);\n              setErrors((prevErrors) => ({\n                  ...prevErrors,\n                  [field]: error,\n              }));\n          }\n      });\n\n      // If there are errors, prompt the user and stop the submission\n      if (!isValid) {\n          alert(`Please correct the following errors before submitting:\\n\\n${errorMessages.join('\\n')}`);\n          return;\n      }\n\n\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      const newHash = calculateHash(formData);\n      console.log(newHash,kycDoc?.hash)\n      const notifyEmails = currentUserEmail;\n      const metaData = {\n        user_name:currentName,\n        user_id: user_id,\n      }; \n      if (kycDoc) {\n        if (kycDoc.hash !== newHash) {\n          const dbPayload = {...formData,hash: newHash,}\n          const response = await postData(dbPayload, COLLECTIONS.USER_KYC, notifyEmails,metaData);\n          //alert(\"KYC updated successfully\");\n        } else {\n          //alert(\"No changes detected\");\n        }\n      } else {\n        // If no KYC record exists, create a new one\n        const dbPayload = {...formData,hash: newHash,}\n        const response = await postData(dbPayload, COLLECTIONS.USER_KYC, notifyEmails,metaData);\n        //alert(\"KYC added successfully\");\n      }\n      /*\n      if (newFilesAadhar) {\n        // Delete old files in the folder and upload the new files for Aadhar\n        console.log(newFilesAadhar)\n        await uploadImages3(STORAGES.CREATORS_KYC_DOCUMENTS, newFilesAadhar, user_id, \"Aadhar\");\n        alert(\"Aadhar files uploaded successfully\");\n      }\n  \n      if (newFilesGst) {\n        // Delete old files in the folder and upload the new files for GST\n        await uploadImages3(STORAGES.CREATORS_KYC_DOCUMENTS, newFilesGst, user_id, \"Gst\");\n        alert(\"GST files uploaded successfully\");\n      }\n        */\n      if (newFilesAadhar) {\n        console.log(newFilesAadhar)\n        await deleteAllImagesInFolder2(STORAGES.CREATORS_KYC_DOCUMENTS,user_id,\"Aadhar\");\n        setProgressAadhar(0)\n        await uploadImages4(\n          STORAGES.CREATORS_KYC_DOCUMENTS,\n          newFilesAadhar,\n          user_id,\n          \"Aadhar\",\n          (progress) => setProgressAadhar(progress), // Update Aadhar progress state\n          (url) => {\n            setFilesAadhar(url); // Reset or update state if necessary\n            console.log(url);\n          }\n        );\n        //alert(\"Aadhar files uploaded successfully\");\n      }\n  \n      if (newFilesGst) {\n        console.log(newFilesGst)\n        await deleteAllImagesInFolder2(STORAGES.CREATORS_KYC_DOCUMENTS,user_id,\"Gst\");\n        setProgressGst(0);\n        await uploadImages4(\n          STORAGES.CREATORS_KYC_DOCUMENTS,\n          newFilesGst,\n          user_id,\n          \"Gst\",\n          (progress) => setProgressGst(progress), // Update GST progress state\n          (url) => {\n            setFilesGst(url); // Collect download URLs\n            console.log(url);\n            //setNewFilesGst(null); // Reset or update state if necessary\n          }\n        );\n        //alert(\"GST files uploaded successfully\");\n      }\n  \n  \n\n      await updateDocumentFields(COLLECTIONS.USER, user_id, {\n        KycIdList: { [kycId]: formData.status },\n      });\n\n      event.target.reset();\n    } catch (error) {\n      console.error(\"Error processing KYC: \", error);\n    } finally{\n      setIsSubmitting(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchKycData = async () => {\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      if (kycDoc) {\n        setKycData(kycDoc);\n        setFormData({ ...kycDoc, status: kycDoc.status || STATUSES.SUBMITTED });\n      } else {\n        setKycData(null);\n      }\n    };\n    const fetchKycImages = async () => {\n      const folder_path = `${STORAGES.CREATORS_KYC_DOCUMENTS}/${user_id}`\n      try {\n        // Fetch both Aadhar and GST files concurrently\n        const [aadharFiles, gstFiles] = await Promise.all([\n                  getAllFilesFromFolder(`${folder_path}/Aadhar/`),\n                  getAllFilesFromFolder(`${folder_path}/Gst/`)\n        ]);\n\n        // Check if files are fetched successfully\n        if (aadharFiles && aadharFiles.length > 0) {\n            setFilesAadhar(aadharFiles);\n        } else {\n            setFilesAadhar(null); // Set to empty if no files found\n            console.warn(\"No Aadhar documents found.\");\n        }\n\n        if (gstFiles && gstFiles.length > 0) {\n            setFilesGst(gstFiles);\n        } else {\n            setFilesGst(null); // Set to empty if no files found\n            console.warn(\"No GST documents found.\");\n        }\n      } catch (error) {\n          console.error(\"Error fetching KYC documents:\", error);\n      }\n\n    }\n\n    fetchKycData();\n    fetchKycImages();\n  }, [kycId]);\n  const excludedKeys = ['status', 'hash', 'country', 'tncAgreed', 'comments', 'UserId', 'gstin', 'aadhar'];\n  return (\n    <div style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n      <Container className=\"glassmorphic-container\" style={{ margin: 'auto', border: isDarkModeOn ? '1px solid white' : '1px solid black', borderRadius: '5px', padding: '20px' }}>\n        <Form onSubmit={handleSubmit}>\n          <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform: 'capitalize' }}>Verify yourself</h1>\n          <div className=\"row\">\n          { orderedKeys.map((fields) => {\n              // Check which field is present in formData and not excluded\n              const availableField = fields.find(field => !excludedKeys.includes(field) && formData[field] !== undefined);\n              \n              // If an available field is found, render it\n              return availableField ? (\n                  <div className=\"col-md-6 col-lg-4\" key={availableField}>\n                      <Form.Group controlId={`formBasic${availableField}`}>\n                          <Typography style={{color: isDarkModeOn ? 'white' : 'black'}}>{names_map.get(availableField)}</Typography>\n                          {['city', 'state_province'].includes(availableField) ? <Form.Control\n                              as=\"select\"\n                              placeholder={`Enter ${names_map.get(availableField)}`}\n                              name={availableField}\n                              value={formData[availableField]}\n                              onChange={handleChange}\n                              required\n                              className=\"glassmorphic-input\"\n                              style={{\n                                  backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                                  color: isDarkModeOn ? 'white' : 'black',\n                                  paddingTop: 0,\n                                  paddingBottom: 0,\n                              }}\n                          >\n                            <option value=\"\">Select a {names_map.get(availableField)}</option>\n                              {[...(availableField === 'city' ? locationOptions : stateOptions)].map((city, index) => (\n                                  <option key={index} value={city}>\n                                      {city}\n                                  </option>\n                              ))}\n                            </Form.Control> : <Form.Control\n                                  type={availableField === 'age' || availableField === 'phone_number' ? 'number' : 'text'}\n                                  placeholder={`Enter ${names_map.get(availableField)}`}\n                                  name={availableField}\n                                  value={formData[availableField]}\n                                  onChange={handleChange}\n                                  required\n                                  className=\"glassmorphic-input\"\n                                  style={{\n                                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                                      color: isDarkModeOn ? 'white' : 'black',\n                                  }}\n                              />\n                            }\n                          {errors[availableField] && <span style={{ color: 'red' }}>{errors[availableField]}</span>} {/* Show validation error */}\n                      </Form.Group>\n                  </div>\n              ) : null; // Return null if no field is available\n          })}\n\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-4\">\n              <Form.Group controlId=\"formBasicAadhar\">\n                <Form.Label style={{color: isDarkModeOn ? 'white' : 'black'}}>Aadhar</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Aadhar Number\"\n                    name=\"aadhar\"\n                    className=\"glassmorphic-input\"\n                    value={formData.aadhar}\n                    onChange={handleChange}\n                    required\n                    style={{\n                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                      color: isDarkModeOn ? 'white' : 'black',\n                      marginRight: '10px'\n                    }}\n                  />\n                  <Button disable={formData.status === \"Verified\"} variant=\"light\" onClick={() => document.getElementById('aadharUpload').click()} style={{ \n                         \n                        padding: '0.5rem', \n                        backgroundColor: isDarkModeOn ? '#333' : '#f8f9fa', // Dark mode background\n                        color: isDarkModeOn ? 'white' : 'black', // Dark mode text color\n                        cursor: 'pointer'\n                    }}>\n                    Upload\n                  </Button>\n                  <input\n                    type=\"file\"\n                    id=\"aadharUpload\"\n                    accept=\".pdf\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => handleAadharUpload(e)}\n                  />\n                </div>\n                {filesAadhar && filesAadhar.length > 0 && filesAadhar[0].fileURL ? (\n                  <Button \n                      variant=\"link\" \n                      style={{ color: '#007bff', textDecoration: 'none' }} \n                      onClick={() => window.open(filesAadhar[0].fileURL, '_blank')}\n                  >\n                      Download Aadhar Document\n                  </Button>\n              ) : (\n               <p style={{color: isDarkModeOn ? 'white' : 'black'}}>{newFilesAadhar?.name || \"No new Aadhar file uploaded.\"}</p>\n              )}\n              </Form.Group>\n              {errors['aadhar'] && <span style={{ color: 'red' }}>{errors['aadhar']}</span>}\n              <div>\n                {progressAadhar>=0&&<>\n                  <progress value={progressAadhar} max=\"100\" /> \n                  <p>{progressAadhar}% uploaded</p>\n                </>}\n              </div>\n              \n\n            </div>\n          </div>\n          <div className=\"row\">         \n            <div className=\"col-md-6 col-lg-4\">\n              <Form.Group controlId=\"formBasicGst\">\n                <Form.Label style={{color: isDarkModeOn ? 'white' : 'black'}}>GST</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter GST Number\"\n                    name=\"gstin\"\n                    value={formData.gstin}\n                    onChange={handleChange}\n                    className=\"glassmorphic-input\"\n                    required\n                    style={{\n                      backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                      color: isDarkModeOn ? 'white' : 'black',\n                      marginRight: '10px'\n                    }}\n                  />\n                  <Button disable={formData.status === \"Verified\"} variant=\"light\" onClick={() => document.getElementById('gstUpload').click()}  style={{ \n                         \n                         padding: '0.5rem', \n                        backgroundColor: isDarkModeOn ? '#333' : '#f8f9fa', // Dark mode background\n                        color: isDarkModeOn ? 'white' : 'black', // Dark mode text color\n                        cursor: 'pointer'\n                    }}>\n                    Upload\n                  </Button>\n                  <input\n                    type=\"file\"\n                    id=\"gstUpload\"\n                    accept=\".pdf\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => handleGstUpload(e)}\n                  />\n                </div>\n                {filesGst && filesGst.length > 0 && filesGst[0].fileURL ? (\n                  <Button \n                      variant=\"link\" \n                      style={{ color: '#007bff', textDecoration: 'none' }} \n                      onClick={() => window.open(filesGst[0].fileURL, '_blank')}\n                  >\n                      Download GST Document\n                  </Button>\n              ) : (\n                   <p style={{color: isDarkModeOn ? 'white' : 'black'}}> {newFilesGst?.name || \"No new GST file uploaded.\"}</p>\n              )}\n              </Form.Group>\n              {errors['gstin'] && <span style={{ color: 'red' }}>{errors['gstin']}</span>}\n              <div>\n                {progressGst>=0&&<>\n                  <progress value={progressGst} max=\"100\" /> \n                  <p>{progressGst}% uploaded</p>\n                </>}\n              </div>\n              \n            </div>\n          </div>\n\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"tnc-switch\" checked={formData.tncAgreed}\n            onChange={handleTnCAgreement}/>\n            <label class=\"form-check-label\" for=\"exampleCheck1\">\n            <span style={{color: isDarkModeOn ? 'white' : 'black'}}>\n                I agree to the <a href=\"#/npoliciesStudio\" style={{ color: isDarkModeOn ? 'lightblue' : 'blue' }}>Terms and Conditions. Click to read.</a>\n              </span>\n            </label>\n          </div>\n          <br/>\n          {formData.comments && (\n            <div className=\"col-md-12 col-lg-12\">\n              <br/>\n              <Form.Group controlId=\"formBasicComments\">\n                <Form.Label>{names_map.get('comments')}</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"comments\"\n                  value={formData.comments}\n                  readOnly\n                  style={{\n                    backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                    color: isDarkModeOn ? 'white' : 'black'\n                  }}\n                />\n              </Form.Group>\n            </div>\n          )}\n          <Button variant=\"info\" type=\"submit\" disabled={formData.status === \"Verified\" || !formData.tncAgreed}          >\n            Submit\n          </Button>\n\n        </Form>\n        {isSubmitting && <LinearProgress/>}\n        <br/>\n        <>\n          {formData.hash && <KycStepper kycId={kycId} status={formData.status} />}\n        </>\n      </Container>\n      <br />\n    </div>\n    \n  );\n}\n\nexport default Kyc;\n","\nimport React from 'react';\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport Chip from '@mui/joy/Chip';\nimport Box from '@mui/joy/Box';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/joy/Link';\nimport Typography from '@mui/joy/Typography';\nimport { Stack } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { CHIP_LEVELS_DESIGN, COLORS, danceStylesColorChips } from '../constants';\nimport IconButton from '@mui/joy/IconButton';\nimport Favorite from '@mui/icons-material/Favorite';\n\n\nexport default function NStudioCard({img_src,data}) {\n    const isDarkModeOn = useSelector(selectDarkModeStatus);\n    \n    const studioId = data.id?data.id:data.studioId;\n\n    const cardStyle = {\n      backgroundColor: isDarkModeOn ? '#444' : 'white',\n      padding: '0px',\n      color: isDarkModeOn ? 'white' : 'black',\n      marginRight: \"10px\",\n      width: 320,\n      maxWidth: \"100%\",\n      boxShadow: 'lg',\n      transition: 'opacity 0.3s ease',\n    };\n  \n    const cardHoverStyle = {\n      transform: 'scale(1.01)',\n    };\n  \n  return (\n    <Card variant=\"solid\" sx={{\n      ...cardStyle,\n      '&:hover': cardHoverStyle,\n    }}>\n      \n        <AspectRatio ratio=\"1.78\" style={{ position: 'relative'}}>\n          <img\n            src={data && data.iconUrl ? data.iconUrl :\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: '100%', height: 'auto', overflow: 'hidden' }}\n            \n          />\n          <Stack direction=\"row\" spacing={2} style={{ position: 'absolute', bottom: 0, left: 0, padding: '1px' }}>\n        {data && data.danceStyles && typeof data.danceStyles === 'string' ? (data.danceStyles.split(\",\").slice(0, 3).map((form, index) => (\n        <Chip\n            key={index}\n            color={index % 2 === 0 ? \"danger\" : \"success\"}  \n            sx={{ marginBottom: \"10px\", fontSize: '0.8rem',  \n                    bgcolor: danceStylesColorChips[index].backgroundColor,\n                    color: danceStylesColorChips[index].color, \n            }}\n        >\n            {form.trim()}\n        </Chip>\n        ))):(\n            <Chip\n            key={10}\n            color={10 % 2 === 0 ? \"danger\" : \"success\"} \n            style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n        >\n            {\"No danceforms\"}\n        </Chip>\n        )}\n\n        </Stack>\n\n        <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", top: 0, left: 0, padding: \"1px\", paddingTop: \"1px\" }}\n          >\n            {data && data.freeTrialAvailable &&(\n            \n                <Chip\n                  key={1}\n                 \n                  sx={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                    bgcolor: COLORS.LIME.backgroundColor,  // Set the background color\n                    color: COLORS.LIME.color,  // Set the text color\n                  }}\n                >\n                  {'Free Trial Available'}\n                </Chip>\n              \n            )}\n          </Stack>\n\n        </AspectRatio>\n      <CardContent style={{ padding: '10px' }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" columnGap={1}>\n          <Link\n            alignSelf=\"center\"\n            href={`#/studio/${studioId}`}\n            fontWeight=\"bold\"\n            color=\"neutral\"\n            textColor=\"text.primary\"\n            underline='none'\n            overlay\n            whiteSpace='nowrap'\n            overflow='hidden'\n            textOverflow='ellipsis'\n            style={{ color: isDarkModeOn ? 'white' : 'black' }}\n          >\n            {data && data.studioName ? data.studioName : \"    \"}\n          </Link>\n          {data && data.avgRating && data.avgRating>0 ?\n            <Typography width={52} flexShrink={0} alignSelf=\"center\" style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n              ⭐ {data.avgRating.toFixed(1)}\n            </Typography> : null\n          }\n        </Box>\n        <Typography style={{ color: isDarkModeOn ? 'white' : 'black' }} level=\"body-xs\">{data.street ? data.street : \".  \"}</Typography>\n        <IconButton\n          hidden\n          aria-label=\"Like minimal photography\"\n          size=\"md\"\n          variant=\"solid\"\n          color=\"danger\"\n          sx={{\n            position: 'absolute',\n            zIndex: 2,\n            borderRadius: '50%',\n            right: '1rem',\n            bottom: '2rem',\n            transform: 'translateY(50%)',\n          }}\n        >\n          <Favorite />\n        </IconButton>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography alignSelf=\"center\" fontSize={12} style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n            {data && data.minFee && data.minFee>=0 &&(`@ ₹${data.minFee} onwards`)}\n          </Typography>\n          <Button\n            size='small'\n            variant=\"contained\"\n            sx={{\n              alignSelf: \"center\",\n              color: 'white',\n              backgroundColor: '#735EAB',\n              '&:hover': {\n                backgroundColor: '#735EAB',\n                color: 'white',\n              },\n              '&.Mui-disabled': {\n                backgroundColor: isDarkModeOn ? 'rgba(115, 94, 171, 0.5)' : 'rgba(115, 94, 171, 0.3)',\n                color: 'rgba(255, 255, 255, 0.5)',\n              },\n            }}\n            type='button'\n          >\n            Explore\n          </Button>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Modal, Box, Button, TextField, Typography, FormControl, InputLabel, Select, MenuItem, Autocomplete, Alert, Snackbar } from '@mui/material';\nimport danceStyles from '../danceStyles.json';\nimport { BASEURL_PROD, COLLECTIONS } from '../constants';\nimport { useAuth } from '../context/AuthContext';\nimport { saveDocument, handleSavePostOTPSuccess } from '../utils/firebaseUtils';\nimport axios from \"axios\";\nimport qs from 'qs';\n\nconst PROD_BASE_URL = BASEURL_PROD\nconst LOCAL_BASE_URL = \"http://127.0.0.1:8000/\"\nconst BASE_URL = PROD_BASE_URL\n\nconst EditProfileModal = ({ open, onClose, userProfileInfo, setUserProfileInfo }) => {\n  const { currentUser } = useAuth();\n  const danceStylesOptions = danceStyles.danceStyles;\n  const [userDanceStyles, setUserDanceStyles] = useState([]);\n  const [userPhoneNumber, setUserPhoneNumber] = useState();\n  const [isOTPModalOpen, setIsOTPModalOpen] = useState(false); // To handle OTP modal\n  const [otp, setOtp] = useState('');\n  const [isPhoneVerified, setIsPhoneVerified] = useState(userProfileInfo?.isPhoneNumberVerified || false);\n  const [otpSent, setOtpSent] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('info');\n\n  useEffect(() => {\n    if (userProfileInfo && userProfileInfo.DanceStyles && userProfileInfo.DanceStyles !== \"\") {\n      setUserDanceStyles(userProfileInfo.DanceStyles);\n    }\n    if (userProfileInfo && userProfileInfo.PhoneNumber && userProfileInfo.setUserPhoneNumber !== \"\") {\n      setUserPhoneNumber(userProfileInfo.PhoneNumber);\n    }\n  }, [userProfileInfo]);\n\n  const handleChange = (e) => {\n    setUserProfileInfo({ ...userProfileInfo, [e.target.name]: e.target.value });\n  };\n\n  const handleDanceStylesChange = (event, value) => {\n    setUserDanceStyles(value);\n  };\n\n\n  const handleSave = async () => {\n    userProfileInfo.DanceStyles = userDanceStyles;\n    const data = await saveDocument(COLLECTIONS.USER, currentUser.uid, userProfileInfo);\n    if (data) {\n      setSnackbarMessage(\"Profile Updated\");\n      setSnackbarSeverity(\"success\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleSavePostOTP = async () => {\n    const docRef = handleSavePostOTPSuccess(COLLECTIONS.USER, currentUser.uid,userProfileInfo.PhoneNumber);\n  };\n\n  const handleVerifyPhoneNumber = async () => {\n    try {\n      //console.log(userProfileInfo.PhoneNumber);\n  \n      const response = await axios.post(\n        `${BASE_URL}djSms/request_otp/`,\n        qs.stringify({\n          phone_number: userProfileInfo.PhoneNumber, // use qs to stringify the data\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n  \n      if (response.status === 200) {\n        setOtpSent(true);\n        setIsOTPModalOpen(true); // Open OTP modal\n        setSnackbarMessage(\"OTP sent to your phone number.\");\n        setSnackbarSeverity(\"info\");\n        setSnackbarOpen(true);\n      } else {\n        throw new Error('Failed to send OTP.');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setSnackbarMessage('Error sending OTP, please try again.');\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n  \n\n  const handleOtpSubmit = async () => {\n    //console.log(userProfileInfo.PhoneNumber,otp)\n    try {\n      const response = await axios.post(\n        `${BASE_URL}djSms/confirm_otp/`, \n        qs.stringify({\n          \"phone_number\": userProfileInfo.PhoneNumber,\n          \"otp\": otp,\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n      console.log(response)\n      if (response && response.data && response.data.status === \"success\") {\n        setIsPhoneVerified(true);\n        setUserProfileInfo({ ...userProfileInfo, isPhoneNumberVerified: true });\n        setIsOTPModalOpen(false);\n        handleSavePostOTP()\n        setSnackbarMessage('Phone number verified successfully.');\n        setSnackbarSeverity(\"success\");\n        setSnackbarOpen(true);\n      } else {\n        setSnackbarMessage(response.message || 'Invalid OTP.');\n        setSnackbarSeverity(\"error\");\n        setSnackbarOpen(true);\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setSnackbarMessage('Error verifying OTP, please try again.');\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n\n  return (\n    <>\n      <Modal open={open} onClose={onClose} style={{ overflow: 'scroll' }}>\n        <Box sx={{ p: 4, backgroundColor: 'white', margin: 'auto', mt: 5, maxWidth: 400, borderRadius: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Edit Profile\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            name=\"Name\"\n            value={userProfileInfo.Name}\n            onChange={handleChange}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            label=\"Age\"\n            name=\"Age\"\n            type=\"number\"\n            value={userProfileInfo.Age}\n            onChange={handleChange}\n            margin=\"normal\"\n          />\n\n          <TextField\n            fullWidth\n            label=\"Phone Number\"\n            name=\"PhoneNumber\"\n            type=\"number\"\n            value={userProfileInfo.PhoneNumber}\n            onChange={handleChange}\n            margin=\"normal\"\n            InputProps={{\n              readOnly: isPhoneVerified || userProfileInfo.isPhoneNumberVerified, // If verified, make it read-only\n            }}\n          />\n          {isPhoneVerified || userProfileInfo.isPhoneNumberVerified? (\n            <Typography color=\"green\">Phone Number Verified</Typography>\n          ) : (\n            <Button variant=\"outlined\" onClick={handleVerifyPhoneNumber}>\n              {otpSent ? \"Resend OTP\" : \"Verify Phone Number\"}\n            </Button>\n          )}\n\n          <Autocomplete\n            multiple\n            id=\"tags-standard\"\n            options={danceStylesOptions}\n            value={userDanceStyles}\n            onChange={handleDanceStylesChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                placeholder=\"Select Dance Styles\"\n                style={{ backgroundColor: 'white', color: 'black' }}\n              />\n            )}\n          />\n\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Gender</InputLabel>\n            <Select\n              name=\"Gender\"\n              value={userProfileInfo.Gender}\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Male\">Male</MenuItem>\n              <MenuItem value=\"Female\">Female</MenuItem>\n              <MenuItem value=\"Other\">Other</MenuItem>\n            </Select>\n          </FormControl>\n\n          <TextField\n            fullWidth\n            label=\"Bio\"\n            name=\"Bio\"\n            value={userProfileInfo.Bio}\n            onChange={handleChange}\n            multiline\n            rows={4}\n            margin=\"normal\"\n          />\n          <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"outlined\" onClick={onClose}>Cancel</Button>\n            <Button variant=\"contained\" onClick={handleSave}>Save</Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      {/* OTP Verification Modal */}\n      <Modal open={isOTPModalOpen} onClose={() => setIsOTPModalOpen(false)}>\n        <Box sx={{ p: 4, backgroundColor: 'white', margin: 'auto', mt: 5, maxWidth: 300, borderRadius: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Enter OTP\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"4-Digit OTP\"\n            value={otp}\n            onChange={(e) => setOtp(e.target.value)}\n            margin=\"normal\"\n          />\n          <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"outlined\" onClick={() => setIsOTPModalOpen(false)}>Cancel</Button>\n            <Button variant=\"contained\" onClick={handleOtpSubmit}>Submit OTP</Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      <Snackbar open={snackbarOpen} autoHideDuration={600}  anchorOrigin={ {vertical:'top', horizontal:'center'} } onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default EditProfileModal;\n","import { useState, useEffect } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Button as MUIButton } from '@mui/joy';\nimport { COLLECTIONS } from '../constants';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { useAuth } from '../context/AuthContext';\nimport { readDocument } from '../utils/firebaseUtils';\nimport './UserPage.css';\nimport Kyc from '../Components/Kyc';\nimport {Card as MUICard,CardHeader,Avatar, CardContent, Typography, Tooltip} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport EditProfileModal from '../Components/EditProfileModal';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { setGetCreatorModeOnMount } from '../utils/firebaseUtils';\nimport {\n  doc,\n  getDoc,\n} from \"firebase/firestore\";\nimport {\n  faClock,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CardSlider from \"../Components/CardSlider\";\nimport { db } from \"../config\";\nimport { useLoader } from '../context/LoaderContext';\n\n\nfunction UserPage() {\n\n  const [isCreator, setIsCreator] = useState(false);\n  const [userProfileInfo,setUserProfileInfo] = useState(\n    {\n      Name: '',\n      Age: '',\n      DanceStyles: '',\n      Gender: '',\n      Bio: '',\n    }\n  );\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n\n  const { currentUser } = useAuth();\n  console.log(\"currentUser\",currentUser)\n  const cardData = [\n    ['Transactions', 'All', '#/transactions'],\n    ['My Bookings', 'All', '#/myBookings'],\n    ['Instructors', 'Creator', '#/modifyInstructors'],\n    ['Studios', 'Creator', '#/modifyStudios'],\n    ['DashBoard', 'Creator', '#/creatorDashboard']\n  ];\n  const { setIsLoading } = useLoader();\n  const [open, setOpen] = useState(false);\n  const [recentlyWatchedStudios, setRecentlyWatchedStudios] = useState([]);\n\n\n  const fetchRecentlyWatchedStudios = async (userId) => {\n    try {\n      setIsLoading(true);\n      const userRef = doc(db, COLLECTIONS.USER, userId);\n      const userDoc = await getDoc(userRef);\n      const recentlyWatchedMap = userDoc.exists()\n        ? userDoc.data().recentlyWatched\n        : {};\n\n      const studioIds = Object.values(recentlyWatchedMap);\n      //console.log(\"got\",studioIds)\n      const studioDataPromises = studioIds.map(async (studioId) => {\n        //console.log(studioId)\n        if (!studioId) {\n          console.warn(\"Invalid studioId:\", studioId);\n          return null;\n        }\n        console.log(\"studioId\", studioId);\n        const studioRef = doc(db, COLLECTIONS.STUDIO, studioId);\n        const studioDoc = await getDoc(studioRef);\n        if (studioDoc.exists()) {\n          //console.log(studioDoc.data())\n          return { id: studioId, ...studioDoc.data() };\n        } else {\n          console.warn(`Studio document not found for ID: ${studioId}`);\n          return null;\n        }\n      });\n\n      const studioData = await Promise.all(studioDataPromises);\n      const validStudioData = studioData.filter((studio) => studio !== null);\n\n      setRecentlyWatchedStudios(validStudioData);\n    } catch (error) {\n      console.error(\"Error fetching recently watched studios:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // Sort the array by the card name\n  cardData.sort((a, b) => a[0].localeCompare(b[0]));\n \n  useEffect(() => {\n  \n    if (currentUser && currentUser.uid) {\n        console.log(\"Recently watched disabled\")\n        //fetchRecentlyWatchedStudios(currentUser.uid);\n      \n    }\n    const fetchCreatorMode = async () => {\n      try {\n        setIsLoading(true);\n        const userData = await readDocument(COLLECTIONS.USER, currentUser.uid);\n        if (userData) {\n          setUserProfileInfo({\n            Name: userData.Name || '',\n            Age: userData.Age || '',\n            DanceStyles: userData.DanceStyles || '',\n            Gender: userData.Gender || '',\n            Bio: userData.Bio || '',\n            PhoneNumber: userData.PhoneNumber || '',\n            isPhoneNumberVerified: userData.isPhoneNumberVerified || false,\n          });\n          const creatorMode = await setGetCreatorModeOnMount(currentUser.uid);\n          setIsCreator(creatorMode);\n          //console.log(creatorMode)\n        } else {\n          console.log(\"User not found but workshop created... error\");\n        }\n      } catch (error) {\n        console.log(\"Error fetching user data or creator mode: \", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchCreatorMode();\n    \n  }, [isCreator]); // Run once on mount\n\n  const cardStyle = {\n    background: isDarkModeOn ? 'black' : 'white',\n    color: isDarkModeOn ? 'white' : 'black',\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"10px\",\n    cursor: 'pointer' ,\n  };\n\n  return (\n    <div >\n      <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform:'capitalize' }}>Profile</h1>\n      <MUICard sx={{ maxWidth: 400,background: isDarkModeOn ? 'black' : 'white',color: isDarkModeOn ? 'white' : 'black'}}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt={\"Picture\"}\n              src={currentUser.photoURL}\n              sx={{ width: 40, height: 40 }}\n            />\n          }\n          title={\n            <Typography variant=\"h6\" component=\"div\" sx={{ display: 'flex',color: isDarkModeOn ? 'white' : 'black', alignItems: 'center' }}>\n              {currentUser.displayName}\n              {isCreator && (\n                 <Tooltip title=\"You are a verified user.\" arrow>\n                 <CheckCircleIcon sx={{ color: 'green', marginLeft: 0.5, fontSize: 20 }} />\n               </Tooltip>\n              )}\n            </Typography>\n          }\n          subheader={\n            <>\n              <Typography variant=\"body2\" component=\"div\" sx={{ color: isDarkModeOn ? 'white' : 'black' }}>\n                {[currentUser.email, userProfileInfo.Age]\n                  .filter(Boolean)\n                  .join(' || ')}\n              </Typography>\n              {userProfileInfo.DanceStyles && (\n                <Typography variant=\"body2\" component=\"div\" sx={{ mt: 1, color: isDarkModeOn ? 'white' : 'black' }}>\n                  {userProfileInfo.DanceStyles}\n                </Typography>\n              )}\n              {userProfileInfo.Bio && (\n                <Typography variant=\"body2\" component=\"div\" sx={{ mt: 1, color: isDarkModeOn ? 'white' : 'black' }}>\n                  {userProfileInfo.Bio}\n                </Typography>\n              )}\n            </>\n          }\n      \n          \n          subheaderTypographyProps={{\n            sx: {\n              color: isDarkModeOn ? 'gray' : 'darkgray'\n            }\n          }}\n        />\n        <MUIButton sx={{ ml: 2 }} variant=\"outlined\" onClick={handleOpen}>\n          Edit Profile\n        </MUIButton>\n        <EditProfileModal open={open} onClose={handleClose} userProfileInfo={userProfileInfo} setUserProfileInfo={setUserProfileInfo} />\n        <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\" style={{color: isDarkModeOn ? 'white' : 'black'}}>\n          {isCreator ? \"List your studios now!!\" : \"Welcome to the Nritya! \\n Verify your profile to list your studio.\"}\n        </Typography>\n      </CardContent>\n      </MUICard>\n      <br/>\n      <Row>\n      {cardData.map(([name, type, link]) => {\n        if (type === 'Creator' && !isCreator) return null;\n\n        return (\n          <Col\n            key={name}\n            xs={12}\n            sm={6}\n            md={6}\n            lg={3}\n            xl={3}\n            className=\"mb-4\"\n          >\n            <a href={link} >\n              <Card style={cardStyle}>\n                <Card.Body>\n                  <Card.Title>{name}</Card.Title>\n                </Card.Body>\n              </Card>\n            </a>\n          </Col>\n        );\n      })}\n    </Row>\n    <Kyc/>\n      <Row hidden>\n          {recentlyWatchedStudios.length > 0 && (\n            <h4 style={{ color: isDarkModeOn ? \"white\" : \"black\" }}>\n              {\" \"}\n              <FontAwesomeIcon icon={faClock} size=\"1x\" /> Recently Viewed\n            </h4>\n          )}\n          {recentlyWatchedStudios.length > 0 ? (\n            <CardSlider dataList={recentlyWatchedStudios} imgOnly={false} />\n          ) : (\n            \"\"\n          )}\n        </Row>\n    </div>\n  );\n}\n\nexport default UserPage\n\nconst formatDateTime = (timestamp) => {\n  const options = {\n    timeZone: 'Asia/Kolkata', // Set the time zone to IST\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n  };\n\n  return new Date(timestamp).toLocaleString('en-IN', options);\n};\n\n"],"names":["_ref","dataList","imgOnly","formattedDataList","Array","isArray","Object","values","open","setOpen","useState","selectedEntity","setSelectedEntity","canScrollLeft","setCanScrollLeft","canScrollRight","setCanScrollRight","scrollRef","useRef","updateScrollButtons","container","current","scrollLeft","scrollWidth","clientWidth","scroll","direction","scrollBy","left","behavior","handleClose","cardHoverStyle","transform","useEffect","addEventListener","removeEventListener","_jsxs","Box","sx","display","p","m","position","children","_jsx","className","onClick","MdArrowBackIosNew","ref","map","entity","index","handleOpen","url","console","log","MuiCard","style","marginRight","component","height","width","_objectSpread","CardCover","src","loading","alt","FiZoomIn","size","color","href","concat","id","ProductCard","data","img_src","iconUrl","Dialog","onClose","_Fragment","DialogContent","padding","maxWidth","Button","backgroundColor","MdArrowForwardIos","QontoConnector","styled","StepConnector","theme","stepConnectorClasses","alternativeLabel","top","right","active","line","borderColor","completed","palette","mode","grey","borderTopWidth","borderRadius","stages","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","_ref2","kycId","status","isDarkModeOn","useSelector","selectDarkModeStatus","kycData","setKycData","createTheme","primary","main","async","readDocument","COLLECTIONS","USER_KYC","error","fetchData","ThemeProvider","Paper","textAlign","marginBottom","elevation","Typography","variant","Stepper","activeStep","connector","stage","Step","StepLabel","validateField","name","value","test","names_map","Map","orderedKeys","locationOptions","indianCities","stateOptions","indianStates","_JSON$parse","_JSON$parse2","_JSON$parse3","formData","setFormData","first_name","middle_last_name","phone_number","street_address","city","state_province","zip_pin_code","country","aadhar","gstin","comments","tncAgreed","hash","errors","setErrors","user_id","JSON","parse","localStorage","getItem","UserId","filesAadhar","setFilesAadhar","filesGst","setFilesGst","newFilesAadhar","setNewFilesAadhar","newFilesGst","setNewFilesGst","hasTextChanged","setHasTextChanged","progressAadhar","setProgressAadhar","progressGst","setProgressGst","isSubmitting","setIsSubmitting","currentUserEmail","email","currentName","displayName","handleChange","e","target","prevErrors","prevFormData","kycDoc","fetchKycData","folder_path","STORAGES","CREATORS_KYC_DOCUMENTS","aadharFiles","gstFiles","Promise","all","getAllFilesFromFolder","length","warn","fetchKycImages","excludedKeys","Container","margin","border","Form","onSubmit","event","preventDefault","formFields","keys","filter","key","includes","isValid","errorMessages","errorNum","forEach","field","push","alert","join","newHash","sortedData","sort","CryptoJS","toString","calculateHash","notifyEmails","metaData","user_name","dbPayload","postData","deleteAllImagesInFolder2","uploadImages4","progress","updateDocumentFields","USER","KycIdList","reset","textTransform","fields","availableField","find","undefined","Group","controlId","get","Control","as","placeholder","onChange","required","paddingTop","paddingBottom","type","Label","disable","document","getElementById","click","cursor","accept","files","handleAadharUpload","fileURL","textDecoration","window","max","handleGstUpload","class","checked","for","readOnly","disabled","LinearProgress","KycStepper","NStudioCard","studioId","cardStyle","boxShadow","transition","Card","AspectRatio","ratio","overflow","Stack","spacing","bottom","danceStyles","split","slice","form","Chip","fontSize","bgcolor","danceStylesColorChips","trim","freeTrialAvailable","marginLeft","COLORS","LIME","CardContent","justifyContent","columnGap","Link","alignSelf","fontWeight","textColor","underline","overlay","whiteSpace","textOverflow","studioName","avgRating","flexShrink","toFixed","level","street","IconButton","hidden","zIndex","Favorite","minFee","BASE_URL","BASEURL_PROD","userProfileInfo","setUserProfileInfo","currentUser","useAuth","danceStylesOptions","userDanceStyles","setUserDanceStyles","userPhoneNumber","setUserPhoneNumber","isOTPModalOpen","setIsOTPModalOpen","otp","setOtp","isPhoneVerified","setIsPhoneVerified","isPhoneNumberVerified","otpSent","setOtpSent","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","DanceStyles","PhoneNumber","handleSnackbarClose","Modal","mt","gutterBottom","TextField","fullWidth","label","Name","Age","InputProps","axios","qs","headers","Error","Autocomplete","multiple","options","handleDanceStylesChange","renderInput","params","FormControl","InputLabel","Select","Gender","MenuItem","Bio","multiline","rows","saveDocument","uid","response","handleSavePostOTPSuccess","handleSavePostOTP","message","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","isCreator","setIsCreator","cardData","setIsLoading","useLoader","recentlyWatchedStudios","setRecentlyWatchedStudios","a","b","localeCompare","userData","creatorMode","setGetCreatorModeOnMount","fetchCreatorMode","background","MUICard","CardHeader","avatar","Avatar","photoURL","title","alignItems","Tooltip","arrow","CheckCircleIcon","subheader","Boolean","subheaderTypographyProps","MUIButton","ml","EditProfileModal","Row","link","Col","xs","sm","md","lg","xl","Body","Title","Kyc","FontAwesomeIcon","icon","faClock","CardSlider"],"sourceRoot":""}