{"version":3,"file":"static/js/3521.9e84442a.chunk.js","mappings":"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","sources":["Components/Header.js","utils/location.js","redux/actions/darkModeAction.js"],"sourcesContent":["import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Image from 'react-bootstrap/Image';\nimport Nav from 'react-bootstrap/Nav';\nimport { useMediaQuery } from 'react-responsive';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { selectRefreshLocation } from '../redux/selectors/refreshLocationSelector';\nimport indianCities from '../cities.json';\nimport { toggleDarkMode } from '../redux/actions/darkModeAction';\nimport { useAuth } from '../context/AuthContext';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { getBrowserLocation } from '../utils/location';\nimport { styled } from '@mui/material/styles';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport Switch from '@mui/material/Switch';\nimport Skeleton from '@mui/material/Skeleton';\nimport MenuOutlinedIcon from '@mui/icons-material/MenuOutlined';\nimport SearchIcon from '@mui/icons-material/Search';\nimport './Header.css';\nimport { Apartment, PlaceTwoTone } from '@mui/icons-material';\nimport logoBig from '../assets/images/logo_large.png';\nimport logoMobile from '../assets/images/logo_small.jpg';\n\nconst SideMenu = lazy(() => import('./SideMenu'));\nconst LoginModalDailog = lazy(() => import('./LoginModalDailog'));\nconst FILTER_LOCATION_KEY = 'filterLocation';\n\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\n  width: 62,\n  height: 34,\n  padding: 7,\n  '& .MuiSwitch-switchBase': {\n    margin: 1,\n    padding: 0,\n    transform: 'translateX(6px)',\n    '&.Mui-checked': {\n      color: '#fff',\n      transform: 'translateX(22px)',\n      '& .MuiSwitch-thumb:before': {\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n          '#fff',\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n      },\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n      },\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\n    width: 32,\n    height: 32,\n    '&::before': {\n      content: \"''\",\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n        '#fff',\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n    },\n  },\n  '& .MuiSwitch-track': {\n    opacity: 1,\n    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n    borderRadius: 20 / 2,\n  },\n}));\n\nfunction Header() {\n  const [selectedLocation, setSelectedLocation] = useState(localStorage.getItem(FILTER_LOCATION_KEY) ? localStorage.getItem(FILTER_LOCATION_KEY) : 'New Delhi');\n  const [showLocationDropdown, setShowLocationDropdown] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const navigate = useNavigate();\n  const { currentUser } = useAuth();\n  const dispatch = useDispatch();\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const reduxLocation = useSelector(selectRefreshLocation);\n  const [open, setOpen] = useState(false);\n  const isMobile = useMediaQuery({ query: '(max-width: 480px)' });\n  const userInfo = JSON.parse(localStorage.getItem('userInfo')) || {};\n  const photoURL = userInfo?.photoURL;\n\n  //console.log(\"Redux loc\", reduxLocation.city)\n\n  const autocompleteTheme = createTheme({\n    components: {\n      MuiAutocomplete: {\n        styleOverrides: {\n          option: {\n            '&:hover': {\n              backgroundColor: '#fce4ec',\n            },\n          },\n        },\n      },\n    },\n    palette: {\n      mode: isDarkModeOn ? 'dark' : 'light',\n    },\n  });\n\n  useEffect(() => {\n    if (reduxLocation) {\n      setSelectedLocation(reduxLocation);\n    }\n  }, [reduxLocation]);\n\n  useEffect(() => {\n    localStorage.setItem(FILTER_LOCATION_KEY, selectedLocation);\n  }, [selectedLocation]);\n\n  useEffect(() => {\n    const storedLocation = localStorage.getItem(FILTER_LOCATION_KEY);\n    if (storedLocation) {\n      setSelectedLocation(storedLocation);\n    }\n  }, []);\n\n  const styleObj = {\n    fontSize: 10,\n    textAlign: \"center\",\n    background: 'black',\n    padding: 0\n  }\n\n  function getUserNameInitials() {\n    const displayName = currentUser.displayName;\n    const nameParts = displayName.split(\" \");\n    let buttonContent = nameParts[0].charAt(0);\n    if (nameParts.length > 1) {\n      buttonContent += nameParts[1].charAt(0);\n    }\n    if (buttonContent.length < 2 && nameParts[0].length > 1) {\n      buttonContent += nameParts[0].charAt(1);\n    }\n    return buttonContent;\n  }\n\n  const handleToggleDarkMode = () => {\n    dispatch(toggleDarkMode()); // Dispatch the action using useDispatch\n  };\n  const [showProfileOffcanvas, setShowProfileOffcanvas] = useState(false);\n\n  const openProfileOffcanvas = () => {\n    setShowProfileOffcanvas(true);\n  };\n\n  const closeProfileOffcanvas = () => {\n    setShowProfileOffcanvas(false);\n  };\n\n  const handleButtonClick = () => {\n    navigate('#/search/' + searchText);\n  };\n\n  const handleLocationChange = (event, location) => {\n    if (!location) setSelectedLocation(\"New Delhi\");\n    else setSelectedLocation(location);\n\n    setShowLocationDropdown(false);\n    window.location.reload();\n  };\n\n  const locationOptions = indianCities.cities;\n\n  const getLocation = async (event) => {\n    const city = await getBrowserLocation();\n    setSelectedLocation(city);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    const handleDocumentClick = (event) => {\n      if (event.target.closest('.location-dropdown-container') === null) {\n        setShowLocationDropdown(false);\n      }\n    };\n\n    document.addEventListener('click', handleDocumentClick);\n\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, []);\n\n  //console.log(\"Hii-1\", entity)\n\n  const handleOpen = () => {\n    setOpen(true)\n    console.log(\"handle Open from header\", open)\n  }\n\n  //function handle to close the form\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <Navbar style={styleObj} expand=\"lg\" collapseOnSelect>\n      <Container fluid>\n        <div className=\"d-flex location-dropdown-container align-items-center\">\n\n          {showLocationDropdown && (\n            <Dropdown.Menu\n              show={showLocationDropdown}\n              className={`dropdown-menu ${isDarkModeOn ? 'dark' : ''}`}\n\n              style={{\n                marginTop: '0.5rem',\n                borderRadius: '8px',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                // marginLeft: '144px',\n                backgroundColor: isDarkModeOn ? '#181818' : 'white',\n              }}\n            >\n\n              <ThemeProvider theme={autocompleteTheme}>\n                <Autocomplete\n                  disablePortal\n                  id=\"locationSearch\"\n                  options={locationOptions}\n                  value={selectedLocation}\n                  onChange={handleLocationChange}\n                  sx={{ width: \"auto\", padding: '0' }}\n                  renderInput={(params) => (\n                    <>\n                      <Chip label=\"🧭 Current City\" sx={{\n                        cursor: 'pointer',\n                        width: \"100%\",\n                        marginTop: '0px',\n                        borderRadius: '0px',\n                        marginBottom: '10px'\n                      }} onClick={getLocation} />\n                      <TextField\n                        {...params}\n                        label=\"Location\"\n                        placeholder=\"🔍Search...\"\n                      />\n                    </>\n                  )}\n                  classes={{ option: 'city-btn-hover-purple-bg' }}\n                />\n              </ThemeProvider>\n\n            </Dropdown.Menu>\n          )}\n\n          {isMobile ? (\n            <Navbar.Brand href=\"/nritya-webApp\" style={{ textTransform: 'none' }}>\n              <Image style={{ width: \"4rem\", height: \"4rem\" }}\n                src={logoMobile}\n                alt=\"Logo\"\n                roundedCircle={true}\n              />\n            </Navbar.Brand>\n          ) : (\n            <Navbar.Brand href=\"/nritya-webApp\" style={{ textTransform: 'none' }}>\n              <Image style={{\n                width: \"100%\", height: \"4rem\", maxWidth: \"200px\",\n                margin: 0,\n                padding: 0,\n                objectFit: \"contain\"\n              }}\n                src={logoBig}\n                alt=\"Logo\"\n              />\n            </Navbar.Brand>\n          )}\n          <Button\n            variant=\"outlined\"\n            className=\"btn-hover-purple-bg me-2 rounded-3\"\n            onClick={() => setShowLocationDropdown(!showLocationDropdown)}\n            style={{\n              cursor: 'pointer', textTransform: 'none', color: 'white', borderColor: 'white',\n              height: '3rem', borderWidth: '2px', width: '12rem'\n            }}\n            startIcon={<PlaceTwoTone />}>\n            {selectedLocation}\n          </Button>\n        </div>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"> <MenuOutlinedIcon style={{ color: \"white\" }} /> </Navbar.Toggle>\n\n        <Navbar.Collapse id=\"navbarScroll\" className=\"justify-content-center\">\n\n\n          <Nav className=\"ms-auto justify-content-lg-end align-items-center flex-grow-1\">\n            <div className=\"position-relative location-dropdown-container my-2\">\n\n              <Nav className=\"ms-auto justify-content-lg-end align-items-center flex-grow-1\">\n                <FormControlLabel\n                  control={<MaterialUISwitch sx={{ m: 1 }} checked={isDarkModeOn ? true : false} />}\n                  onClick={handleToggleDarkMode}\n                />\n                {currentUser ? (\n                  <>\n                    <Button startIcon={<SearchIcon />} variant=\"outlined\" className=\"search-box me-2 my-2 rounded-3 d-none d-lg-flex\" href=\"#/search/studios\" style={{ textTransform: 'none', borderColor: 'white', backgroundColor: 'white', color: 'black', borderWidth: '2px', height: '3rem', width: '12rem', justifyContent: 'left' }}>\n                      Search\n                    </Button>\n                    <Button startIcon={<Apartment />} variant=\"outlined\" className=\"btn-hover-purple-bg me-2 my-2 rounded-3\" href=\"#/modifyStudios\" style={{ textTransform: 'none', borderColor: 'white', color: 'white', borderWidth: '2px', height: '3rem', width: '12rem' }}>List Studios</Button>\n                  </>\n                ) : (\n                  <>\n                    <Button startIcon={<SearchIcon />} variant=\"outlined\" className=\"search-box me-2 my-2 rounded-3 d-none d-lg-flex\" href=\"#/search/studios\" style={{ textTransform: 'none', borderColor: 'white', backgroundColor: 'white', color: 'black', borderWidth: '2px', height: '3rem', width: '12rem', textAlign: 'left', justifyContent: 'left' }}>\n                      Search\n                    </Button>\n                    <Button startIcon={<Apartment />} variant=\"outlined\" className=\"btn-hover-purple-bg me-2 my-2 rounded-3\" href=\"#/login\" style={{ textTransform: 'none', borderColor: 'white', color: 'white', borderWidth: '2px', height: '3rem', width: '12rem' }}> List Studios</Button>\n                  </>\n                )}\n              </Nav>\n            </div>\n            {currentUser ? (\n              <>\n                {\n                  photoURL ? (\n                    <Button\n                      onClick={openProfileOffcanvas}\n                      className='my-3'\n                      style={{\n                        borderRadius: '50%',\n                        width: '3rem',\n                        height: '3rem',\n                        marginRight: '0.5rem',\n                        padding: 0, // Ensure no padding around the image\n                        minWidth: '3rem', // Ensure the button size is consistent\n                        minHeight: '3rem', // Ensure the button size is consistent\n                        borderWidth: '0.2px',\n                        backgroundImage: `url(${photoURL})`,\n                        backgroundSize: 'cover', // Cover the entire button area\n                        backgroundPosition: 'center',\n                        backgroundRepeat: 'no-repeat',\n                        borderColor: 'yellow',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        border: 'none', // Remove default border if needed\n                        boxShadow: 'none', // Remove default shadow if needed\n                      }}\n                    />\n\n                  ) :\n                    (\n                      <Button onClick={openProfileOffcanvas} className=\"rounded-pill my-3\"\n                        variant=\"outlined\"\n                        style={{\n                          fontSize: '0.9rem',\n                          color: 'white', borderRadius: '50%', borderColor: \"white\",\n                          width: '3rem', height: '3rem', display: 'flex',\n                          alignItems: 'center', justifyContent: 'center', cursor: 'pointer', marginRight: '0.5rem',\n                          borderWidth: '2px',\n                        }}>\n                        {getUserNameInitials()}\n                      </Button>\n\n                    )\n                }\n                <Suspense fallback={<Skeleton variant=\"rectangular\" animation=\"wave\"\n                  style={{\n                    width: '20rem', height: '100vh', left: 0, top: 0, zIndex: 1000, backgroundColor: isDarkModeOn ? '#333' : '#f0f0f0',\n                  }}\n                />}>\n                  <SideMenu showProfileOffcanvas={showProfileOffcanvas} closeProfileOffcanvas={closeProfileOffcanvas} />\n                </Suspense>\n              </>\n\n            ) : (\n              <Button variant=\"outlined\" className='btn-hover-purple-bg my-2 rounded-3' onClick={handleOpen} style={{ textTransform: 'none', color: 'white', borderColor: \"white\", height: '3rem', width: '12rem', borderWidth: '2px' }}>Sign In</Button>\n            )}\n            <Suspense fallback={<div>Loading...</div>}>\n              <LoginModalDailog open={open} handleClose={handleClose} />\n            </Suspense>\n          </Nav>\n        </Navbar.Collapse>\n\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import { gMapApiKey } from '../config';\n\nexport const getBrowserLocation = () => {\n  // const askForLocationPermission = () => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(showCity, handleLocationError);\n  //   } else {\n  //     alert('Geolocation is not supported by this browser or permission not granted');\n  //   }\n  // };\n\n  // const showCity = (position) => {\n  //   const latitude = position.coords.latitude;\n  //   const longitude = position.coords.longitude;\n  //   localStorage.setItem('browserGeoLoc', JSON.stringify({ latitude: latitude, longitude: longitude }));\n\n  //   const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${gMapApiKey.key}`;\n  //   console.log(url);\n  //   fetch(url)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //       const addressComponents = data.results[0].address_components;\n\n  //       // Log or store the entire address\n  //       const completeAddress = addressComponents.map((component) => component.long_name).join(', ');\n  //       console.log(`Your address is ${completeAddress}`);\n\n  //       // Log or store specific components, e.g., country, state, city\n  //       const city = addressComponents.find((component) => component.types.includes('locality')).long_name;\n  //       const state = addressComponents.find((component) => component.types.includes('administrative_area_level_1')).long_name;\n  //       const country = addressComponents.find((component) => component.types.includes('country')).long_name;\n  //       localStorage.setItem('filterLocation', city);\n  //       console.log(`Your address is City: ${city}`);\n  //       console.log(`Your address is State: ${state}`);\n  //       console.log(`Your address is Country: ${country}`);\n  //       localStorage.setItem('browserLocation', city);\n  //     })\n  //     .catch((error) => console.log(error));\n  // };\n\n  // const handleLocationError = (error) => {\n  //   console.log('Error getting location:', error.message);\n  // };\n\n  // askForLocationPermission();\n\n\n\n\n  return new Promise((resolve, reject) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        localStorage.setItem('browserGeoLoc', JSON.stringify({ latitude: latitude, longitude: longitude }));\n\n        const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${gMapApiKey.key}`;\n        console.log(url);\n        fetch(url)\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n            const addressComponents = data.results[0].address_components;\n\n            // Log or store the entire address\n            const completeAddress = addressComponents.map((component) => component.long_name).join(', ');\n            console.log(`Your address is ${completeAddress}`);\n\n            // Log or store specific components, e.g., country, state, city\n            const city = addressComponents.find((component) => component.types.includes('locality')).long_name;\n            const state = addressComponents.find((component) => component.types.includes('administrative_area_level_1')).long_name;\n            const country = addressComponents.find((component) => component.types.includes('country')).long_name;\n            localStorage.setItem('filterLocation', city);\n            console.log(`Your address is City: ${city}`);\n            console.log(`Your address is State: ${state}`);\n            console.log(`Your address is Country: ${country}`);\n            localStorage.setItem('browserLocation', city);\n            resolve(city);\n          })\n          .catch((error) => {\n            console.log(error)\n            reject('Failed to get current location');\n          });\n      });\n    } else {\n      reject('Geolocation is not supported by this browser or permission not granted');\n    }\n  });\n};\n","export const toggleDarkMode = () => {\n  return {\n    type: 'TOGGLE_DARK_MODE',\n  };\n};\n"],"names":["SideMenu","lazy","LoginModalDailog","FILTER_LOCATION_KEY","MaterialUISwitch","styled","Switch","_ref","theme","width","height","padding","margin","transform","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","selectedLocation","setSelectedLocation","useState","localStorage","getItem","showLocationDropdown","setShowLocationDropdown","searchText","setSearchText","currentUser","useNavigate","useAuth","dispatch","useDispatch","isDarkModeOn","useSelector","selectDarkModeStatus","reduxLocation","selectRefreshLocation","open","setOpen","isMobile","useMediaQuery","query","userInfo","JSON","parse","photoURL","autocompleteTheme","createTheme","components","MuiAutocomplete","styleOverrides","option","useEffect","setItem","storedLocation","showProfileOffcanvas","setShowProfileOffcanvas","openProfileOffcanvas","locationOptions","indianCities","getLocation","async","city","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","coords","longitude","stringify","url","gMapApiKey","key","console","log","fetch","then","response","json","data","addressComponents","results","address_components","completeAddress","map","component","long_name","join","find","types","includes","state","country","catch","error","window","location","reload","handleDocumentClick","event","target","closest","document","addEventListener","removeEventListener","_jsx","Navbar","style","fontSize","textAlign","background","expand","collapseOnSelect","children","_jsxs","Container","fluid","className","Dropdown","Menu","show","marginTop","boxShadow","ThemeProvider","Autocomplete","disablePortal","id","options","value","onChange","handleLocationChange","sx","renderInput","params","_Fragment","Chip","label","cursor","marginBottom","onClick","TextField","placeholder","classes","Brand","href","textTransform","Image","src","logoMobile","alt","roundedCircle","maxWidth","objectFit","logoBig","Button","variant","borderColor","borderWidth","startIcon","PlaceTwoTone","Toggle","MenuOutlinedIcon","Collapse","Nav","FormControlLabel","control","m","checked","handleToggleDarkMode","type","SearchIcon","justifyContent","Apartment","marginRight","minWidth","minHeight","backgroundSize","display","alignItems","border","nameParts","displayName","split","buttonContent","charAt","length","getUserNameInitials","Suspense","fallback","Skeleton","animation","zIndex","closeProfileOffcanvas","handleOpen","handleClose"],"sourceRoot":""}