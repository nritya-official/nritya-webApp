{"version":3,"file":"static/js/7472.a636915b.chunk.js","mappings":"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","sources":["Components/ImageUpload.js","Components/TimeRange.js","Components/WorkshopCard.js","Components/WorkshopCardSlider.js","Components/WorkshopAdd.js","Components/WorkshopUpdate.js","Screens/CreatorWorkshop.js","utils/common.js"],"sourcesContent":["import React, { useState, useEffect, forwardRef, useImperativeHandle, useRef } from \"react\";\nimport shortid from \"shortid\";\nimport { ref as firebaseRef, getDownloadURL, listAll } from 'firebase/storage';\nimport { storage } from '../config';\nimport { useSelector } from 'react-redux'; // Import useSelector and useDispatch\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { deleteAllImagesInFolder,deleteImages,uploadImages} from '../utils/firebaseUtils'\nimport { Card, CardContent, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { STORAGES } from \"../constants\";\nimport { useLoader } from \"../context/LoaderContext\";\n\n\nconst ImageUpload = forwardRef(({entityId,storageFolder,title, maxImageCount=10, minImageCount, updateMode, disable }, ref) => {\n  const { setIsLoading } = useLoader();\n  const showSnackbar = useSnackbar();\n  const imageInputRef = useRef(null);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [newFiles, setNewFiles] = useState([]); // Track new files to be added\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n  //console.log(\"Received props=> entityId:\", entityId, \"|storageFolder:\", storageFolder);\n  const [progressDelete, setProgressDelete] = useState(-1);\n  const [progressUpdate, setProgressUpdate] = useState(-1);\n  const [isUploadSuccessful, setIsUploadSuccessful] = useState(false);\n\n  console.log(\"Kyc enitity id \",entityId, disable)\n  const filesizes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  useEffect(() => {\n   // console.log(\"Fetching image for\",entityId)\n    if(entityId){\n      fetchStudioImages(entityId); // Fetch images when component mounts\n    }\n  }, [entityId]);\n\n  useEffect(() => {\n   // console.log(\"Selected files:\", selectedFiles);\n    if (maxImageCount && selectedFiles.length > maxImageCount) {\n      const truncatedFiles = selectedFiles.slice(0, maxImageCount);\n      alert(`Exceeded maxImageCount, keeping first ${maxImageCount} files.`);\n      imageInputRef.current.value = null;\n      setSelectedFiles(truncatedFiles);\n    }\n  }, [selectedFiles, maxImageCount]);\n  \n\n  const handleInputChange = (e) => {\n    // console.log(\"handleInputChange\")\n    const files = Array.from(e.target.files);\n    const updatedFiles = [];\n    // console.log(\"file array \",files.length)\n    files.forEach((file) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        updatedFiles.push({\n          id: shortid.generate(),\n          filename: file.name,\n          filetype: file.type,\n          fileimage: reader.result,\n          datetime: file.lastModifiedDate.toLocaleString(\"en-IN\"),\n          filesize: filesizes(file.size),\n          file: file, // Store the actual file object\n        });\n\n        if (updatedFiles.length === files.length) {\n          setSelectedFiles((prevFiles) => [...prevFiles, ...updatedFiles]);\n          setNewFiles(updatedFiles);\n          imageInputRef.current.value = null;\n          // console.log(\"New files in total\",setNewFiles.length)\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleDeleteSelectedFile = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this image?\")) {\n      setSelectedFiles((prevFiles) =>\n        prevFiles.filter((file) => file.id !== id)\n      );\n    }\n  };\n\n  const handleUploadSubmit = async () => {\n    if (!entityId) {\n      alert(\"No studio selected\");\n      return;\n    }\n\n    setProgressDelete(-1);\n    setProgressUpdate(-1);\n\n    try {\n      setIsLoading(true);\n      if (maxImageCount === 1 && selectedFiles.length >= minImageCount) {\n        // Delete all previous images in the folder\n        await deleteAllImagesInFolder(storageFolder, entityId);\n        await uploadImages(storageFolder,newFiles, entityId, setProgressUpdate);\n        showSnackbar(\"Image uploaded successfully\", \"success\");\n        setIsUploadSuccessful(true);\n      } else {\n        // Calculate images to delete and add\n        const { imagesToDelete, newImages } = calculateDelta(selectedFiles, uploadedFiles);\n\n        if (minImageCount && newImages.length < minImageCount) {\n          showSnackbar(`Minimum ${minImageCount} image(s) are required`, \"error\");\n          return;\n        }\n\n        // Delete images if there are any\n        if (imagesToDelete.length > 0) {\n          await deleteImages(storageFolder, imagesToDelete, entityId, setProgressDelete);\n          showSnackbar(\"Image(s) deleted successfully\", \"success\");\n        }\n\n        // Upload new images if there are any\n        if (newImages.length > 0) {\n          await uploadImages(storageFolder, newImages, entityId, setProgressUpdate);\n          showSnackbar(\"Image(s) uploaded successfully\", \"success\");\n        }\n        setIsUploadSuccessful(true);\n      }\n\n      imageInputRef.current.value = null;\n      // alert(\"Images Uploaded/Deleted\");\n    } catch (error) {\n      setIsUploadSuccessful(false);\n      console.error(\"Error uploading/deleting images:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to calculate images to delete and new images to upload\n  const calculateDelta = (selectedFiles, uploadedFiles) => {\n    const selectedFileIds = selectedFiles.map(file => file.id);\n    const uploadedFileIds = uploadedFiles.map(file => file.id);\n\n    const imagesToDelete = uploadedFiles.filter(file => !selectedFileIds.includes(file.id));\n    const newImages = selectedFiles.filter(file => !uploadedFileIds.includes(file.id));\n\n    return { imagesToDelete, newImages };\n  };\n\n\n  const fetchStudioImages = async (entityId) => {\n    setSelectedFiles([]);\n    setNewFiles([]);\n    try {\n      const folderPath = `${storageFolder}/${entityId}`;\n      console.log(folderPath)\n      const folderRef = firebaseRef(storage, folderPath);\n      const fileList = await listAll(folderRef);\n\n      const files = await Promise.all(\n        fileList.items.map(async (fileRef) => {\n          const downloadURL = await getDownloadURL(fileRef);\n\n          return {\n            id: fileRef.name,\n            filename: fileRef.name,\n            fileURL: downloadURL,\n          };\n        })\n      );\n      // console.log('File fetching',files);\n      setUploadedFiles(files); // Update the uploadedFiles state with fetched data\n      setSelectedFiles(files);\n    } catch (error) {\n      console.error('Error fetching user images:', error);\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    isValid: () => {\n      if (minImageCount === 0) return true;\n      return isUploadSuccessful\n    },\n  }));\n\n  return (\n    <div className=\"fileupload-view\" style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n      <div className=\"row justify-content-center m-0\" style={{ flex: '1',justifyContent: 'center' }}>\n        <div className=\"col-md-6\" style={{ flex: '1' ,justifyContent: 'center'}}>\n          <div className=\"card mt-5\">\n            <div className=\"card-body\" style={{ backgroundColor: isDarkModeOn ? '#333333' : 'white' }}>\n              <div className=\"kb-data-box\">\n                <div className=\"kb-modal-data-title\">\n                  <div className=\"kb-data-title\" style={{justifyContent:'center',flex: '1'}}>\n                    <h4>{title}</h4>\n                    <p>Max no of image(s):{maxImageCount} {storageFolder === STORAGES.STUDIOIMAGES && <p>Add at least 5 images</p>}</p>\n                  </div>\n                </div>\n                <div style={{  backgroundColor: isDarkModeOn ? '#333333' : 'white'}}>\n                  <div className=\"kb-file-upload\">\n                    <div className=\"file-upload-box\">\n                      <input\n                        ref={imageInputRef}\n                        type=\"file\"\n                        id=\"fileupload\"\n                        className=\"file-upload-input\"\n                        onChange={handleInputChange}\n                        multiple\n                      />\n\n                    </div>\n                  </div>\n                  <br></br>\n                  <div className=\"kb-attach-box mb-3\">\n                  <div className=\"row\">\n                    {entityId && selectedFiles.length > 0 ? (\n                      selectedFiles.map((file) => (\n                        \n                        <div key={file.id} className=\"col-6 col-md-3 mb-3\" style={{ position: 'relative' }}>\n                          \n                          <Card sx={{ maxWidth: 345 }}>\n                            {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                              <div style={{ position: 'relative' }}>\n                                <img\n                                  src={file.fileimage ? file.fileimage : file.fileURL}\n                                  alt={file.filename}\n                                  className=\"card-img-top\"\n                                  style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                                />\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  disabled={disable}\n                                  onClick={() => handleDeleteSelectedFile(file.id)}\n                                  style={{ position: 'absolute', top: 0, right: 0, backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                                >\n                                  <DeleteIcon style={{color:\"ff0000\"}}/>\n                                </IconButton>\n                              </div>\n                            ) : (\n                              <CardContent>\n                                <i className=\"far fa-file-alt\"></i>\n                              </CardContent>\n                            )}\n                          </Card>\n                        </div>\n                        \n                      ))\n                    ) : (\n                      <div className=\"col-12 text-center\">\n                        <p>No images selected</p>\n                      </div>\n                    )}\n                  </div>\n\n                  </div>\n\n                  \n                  <div className=\"kb-buttons-box\">\n                    <button\n                      type=\"button\"\n                      className=\"btn div-submit\"\n                      style={{ backgroundColor: isDarkModeOn ? '#892CDC' : 'black', color:'white'  }}\n                      onClick={handleUploadSubmit}\n                      disabled={disable}\n                    >\n                      Image Upload\n                    </button>\n                  </div>\n                </div>\n                {selectedFiles.length > 0 && (\n                  <div className=\"kb-attach-box\" hidden>\n                    <div className=\"row\">\n                    <hr />\n                    {selectedFiles.map((file) => (\n                      <div key={file.id} className=\"col-6 col-md-3 mb-3\">\n                      <div className=\"card\">\n                        {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                          <img\n                            src={file.fileimage}\n                            alt={file.filename}\n                            className=\"card-img-top\"\n                            style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                          />\n                        ) : (\n                          <div className=\"card-body\">\n                            <i className=\"far fa-file-alt\"></i>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n              { progressDelete >= 0 && (\n                    <div>\n                        <p style={{ color: isDarkModeOn ? '#fff' : '#000' }}>\n                            Deleting images... {progressDelete.toFixed(2)}%\n                        </p>\n                        <progress \n                            value={progressDelete} \n                            max=\"100\" \n                            style={{\n                                color: isDarkModeOn ? '#fff' : '#000'\n                            }}\n                        >\n                            {progressDelete.toFixed(2)}%\n                        </progress>\n                    </div>\n                )}\n\n                { progressUpdate >= 0 && (\n                    <div>\n                        <p style={{ color: isDarkModeOn ? '#fff' : '#000' }}>\n                            Uploading images... {progressUpdate.toFixed(2)}%\n                        </p>\n                        <progress \n                            value={progressUpdate} \n                            max=\"100\" \n                            style={{\n                                color: isDarkModeOn ? '#fff' : '#000'\n                            }}\n                        >\n                            {progressUpdate.toFixed(2)}%\n                        </progress>\n                    </div>\n                )}\n\n                            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\n// Set default prop values\nImageUpload.defaultProps = {\n  maxImageCount: 5, // Default maximum image count\n  updateMode: false,\n  disable:false,\n};\n\nexport default ImageUpload;","import React from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\n\nconst TimeRange = ({ defaultTime, handleSelect }) => {\n  const startTime_i = defaultTime.split(\"-\")[0].trim();\n  const endTime_i = defaultTime.split(\"-\")[1]?.trim();\n\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const generateTimeOptions = () => {\n    const options = [];\n    let option_AM = [];\n    let option_PM = [];\n    \n    for (let hours = 0; hours < 24; hours++) {\n        for (let minutes = 0; minutes < 60; minutes += 30) {\n            const formattedMinutes = minutes.toString().padStart(2, \"0\");\n            \n            if (hours < 12) {\n                // Handle 12-hour format for AM, converting 0 hours to 12 for midnight\n                const formattedHours = hours === 0 ? 12 : hours;\n                option_AM.push(`${formattedHours}:${formattedMinutes} AM`);\n            } else {\n                // Handle 12-hour format for PM, converting 12-23 hours to 1-12 format\n                const formattedHours = hours === 12 ? 12 : hours % 12;\n                option_PM.push(`${formattedHours}:${formattedMinutes} PM`);\n            }\n        }\n    }\n\n    // Interleave AM and PM options to build the full list\n    for (let i = 0; i < option_AM.length || i < option_PM.length; i++) {\n        if (i < option_AM.length) {\n            options.push(option_AM[i]);\n        }\n        if (i < option_PM.length) {\n            options.push(option_PM[i]);\n        }\n    }\n\n    return options;\n};\n\n  const renderTimeOptions = (defaultValue) => {\n    const timeOptions = generateTimeOptions();\n\n    return (\n      <>\n        <option value={defaultValue}>{defaultValue}</option>\n        {timeOptions.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <Row>\n      <Col>\n        <Form.Group>\n          <Form.Label>Start Time</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => handleSelect(e.target.value, null)}\n            style={{\n              background: \"transparent\",\n              borderWidth: 1,\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n          >\n            {renderTimeOptions(startTime_i)}\n          </Form.Control>\n        </Form.Group>\n      </Col>\n      <Col>\n        <Form.Group>\n          <Form.Label>End Time</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => handleSelect(null, e.target.value)}\n            style={{\n              background: \"transparent\",\n              borderWidth: 1,\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n          >\n            {renderTimeOptions(endTime_i)}\n          </Form.Control>\n        </Form.Group>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TimeRange;\n","import React, { useEffect, useState } from \"react\";\nimport AspectRatio from \"@mui/joy/AspectRatio\";\nimport Card from \"@mui/joy/Card\";\nimport CardContent from \"@mui/joy/CardContent\";\nimport Chip from \"@mui/joy/Chip\";\nimport Typography from \"@mui/joy/Typography\";\nimport {\n  Box,\n  Grid,\n  Modal,\n  Stack,\n  Typography as MUITypography,\n  Button,\n  IconButton,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { COLLECTIONS, STORAGES } from \"../constants\";\nimport { readDocumentWithImageUrl } from \"../utils/firebaseUtils\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport dayjs from \"dayjs\";\nimport { addDoc, collection, doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../config\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport whatsAppImage from '../assets/images/whatsapp.png';\nimport callImage from '../assets/images/india_11009487.png';\nimport ShareButton from \"./ShareButton\";\n\nfunction WorkshopDetailsModal({\n  open,\n  handleClose,\n  dataItem,\n  activateWorkshop,\n  deactivateWorkshop,\n  actionsAllowed,\n}) {\n  const showSnackbar = useSnackbar();\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [isBooking, setIsBooking] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n\n  const currentUser = JSON.parse(localStorage.getItem(\"userInfo\"))?.UserId;\n\n  const handleBook = async () => {\n    try {\n      setIsBooking(true);\n\n      addDoc(collection(db, COLLECTIONS.BOOKINGS), {\n        StudioId: dataItem.StudioId,\n        WorkshopId: dataItem.id,\n        UserId: currentUser,\n        bookingDate: Date.now(),\n      });\n\n      const userRef = doc(db, \"User\", currentUser);\n      const userSnap = await getDoc(userRef);\n\n      if (userSnap.exists()) {\n        if (userSnap.data() != null) {\n          await updateDoc(userRef, {\n            BookedWorkshops: [\n              ...(userSnap.data().BookedWorkshops || []),\n              dataItem.id,\n            ],\n          });\n        }\n      }\n\n      setUserDetails(prev => ({ ...prev, BookedWorkshops: [...(prev?.BookedWorkshops || []), dataItem.id] }));\n\n      showSnackbar(\"Workshop booked\", \"success\");\n    } catch (error) {\n      console.error(error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsBooking(false);\n    }\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const userRef = doc(db, \"User\", currentUser);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) setUserDetails(userSnap.data());\n      } catch (error) {\n        console.log(\" error\");\n      }\n    };\n\n    getUser();\n  }, []);\n\n  const isCreatorOfWorkshop = dataItem.UserId === currentUser;\n\n  const whatsappMessage = encodeURIComponent(\"Hey, I found your Studio on nritya.co.in. I'm interested\");\n\n  const isBooked = userDetails?.BookedWorkshops?.includes?.(dataItem?.id);\n\n  const shareUrl = `${window.location.host}/nritya-webApp#/workshop/${dataItem.id}`;\n  \n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n      style={{zIndex:40}}\n    >\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          maxHeight: \"90%\",\n          overflow: \"auto\",\n          width: { xs: \"90%\", md: \"60%\" },\n          bgcolor: isDarkModeOn ? \"black\" : \"background.paper\",\n          borderWidth: \"2px\",\n          borderStyle: \"solid\",\n          borderColor: isDarkModeOn ? \"white\" : \"black\",\n          boxShadow: 24,\n          p: \"1rem\",\n          borderRadius: \"8px\",\n        }}\n      >\n        <Grid container spacing=\"8px\" rowGap={2}>\n          <Grid item xs={12} lg={8}>\n            <img\n              src={dataItem.imageUrl}\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"contain\",\n                borderRadius: \"8px\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <Box\n              sx={{\n                height: \"100%\",\n                bgcolor: isDarkModeOn ? \"#333333\" : \"#efefef\",\n                p: 2,\n                borderRadius: \"8px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Box sx={{ flex: 1 }}>\n                <MUITypography\n                  variant=\"h6\"\n                  component=\"p\"\n                  sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dayjs(dataItem.date).format(\"DD/MM/YYYY\")}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"h6\"\n                  component=\"p\"\n                  sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.time}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"body1\"\n                  component=\"p\"\n                  sx={{ mt: \"2rem\", color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.venue}\n                </MUITypography>\n              </Box>\n\n              <Box sx={{ mt: \"2rem\", display: \"flex\", justifyContent: \"space-between\", flexWrap: 'wrap' }}>\n                <MUITypography\n                  variant=\"h5\"\n                  sx={{\n                    alignSelf: \"center\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                >\n                  ₹{dataItem.price}\n                </MUITypography>\n                {!actionsAllowed && !isCreatorOfWorkshop && currentUser && <Button\n                  variant=\"outlined\"\n                  onClick={handleBook}\n                  disabled={isBooked || isBooking}\n                  sx={{\n                    alignSelf: \"center\",\n                    boxShadow: \"none\",\n                    textTransform: \"none\",\n                    fontSize: 16,\n                    padding: \"6px 12px\",\n                    border: \"1px solid\",\n                    lineHeight: 1.5,\n                    backgroundColor: \"transparent\",\n                    borderColor: isDarkModeOn ? \"white\" : \"black\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"transparent\",\n                      borderColor: isDarkModeOn ? \"white\" : \"black\",\n                      boxShadow: \"none\",\n                    },\n                    \"&:active\": {\n                      boxShadow: \"none\",\n                      backgroundColor: \"transparent\",\n                      borderColor: isDarkModeOn ? \"white\" : \"black\",\n                    },\n                    \"&:focus\": {\n                      boxShadow: \"none\",\n                    },\n                  }}\n                >\n                  {isBooked ? \"Booked\" : \"Book Now\"}\n                </Button>}\n              </Box>\n            </Box>\n            {!actionsAllowed && !isCreatorOfWorkshop && currentUser && <MUITypography component={'p'} variant=\"caption\" sx={{ my: '2px', color: isDarkModeOn ? \"white\" : \"black\", textAlign: 'center' }}>\n              Book here and pay at the venue\n            </MUITypography>}\n          </Grid>\n          <Grid item sx={{ mt: 1 }}>\n            <Box sx={{ display: 'flex', columnGap: 2 }}>\n            <MUITypography\n              variant=\"h5\"\n              component=\"p\"\n              sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            >\n              {dataItem.workshopName || \"\"}\n              {dataItem.danceStyles.map((dance) => ` | ${dance}`)}          \n              </MUITypography>\n              <ShareButton shareUrl={shareUrl} />\n            </Box>\n            <MUITypography\n              variant=\"body1\"\n              component=\"p\"\n              sx={{ mt: 1, color: isDarkModeOn ? \"white\" : \"black\" }}\n            >\n              <span>By {dataItem.studioDetails?.studioName || \"\"}</span>\n              {dataItem.studioDetails && dataItem.studioDetails?.whatsappNumber && (\n                <IconButton color=\"success\" size=\"small\" target=\"_blank\" href={`https://wa.me/91${dataItem.studioDetails.whatsappNumber}?text=${whatsappMessage}`}>\n                  <img src={whatsAppImage} alt=\"Whatsapp call\" style={{ width: 30, height: 28 }} />\n                </IconButton>\n              )}\n              {dataItem.studioDetails && dataItem.studioDetails?.mobileNumber && (\n                <IconButton color=\"primary\" size=\"small\" target=\"_blank\" href={`tel:${dataItem.studioDetails.mobileNumber}`}>\n                  <img src={callImage} alt=\"Phone call\" style={{ width: 30, height: 28 }} />\n                </IconButton>\n              )}\n            </MUITypography>\n            <div style={{ color: isDarkModeOn ? 'white ' : 'black' }} className=\"description-box\" dangerouslySetInnerHTML={{ __html: dataItem.description || \"Workshop Description\" }}></div>\n          </Grid>\n        </Grid>\n\n        <Box sx={{ mt: \"1rem\", textAlign: \"right\" }}>\n          {actionsAllowed && isCreatorOfWorkshop && (\n            <Button\n              onClick={() =>\n                dataItem?.active\n                  ? deactivateWorkshop(dataItem?.id)\n                  : activateWorkshop(dataItem?.id)\n              }\n              variant=\"outlined\"\n              sx={{\n                mr: \"1rem\",\n                color: \"white\",\n                boxShadow: \"none\",\n                border: \"1px solid\",\n                backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                borderColor: \"white\",\n                color: \"white\",\n                \"&:hover\": {\n                  backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                  borderColor: \"white\",\n                  boxShadow: \"none\",\n                },\n                \"&:active\": {\n                  boxShadow: \"none\",\n                  backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                  borderColor: \"white\",\n                },\n                \"&:focus\": {\n                  boxShadow: \"none\",\n                },\n              }}\n            >\n              {dataItem?.active ? \"Deactivate\" : \"Activate\"}\n            </Button>\n          )}\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            sx={{\n              color: \"white\",\n              boxShadow: \"none\",\n              border: \"1px solid\",\n              backgroundColor: \"transparent\",\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              color: isDarkModeOn ? \"white\" : \"black\",\n              \"&:hover\": {\n                backgroundColor: \"transparent\",\n                borderColor: isDarkModeOn ? \"white\" : \"black\",\n                boxShadow: \"none\",\n              },\n              \"&:active\": {\n                boxShadow: \"none\",\n                backgroundColor: \"transparent\",\n                borderColor: isDarkModeOn ? \"white\" : \"black\",\n              },\n              \"&:focus\": {\n                boxShadow: \"none\",\n              },\n            }}\n          >\n            Close\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default function WorkshopCard({\n  actionsAllowed,\n  dataItem,\n  activateWorkshop,\n  deactivateWorkshop,\n}) {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [isWorkshopDetailsModalOpen, setIsWorkshopDetailsModalOpen] =\n    useState(false);\n  const workshopId = dataItem.id;\n\n  const handleWorkshopDetailsModalOpen = () =>\n    setIsWorkshopDetailsModalOpen(true);\n\n  const handleWorkshopDetailsModalClose = () =>\n    setIsWorkshopDetailsModalOpen(false);\n\n  useEffect(() => {\n    const fetchImageUrl = async () => {\n      try {\n        const url = await readDocumentWithImageUrl(\n          STORAGES.WORKSHOPICON,\n          workshopId\n        );\n\n        setImageUrl(\n          url ||\n          \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      } catch (error) {\n        console.error(\"Error fetching image URL:\", error);\n      }\n    };\n\n    fetchImageUrl();\n  }, [dataItem.id]);\n\n  const cardStyle = {\n    backgroundColor: isDarkModeOn ? \"#444\" : \"white\",\n    padding: \"0px\",\n    color: isDarkModeOn ? \"white\" : \"black\",\n    marginRight: \"10px\",\n    width: 320,\n    maxWidth: \"100%\",\n    boxShadow: \"lg\",\n    transition: \"opacity 0.3s ease\",\n  };\n\n  const cardHoverStyle = {\n    transform: \"scale(1.01)\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <>\n      <Card\n        variant=\"solid\"\n        sx={{\n          ...cardStyle,\n          \"&:hover\": cardHoverStyle,\n          flex: \"none\",\n        }}\n        onClick={handleWorkshopDetailsModalOpen}\n      >\n        <AspectRatio ratio=\"1.78\" style={{ position: \"relative\" }}>\n          <img\n            src={imageUrl}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: \"100%\", objectFit: \"cover\", overflow: \"hidden\" }}\n          />\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", bottom: 0, left: 0, padding: \"1px\" }}\n          >\n            {dataItem && dataItem.danceStyles ? (\n              dataItem.danceStyles.slice(0, 3).map((form, index) => (\n                <Chip\n                  key={index}\n                  color={index % 2 === 0 ? \"danger\" : \"success\"}\n                  style={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                  }}\n                >\n                  {form.trim()}\n                </Chip>\n              ))\n            ) : (\n              <Chip\n                key={10}\n                color={10 % 2 === 0 ? \"danger\" : \"success\"}\n                style={{ marginBottom: \"10px\", fontSize: \"0.8rem\" }}\n              >\n                {\"No danceforms\"}\n              </Chip>\n            )}\n          </Stack>\n        </AspectRatio>\n        <CardContent style={{ padding: \"10px\", paddingTop: \"5px\" }}>\n          <Box\n            fontWeight=\"md\"\n            color=\"neutral\"\n            textColor=\"text.primary\"\n            underline=\"none\"\n            overlay\n            style={{\n              color: isDarkModeOn ? \"white\" : \"black\",\n              extDecoder: \"one\",\n            }}\n          >\n            <span>\n              {dataItem && dataItem.workshopName ? dataItem.workshopName : \"\"}\n            </span>\n            {!dataItem?.active && (\n              <span\n                style={{\n                  marginLeft: \"2px\",\n                  padding: \"2px 4px\",\n                  fontSize: \"14px\",\n                  borderRadius: \"4px\",\n                  background: \"red\",\n                }}\n              >\n                Inactive\n              </span>\n            )}\n          </Box>\n          <Typography\n            style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n            noWrap\n          >\n            By {dataItem.studioDetails?.studioName ? dataItem.studioDetails.studioName : \"\"}\n          </Typography>\n          <Typography\n            style={{ marginTop: 10, color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n            noWrap\n          >\n            {dataItem.venue ? dataItem.venue : \"\"}\n          </Typography>\n          <Typography\n            style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n          >\n            {dataItem.date || \"\"} | {dataItem.time || \"\"}\n          </Typography>\n        </CardContent>\n      </Card>\n\n      <WorkshopDetailsModal\n        dataItem={{ ...dataItem, imageUrl }}\n        open={isWorkshopDetailsModalOpen}\n        handleClose={handleWorkshopDetailsModalClose}\n        activateWorkshop={activateWorkshop}\n        deactivateWorkshop={deactivateWorkshop}\n        actionsAllowed={actionsAllowed}\n      />\n    </>\n  );\n}\n","import \"./WorkshopCardSlider.css\";\nimport React from \"react\";\nimport WorkshopCard from \"./WorkshopCard\";\n\nconst CardSlider = ({\n  actionsAllowed,\n  dataList,\n  activateWorkshop,\n  deactivateWorkshop,\n}) => {\n  return (\n    <div className={\"horizontal-scroll-wrapper\"}>\n      {dataList.map((dataItem, index) => (\n        <WorkshopCard\n          key={dataItem.id}\n          dataItem={dataItem}\n          activateWorkshop={activateWorkshop}\n          deactivateWorkshop={deactivateWorkshop}\n          actionsAllowed={actionsAllowed}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardSlider;\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { LinearProgress, Button as MuiButton } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { db } from \"../config\";\nimport {\n  doc,\n  getDoc,\n  addDoc,\n  updateDoc,\n  collection,\n  query,\n  where,\n  getDocs,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { COLLECTIONS, DRAFT_COLLECTIONS, LEVELS } from \"../constants\";\nimport ImageUpload from \"./ImageUpload\";\nimport { STORAGES } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport danceStyles from \"../danceStyles.json\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport TimeRange from \"./TimeRange\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport cities from '../cities.json';\nimport { postData } from \"../utils/common\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { isEqual } from 'lodash';\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\nconst DRAFT_INTERVAL_TIME = 1000 * 10;\n\nfunction WorkshopAdd({ instructors, studioId, setWorkshop }) {\n  const showSnackbar = useSnackbar();\n  const [newWorkshopId, setNewWorkshopId] = useState(\"\");\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [selectedInstructors, setSelectedInstructors] = useState([]);\n  const [selectedDanceStyles, setSelectedDanceStyles] = useState([]);\n\n  const instructorNamesWithIds = instructors.map(\n    (instructor) => `${instructor.name} - ${instructor.id}`\n  );\n\n  const danceStylesOptions = danceStyles.danceStyles;\n  const currentCity = localStorage.getItem(FILTER_LOCATION_KEY) || \"\";\n\n  const [isReady, setIsReady] = useState(false);\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n  const [selectedStudio, setSelectedStudio] = useState(null);\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [workshopTime, setWorkshopTime] = useState(\"\");\n  const [workshopDate, setWorkshopDate] = useState(dayjs(new Date()));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [description, setDescription] = useState('');\n  const [step, setStep] = useState(1);\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleDanceStylesChange = (event, value) => {\n    setSelectedDanceStyles(value);\n  };\n\n  const handleDurationChange = (event, value) => {\n    setSelectedDuration(value);\n  };\n\n  const handleLevelChange = (event, value) => {\n    setSelectedLevel(value);\n  };\n\n  const handleSelectStudio = (event, value) => {\n    setSelectedStudio(value);\n  };\n\n  const handleInstructorChange = (event, value) => {\n    setSelectedInstructors(value);\n  };\n\n  const isValidInputs = (form) => {\n    let validationFailed = true;\n    if (\n      !form.workshopName.value ||\n      !form.workshopFees.value ||\n      !selectedDanceStyles?.length ||\n      !selectedInstructors?.length ||\n      !description ||\n      !selectedStudio ||\n      !selectedDuration ||\n      !selectedLevel ||\n      !workshopTime ||\n      !workshopDate\n    )\n      validationFailed = false;\n\n    return validationFailed;\n  };\n\n  const resetDraft = async () => {\n    const q = query(\n      collection(db, DRAFT_COLLECTIONS.DRAFT_WORKSHOPS),\n      where(\"UserId\", \"==\", JSON.parse(localStorage.getItem(\"userInfo\")).UserId)\n    );\n\n    const querySnapshot = await getDocs(q);\n\n    if (!querySnapshot.empty) {\n      let studios = [];\n\n      querySnapshot.forEach((doc) => {\n        studios.push({ id: doc.id, ...doc.data() });\n      });\n\n      let foundStudio = studios[0];\n\n      const studioRef = doc(\n        db,\n        DRAFT_COLLECTIONS.DRAFT_WORKSHOPS,\n        foundStudio.id\n      );\n\n      await deleteDoc(studioRef);\n    }\n  };\n\n  const handleAddWorkshop = async (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (!isValidInputs(form)) {\n      showSnackbar(\"Please fill all the fields.\", \"error\");\n      return;\n    }\n\n    try {\n      const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\")).email;\n      const dbPayload = {\n        workshopName: event.target.workshopName.value,\n        danceStyles: selectedDanceStyles,\n        instructors: selectedInstructors\n          ? selectedInstructors?.map?.(\n            (instructor) => instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n          )\n          : null,\n        author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n        UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n        creatorEmail: currentUserEmail,\n        StudioId: selectedStudio\n          ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n          : null,\n        duration: selectedDuration,\n        level: selectedLevel,\n        time: workshopTime,\n        description: description,\n        date: workshopDate.format(\"YYYY-MM-DD\"),\n        price: event.target.workshopFees.value,\n        capacity: event.target.capacity.value,\n        // venue: event.target.workshopVenue.value,\n        active: true,\n        youtubeViedoLink: event.target.youtubeViedoLink.value,\n      };\n\n      setIsSubmitting(true);\n      const notifyEmails = currentUserEmail; \n      const metaData = {\n        entity_name: dbPayload.workshopName,\n        time: dbPayload.time,\n        date: dbPayload.date,\n        StudioId : dbPayload.StudioId\n      }\n      const response = await postData(dbPayload, COLLECTIONS.WORKSHOPS, notifyEmails, metaData) ;\n      if (response.ok) {\n        const result = await response.json();\n        setNewWorkshopId(result.id);\n        setWorkshop((prev) => [...prev, { id: result.id, ...dbPayload }]);\n        \n        clearForm(form);\n        resetDraft();\n        showSnackbar(\"Workshop successfully added.\", \"success\");\n        setStep((prev) => prev + 1);\n      }\n    } catch (error) {\n      console.error(\"Error adding workshop: \", error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const clearForm = (form) => {\n    form.reset();\n    setSelectedDanceStyles([]);\n    setSelectedInstructors([]);\n    setSelectedStudio(null);\n    setSelectedDuration(\"\");\n    setSelectedLevel(\"\");\n    setWorkshopTime(\"\");\n    setWorkshopDate(dayjs(new Date()));\n    setDescription('');\n  };\n\n  const handleTimeSelect = (startTime, endTime) => {\n    const [currentStartTime, currentEndTime] = workshopTime.split(\" - \");\n    let newTime = `${currentStartTime} - ${currentEndTime}`;\n\n    if (startTime !== null) newTime = `${startTime} - ${currentEndTime}`;\n    if (endTime !== null) newTime = `${currentStartTime} - ${endTime}`;\n\n    setWorkshopTime(newTime);\n  };\n\n  useEffect(() => {\n    async function main() {\n      const form = document.getElementById(\"addStudioForm\");\n\n      try {\n        const q = query(\n          collection(db, DRAFT_COLLECTIONS.DRAFT_WORKSHOPS),\n          where(\n            \"UserId\",\n            \"==\",\n            JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n          )\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n          let workshops = [];\n\n          querySnapshot.forEach((doc) => {\n            workshops.push({ id: doc.id, ...doc.data() });\n          });\n\n          let foundWorkshop = workshops[0];\n\n          form.workshopName.value = foundWorkshop?.workshopName || \"\";\n          form.workshopFees.value = foundWorkshop?.price || 0;\n          form.capacity.value = foundWorkshop?.capacity || 0;\n          // form.workshopVenue.value = foundWorkshop?.venue || \"\";\n          setDescription(foundWorkshop?.description || \"\");\n\n          setSelectedDanceStyles(\n            foundWorkshop?.danceStyles?.length ? foundWorkshop.danceStyles : []\n          );\n\n          setSelectedInstructors(\n            instructors\n              .filter((instructor) =>\n                foundWorkshop?.instructors.includes(instructor.id)\n              )\n              .map((instructor) => `${instructor.name} - ${instructor.id}`)\n          );\n\n          const studios = studioId.map((studio) => studio.split(\":\")[1].trim());\n          const currentStudioIndex = studios.findIndex(\n            (studio) => studio === foundWorkshop?.StudioId\n          );\n          if (currentStudioIndex > 0)\n            setSelectedStudio(studioId[currentStudioIndex]);\n\n          setSelectedDuration(foundWorkshop?.duration || \"\");\n\n          setSelectedLevel(foundWorkshop?.level || \"\");\n\n          setWorkshopTime(foundWorkshop?.time || \"\");\n\n          setWorkshopDate(dayjs(foundWorkshop?.date || Date.now()));\n        } else {\n          await addDoc(collection(db, DRAFT_COLLECTIONS.DRAFT_WORKSHOPS), {\n            workshopName: form.workshopName?.value || \"\",\n            price: form.workshopFees?.value || 0,\n            // venue: form.capacity?.value || 0,\n            // venue: form.workshopVenue?.value || \"\",\n            description: description,\n            danceStyles: selectedDanceStyles,\n            instructors: selectedInstructors\n              ? selectedInstructors?.map?.(\n                (instructor) =>\n                  instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n              )\n              : null,\n            author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n            UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n            creatorEmail: JSON.parse(localStorage.getItem(\"userInfo\")).email,\n            StudioId: selectedStudio\n              ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n              : null,\n            duration: selectedDuration,\n            level: selectedLevel,\n            time: workshopTime,\n            date: workshopDate.format(\"YYYY-MM-DD\")\n          });\n        }\n\n        setIsReady(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    main();\n  }, []);\n\n  useEffect(() => {\n    let intervalId = null;\n    let previousState = null; // Keep track of the previous form state.\n    async function main() {\n      const form = document.getElementById(\"addStudioForm\");\n\n      try {\n        const q = query(\n          collection(db, DRAFT_COLLECTIONS.DRAFT_WORKSHOPS),\n          where(\n            \"UserId\",\n            \"==\",\n            JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n          )\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n          let workshops = [];\n\n          querySnapshot.forEach((doc) => {\n            workshops.push({ id: doc.id, ...doc.data() });\n          });\n\n          let foundWorkshop = workshops[0];\n\n          const workshopRef = doc(\n            db,\n            DRAFT_COLLECTIONS.DRAFT_WORKSHOPS,\n            foundWorkshop.id\n          );\n\n          intervalId = setInterval(async () => {\n            try {\n              const currentState = {\n                workshopName: form.workshopName?.value || \"\",\n                price: form.workshopFees?.value || 0,\n                // venue: form.capacity?.value || 0,\n                // venue: form.workshopVenue?.value || \"\",\n                description: description,\n                danceStyles: selectedDanceStyles,\n                instructors: selectedInstructors\n                  ? selectedInstructors?.map?.(\n                    (instructor) =>\n                      instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n                  )\n                  : null,\n                StudioId: selectedStudio\n                  ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n                  : null,\n                duration: selectedDuration,\n                level: selectedLevel,\n                time: workshopTime,\n                date: workshopDate.format(\"YYYY-MM-DD\")\n              }\n              // Check if the current state is different from the previous state\n              if (!isEqual(previousState, currentState)) {\n                try {\n                  await updateDoc(workshopRef, currentState);\n                  previousState = currentState; // Update previous state after successful save\n                  console.log(\"Next AutoSave in\",DRAFT_INTERVAL_TIME)\n                } catch (error) {\n                  console.error(error);\n                }\n              }else{\n                  console.log(\"Nothing for Autosave to save\")\n              }\n            } catch (error) {\n              console.error(error);\n            }\n          }, DRAFT_INTERVAL_TIME);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    if (isReady) main();\n\n    return () => clearInterval(intervalId);\n  }, [\n    isReady,\n    selectedDanceStyles,\n    selectedInstructors,\n    description,\n    selectedStudio,\n    selectedDuration,\n    selectedLevel,\n    workshopTime,\n    workshopDate\n  ]);\n\n  useEffect(() => {\n    if (isDarkModeOn) {\n      const toolbarEle = document.getElementsByClassName(\"ql-toolbar ql-snow\")[0]\n      toolbarEle.style.backgroundColor = \"white\";\n\n      const inputEle = document.getElementsByClassName(\"ql-container ql-snow\")[0];\n      inputEle.style.backgroundColor = \"white\";\n\n      const editEle = document.getElementsByClassName(\"ql-editor \")[0];\n      console.log(editEle);\n      inputEle.style.color = \"black\";      \n    }\n  }, [isDarkModeOn]);\n\n  return (\n    <div>\n      {step === 1 && (\n        <Form\n          id=\"addStudioForm\"\n          onSubmit={handleAddWorkshop}\n          style={{\n            backgroundColor: isDarkModeOn ? \"#202020\" : \"\",\n            color: isDarkModeOn ? \"white\" : \"black\",\n          }}\n        >\n          <Form.Group controlId=\"formBasicAdd\">\n            <div>\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Workshop Name</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"textarea\"\n                    placeholder=\"Enter workshop name\"\n                    name=\"workshopName\"\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Dance Styles</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      multiple\n                      id=\"tags-standard\"\n                      options={danceStylesOptions}\n                      value={selectedDanceStyles}\n                      onChange={handleDanceStylesChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Dance Styles\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Names of Instructors</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      multiple\n                      id=\"tags-standard\"\n                      options={instructorNamesWithIds}\n                      value={selectedInstructors}\n                      onChange={handleInstructorChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Instructors\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Duration (in hours)</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\n                      value={selectedDuration}\n                      onChange={handleDurationChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Duration\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <TimeRange\n                    defaultTime={workshopTime || \"00:00-00:00\"}\n                    handleSelect={handleTimeSelect}\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Date</Form.Label>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DemoContainer components={[\"DatePicker\"]}>\n                      <ThemeProvider theme={darkTheme}>\n                        <CssBaseline />\n                        <DatePicker\n                          sx={{ width: \"100%\" }}\n                          value={workshopDate}\n                          onChange={(newValue) => setWorkshopDate(newValue)}\n                        />\n                      </ThemeProvider>\n                    </DemoContainer>\n                  </LocalizationProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Level</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={[LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]}\n                      value={selectedLevel}\n                      onChange={handleLevelChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Level\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Fees/Price</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"number\"\n                    placeholder=\"Enter fees/price\"\n                    name=\"workshopFees\"\n                  />\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Maximum capacity</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"number\"\n                    placeholder=\"Enter capacity\"\n                    name=\"capacity\"\n                  />\n                </Col>\n\n                <Col md={6}>\n                  <Form.Label>Studio</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={studioId}\n                      value={selectedStudio}\n                      onChange={handleSelectStudio}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Studio\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n              <Col md={6}>\n                  <Form.Label>Youtube video link</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"text\"\n                    placeholder=\"Enter youtube video link\"\n                    name=\"youtubeViedoLink\"\n                  />\n                </Col>\n\n                <Col md={6}>\n                  <Form.Label>Brief Description</Form.Label>\n                  {/* <Form.Control\n                    rows={3}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    as=\"textarea\"\n                    placeholder=\"Enter Description\"\n                    name=\"description\"\n                  /> */}\n\n\n                  <ReactQuill\n                    theme=\"snow\"\n                    placeholder=\"Enter Description\"\n                    value={description}\n                    onChange={setDescription}\n                  />\n\n                </Col>\n              </Row>\n\n              <hr></hr>\n\n              <Row>\n                <Col xs={6}></Col>\n                <Col xs={6} className=\"d-flex justify-content-end\">\n                  <MuiButton\n                    variant=\"contained\"\n                    style={{\n                      color: \"white\",\n                      backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                    }}\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    Next\n                  </MuiButton>\n                </Col>\n              </Row>\n            </div>\n          </Form.Group>\n        </Form>\n      )}\n      {isSubmitting && <LinearProgress />}\n      {step === 2 && (\n        <>\n          <Row>\n            <Col>\n              <ImageUpload\n                entityId={newWorkshopId}\n                title={\"Workshop Images\"}\n                storageFolder={STORAGES.WORKSHOPICON}\n                maxImageCount={1}\n              ></ImageUpload>\n            </Col>\n          </Row>\n          <Row style={{ margin: \"1rem 0\" }}>\n            <Col style={{ textAlign: \"right\" }}>\n              <MuiButton\n                variant=\"contained\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                }}\n                onClick={() => setStep((prev) => prev - 1)}\n              >\n                Done\n              </MuiButton>\n            </Col>\n          </Row>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default WorkshopAdd;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport {LinearProgress,  Button as MuiButton } from \"@mui/material\";\nimport { db } from \"../config\";\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { COLLECTIONS, LEVELS } from \"../constants\";\nimport ImageUpload from \"./ImageUpload\";\nimport { STORAGES } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport danceStyles from \"../danceStyles.json\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport TimeRange from \"./TimeRange\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport cities from '../cities.json';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { putData } from \"../utils/common\";\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\n\nfunction WorkshopUpdate({ workshopId, instructors, studioId }) {\n  const currentCity = localStorage.getItem(FILTER_LOCATION_KEY) || \"\";\n\n  const showSnackbar = useSnackbar();\n\n  const [selectedStudio, setSelectedStudio] = useState(null);\n  const [selectedInstructors, setSelectedInstructors] = useState([]);\n\n  const danceStylesOptions = danceStyles.danceStyles;\n  const [selectedDanceStyles, setSelectedDanceStyles] = useState([]);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [description, setDescription] = useState('');\n  const [workshopTime, setWorkshopTime] = useState(\"\");\n  const [workshopDate, setWorkshopDate] = useState(dayjs(new Date()));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const instructorNamesWithIds = instructors.map(\n    (instructor) => `${instructor.name} - ${instructor.id}`\n  );\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleDanceStylesChange = (event, value) => {\n    setSelectedDanceStyles(value);\n  };\n\n  const [selectedWorkshopId, setSelectedWorkshopId] = useState(\"\");\n  const [selectedWorkshop, setSelectedWorkshop] = useState(null);\n\n  const handleSelectStudio = async (event) => {\n    event.preventDefault();\n    const selected = event.target.value;\n    const selectedId = selected.split(\":\").pop().trim();\n    setSelectedWorkshopId(selectedId);\n    try {\n      const studioDoc = await getDoc(\n        doc(db, COLLECTIONS.WORKSHOPS, selectedId)\n      );\n      if (studioDoc.exists) {\n        setSelectedWorkshop(studioDoc.data());\n      } else {\n        setSelectedWorkshop(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching workshop data:\", error, selectedId);\n    }\n  };\n\n  const isValidInputs = (form) => {\n    let validationFailed = true;\n    if (\n      !form.workshopName.value ||\n      !form.workshopFees.value ||\n      !form.capacity.value ||\n      !description ||\n      !selectedDanceStyles?.length ||\n      !selectedInstructors?.length ||\n      !selectedStudio ||\n      !selectedDuration ||\n      !selectedLevel ||\n      !workshopTime ||\n      !workshopDate\n    )\n      validationFailed = false;\n\n    return validationFailed;\n  };\n\n  const handleUpdateStudio = async (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (!selectedWorkshopId) return;\n\n    if (!isValidInputs(form)) {\n      showSnackbar(\"Please fill all the fields.\", \"error\");\n      return;\n    }\n\n    try {\n      const dbPayload = {\n        workshopName: form.workshopName.value,\n        price: form.workshopFees.value,\n        capacity: form.capacity.value,\n        // venue: form.workshopVenue.value,\n        description: description,\n        danceStyles: selectedDanceStyles,\n        instructors: selectedInstructors\n          ? selectedInstructors?.map?.(\n            (instructor) => instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n          )\n          : null,\n        author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n        UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n        creatorEmail: JSON.parse(localStorage.getItem(\"userInfo\")).email,\n        StudioId: selectedStudio\n          ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n          : null,\n        duration: selectedDuration,\n        level: selectedLevel,\n        time: workshopTime,\n        date: workshopDate.format(\"YYYY-MM-DD\"),\n        youtubeViedoLink: form.youtubeViedoLink.value,\n      };\n      console.log(dbPayload)\n      setIsSubmitting(true);\n\n      const response = await putData(dbPayload, COLLECTIONS.WORKSHOPS, selectedWorkshopId) \n      if (response.ok) {\n        clearForm(form);\n        showSnackbar(\"Workshop successfully updated.\", \"success\");\n      }else{\n        showSnackbar(`Error ${response}.`, \"error\");\n      }\n\n    } catch (error) {\n      console.error(\"Error updating workshop: \", error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n    document.getElementById(\"updateStudioForm\").reset();\n  };\n\n  const clearForm = (form) => {\n    form.reset();\n    setSelectedDanceStyles([]);\n    setSelectedInstructors([]);\n    setSelectedStudio(null);\n    setSelectedDuration(\"\");\n    setSelectedLevel(\"\");\n    setWorkshopTime(\"\");\n    setWorkshopDate(dayjs(new Date()));\n    setSelectedWorkshop(null);\n    setSelectedWorkshopId(\"\");\n    setDescription('');\n  };\n\n  const handleDurationChange = (event, value) => {\n    setSelectedDuration(value);\n  };\n\n  const handleLevelChange = (event, value) => {\n    setSelectedLevel(value);\n  };\n\n  const handleSelectStudioValue = (event, value) => {\n    setSelectedStudio(value);\n  };\n\n  const handleInstructorChange = (event, value) => {\n    setSelectedInstructors(value);\n  };\n\n  const handleTimeSelect = (startTime, endTime) => {\n    const [currentStartTime, currentEndTime] = workshopTime.split(\" - \");\n    let newTime = `${currentStartTime} - ${currentEndTime}`;\n\n    if (startTime !== null) newTime = `${startTime} - ${currentEndTime}`;\n    if (endTime !== null) newTime = `${currentStartTime} - ${endTime}`;\n\n    setWorkshopTime(newTime);\n  };\n\n  useEffect(() => {\n    if (selectedWorkshop) {\n      const addedInstructors = instructors\n        .filter((instructor) =>\n          selectedWorkshop.instructors.includes(instructor.id)\n        )\n        .map((instructor) => `${instructor.name} - ${instructor.id}`);\n\n      setSelectedInstructors(addedInstructors);\n      if (selectedWorkshop && selectedWorkshop.danceStyles)\n        setSelectedDanceStyles(selectedWorkshop.danceStyles);\n\n      if (selectedWorkshop && selectedWorkshop.duration)\n        setSelectedDuration(selectedWorkshop.duration);\n\n      if (selectedWorkshop && selectedWorkshop.level)\n        setSelectedLevel(selectedWorkshop.level);\n\n      if (selectedWorkshop && selectedWorkshop.time)\n        setWorkshopTime(selectedWorkshop.time);\n\n      if (selectedWorkshop && selectedWorkshop.date)\n        setWorkshopDate(dayjs(selectedWorkshop.date));\n\n      if (selectedWorkshop && selectedWorkshop.StudioId) {\n        const studios = studioId.map((studio) => studio.split(\":\")[1].trim());\n        const currentStudioIndex = studios.findIndex(\n          (studio) => studio === selectedWorkshop.StudioId\n        );\n        setSelectedStudio(studioId[currentStudioIndex] || null);\n      }\n\n      setDescription(selectedWorkshop?.description || '');\n    }\n  }, [selectedWorkshop]);\n\n  useEffect(() => {\n    if (isDarkModeOn) {\n      const toolbarEle = document.getElementsByClassName(\"ql-toolbar ql-snow\")[0]\n      toolbarEle.style.backgroundColor = \"white\";\n\n      const inputEle = document.getElementsByClassName(\"ql-container ql-snow\")[0];\n      inputEle.style.backgroundColor = \"white\";\n\n      const editEle = document.getElementsByClassName(\"ql-editor \")[0];\n      console.log(editEle);\n      inputEle.style.color = \"black\";\n    }\n  }, [isDarkModeOn]);\n\n  return (\n    <div\n      style={{\n        backgroundColor: isDarkModeOn ? \"#202020\" : \"\",\n        color: isDarkModeOn ? \"white\" : \"black\",\n      }}\n    >\n      <br></br>\n      <Form id=\"updateStudioForm\" onSubmit={handleUpdateStudio}>\n        <Form.Group controlId=\"formBasicUpdate\">\n          <Form.Label>Id</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"nameId\"\n            style={{\n              backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n              color: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n            onChange={handleSelectStudio}\n          >\n            <option value=\"\">Select a workshop...</option>\n            {workshopId && workshopId.length > 0 ? (\n              workshopId.map((workshopItem) => (\n                <option key={workshopItem} value={workshopItem}>\n                  {workshopItem}\n                </option>\n              ))\n            ) : (\n              <option value=\"\">No workshop yet!</option>\n            )}\n          </Form.Control>\n\n          <div>\n            <Row>\n              <Col md={6}>\n                <ImageUpload\n                  entityId={selectedWorkshopId}\n                  title={\"Workshop Images\"}\n                  storageFolder={STORAGES.WORKSHOPICON}\n                  maxImageCount={1}\n                ></ImageUpload>\n              </Col>\n\n              <Col md={6}>\n                <br />\n\n                <Form.Label>Workshop Name</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={\n                    selectedWorkshop ? selectedWorkshop.workshopName : \"\"\n                  }\n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"textarea\"\n                  placeholder=\"Enter workshop name\"\n                  name=\"workshopName\"\n                />\n\n                <br />\n\n                <Form.Label>Dance Styles</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    multiple\n                    id=\"tags-standard\"\n                    options={danceStylesOptions}\n                    value={selectedDanceStyles}\n                    onChange={handleDanceStylesChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Dance Styles\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n\n                <br />\n\n                <Form.Label>Names of Instructors</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    multiple\n                    id=\"tags-standard\"\n                    options={instructorNamesWithIds}\n                    value={selectedInstructors}\n                    onChange={handleInstructorChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Instructors\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Duration (in hours)</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\n                    value={selectedDuration}\n                    onChange={handleDurationChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Duration\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n\n              <Col md={6}>\n                <TimeRange\n                  defaultTime={workshopTime || \"00:00-00:00\"}\n                  handleSelect={handleTimeSelect}\n                />\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Date</Form.Label>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={[\"DatePicker\"]}>\n                    <ThemeProvider theme={darkTheme}>\n                      <CssBaseline />\n                      <DatePicker\n                        sx={{ width: \"100%\" }}\n                        value={workshopDate}\n                        onChange={(newValue) => setWorkshopDate(newValue)}\n                      />\n                    </ThemeProvider>\n                  </DemoContainer>\n                </LocalizationProvider>\n              </Col>\n              <Col md={6}>\n                <Form.Label>Level</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={[LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]}\n                    value={selectedLevel}\n                    onChange={handleLevelChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Level\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Fees/Price</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={selectedWorkshop ? selectedWorkshop.price : \"\"}\n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"number\"\n                  placeholder=\"Enter fees/price\"\n                  name=\"workshopFees\"\n                />\n              </Col>\n              <Col md={6}>\n                <Form.Label>Maximum capacity</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={\n                    selectedWorkshop && selectedWorkshop.capacity !== undefined \n                      ? selectedWorkshop.capacity \n                      : \"\"\n                  }                \n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"number\"\n                  placeholder=\"Enter capacity\"\n                  name=\"capacity\"\n                />\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Studio</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={studioId}\n                    value={selectedStudio}\n                    onChange={handleSelectStudioValue}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Studio\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n              <Col md={6}>\n                  <Form.Label>Youtube video Link</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    defaultValue={\n                      selectedWorkshop ? selectedWorkshop.youtubeViedoLink : \"\"\n                    }\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"text\"\n                    placeholder=\"Enter youtube video link\"\n                    name=\"youtubeViedoLink\"\n                  />\n                </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Brief Description</Form.Label>\n                <ReactQuill\n                  theme=\"snow\"\n                  placeholder=\"Enter Description\"\n                  value={description}\n                  onChange={setDescription}\n                />\n              </Col>\n              </Row>\n            <hr></hr>\n\n            <Row>\n              <Col xs={6}></Col>\n              <Col xs={6} className=\"d-flex justify-content-end\">\n                <MuiButton\n                  variant=\"contained\"\n                  style={{\n                    color: \"white\",\n                    backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                  }}\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update Workshop\n                </MuiButton>\n              </Col>\n            </Row>\n          </div>\n        </Form.Group>\n        {isSubmitting && <LinearProgress />}\n      </Form>\n    </div>\n  );\n}\n\nexport default WorkshopUpdate;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../config\";\nimport { doc, getDoc, collection, where, getDocs, query,updateDoc} from \"firebase/firestore\";\nimport { COLLECTIONS } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport { useAuth } from \"../context/AuthContext\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport { Box } from \"@mui/material\";\nimport WorkshopAdd from \"../Components/WorkshopAdd\";\nimport WorkshopUpdate from \"../Components/WorkshopUpdate\";\nimport CardSlider from \"../Components/WorkshopCardSlider\";\n\nfunction CreatorWorkshop() {\n  const [studioId, setStudioId] = useState([]);\n  const [workshop, setWorkshop] = useState([]);\n  const [workshopId, setWorkshopId] = useState([]);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [instructors, setInstructors] = useState([]);\n  const [isCreator, setIsCreator] = useState(false);\n  const [premiumTill, setPremiumTill] = useState(-1);\n  const { currentUser } = useAuth();\n  const [value, setValue] = React.useState(\"1\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const activateWorkshop = async (workshopId) => {\n    try {\n      const docRef = doc(db, COLLECTIONS.WORKSHOPS, workshopId);\n      await updateDoc(docRef, { active: true });\n\n      setWorkshop((prev) =>\n        prev.map((workshop) =>\n          workshop.id === workshopId ? { ...workshop, active: true } : workshop\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deactivateWorkshop = async (workshopId) => {\n    try {\n      const docRef = doc(db, COLLECTIONS.WORKSHOPS, workshopId);\n      await updateDoc(docRef, { active: false });\n\n      setWorkshop((prev) =>\n        prev.map((workshop) =>\n          workshop.id === workshopId ? { ...workshop, active: false } : workshop\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const getCreatorMode = async (event) => {\n      try {\n        const userRef = doc(db, \"User\", currentUser.uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          if (userSnap.data() != null) {\n            setIsCreator(userSnap.data().CreatorMode);\n            setPremiumTill(userSnap.data().isPremium);\n          }\n        }\n      } catch (error) {\n        console.log(\" error\");\n      }\n    };\n\n    getCreatorMode();\n  }, [isCreator]);\n\n  useEffect(() => {\n    const fetchInstructors = async () => {\n      let userId = null;\n      if (\n        JSON.parse(localStorage.getItem(\"userInfo\")) &&\n        JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n      ) {\n        userId = JSON.parse(localStorage.getItem(\"userInfo\")).UserId;\n      }\n      if (!userId) {\n        alert(\"User not found\");\n        return;\n      }\n\n      const instructorRef = collection(db, COLLECTIONS.INSTRUCTORS);\n      const q = query(instructorRef, where(\"createdBy\", \"==\", userId));\n      const querySnapshot = await getDocs(q);\n\n      const instructorsList = [];\n      querySnapshot.forEach((doc) => {\n        instructorsList.push({\n          id: doc.id,\n          name: doc.data().name,\n        });\n      });\n      setInstructors(instructorsList);\n    };\n\n    fetchInstructors();\n  }, []);\n\n  useEffect(() => {\n    const getStudioCreated = async () => {\n      const q = query(\n        collection(db, COLLECTIONS.STUDIO),\n        where(\n          \"UserId\",\n          \"==\",\n          JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n        )\n      );\n\n      const querySnapshot = await getDocs(q);\n      const studiosOfUser = querySnapshot.docs\n        .filter((doc) => doc.data().studioName)\n        .map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n          };\n        });\n      setStudioId(\n        studiosOfUser.map(\n          (studio) => String(studio.studioName) + \" :\" + String(studio.id)\n        )\n      );\n    };\n\n    getStudioCreated();\n  }, []);\n\n  useEffect(() => {\n    const getWorkshopCreated = async () => {\n      const q = query(\n        collection(db, COLLECTIONS.WORKSHOPS),\n        where(\n          \"UserId\",\n          \"==\",\n          JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n        )\n      );\n      const querySnapshot = await getDocs(q);\n      const workshopsOfUserPromise = querySnapshot.docs\n        .filter((doc) => doc.data().workshopName)\n        .map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n          };\n        })\n        .map(async (workshop) => {\n          const docRef = doc(db, COLLECTIONS.STUDIO, workshop?.StudioId);\n          const docSnap = await getDoc(docRef);\n          return { ...workshop, studioDetails: docSnap.data() };\n        });\n      const workshopsOfUser = await Promise.all(workshopsOfUserPromise);\n      localStorage.setItem(\"WorkshopCreated\", JSON.stringify(workshopsOfUser));\n      setWorkshop(workshopsOfUser);\n      setWorkshopId(\n        workshopsOfUser.map(\n          (workshop) =>\n            String(workshop.workshopName) + \" :\" + String(workshop.id)\n        )\n      );\n    };\n\n    getWorkshopCreated();\n  }, [setWorkshop]);\n\n  useEffect(() => {\n    const workshopsOfUser =\n      JSON.parse(localStorage.getItem(\"WorkshopCreated\")) || [];\n    setWorkshop(workshopsOfUser);\n\n    const workshopIdList = workshopsOfUser.map(\n      (workshop) => `${workshop.workshopName} : ${workshop.id}`\n    );\n    setWorkshopId(workshopIdList);\n  }, [setWorkshopId]);\n\n  return (\n    <div>\n      <br></br>\n      {isCreator ? (\n        <>\n          <Box sx={{ width: \"100%\", typography: \"body1\" }}>\n            <TabContext value={value}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab\n                    style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                    label=\"Add Workshop\"\n                    value=\"1\"\n                  />\n                  <Tab\n                    style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                    label=\"Update Workshop\"\n                    value=\"2\"\n                  />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <WorkshopAdd\n                  instructors={instructors}\n                  studioId={studioId}\n                  setWorkshop={setWorkshop}\n                />\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <>\n                  <WorkshopUpdate\n                    instructors={instructors}\n                    workshopId={workshopId}\n                    studioId={studioId}\n                  />\n                </>\n              </TabPanel>\n            </TabContext>\n          </Box>\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {workshop.length > 0 && (\n        <>\n          <h3 style={{ color: isDarkModeOn ? \"white\" : \"black\" }}>\n            Your Workshops\n          </h3>\n\n          <CardSlider\n            dataList={workshop}\n            activateWorkshop={activateWorkshop}\n            deactivateWorkshop={deactivateWorkshop}\n            actionsAllowed\n          />\n        </>\n      )}\n    </div>\n  );\n}\nexport default CreatorWorkshop;\n","import { COLORS, SERVER_URLS,BASEURL_DEV,BASEURL_PROD } from \"../constants\";\n\nexport async function postData(dbPayload, collection_name, notify, metadata) {\n  const BASEURL = BASEURL_PROD;\n  const endpoint = 'crud/newEntity/'; // Define your endpoint here\n  const authToken = localStorage.getItem(\"authToken\");\n  try {\n    const response = await fetch(BASEURL + endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        data: dbPayload,\n        collection_name: collection_name,\n        notify: notify,\n        metadata : metadata,\n      }),\n    });\n\n    if (!response.ok) {\n      console.log('Error in postData:', response);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return response;\n  } catch (error) {\n    console.error('Error in postData:', error);\n    throw error;\n  }\n}\n\nexport async function putData(dbPayload, collection_name, entity_id, notify = null, metadata = null) {\n  const BASEURL = BASEURL_PROD;\n  const endpoint = `crud/updateEntity/${entity_id}`;\n  const authToken = localStorage.getItem(\"authToken\");\n  try {\n    const response = await fetch(BASEURL + endpoint, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        data: dbPayload,\n        collection_name: collection_name,\n        notify: notify,\n        metadata : metadata,\n      }),\n    });\n\n    if (!response.ok) {\n      console.log('Error in postData:', response);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return response;\n  } catch (error) {\n    console.error('Error in postData:', error);\n    throw error;\n  }\n}\n\nexport const getRandomColor = () => {\n  const colorKeys = Object.keys(COLORS);\n  const randomKey = colorKeys[Math.floor(Math.random() * colorKeys.length)];\n  return COLORS[randomKey];\n};\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const bookEntity = async (bookingData) => {\n  const url = `${SERVER_URLS.CLOUD}bookings/bookEntity/`; \n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userId: bookingData.userId,\n        entityType: bookingData.entityType,\n        entityId: bookingData.entityId,\n        associatedStudioId: bookingData.associatedStudioId,\n        emailLearner: bookingData.emailLearner,\n        personsAllowed: bookingData.personsAllowed,\n        pricePerPerson: bookingData.pricePerPerson,\n      })\n    });\n\n    const result = await response.json();\n    \n    if (response.ok) {\n      console.log('Booking successful:', result);\n      return result;  // Return the successful result\n    } else {\n      console.error('Booking failed:', result);\n      return result;  // Return null or an error message\n    }\n    \n  } catch (error) {\n    console.error('Error occurred while booking:', error);\n    return null;  // Return null or an error message\n  }\n};\n\n\n// Function to decode a Unicode (UTF-8) encoded string back to the original text\nexport const decodeUnicode = (unicodeString) => {\n  const utf8Encoded = unicodeString.split('').map((c) => c.charCodeAt(0));\n  const textDecoder = new TextDecoder();\n  return textDecoder.decode(new Uint8Array(utf8Encoded));\n};\n\nexport const convertToHtmlEntities= (text) =>{\n  return text.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\n      return '&#' + i.charCodeAt(0) + ';';\n  });\n}\n\nexport const getYoutubeVideoId = (link)=> {\n  console.log(\"MediaDisplay\", link)\n  if (!link){\n    return null\n  }\n  const text = link.trim();\n  const youtubeRegExp = /(?:https?:\\/\\/)?(?:www\\.|m\\.)?(?:youtube\\.com\\/(?:watch\\?v=|embed\\/|v\\/|shorts\\/)|youtu\\.be\\/)([\\w\\-]+)/;\n  const match = text.match(youtubeRegExp);\n  let videoId = null;\n\n  if (match) {\n    videoId = match[1];\n  }\n  console.log(\"MediaDisplay\", videoId)\n  return videoId\n}\n\nexport const formatDateString = (dateString = \"\") => {\n  // Split the input date string\n  const [year, month, day] = dateString.split('-');\n\n  // Create an array of month names\n  const monthNames = [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n      'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n  ];\n\n  // Determine the ordinal suffix for the day\n  const daySuffix = (day) => {\n      const lastDigit = day % 10;\n      const suffix = (lastDigit === 1 && day !== '11') ? 'st' :\n                     (lastDigit === 2 && day !== '12') ? 'nd' :\n                     (lastDigit === 3 && day !== '13') ? 'rd' : 'th';\n      return `${day}${suffix}`;\n  };\n\n  // Format and return the final date string\n  return `${daySuffix(day)} ${monthNames[parseInt(month) - 1]}, ${year}`;\n}\n\nexport const gradientStyles = [\n  { background: 'linear-gradient(to bottom right, #FFD700, #FFA500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #00BFFF, #1E90FF)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #32CD32, #008000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #FFA500, #FF4500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #DC143C, #8B0000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #000000, #2F4F4F)', color: 'white' },\n];"],"names":["ImageUpload","forwardRef","_ref","ref","entityId","storageFolder","title","maxImageCount","minImageCount","updateMode","disable","setIsLoading","useLoader","showSnackbar","useSnackbar","imageInputRef","useRef","selectedFiles","setSelectedFiles","useState","uploadedFiles","setUploadedFiles","newFiles","setNewFiles","isDarkModeOn","useSelector","selectDarkModeStatus","progressDelete","setProgressDelete","progressUpdate","setProgressUpdate","isUploadSuccessful","setIsUploadSuccessful","console","log","filesizes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","useEffect","fetchStudioImages","truncatedFiles","slice","alert","concat","current","value","calculateDelta","selectedFileIds","map","file","id","uploadedFileIds","imagesToDelete","filter","includes","newImages","async","folderPath","folderRef","firebaseRef","storage","fileList","listAll","files","Promise","all","items","downloadURL","getDownloadURL","fileRef","name","filename","fileURL","error","useImperativeHandle","isValid","_jsx","className","style","display","width","justifyContent","children","flex","_jsxs","backgroundColor","STORAGES","STUDIOIMAGES","type","onChange","e","Array","from","target","updatedFiles","forEach","reader","FileReader","onloadend","push","shortid","filetype","fileimage","result","datetime","lastModifiedDate","toLocaleString","filesize","size","prevFiles","readAsDataURL","multiple","position","Card","sx","maxWidth","match","src","alt","maxHeight","objectFit","IconButton","disabled","onClick","handleDeleteSelectedFile","window","confirm","top","right","DeleteIcon","color","CardContent","deleteAllImagesInFolder","uploadImages","deleteImages","hidden","max","defaultProps","_defaultTime$split$","defaultTime","handleSelect","startTime_i","split","trim","endTime_i","renderTimeOptions","defaultValue","timeOptions","generateTimeOptions","options","option_AM","option_PM","hours","minutes","formattedMinutes","toString","padStart","formattedHours","_Fragment","option","Row","Col","Form","Group","Label","Control","as","background","borderWidth","borderColor","height","WorkshopDetailsModal","_JSON$parse","_userDetails$BookedWo","_userDetails$BookedWo2","_dataItem$studioDetai","_dataItem$studioDetai2","_dataItem$studioDetai3","open","handleClose","dataItem","activateWorkshop","deactivateWorkshop","actionsAllowed","isBooking","setIsBooking","userDetails","setUserDetails","currentUser","JSON","parse","localStorage","getItem","UserId","userRef","doc","db","userSnap","getDoc","exists","data","getUser","isCreatorOfWorkshop","whatsappMessage","encodeURIComponent","isBooked","BookedWorkshops","call","shareUrl","location","host","Modal","onClose","zIndex","Box","left","transform","overflow","xs","md","bgcolor","borderStyle","boxShadow","p","borderRadius","Grid","container","spacing","rowGap","item","lg","imageUrl","flexDirection","MUITypography","variant","component","dayjs","date","format","time","mt","venue","flexWrap","alignSelf","price","Button","addDoc","collection","COLLECTIONS","BOOKINGS","StudioId","WorkshopId","bookingDate","Date","now","updateDoc","prev","message","textTransform","fontSize","padding","border","lineHeight","my","textAlign","columnGap","workshopName","danceStyles","dance","ShareButton","studioDetails","studioName","whatsappNumber","href","whatsAppImage","mobileNumber","callImage","dangerouslySetInnerHTML","__html","description","active","mr","WorkshopCard","_ref2","_dataItem$studioDetai4","setImageUrl","isWorkshopDetailsModalOpen","setIsWorkshopDetailsModalOpen","workshopId","url","readDocumentWithImageUrl","WORKSHOPICON","fetchImageUrl","cardStyle","marginRight","transition","cursor","handleWorkshopDetailsModalOpen","AspectRatio","ratio","loading","Stack","direction","bottom","form","index","Chip","marginLeft","marginBottom","paddingTop","fontWeight","textColor","underline","overlay","extDecoder","Typography","level","noWrap","marginTop","handleWorkshopDetailsModalClose","dataList","instructors","studioId","setWorkshop","newWorkshopId","setNewWorkshopId","selectedInstructors","setSelectedInstructors","selectedDanceStyles","setSelectedDanceStyles","instructorNamesWithIds","instructor","danceStylesOptions","isReady","setIsReady","selectedDuration","setSelectedDuration","selectedStudio","setSelectedStudio","selectedLevel","setSelectedLevel","workshopTime","setWorkshopTime","workshopDate","setWorkshopDate","isSubmitting","setIsSubmitting","setDescription","step","setStep","darkTheme","createTheme","palette","mode","clearForm","reset","document","getElementById","q","query","DRAFT_COLLECTIONS","DRAFT_WORKSHOPS","where","querySnapshot","getDocs","empty","_form$workshopName","_form$workshopFees","_selectedInstructors$2","_selectedStudio$split5","_selectedStudio$split6","_selectedStudio$split7","_selectedStudio$split8","workshopFees","_instructor$split2","_instructor$split2$ca","_instructor$split2$ca2","_instructor$split2$ca3","author","displayName","creatorEmail","email","duration","_foundWorkshop$danceS","workshops","foundWorkshop","capacity","currentStudioIndex","studio","findIndex","main","intervalId","previousState","workshopRef","setInterval","_form$workshopName2","_form$workshopFees2","_selectedInstructors$3","_selectedStudio$split9","_selectedStudio$split10","_selectedStudio$split11","_selectedStudio$split12","currentState","_instructor$split3","_instructor$split3$ca","_instructor$split3$ca2","_instructor$split3$ca3","isEqual","err","clearInterval","getElementsByClassName","inputEle","editEle","onSubmit","event","preventDefault","validationFailed","isValidInputs","_selectedInstructors$","_selectedStudio$split","_selectedStudio$split2","_selectedStudio$split3","_selectedStudio$split4","currentUserEmail","dbPayload","_instructor$split","_instructor$split$cal","_instructor$split$cal2","_instructor$split$cal3","youtubeViedoLink","notifyEmails","metaData","entity_name","response","postData","WORKSHOPS","ok","json","studios","foundStudio","studioRef","deleteDoc","resetDraft","controlId","rows","placeholder","ThemeProvider","theme","CssBaseline","Autocomplete","handleDanceStylesChange","renderInput","params","TextField","handleInstructorChange","handleDurationChange","TimeRange","handleTimeSelect","startTime","endTime","currentStartTime","currentEndTime","newTime","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DatePicker","newValue","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","handleLevelChange","handleSelectStudio","ReactQuill","MuiButton","LinearProgress","margin","selectedWorkshopId","setSelectedWorkshopId","selectedWorkshop","setSelectedWorkshop","addedInstructors","putData","selectedId","pop","studioDoc","workshopItem","handleSelectStudioValue","setStudioId","workshop","setWorkshopId","setInstructors","isCreator","setIsCreator","premiumTill","setPremiumTill","useAuth","setValue","React","uid","CreatorMode","isPremium","getCreatorMode","userId","instructorRef","INSTRUCTORS","instructorsList","fetchInstructors","STUDIO","studiosOfUser","docs","String","getStudioCreated","workshopsOfUserPromise","docRef","docSnap","workshopsOfUser","setItem","stringify","getWorkshopCreated","workshopIdList","typography","TabContext","borderBottom","TabList","handleChange","Tab","label","TabPanel","WorkshopAdd","WorkshopUpdate","CardSlider","collection_name","notify","metadata","BASEURL","BASEURL_PROD","authToken","fetch","method","headers","body","Error","status","entity_id","endpoint","bookEntity","SERVER_URLS","CLOUD","bookingData","entityType","associatedStudioId","emailLearner","personsAllowed","pricePerPerson","getYoutubeVideoId","link","videoId","formatDateString","dateString","year","month","day","lastDigit","suffix","daySuffix","parseInt"],"sourceRoot":""}