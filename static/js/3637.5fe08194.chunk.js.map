{"version":3,"file":"static/js/3637.5fe08194.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/base/useBadge/useBadge.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/material/Icon/iconClasses.js","../node_modules/@mui/material/Icon/Icon.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/node_modules/reselect/src/utils.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/lruMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/weakMapMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createSelectorCreator.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createStructuredSelector.ts","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/resolveProps/resolveProps.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/utils/platform.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/GridHeaders.js","../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-internals/EventManager/EventManager.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-internals/throttle/throttle.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/material/Toolbar/toolbarClasses.js","../node_modules/@mui/material/Toolbar/Toolbar.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useBadge } from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useThemeProps = createUseThemeProps('MuiBadge');\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme\n}) => {\n  var _theme$vars;\n  return {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    variants: [...Object.keys(((_theme$vars = theme.vars) != null ? _theme$vars : theme).palette).filter(key => {\n      var _theme$vars2, _theme$vars3;\n      return ((_theme$vars2 = theme.vars) != null ? _theme$vars2 : theme).palette[key].main && ((_theme$vars3 = theme.vars) != null ? _theme$vars3 : theme).palette[key].contrastText;\n    }).map(color => ({\n      props: {\n        color\n      },\n      style: {\n        backgroundColor: (theme.vars || theme).palette[color].main,\n        color: (theme.vars || theme).palette[color].contrastText\n      }\n    })), {\n      props: {\n        variant: 'dot'\n      },\n      style: {\n        borderRadius: RADIUS_DOT,\n        height: RADIUS_DOT * 2,\n        minWidth: RADIUS_DOT * 2,\n        padding: 0\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n      style: {\n        top: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n      style: {\n        bottom: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n      style: {\n        top: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n      style: {\n        bottom: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n      style: {\n        top: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n      style: {\n        bottom: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n      style: {\n        top: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n      style: {\n        bottom: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: {\n        invisible: true\n      },\n      style: {\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeInOut,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      }\n    }]\n  };\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nexport function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconUtilityClass(slot) {\n  return generateUtilityClass('MuiIcon', slot);\n}\nconst iconClasses = generateUtilityClasses('MuiIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default iconClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"baseClassName\", \"className\", \"color\", \"component\", \"fontSize\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getIconUtilityClass } from './iconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(36)\n  }[ownerState.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: (theme.vars || theme).palette.primary.main,\n    secondary: (theme.vars || theme).palette.secondary.main,\n    info: (theme.vars || theme).palette.info.main,\n    success: (theme.vars || theme).palette.success.main,\n    warning: (theme.vars || theme).palette.warning.main,\n    action: (theme.vars || theme).palette.action.active,\n    error: (theme.vars || theme).palette.error.main,\n    disabled: (theme.vars || theme).palette.action.disabled,\n    inherit: undefined\n  }[ownerState.color]\n}));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n      baseClassName = 'material-icons',\n      className,\n      color = 'inherit',\n      component: Component = 'span',\n      fontSize = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, _extends({\n    as: Component,\n    className: clsx(baseClassName,\n    // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default Icon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: `capitalize(string)` expects a string argument.' : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","/**\n * WARNING: Don't import this directly. It's imported by the code generated by\n * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`\n * constructors to ensure the plugin works as expected. Supported patterns include:\n *   throw new Error('My message');\n *   throw new Error(`My message: ${foo}`);\n *   throw new Error(`My message: ${foo}` + 'another string');\n *   ...\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code, ...args) {\n  const url = new URL(`https://mui.com/production-error/?code=${code}`);\n  args.forEach(arg => url.searchParams.append('args[]', arg));\n  return `Minified MUI error #${code}; visit ${url} for the full message.`;\n}","/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from \"../ClassNameGenerator/index.js\";\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from \"../generateUtilityClass/index.js\";\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","export const gridDimensionsSelector = state => state.dimensions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from \"../useEnhancedEffect/index.js\";\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","'use client';\n\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\nimport useOnMount from \"../useOnMount/useOnMount.js\";\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = null;\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== null) {\n      clearTimeout(this.currentId);\n      this.currentId = null;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? reactId;\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value: Boolean(value)\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","/**\n * Get a list column definition\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = selectableIds;\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.push(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = [];\n      }\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      const addRow = rowId => {\n        selectionLookup[rowId] = rowId;\n      };\n      const removeRow = rowId => {\n        delete selectionLookup[rowId];\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const isFirstRender = React.useRef(true);\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    if (isFirstRender.current) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (filteredRowsLookup[id] !== true) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n    if (hasChanged || isNestedData && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (isNestedData) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n  }, []);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const virtualScrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const virtualScrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && virtualScrollbarHorizontalRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      virtualScrollbarHorizontalRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && virtualScrollbarVerticalRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      virtualScrollbarVerticalRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, virtualScrollbarHorizontalRef, virtualScrollbarVerticalRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import ownerDocument from \"../ownerDocument/index.js\";\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set(['__check__', '__reorder__', '__detail_panel_toggle__']);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  })\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"disabled\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { isHostComponent } from '@mui/base/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  var _slotProps$select;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = (_slotProps$select = slotProps == null ? void 0 : slotProps.select) != null ? _slotProps$select : SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !selectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, selectProps, {\n        classes: _extends({}, selectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        }),\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (error) {\n      if (error instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw error;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../constants/gridDetailPanelToggleField.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};"],"names":["getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useThemeProps","createUseThemeProps","BadgeRoot","styled","name","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","concat","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","_ref3","theme","_theme$vars","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","variants","Object","keys","vars","palette","filter","key","_theme$vars2","_theme$vars3","main","contrastText","map","style","backgroundColor","RADIUS_DOT","_ref4","top","right","transform","transformOrigin","badgeClasses","_ref5","bottom","_ref6","left","_ref7","_ref8","_ref9","_ref10","_ref11","leavingScreen","React","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","anchorOriginProp","className","component","components","componentsProps","children","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slots","slotProps","showZero","variantProp","other","_objectWithoutPropertiesLoose","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","useBadge","undefined","_extends","classes","composeClasses","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","WebkitTextSizeAdjust","colorScheme","mode","body","text","primary","body1","background","default","common","white","GlobalStyles","arguments","length","_theme$components","colorSchemeStyles","colorSchemes","entries","forEach","scheme","_scheme$palette","getColorSchemeSelector","replace","defaultStyles","fontWeightBold","margin","themeOverrides","MuiCssBaseline","styleOverrides","getIconUtilityClass","IconRoot","userSelect","width","overflow","textAlign","inherit","small","medium","large","secondary","info","success","warning","action","active","error","disabled","Icon","baseClassName","Component","muiName","ListItemTextRoot","listItemTextClasses","inset","multiline","dense","flex","marginTop","marginBottom","paddingLeft","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","ListContext","getListItemTextUtilityClass","type","Typography","createSvgIcon","d","string","Error","code","url","URL","_len","args","Array","_key","arg","searchParams","append","_formatMuiErrorMessage","charAt","toUpperCase","slice","getUtilityClass","output","slotName","buffer","start","i","value","useForkRef","refs","every","instance","current","setRef","window","defaultGenerator","componentName","createClassNameGenerator","generate","configure","generator","reset","globalStateClasses","checked","completed","expanded","focused","focusVisible","open","readOnly","required","selected","globalStatePrefix","globalStateClass","ClassNameGenerator","result","getDataGridUtilityClass","gridClasses","is","fastObjectShallowCompare","a","b","aLength","bLength","_","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","useOnMount","fn","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","state","defaultCompare","objectShallowCompare","createRefs","equals","useGridSelector","didInit","setState","store","subscribe","newState","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","join","gridDimensionsSelector","dimensions","columnHeaderStyles","c","iconButtonContainer","visibility","menuIcon","separatorIconDragStyles","rx","x","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","_t$mixins$MuiDataGrid","_t$mixins$MuiDataGrid2","_t$mixins$MuiDataGrid3","_t$mixins$MuiDataGrid4","t","borderColor","TableCell","border","lighten","alpha","divider","darken","radius","shape","containerBackground","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedHoverOpacity","selectedBackground","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","borderWidth","borderStyle","body2","outline","minHeight","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","columnHeaderTitleContainerContent","whiteSpace","maxWidth","groupingCriteriaCell","WebkitTapHighlightColor","outlineOffset","focusOutlineWidth","opacity","hasScrollX","hasScrollY","scrollbarSize","shorter","gap","spacing","borderBottomWidth","borderBottomStyle","cursor","marginLeft","marginRight","columnHeaders","columnSeparatorOffset","touchAction","pointerEvents","shortest","borderBottom","filler","scrollbarFiller","breakInside","rowSkeleton","borderTop","textOverflow","borderTopColor","cellEmpty","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","virtualScrollerContent","cellOffsetLeft","alignSelf","groupingCriteriaCellToggle","pinnedRows","virtualScroller","overlay","gamma","f","o","Math","round","decomposeColor","overlayColor","rgb","values","recomposeColor","removeOpacity","GridRootPropsContext","useGridRootProps","contextValue","NOT_FOUND","Symbol","assertIsFunction","func","errorMessage","TypeError","ensureIsArray","item","isArray","getDependencies","createSelectorArgs","dependencies","array","itemTypes","assertIsArrayOfFunctions","getPrototypeOf","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","cache","entry","get","put","getEntries","clear","createSingletonCache","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","resetResultsCount","Ref","WeakRef","constructor","deref","this","UNTERMINATED","TERMINATED","createCacheNode","s","v","p","weakMapMemoize","options","fnNode","lastResult","cacheNode","l","objectCache","WeakMap","objectNode","set","primitiveCache","Map","primitiveNode","terminatedNode","_lastResult$deref","_lastResult","_lastResult$deref2","lastResultValue","call","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","push","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","structuredSelector","_len3","_key4","reduce","composition","index","reselectCreateSelector","checkIsAPIRef","DEFAULT_INSTANCE_ID","id","e","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","GridRoot","handleRef","rootElementRef","showCellVerticalBorder","toolbar","mountedState","setMountedState","useEnhancedEffect","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","column","gridVisibleColumnFieldsSelector","visibleColumns","gridVisiblePinnedColumnDefinitionsSelector","pinnedColumns","isRtl","model","visibleColumnFields","visiblePinnedFields","invert","_pinnedColumns$left","_pinnedColumns$right","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","acc","gridHasColSpanSelector","some","colSpan","gridPreferencePanelStateSelector","preferencePanel","GridPreferencePanelsValue","GridApiContext","useGridApiContext","GridPreferencesPanel","_preferencePanelState","_rootProps$slotProps","_rootProps$slotProps2","preferencePanelState","panelContent","unstable_applyPipeProcessors","openedPanelValue","filters","panel","basePopper","panelId","labelId","GridHeader","fastMemo","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","event","details","_handlerRef$current","defaultMuiPrevented","subscribeEvent","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","Timeout","_defineProperty","currentId","delay","useTimeout","disposeEffect","resolveProps","defaultProps","prototype","hasOwnProperty","propName","defaultSlotProps","slotKey","slotPropName","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","inputRef","valueState","setValueState","handleChange","async","newValue","target","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","onChange","endAdornment","loadIcon","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","sorting","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","globalId","maybeReactUseId","useId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","GridFilterInputValue","_item$value","applyValue","focusElementRef","tabIndex","clearButton","InputProps","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","String","filterDebounceMs","newItem","fromInput","_item$value2","baseTextField","label","getLocaleText","placeholder","inputProps","InputLabelProps","shrink","isFunction","isObject","escapeRegExp","clamp","min","range","from","to","isDeepEqual","size","entriesA","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","toString","deepClone","obj","structuredClone","JSON","parse","stringify","_excluded2","GridFilterInputMultipleValue","helperText","TextFieldProps","itemValue","filterItemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","operator","filterOperators","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","filterItem","_filterItem$value","parser","ignoreDiacritics","newFilterItem","filterOperator","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","_filterModel$quickFil","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","_filterModel$quickFil2","_filterModel$quickFil3","Boolean","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","_isRowMatchingFilterI","_isRowMatchingQuickFi","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","filterRegex","matches","test","createEqualityFilterFn","sensitivity","usage","isEqual","compare","createEmptyFilterFn","isEmpty","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","align","InputComponent","requiresFilterValue","val","getGridStringOperators","renderEditCell","columnValue","getRowFormattedValue","parseNumericValue","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNaN","isNumber","toLocaleString","InputComponentProps","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","renderEditDateCell","throwIfNotDateObject","columnType","rowId","GRID_DATE_COL_DEF","gridDateFormatter","getRowId","toLocaleDateString","pastedValueParser","GRID_DATETIME_COL_DEF","gridDateTimeFormatter","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","_rawPinnedRows$bottom","_rawPinnedRows$bottom2","_rawPinnedRows$top$ma","_rawPinnedRows$top","rawPinnedRows","rowEntry","_rowEntry$model","_rowEntry$model2","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","_previousCache$update","_previousCache$update2","_previousCache$update3","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","getMinimalContentHeight","rowHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","htmlFor","baseCheckbox","BooleanOperatorContainer","GridFilterInputBoolean","_baseSelectProps$nati","_rootProps$slotProps3","labelProp","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","gridBooleanFormatter","valueAsBoolean","toLowerCase","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","MenuProps","otherBaseSelectProps","_inputRef$current","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","_resolvedColumn","_resolvedColumn2","_rootProps$slotProps4","resolvedColumn","currentValueOptions","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","GridMenuRoot","Popper","menu","modal","GridMenu","onExited","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","document","activeElement","HTMLElement","handleClickAway","contains","anchorEl","placement","TransitionProps","ClickAwayListener","onClickAway","mouseEvent","Grow","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useRtl","menuId","buttonId","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","handleButtonClick","onClick","role","onKeyDown","getNewIndex","direction","_options","indexMod","newIndex","preventDefault","stopPropagation","button","touchRippleRef","baseIconButton","showMenu","moreActionsIcon","MenuList","autoFocusItem","closeMenu","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","_headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","unwrappedGroupingModel","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","number","dateTime","boolean","singleSelect","custom","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","viewportOuterSize","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","_apiRef$current$getRo","_apiRef$current$getRo2","_apiRef$current","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getRootDimensions","getTotalHeaderHeight","_props$headerFilterHe","unstable_listView","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","viewportInnerSize","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","leftPinnedWidth","rightPinnedWidth","handleDragOver","useEventCallback","offset","clientX","getBoundingClientRect","scroll","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","onDragOver","noop","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnGroupHeaderSelector","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","gridSortColumnLookupSelector","res","sortItem","sortDirection","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","gridFilteredRowsLookupSelector","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","visibleSortedRows","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilterActiveItemsSelector","topLevelRowCount","columnLookup","_filterModel$items","_column$filterOperato","gridFilterActiveItemsLookupSelector","activeFilters","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","getVisibleRows","paginationMode","useGridVisibleRows","response","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","gridListColumnSelector","listViewColumn","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","isJSDOM","useGridVirtualScroller","listView","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","selectedRowsLookup","currentPage","gridRootRef","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","virtualScrollbarVerticalRef","scrollbarHorizontalRef","virtualScrollbarHorizontalRef","contentHeight","contentSize","hasColSpan","fnRef","ResizeObserver","frameID","observer","observe","cancelAnimationFrame","disconnect","useResizeObserver","resize","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","bufferForDirection","MINIMUM_COLUMN_WIDTH","focusedCell","rowIndex","columnIndex","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","ReactDOM","forceUpdateRenderContext","handleScroll","currentTarget","handleWheel","handleTouchMove","needsHorizontalScrollbar","scrollerStyle","overflowX","overflowY","flexBasis","currentPageTotalHeight","useRunOnce","condition","effect","didRun","initialRenderContext","getRows","_params$renderContext","_params$rows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","_currentPage$range","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","isNotVisible","tabbableCell","cellMode","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","offsetTop","focusedColumnIndex","_apiRef$current$getIn","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","platform","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","_lastColumn$computedW","_rootProps$unstable_l","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","_inputs$range","_inputs$range2","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","_columnPositions$rend","_columnPositions$pinn","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","GridOverlays","_rootProps$slots","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","_props$style","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","Memoized","rowsLength","minimumSize","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","_rowsMeta$positions$r","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","content","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","addEventListener","capture","removeEventListener","setProperty","Container","Scroller","scrollbarWidth","GridVirtualScroller","overlaysProps","useGridOverlays","visibleRowCount","noRows","loadingOverlay","TopContainer","GridHeaders","Overlays","Content","RenderZone","detailPanels","SpaceFiller","BottomContainer","GridFooterPlaceholder","hideFooter","footer","getGridRowGroupSelectableDescendants","groupId","sortedRowIds","groupNode","descendants","_rowTree$sortedRowIds","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","findRowsToSelect","selectedRow","autoSelectDescendants","autoSelectParents","addRow","filteredRows","selectedIdsLookup","selectedDescendants","add","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","parent","childId","findRowsToDeselect","deselectedRow","removeRow","allParents","getRowNodeParents","parents","descendant","GridContextProvider","Provider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","logger","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","Store","_value","listeners","getSnapshot","SYMBOL_API_PRIVATE","useGridApiInitialization","inputApiRef","_inputApiRef$current","_publicApiRef$current","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","api","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","useGridLoggerFactory","getLogger","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","context","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","_ref$current","added","setAdded","targetElement","wrapHandler","GridCellCheckboxForwardRef","_rootProps$rowSelecti","_rootProps$rowSelecti2","checkboxElement","rippleRef","element","getCellElement","_checkboxElement$curr","input","querySelector","handleKeyDown","isSelectable","checkboxPropsSelector","rowSelectionPropagation","rowSelectionLookup","isIndeterminate","isChecked","selectableDescendantsCount","selectedDescendantsCount","_rowTree$sortedRowIds2","indeterminateCheckboxAction","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","getColumnHeaderElement","handleSelectionChange","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","_cellParams$value","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","CSVHead","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isPasteShortcut","fromCharCode","keyCode","shiftKey","altKey","writeToClipboardPolyfill","data","span","createElement","textContent","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","isCopyShortcut","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","_state$pinnedColumns","mergeColumnsState","densityStateInitializer","_props$initialState$d","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","_options$getRowsToExp","_options$shouldAppend","_options$includeHeade","_options$includeColum","_options$escapeFormul","getRowsToExport","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","disableToolbarButton","ownerDocument","getDerivedPaginationModel","paginationState","paginationModelProp","_paginationModelProp$","_paginationModelProp$2","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","doc","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","_gridRootElement$quer","_gridRootElement$quer2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","_options$printOptions","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","_api$columnHeadersCon","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","_rowSpanHiddenCells$r","rowSpanHiddenCells","nextRowIndex","_rowSpanHiddenCells$n","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","Edit","getColumnIndexFn","rowIndexBefore","checkIfCanStartEditing","paginationStateInitializer","_props$paginationMode","_props$rowCount","_props$paginationMeta","_props$initialState3","paginationMeta","useGridPagination","useGridPaginationMeta","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","restoredPaginationMeta","stateToRestore","useGridPaginationModel","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","_context$stateToResto2","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","handlePaginationModelChange","_apiRef$current$virtu","useGridRowCount","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","preferencePanelStateInitializer","_props$initialState$p","gridEditRowsStateSelector","editRows","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","_editRowsState$id$fie","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","_rowModesModel$id","_copyOfPrevRowModesMo","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","rawValue","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","_getSelectionModelPro","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","_props$sortModel","scrollIntoView","containerSize","elementSize","elementOffset","elementEnd","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableColumnFilter","disableColumnReorder","disableColumnResize","disableColumnSelector","disableColumnSorting","disableDensitySelector","disableRowSelectionOnClick","filterMode","hideFooterPagination","hideFooterRowCount","hideFooterSelectedRowCount","keepColumnPositionIfDraggedOutside","keepNonExistentRowsSelected","pageSizeOptions","resizeThrottleMs","rowPositionsDebounceMs","rowSpacingType","showColumnVerticalBorder","sortingMode","throttleRowsMs","unstable_rowSpanning","EMPTY_SIZE","EMPTY_DIMENSIONS","groupHeaderHeight","rowWidth","headersTotalHeight","dimensionsStateInitializer","useGridDimensions","_props$columnGroupHea","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnGroupHeaderHeight","decimals","w","savedSize","setSavedSize","debouncedSetSavedSize","lastArgs","wait","later","throttled","throttle","previousSize","setDimensions","computedStyle","defaultView","getComputedStyle","newSize","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","_apiRef$current$updat","rootElement","pinnedRowsHeight","calculatePinnedRowsHeight","scrollDiv","offsetWidth","clientWidth","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPrivate","k","isFirstSizing","handleResize","onResize","globalThis","unobserve","rowsMetaStateInitializer","heights","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","cellProps","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","_getParents$depth","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","_unwrappedGroupingMod2","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","trackFinger","currentTouchId","changedTouches","touch","identifier","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","asyncCheck","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","_cell$getBoundingClie","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","header","_iconContainer$client","_menuContainer$client","columnHeaderTitle","iconContainer","menuContainer","paddingWidth","parseInt","paddingRight","scrollWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","_apiRef$current$rootE","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","pinnedPosition","updateProperty","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","_apiRef$current$colum","_elem$querySelectorAl","findGroupHeaderElementsFromField","_api$virtualScrollerR","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","side","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","_apiRef$current$rootE2","_userOptions$columns","userOptions","unstable_setColumnVirtualization","newColumns","totalWidth","total","_widthByField$column$","remainingWidth","widthPerColumn","updateColumns","_apiRef$current$colum2","passive","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","_colDef$rowSpanValueG","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","_hiddenCells$row$id","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","_state$filter$filterM","isFilteringPending","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","unstable_listColumn","getListColumnWidth","useDataGridComponent","useGridRowsPreProcessors","useGridRowSelection","_props$rowSelectionPr","_props$rowSelectionPr2","_props$rowSelectionPr15","_props$rowSelectionPr16","_props$rowSelectionPr29","_props$rowSelectionPr30","_props$rowSelectionPr32","runIfRowSelectionIsEnabled","applyAutoSelection","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","_props$rowSelectionPr3","_props$rowSelectionPr4","_props$rowSelectionPr5","_props$rowSelectionPr6","_props$rowSelectionPr7","_props$rowSelectionPr8","_props$rowSelectionPr9","_props$rowSelectionPr10","_props$rowSelectionPr11","_props$rowSelectionPr12","_props$rowSelectionPr13","_props$rowSelectionPr14","selectRows","selectableIds","_props$rowSelectionPr17","_props$rowSelectionPr18","_props$rowSelectionPr19","_props$rowSelectionPr20","selectionLookup","_props$rowSelectionPr21","_props$rowSelectionPr22","_props$rowSelectionPr23","_props$rowSelectionPr24","_props$rowSelectionPr25","_props$rowSelectionPr26","_props$rowSelectionPr27","_props$rowSelectionPr28","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","_props$rowSelectionPr31","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_event$target$closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","_props$initialState4","_props$slotProps2","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","_apiRef$current$updat2","_apiRef$current2","setColumnVisibility","isVisible","_columnVisibilityMode","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","columnReorderApi","_props$initialState$c","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$slotProps","ColumnsPanel","columnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","useGridRows","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","_idRowsLookup$id","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","_tree$childId","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","_props$rows","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRowSpanning","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","resetColSpan","columnSpanningPrivateApi","getCellColSpanInfo","_lookup$current$rowId","useGridColumnSpanning","useGridColumnGrouping","_unwrappedGroupingMod3","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","updateColumnGroupingState","_apiRef$current$getPi","_apiRef$current$getPi2","getPinnedColumns","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","_gridFocusCellSelecto","lastFocusedRowId","_nextRow$id","lastFocusedRowIndex","nextRow","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","hidePreferences","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortComparator","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","isHeightMetaValid","processHeightEntry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","_heightCache$get$cont","_heightCache$get","unstable_setLastMeasuredRowIndex","storeRowHeightMeasurement","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","_heightCache$get$auto","_heightCache$get2","useGridScroll","colRef","scrollCoordinates","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","getScrollPosition","showColumnMenu","hideColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setVirtualization","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","_CONTENT_WIDTH_RANGE_","Skeleton","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnHeaderSortIconRaw","icon","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","baseBadge","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","GridRowCountRoot","GridRowCount","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","pinnedRight","GridScrollbarFillerCell","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","_dimensions$viewportI","viewportHeight","skeletonRowsCount","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","_ref$current2","pinnedCells","_ref$current3","LOADING_VARIANTS","CircularProgress","LinearProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","getToolbarUtilityClass","ToolbarRoot","disableGutters","gutters","Toolbar","_slots$firstButton","_slots$lastButton","_slots$nextButton","_slots$previousButton","_slots$firstButtonIco","_slots$lastButtonIcon","_slots$nextButtonIcon","_slots$previousButton2","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","FirstButton","firstButton","IconButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","FirstPageIconDefault","LastButtonIcon","lastButtonIcon","LastPageIconDefault","NextButtonIcon","nextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","previousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","tablePaginationClasses","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","TablePagination","_slotProps$select","ActionsComponent","TablePaginationActions","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","maxHeight","estimated","GridPagination","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","wrapLabelDisplayedRows","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","_valueRef$current","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","baseButton","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","startAdornment","baseInputAdornment","quickFilterIcon","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagement","columnsManagementHeader","columnsManagementFooter","grey","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","elevation","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","VIRTUAL","EMPTY_CELL_PARAMS","GridCell","_column$getActions","_cellParams$formatted","_rootProps$cellSelect","_hiddenCells$rowId$fi","_hiddenCells$rowId","_spannedCells$rowId$f","_spannedCells$rowId","editCellState","styleProp","disableDragEvents","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","cellStyle","isLeftPinned","isRightPinned","focusableElement","elementToFocus","handleFocus","onFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","EmptyCell","GridRow","refProp","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","editRowsState","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","publishClick","rowReordering","heightEntry","rowStyle","rowClassNames","getRowClassName","getCell","indexRelativeToAllColumns","_cellColSpanInfo$cell","_cellColSpanInfo$cell2","_editRowsState$rowId$","_editRowsState$rowId","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","labelledby","GridColumnHeaderTitleRoot","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","clientHeight","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","ariaSort","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","_colDef$sortingOrder","_colDef$headerName","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onContextMenu","onBlur","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","columnHeaderFilterIconButton","counter","columnHeaderSortIcon","elementId","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","render","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","MemoizedGridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","GridColumnHeaderItem","getColumnGroupHeaders","_columnGroupsModel$fi","_columnGroupsModel$fi2","_columnGroupsModel$la","_columnGroupsModel$la2","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","_column$computedWidth","headerInfo","Left","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","autoFocus","ListItemIconRoot","alignItemsFlexStart","ListItemIcon","getListItemIconUtilityClass","GridColumnMenuHideItem","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","baseDivider","useGridColumnMenuSlots","otherProps","GridColumnMenu","GridNoResultsOverlay","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","openFilterButtonIcon","columnFilteredIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterClearIcon","columnMenuClearIcon","columnReorderIcon","MUIBadge","MUICheckbox","MUIDivider","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIMenuItem","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","GridSkeletonCell","toggleFilter","GridColumnHeaders","noResultsOverlay","noRowsOverlay","useProps","allProps","_props$forwardedProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","useDataGridProps","themedProps","overrides","computeSlots","injectDefaultProps","_themedProps$key","accessibleRowCount","pinnedRowsCount","ariaRowIndex","DataGridRaw","GridBody","propTypes","PropTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange"],"sourceRoot":""}