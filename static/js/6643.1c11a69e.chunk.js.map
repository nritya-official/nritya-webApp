{"version":3,"file":"static/js/6643.1c11a69e.chunk.js","mappings":"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","sources":["Components/ImageUpload.js","Components/OpenClassCard.js","Components/OpenClassCardSlider.js","Components/TimeRange.js","Components/OpenClassAdd.js","Components/OpenClassUpdate.js","Screens/CreatorOpenClass.js","utils/common.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport { ref, getDownloadURL, listAll } from 'firebase/storage';\nimport { storage } from '../config';\nimport { useSelector } from 'react-redux'; // Import useSelector and useDispatch\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { deleteAllImagesInFolder,deleteImages,uploadImages} from '../utils/firebaseUtils'\nimport { Card, CardContent, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { STORAGES } from \"../constants\";\n\n\nconst ImageUpload = ({entityId,storageFolder,title, maxImageCount=10, updateMode, disable }) => {\n  const showSnackbar = useSnackbar();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [newFiles, setNewFiles] = useState([]); // Track new files to be added\n  const [deletedFiles, setDeletedFiles] = useState([]); // Track deleted files\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n  //console.log(\"Received props=> entityId:\", entityId, \"|storageFolder:\", storageFolder);\n  const [progressDelete, setProgressDelete] = useState(-1);\n  const [progressUpdate, setProgressUpdate] = useState(-1);\n\n  console.log(\"Kyc enitity id \",entityId, disable)\n  const filesizes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  useEffect(() => {\n   // console.log(\"Fetching image for\",entityId)\n    if(entityId){\n      fetchStudioImages(entityId); // Fetch images when component mounts\n    }\n  }, [entityId]);\n\n  useEffect(() => {\n   // console.log(\"Selected files:\", selectedFiles);\n    if (maxImageCount && selectedFiles.length > maxImageCount) {\n      const truncatedFiles = selectedFiles.slice(0, maxImageCount);\n      alert(`Exceeded maxImageCount, keeping first ${maxImageCount} files.`);\n      setSelectedFiles(truncatedFiles);\n    }\n  }, [selectedFiles, maxImageCount]);\n  \n\n  const handleInputChange = (e) => {\n    // console.log(\"handleInputChange\")\n    const files = Array.from(e.target.files);\n    const updatedFiles = [];\n    // console.log(\"file array \",files.length)\n    files.forEach((file) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        updatedFiles.push({\n          id: shortid.generate(),\n          filename: file.name,\n          filetype: file.type,\n          fileimage: reader.result,\n          datetime: file.lastModifiedDate.toLocaleString(\"en-IN\"),\n          filesize: filesizes(file.size),\n          file: file, // Store the actual file object\n        });\n\n        if (updatedFiles.length === files.length) {\n          setSelectedFiles((prevFiles) => [...prevFiles, ...updatedFiles]);\n          setNewFiles(updatedFiles);\n          // console.log(\"New files in total\",setNewFiles.length)\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleDeleteSelectedFile = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this image?\")) {\n      const fileToDelete = selectedFiles.find((file) => file.id === id);\n      setDeletedFiles((prevDeletedFiles) => [...prevDeletedFiles, fileToDelete]);\n      setSelectedFiles((prevFiles) =>\n        prevFiles.filter((file) => file.id !== id)\n      );\n    }\n  };\n\n  const handleUploadSubmit = async () => {\n    if (!entityId) {\n      alert(\"No studio selected\");\n      return;\n    }\n\n    try {\n      if (maxImageCount === 1) {\n        // Delete all previous images in the folder\n        await deleteAllImagesInFolder(storageFolder, entityId);\n        await uploadImages(storageFolder,newFiles, entityId, setProgressUpdate);\n      } else {\n        // Calculate images to delete and add\n        const { imagesToDelete, newImages } = calculateDelta(selectedFiles, uploadedFiles);\n\n        // Delete images if there are any\n        if (imagesToDelete.length > 0) {\n          await deleteImages(storageFolder, imagesToDelete, entityId, setProgressDelete);\n        }\n\n        // Upload new images if there are any\n        if (newImages.length > 0) {\n          await uploadImages(storageFolder, newImages, entityId, setProgressUpdate);\n        }\n\n      }\n\n      // alert(\"Images Uploaded/Deleted\");\n      showSnackbar(\"Image(s) uploaded successfully\", \"success\");\n    } catch (error) {\n      console.error(\"Error uploading/deleting images:\", error);\n    }\n  };\n\n  // Function to calculate images to delete and new images to upload\n  const calculateDelta = (selectedFiles, uploadedFiles) => {\n    const selectedFileIds = selectedFiles.map(file => file.id);\n    const uploadedFileIds = uploadedFiles.map(file => file.id);\n\n    const imagesToDelete = uploadedFiles.filter(file => !selectedFileIds.includes(file.id));\n    const newImages = selectedFiles.filter(file => !uploadedFileIds.includes(file.id));\n\n    return { imagesToDelete, newImages };\n  };\n\n\n  const fetchStudioImages = async (entityId) => {\n    setSelectedFiles([]);\n    setNewFiles([]);\n    setDeletedFiles([]);\n    try {\n      const folderPath = `${storageFolder}/${entityId}`;\n      console.log(folderPath)\n      const folderRef = ref(storage, folderPath);\n      const fileList = await listAll(folderRef);\n\n      const files = await Promise.all(\n        fileList.items.map(async (fileRef) => {\n          const downloadURL = await getDownloadURL(fileRef);\n\n          return {\n            id: fileRef.name,\n            filename: fileRef.name,\n            fileURL: downloadURL,\n          };\n        })\n      );\n      // console.log('File fetching',files);\n      setUploadedFiles(files); // Update the uploadedFiles state with fetched data\n      setSelectedFiles(files);\n    } catch (error) {\n      console.error('Error fetching user images:', error);\n    }\n  };\n\n  return (\n    <div className=\"fileupload-view\" style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n      <div className=\"row justify-content-center m-0\" style={{ flex: '1',justifyContent: 'center' }}>\n        <div className=\"col-md-6\" style={{ flex: '1' ,justifyContent: 'center'}}>\n          <div className=\"card mt-5\">\n            <div className=\"card-body\" style={{ backgroundColor: isDarkModeOn ? '#333333' : 'white' }}>\n              <div className=\"kb-data-box\">\n                <div className=\"kb-modal-data-title\">\n                  <div className=\"kb-data-title\" style={{justifyContent:'center',flex: '1'}}>\n                    <h4>{title}</h4>\n                    <p>Max no of image(s):{maxImageCount} {storageFolder === STORAGES.STUDIOIMAGES && <p>Add at least 5 images</p>}</p>\n                  </div>\n                </div>\n                <div style={{  backgroundColor: isDarkModeOn ? '#333333' : 'white'}}>\n                  <div className=\"kb-file-upload\">\n                    <div className=\"file-upload-box\">\n                      <input\n                        type=\"file\"\n                        id=\"fileupload\"\n                        className=\"file-upload-input\"\n                        onChange={handleInputChange}\n                        multiple\n                      />\n\n                    </div>\n                  </div>\n                  <br></br>\n                  <div className=\"kb-attach-box mb-3\">\n                  <div className=\"row\">\n                    {entityId && selectedFiles.length > 0 ? (\n                      selectedFiles.map((file) => (\n                        \n                        <div key={file.id} className=\"col-6 col-md-3 mb-3\" style={{ position: 'relative' }}>\n                          \n                          <Card sx={{ maxWidth: 345 }}>\n                            {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                              <div style={{ position: 'relative' }}>\n                                <img\n                                  src={file.fileimage ? file.fileimage : file.fileURL}\n                                  alt={file.filename}\n                                  className=\"card-img-top\"\n                                  style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                                />\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  disabled={disable}\n                                  onClick={() => handleDeleteSelectedFile(file.id)}\n                                  style={{ position: 'absolute', top: 0, right: 0, backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                                >\n                                  <DeleteIcon style={{color:\"ff0000\"}}/>\n                                </IconButton>\n                              </div>\n                            ) : (\n                              <CardContent>\n                                <i className=\"far fa-file-alt\"></i>\n                              </CardContent>\n                            )}\n                          </Card>\n                        </div>\n                        \n                      ))\n                    ) : (\n                      <div className=\"col-12 text-center\">\n                        <p>No images selected</p>\n                      </div>\n                    )}\n                  </div>\n\n                  </div>\n\n                  \n                  <div className=\"kb-buttons-box\">\n                    <button\n                      type=\"button\"\n                      className=\"btn div-submit\"\n                      style={{ backgroundColor: isDarkModeOn ? '#892CDC' : 'black', color:'white'  }}\n                      onClick={handleUploadSubmit}\n                      disabled={disable}\n                    >\n                      Image Upload\n                    </button>\n                  </div>\n                </div>\n                {selectedFiles.length > 0 && (\n                  <div className=\"kb-attach-box\" hidden>\n                    <div className=\"row\">\n                    <hr />\n                    {selectedFiles.map((file) => (\n                      <div key={file.id} className=\"col-6 col-md-3 mb-3\">\n                      <div className=\"card\">\n                        {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                          <img\n                            src={file.fileimage}\n                            alt={file.filename}\n                            className=\"card-img-top\"\n                            style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                          />\n                        ) : (\n                          <div className=\"card-body\">\n                            <i className=\"far fa-file-alt\"></i>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n              { progressDelete >= 0 && (\n                    <div>\n                        <p style={{ color: isDarkModeOn ? '#fff' : '#000' }}>\n                            Deleting images... {progressDelete.toFixed(2)}%\n                        </p>\n                        <progress \n                            value={progressDelete} \n                            max=\"100\" \n                            style={{\n                                color: isDarkModeOn ? '#fff' : '#000'\n                            }}\n                        >\n                            {progressDelete.toFixed(2)}%\n                        </progress>\n                    </div>\n                )}\n\n                { progressUpdate >= 0 && (\n                    <div>\n                        <p style={{ color: isDarkModeOn ? '#fff' : '#000' }}>\n                            Uploading images... {progressUpdate.toFixed(2)}%\n                        </p>\n                        <progress \n                            value={progressUpdate} \n                            max=\"100\" \n                            style={{\n                                color: isDarkModeOn ? '#fff' : '#000'\n                            }}\n                        >\n                            {progressUpdate.toFixed(2)}%\n                        </progress>\n                    </div>\n                )}\n\n                            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Set default prop values\nImageUpload.defaultProps = {\n  maxImageCount: 5, // Default maximum image count\n  updateMode: false,\n  disable:false,\n};\n\nexport default ImageUpload;","import React, { useEffect, useState } from \"react\";\nimport AspectRatio from \"@mui/joy/AspectRatio\";\nimport Card from \"@mui/joy/Card\";\nimport CardContent from \"@mui/joy/CardContent\";\nimport Chip from \"@mui/joy/Chip\";\nimport Typography from \"@mui/joy/Typography\";\nimport {\n  Box,\n  Grid,\n  Modal,\n  Stack,\n  Typography as MUITypography,\n  Button,\n  IconButton,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { COLLECTIONS, STORAGES } from \"../constants\";\nimport { readDocumentWithImageUrl } from \"../utils/firebaseUtils\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport dayjs from \"dayjs\";\nimport { db } from \"../config\";\nimport { addDoc, collection, doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport whatsAppImage from '../assets/images/whatsapp.png';\nimport callImage from '../assets/images/india_11009487.png';\nimport ShareButton from \"./ShareButton\";\n\nfunction WorkshopDetailsModal({\n  open,\n  handleClose,\n  dataItem,\n  activateOpenClass,\n  deactivateOpenClass,\n  actionsAllowed,\n}) {\n  const showSnackbar = useSnackbar();\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [isBooking, setIsBooking] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n\n  const currentUser = JSON.parse(localStorage.getItem(\"userInfo\"))?.UserId;\n\n  const isCreatorOfWorkshop = dataItem.UserId === currentUser;\n\n  const handleBook = async () => {\n    try {\n      setIsBooking(true);\n\n      addDoc(collection(db, COLLECTIONS.BOOKINGS), {\n        StudioId: dataItem.StudioId,\n        OpenClassId: dataItem.id,\n        UserId: currentUser,\n        bookingDate: Date.now(),\n      });\n\n      const userRef = doc(db, \"User\", currentUser);\n      const userSnap = await getDoc(userRef);\n\n      if (userSnap.exists()) {\n        if (userSnap.data() != null) {\n          await updateDoc(userRef, {\n            BookedOpenClasses: [\n              ...(userSnap.data().BookedOpenClasses || []),\n              dataItem.id,\n            ],\n          });\n        }\n      }\n\n      setUserDetails(prev => ({ ...prev, BookedOpenClasses: [...(prev?.BookedOpenClasses || []), dataItem.id] }));\n\n      showSnackbar(\"Open class booked\", \"success\");\n    } catch (error) {\n      console.error(error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsBooking(false);\n    }\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const userRef = doc(db, \"User\", currentUser);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) setUserDetails(userSnap.data());\n      } catch (error) {\n        console.log(\" error\");\n      }\n    };\n\n    getUser();\n  }, []);\n\n  const whatsappMessage = encodeURIComponent(\"Hey, I found your Studio on nritya.co.in. I'm interested\");\n\n  const isBooked = userDetails?.BookedOpenClasses?.includes?.(dataItem?.id);\n\n  const shareUrl = `${window.location.host}/nritya-webApp#/openClass/${dataItem.id}`;\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n      style={{zIndex:40}}\n    >\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          maxHeight: \"90%\",\n          overflow: \"auto\",\n          width: { xs: \"90%\", md: \"60%\" },\n          bgcolor: isDarkModeOn ? \"black\" : \"background.paper\",\n          borderWidth: \"2px\",\n          borderStyle: \"solid\",\n          borderColor: isDarkModeOn ? \"white\" : \"black\",\n          boxShadow: 24,\n          p: \"1rem\",\n          borderRadius: \"8px\",\n        }}\n      >\n        <Grid container spacing=\"8px\" rowGap={3}>\n          <Grid item xs={12} lg={8} sx={{ minHeight: '300px' }}>\n            <img\n              src={dataItem.imageUrl}\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"contain\",\n                borderRadius: \"8px\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <Box\n              sx={{\n                height: \"100%\",\n                bgcolor: isDarkModeOn ? \"#333333\" : \"#efefef\",\n                p: 2,\n                borderRadius: \"8px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Box sx={{ flex: 1 }}>\n                <MUITypography\n                  variant=\"h6\"\n                  component=\"p\"\n                  sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dayjs(dataItem.date).format(\"LL\")}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"h6\"\n                  component=\"p\"\n                  sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.time}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"body1\"\n                  component=\"p\"\n                  sx={{ mt: \"2rem\", color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.venue}\n                </MUITypography>\n              </Box>\n\n              <Box sx={{ mt: \"2rem\", textAlign: 'right' }}>\n                {!actionsAllowed && !isCreatorOfWorkshop && currentUser && <Button\n                  variant=\"outlined\"\n                  onClick={handleBook}\n                  disabled={isBooked || isBooking}\n                  sx={{\n                    boxShadow: \"none\",\n                    textTransform: \"none\",\n                    fontSize: 16,\n                    padding: \"6px 12px\",\n                    border: \"1px solid\",\n                    lineHeight: 1.5,\n                    backgroundColor: \"transparent\",\n                    borderColor: isDarkModeOn ? \"white\" : \"black\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"transparent\",\n                      borderColor: isDarkModeOn ? \"white\" : \"black\",\n                      boxShadow: \"none\",\n                    },\n                    \"&:active\": {\n                      boxShadow: \"none\",\n                      backgroundColor: \"transparent\",\n                      borderColor: isDarkModeOn ? \"white\" : \"black\",\n                    },\n                    \"&:focus\": {\n                      boxShadow: \"none\",\n                    },\n                  }}\n                >\n                  {isBooked ? \"Booked\" : \"Book Now\"}\n                </Button>}\n              </Box>\n            </Box>\n            {!actionsAllowed && !isCreatorOfWorkshop && currentUser && <MUITypography component={'p'} variant=\"caption\" sx={{ my: '2px', color: isDarkModeOn ? \"white\" : \"black\", textAlign: 'center' }}>\n              Book your spot\n            </MUITypography>}\n          </Grid>\n          <Grid item sx={{ mt: 1, }}>\n            <Box sx={{ display: 'flex', columnGap: 2 }}>\n              <MUITypography\n                variant=\"h5\"\n                component=\"p\"\n                sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n              >\n                {dataItem.openClassName || \"\"}\n                {dataItem.danceStyles.map((dance) => ` | ${dance}`)}\n              </MUITypography>\n              <ShareButton shareUrl={shareUrl} />\n            </Box>\n            <MUITypography\n              variant=\"body1\"\n              component=\"p\"\n              sx={{ mt: 1, color: isDarkModeOn ? \"white\" : \"black\" }}\n            >\n              <span>By {dataItem.studioDetails?.studioName || \"\"}</span>\n              {dataItem.studioDetails && dataItem.studioDetails?.whatsappNumber && (\n                <IconButton color=\"success\" size=\"small\" target=\"_blank\" href={`https://wa.me/91${dataItem.studioDetails.whatsappNumber}?text=${whatsappMessage}`}>\n                  <img src={whatsAppImage} alt=\"Whatsapp call\" style={{ width: 30, height: 28 }} />\n                </IconButton>\n              )}\n              {dataItem.studioDetails && dataItem.studioDetails?.mobileNumber && (\n                <IconButton color=\"primary\" size=\"small\" target=\"_blank\" href={`tel:${dataItem.studioDetails.mobileNumber}`}>\n                  <img src={callImage} alt=\"Phone call\" style={{ width: 30, height: 28 }} />\n                </IconButton>\n              )}\n            </MUITypography>\n            {/* <MUITypography\n              variant=\"body1\"\n              component=\"p\"\n              sx={{ mt: 2, color: isDarkModeOn ? \"white\" : \"black\" }}\n            >\n              {dataItem.description || \"\"}\n            </MUITypography> */}\n            <div style={{ color: isDarkModeOn ? 'white ' : 'black' }} className=\"description-box\" dangerouslySetInnerHTML={{ __html: dataItem.description || \"Open Class Description\" }}></div>\n          </Grid>\n        </Grid>\n\n        <Box sx={{ mt: \"1rem\", textAlign: \"right\" }}>\n          {actionsAllowed && isCreatorOfWorkshop && (\n            <Button\n              onClick={() =>\n                dataItem?.active\n                  ? deactivateOpenClass(dataItem?.id)\n                  : activateOpenClass(dataItem?.id)\n              }\n              variant=\"outlined\"\n              sx={{\n                mr: \"1rem\",\n                color: \"white\",\n                boxShadow: \"none\",\n                border: \"1px solid\",\n                backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                borderColor: \"white\",\n                color: \"white\",\n                \"&:hover\": {\n                  backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                  borderColor: \"white\",\n                  boxShadow: \"none\",\n                },\n                \"&:active\": {\n                  boxShadow: \"none\",\n                  backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                  borderColor: \"white\",\n                },\n                \"&:focus\": {\n                  boxShadow: \"none\",\n                },\n              }}\n            >\n              {dataItem?.active ? \"Deactivate\" : \"Activate\"}\n            </Button>\n          )}\n\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            sx={{\n              color: \"white\",\n              boxShadow: \"none\",\n              border: \"1px solid\",\n              backgroundColor: \"transparent\",\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              color: isDarkModeOn ? \"white\" : \"black\",\n              \"&:hover\": {\n                backgroundColor: \"transparent\",\n                borderColor: isDarkModeOn ? \"white\" : \"black\",\n                boxShadow: \"none\",\n              },\n              \"&:active\": {\n                boxShadow: \"none\",\n                backgroundColor: \"transparent\",\n                borderColor: isDarkModeOn ? \"white\" : \"black\",\n              },\n              \"&:focus\": {\n                boxShadow: \"none\",\n              },\n            }}\n          >\n            Close\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default function OpenClassCard({\n  dataItem,\n  activateOpenClass,\n  deactivateOpenClass,\n  actionsAllowed,\n}) {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [isWorkshopDetailsModalOpen, setIsWorkshopDetailsModalOpen] =\n    useState(false);\n  const workshopId = dataItem.id;\n\n  const handleWorkshopDetailsModalOpen = () =>\n    setIsWorkshopDetailsModalOpen(true);\n\n  const handleWorkshopDetailsModalClose = () =>\n    setIsWorkshopDetailsModalOpen(false);\n\n  useEffect(() => {\n    const fetchImageUrl = async () => {\n      try {\n        const url = await readDocumentWithImageUrl(\n          STORAGES.OPENCLASSICON,\n          workshopId\n        );\n\n        setImageUrl(\n          url ||\n          \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      } catch (error) {\n        console.error(\"Error fetching image URL:\", error);\n      }\n    };\n\n    fetchImageUrl();\n  }, [dataItem.id]);\n\n  const cardStyle = {\n    backgroundColor: isDarkModeOn ? \"#444\" : \"white\",\n    padding: \"0px\",\n    color: isDarkModeOn ? \"white\" : \"black\",\n    marginRight: \"10px\",\n    width: 320,\n    maxWidth: \"100%\",\n    boxShadow: \"lg\",\n    transition: \"opacity 0.3s ease\",\n  };\n\n  const cardHoverStyle = {\n    transform: \"scale(1.01)\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <>\n      <Card\n        variant=\"solid\"\n        sx={{\n          ...cardStyle,\n          \"&:hover\": cardHoverStyle,\n          flex: \"none\",\n        }}\n        onClick={handleWorkshopDetailsModalOpen}\n      >\n        <AspectRatio ratio=\"1.78\" style={{ position: \"relative\" }}>\n          <img\n            src={imageUrl}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: \"100%\", objectFit: \"cover\", overflow: \"hidden\" }}\n          />\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", bottom: 0, left: 0, padding: \"1px\" }}\n          >\n            {dataItem && dataItem.danceStyles ? (\n              dataItem.danceStyles.slice(0, 3).map((form, index) => (\n                <Chip\n                  key={index}\n                  color={index % 2 === 0 ? \"danger\" : \"success\"}\n                  style={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                  }}\n                >\n                  {form.trim()}\n                </Chip>\n              ))\n            ) : (\n              <Chip\n                key={10}\n                color={10 % 2 === 0 ? \"danger\" : \"success\"}\n                style={{ marginBottom: \"10px\", fontSize: \"0.8rem\" }}\n              >\n                {\"No danceforms\"}\n              </Chip>\n            )}\n          </Stack>\n        </AspectRatio>\n        <CardContent style={{ padding: \"10px\", paddingTop: \"5px\" }}>\n          <Box\n            fontWeight=\"md\"\n            color=\"neutral\"\n            textColor=\"text.primary\"\n            underline=\"none\"\n            overlay\n            style={{\n              color: isDarkModeOn ? \"white\" : \"black\",\n              extDecoder: \"one\",\n            }}\n          >\n            <span>\n              {dataItem && dataItem.openClassName ? dataItem.openClassName : \"\"}\n            </span>\n            {!dataItem?.active && (\n              <span\n                style={{\n                  marginLeft: \"2px\",\n                  padding: \"2px 4px\",\n                  fontSize: \"14px\",\n                  borderRadius: \"4px\",\n                  background: \"red\",\n                }}\n              >\n                Inactive\n              </span>\n            )}\n          </Box>\n          <Typography\n            style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n            noWrap\n          >\n            By {dataItem.studioDetails?.studioName ? dataItem.studioDetails.studioName : \"\"}\n          </Typography>\n          <Typography\n            style={{ marginTop: 10, color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n            noWrap\n          >\n            {dataItem.venue ? dataItem.venue : \"\"}\n          </Typography>\n          <Typography\n            style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n          >\n            {dataItem.date || \"\"} | {dataItem.time || \"\"}\n          </Typography>\n        </CardContent>\n      </Card>\n\n      <WorkshopDetailsModal\n        dataItem={{ ...dataItem, imageUrl }}\n        open={isWorkshopDetailsModalOpen}\n        handleClose={handleWorkshopDetailsModalClose}\n        activateOpenClass={activateOpenClass}\n        deactivateOpenClass={deactivateOpenClass}\n        actionsAllowed={actionsAllowed}\n      />\n    </>\n  );\n}\n","import \"./WorkshopCardSlider.css\";\nimport React from \"react\";\nimport OpenClassCard from \"./OpenClassCard\";\n\nconst CardSlider = ({\n  dataList,\n  deleteOpenClass,\n  actionsAllowed,\n  activateOpenClass,\n  deactivateOpenClass,\n}) => {\n  return (\n    <div className={\"horizontal-scroll-wrapper\"}>\n      {dataList.map((dataItem, index) => (\n        <OpenClassCard\n          key={dataItem.id}\n          dataItem={dataItem}\n          activateOpenClass={activateOpenClass}\n          deactivateOpenClass={deactivateOpenClass}\n          actionsAllowed={actionsAllowed}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardSlider;\n","import React from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\n\nconst TimeRange = ({ defaultTime, handleSelect }) => {\n  const startTime_i = defaultTime.split(\"-\")[0].trim();\n  const endTime_i = defaultTime.split(\"-\")[1]?.trim();\n\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const generateTimeOptions = () => {\n    const options = [];\n    let option_AM = [];\n    let option_PM = [];\n    \n    for (let hours = 0; hours < 24; hours++) {\n        for (let minutes = 0; minutes < 60; minutes += 30) {\n            const formattedMinutes = minutes.toString().padStart(2, \"0\");\n            \n            if (hours < 12) {\n                // Handle 12-hour format for AM, converting 0 hours to 12 for midnight\n                const formattedHours = hours === 0 ? 12 : hours;\n                option_AM.push(`${formattedHours}:${formattedMinutes} AM`);\n            } else {\n                // Handle 12-hour format for PM, converting 12-23 hours to 1-12 format\n                const formattedHours = hours === 12 ? 12 : hours % 12;\n                option_PM.push(`${formattedHours}:${formattedMinutes} PM`);\n            }\n        }\n    }\n\n    // Interleave AM and PM options to build the full list\n    for (let i = 0; i < option_AM.length || i < option_PM.length; i++) {\n        if (i < option_AM.length) {\n            options.push(option_AM[i]);\n        }\n        if (i < option_PM.length) {\n            options.push(option_PM[i]);\n        }\n    }\n\n    return options;\n};\n\n  const renderTimeOptions = (defaultValue) => {\n    const timeOptions = generateTimeOptions();\n\n    return (\n      <>\n        <option value={defaultValue}>{defaultValue}</option>\n        {timeOptions.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <Row>\n      <Col>\n        <Form.Group>\n          <Form.Label>Start Time</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => handleSelect(e.target.value, null)}\n            style={{\n              background: \"transparent\",\n              borderWidth: 1,\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n          >\n            {renderTimeOptions(startTime_i)}\n          </Form.Control>\n        </Form.Group>\n      </Col>\n      <Col>\n        <Form.Group>\n          <Form.Label>End Time</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => handleSelect(null, e.target.value)}\n            style={{\n              background: \"transparent\",\n              borderWidth: 1,\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n          >\n            {renderTimeOptions(endTime_i)}\n          </Form.Control>\n        </Form.Group>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TimeRange;\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { LinearProgress, Button as MuiButton } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { db } from \"../config\";\nimport {\n  doc,\n  getDoc,\n  addDoc,\n  updateDoc,\n  collection,\n  query,\n  where,\n  getDocs,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { COLLECTIONS, DRAFT_COLLECTIONS, LEVELS } from \"../constants\";\nimport ImageUpload from \"./ImageUpload\";\nimport { STORAGES } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport danceStyles from \"../danceStyles.json\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport TimeRange from \"./TimeRange\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport cities from '../cities.json';\nimport { postData } from \"../utils/common\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { isEqual } from 'lodash';\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\nconst DRAFT_INTERVAL_TIME = 1000 * 10;\n\nfunction OpenClassAdd({ instructors, studioId, setOpenClass }) {\n  const showSnackbar = useSnackbar();\n  const [newOpenClassId, setNewOpenClassId] = useState(\"\");\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [selectedInstructors, setSelectedInstructors] = useState([]);\n  const [selectedDanceStyles, setSelectedDanceStyles] = useState([]);\n\n  const instructorNamesWithIds = instructors.map(\n    (instructor) => `${instructor.name} - ${instructor.id}`\n  );\n\n  const danceStylesOptions = danceStyles.danceStyles;\n  const currentCity = localStorage.getItem(FILTER_LOCATION_KEY) || \"\";\n\n  const [isReady, setIsReady] = useState(false);\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n  const [selectedStudio, setSelectedStudio] = useState(null);\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [openClassTime, setOpenClassTime] = useState(\"\");\n  const [openClassDate, setOpenClassDate] = useState(dayjs(new Date()));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [step, setStep] = useState(1);\n  const [description, setDescription] = useState('');\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleDanceStylesChange = (event, value) => {\n    setSelectedDanceStyles(value);\n  };\n\n  const handleDurationChange = (event, value) => {\n    setSelectedDuration(value);\n  };\n\n  const handleLevelChange = (event, value) => {\n    setSelectedLevel(value);\n  };\n\n  const handleSelectStudio = (event, value) => {\n    setSelectedStudio(value);\n  };\n\n  const handleInstructorChange = (event, value) => {\n    setSelectedInstructors(value);\n  };\n\n  const isValidInputs = (form) => {\n    let validationFailed = true;\n\n    if (\n      !form.openClassName.value ||\n      !form.capacity.value ||\n      !description ||\n      !selectedDanceStyles?.length ||\n      !selectedInstructors?.length ||\n      !selectedStudio ||\n      !selectedDuration ||\n      !selectedLevel ||\n      !openClassTime ||\n      !openClassDate\n    )\n      validationFailed = false;\n\n    return validationFailed;\n  };\n\n  const resetDraft = async () => {\n    const q = query(\n      collection(db, DRAFT_COLLECTIONS.DRAFT_OPEN_CLASSES),\n      where(\"UserId\", \"==\", JSON.parse(localStorage.getItem(\"userInfo\")).UserId)\n    );\n\n    const querySnapshot = await getDocs(q);\n\n    if (!querySnapshot.empty) {\n      let studios = [];\n\n      querySnapshot.forEach((doc) => {\n        studios.push({ id: doc.id, ...doc.data() });\n      });\n\n      let foundStudio = studios[0];\n\n      const studioRef = doc(\n        db,\n        DRAFT_COLLECTIONS.DRAFT_OPEN_CLASSES,\n        foundStudio.id\n      );\n\n      await deleteDoc(studioRef);\n    }\n  };\n\n  const handleAddOpenClass = async (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (!isValidInputs(form)) {\n      showSnackbar(\"Please fill all the fields.\", \"error\");\n      return;\n    }\n\n    try {\n      const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\")).email;\n      const dbPayload = {\n        openClassName: event.target.openClassName.value,\n        danceStyles: selectedDanceStyles,\n        instructors: selectedInstructors\n          ? selectedInstructors?.map?.(\n              (instructor) => instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n            )\n          : null,\n        author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n        UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n        creatorEmail: currentUserEmail,\n        StudioId: selectedStudio\n          ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n          : null,\n        duration: selectedDuration,\n        level: selectedLevel,\n        time: openClassTime,\n        date: openClassDate.format(\"YYYY-MM-DD\"),\n        capacity: event.target.capacity.value,\n        description: description,\n        active: true,\n        youtubeViedoLink: event.target.youtubeViedoLink.value,\n      };\n\n      setIsSubmitting(true);\n\n      const notifyEmails = currentUserEmail;\n      const metaData = {\n        entity_name: dbPayload.openClassName,\n        time: dbPayload.time,\n        date: dbPayload.date,\n        StudioId : dbPayload.StudioId\n      } \n      const response = await postData(dbPayload, COLLECTIONS.OPEN_CLASSES, notifyEmails, metaData) ;\n      if (response.ok) {\n        const result = await response.json();\n        setNewOpenClassId(result.id);\n        setOpenClass((prev) => [...prev, { id: result.id, ...dbPayload }]);\n        clearForm(form);\n        resetDraft();\n        showSnackbar(\"Open class successfully added.\", \"success\");\n        setStep((prev) => prev + 1);\n      }\n\n    } catch (error) {\n      console.error(\"Error adding open class: \", error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const clearForm = (form) => {\n    form.reset();\n    setSelectedDanceStyles([]);\n    setSelectedInstructors([]);\n    setSelectedStudio(null);\n    setSelectedDuration(\"\");\n    setSelectedLevel(\"\");\n    setOpenClassTime(\"\");\n    setOpenClassDate(dayjs(new Date()));\n    setDescription('');\n  };\n\n  const handleTimeSelect = (startTime, endTime) => {\n    const [currentStartTime, currentEndTime] = openClassTime.split(\" - \");\n    let newTime = `${currentStartTime} - ${currentEndTime}`;\n\n    if (startTime !== null) newTime = `${startTime} - ${currentEndTime}`;\n    if (endTime !== null) newTime = `${currentStartTime} - ${endTime}`;\n\n    setOpenClassTime(newTime);\n  };\n\n  useEffect(() => {\n    async function main() {\n      const form = document.getElementById(\"addStudioForm\");\n\n      try {\n        const q = query(\n          collection(db, DRAFT_COLLECTIONS.DRAFT_OPEN_CLASSES),\n          where(\n            \"UserId\",\n            \"==\",\n            JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n          )\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n          let openClasses = [];\n\n          querySnapshot.forEach((doc) => {\n            openClasses.push({ id: doc.id, ...doc.data() });\n          });\n\n          let foundOpenClass = openClasses[0];\n\n          form.openClassName.value = foundOpenClass?.openClassName || \"\";\n          form.capacity.value = foundOpenClass?.capacity || 0;\n          setDescription(foundOpenClass?.description || \"\");\n\n          setSelectedDanceStyles(\n            foundOpenClass?.danceStyles?.length\n              ? foundOpenClass.danceStyles\n              : []\n          );\n\n          setSelectedInstructors(\n            instructors\n              .filter((instructor) =>\n                foundOpenClass?.instructors.includes(instructor.id)\n              )\n              .map((instructor) => `${instructor.name} - ${instructor.id}`)\n          );\n\n          const studios = studioId.map((studio) => studio.split(\":\")[1].trim());\n          const currentStudioIndex = studios.findIndex(\n            (studio) => studio === foundOpenClass?.StudioId\n          );\n          if (currentStudioIndex > 0)\n            setSelectedStudio(studioId[currentStudioIndex]);\n\n          setSelectedDuration(foundOpenClass?.duration || \"\");\n\n          setSelectedLevel(foundOpenClass?.level || \"\");\n\n          setOpenClassTime(foundOpenClass?.time || \"\");\n\n          setOpenClassDate(dayjs(foundOpenClass?.date || Date.now()));\n        } else {\n          await addDoc(collection(db, DRAFT_COLLECTIONS.DRAFT_OPEN_CLASSES), {\n            openClassName: form.openClassName?.value || \"\",\n            capacity : form.capacity?.value || 0,\n            description: description ,\n            danceStyles: selectedDanceStyles,\n            instructors: selectedInstructors\n              ? selectedInstructors?.map?.(\n                  (instructor) =>\n                    instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n                )\n              : null,\n            author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n            UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n            creatorEmail: JSON.parse(localStorage.getItem(\"userInfo\")).email,\n            StudioId: selectedStudio\n              ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n              : null,\n            duration: selectedDuration,\n            level: selectedLevel,\n            time: openClassTime,\n            date: openClassDate.format(\"YYYY-MM-DD\"),\n          });\n        }\n\n        setIsReady(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    main();\n  }, []);\n\n  useEffect(() => {\n    let intervalId = null;\n    let previousState = null;\n    async function main() {\n      const form = document.getElementById(\"addStudioForm\");\n\n      try {\n        const q = query(\n          collection(db, DRAFT_COLLECTIONS.DRAFT_OPEN_CLASSES),\n          where(\n            \"UserId\",\n            \"==\",\n            JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n          )\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n          let openClasses = [];\n\n          querySnapshot.forEach((doc) => {\n            openClasses.push({ id: doc.id, ...doc.data() });\n          });\n\n          let foundOpenClasses = openClasses[0];\n\n          const openClassRef = doc(\n            db,\n            DRAFT_COLLECTIONS.DRAFT_OPEN_CLASSES,\n            foundOpenClasses.id\n          );\n\n          intervalId = setInterval(async () => {\n            try {\n              const currentState ={\n                openClassName: form.openClassName?.value || \"\",\n                capacity: form.capacity?.value || 0,\n                description: description ,\n                danceStyles: selectedDanceStyles,\n                instructors: selectedInstructors\n                  ? selectedInstructors?.map?.(\n                      (instructor) =>\n                        instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n                    )\n                  : null,\n                StudioId: selectedStudio\n                  ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n                  : null,\n                duration: selectedDuration,\n                level: selectedLevel,\n                time: openClassTime,\n                date: openClassDate.format(\"YYYY-MM-DD\"),\n              }\n\n              // Check if the current state is different from the previous state\n              if (!isEqual(previousState, currentState)) {\n                try {\n                  await updateDoc(openClassRef, currentState);\n                  previousState = currentState; // Update previous state after successful save\n                  console.log(\"Next AutoSave in\",DRAFT_INTERVAL_TIME)\n                } catch (error) {\n                  console.error(error);\n                }\n              }else{\n                  console.log(\"Nothing for Autosave to save\")\n              }\n            } catch (error) {\n              console.error(error);\n            }\n          }, DRAFT_INTERVAL_TIME);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (isReady) main();\n\n    return () => clearInterval(intervalId);\n  }, [\n    isReady,\n    selectedDanceStyles,\n    selectedInstructors,\n    selectedStudio,\n    selectedDuration,\n    selectedLevel,\n    openClassTime,\n    openClassDate,\n    description\n  ]);\n\n  useEffect(() => {\n    if (isDarkModeOn) {\n      const toolbarEle = document.getElementsByClassName(\"ql-toolbar ql-snow\")[0]\n      toolbarEle.style.backgroundColor = \"white\";\n\n      const inputEle = document.getElementsByClassName(\"ql-container ql-snow\")[0];\n      inputEle.style.backgroundColor = \"white\";\n\n      const editEle = document.getElementsByClassName(\"ql-editor \")[0];\n      console.log(editEle);\n      inputEle.style.color = \"black\";      \n    }\n  }, [isDarkModeOn]);\n\n  return (\n    <div>\n      {step === 1 && (\n        <Form\n          id=\"addStudioForm\"\n          onSubmit={handleAddOpenClass}\n          style={{\n            backgroundColor: isDarkModeOn ? \"#202020\" : \"\",\n            color: isDarkModeOn ? \"white\" : \"black\",\n          }}\n        >\n          <Form.Group controlId=\"formBasicAdd\">\n            <div>\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Open Class Name</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"textarea\"\n                    placeholder=\"Enter open class name\"\n                    name=\"openClassName\"\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Dance Styles</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      multiple\n                      id=\"tags-standard\"\n                      options={danceStylesOptions}\n                      value={selectedDanceStyles}\n                      onChange={handleDanceStylesChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Dance Styles\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Names of Instructors</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      multiple\n                      id=\"tags-standard\"\n                      options={instructorNamesWithIds}\n                      value={selectedInstructors}\n                      onChange={handleInstructorChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Instructors\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Duration (in hours)</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\n                      value={selectedDuration}\n                      onChange={handleDurationChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Duration\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <TimeRange\n                    defaultTime={openClassTime || \"12:00 PM - 01:00 PM\"}\n                    handleSelect={handleTimeSelect}\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Date</Form.Label>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DemoContainer components={[\"DatePicker\"]}>\n                      <ThemeProvider theme={darkTheme}>\n                        <CssBaseline />\n                        <DatePicker\n                          sx={{ width: \"100%\" }}\n                          value={openClassDate}\n                          onChange={(newValue) => setOpenClassDate(newValue)}\n                        />\n                      </ThemeProvider>\n                    </DemoContainer>\n                  </LocalizationProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Level</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={[LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]}\n                      value={selectedLevel}\n                      onChange={handleLevelChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Level\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Maximum capacity</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"number\"\n                    placeholder=\"Enter capacity\"\n                    name=\"capacity\"\n                  />\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Studio</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={studioId}\n                      value={selectedStudio}\n                      onChange={handleSelectStudio}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Studio\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                <Form.Label>Youtube video link</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"text\"\n                    placeholder=\"Enter youtube video link\"\n                    name=\"youtubeViedoLink\"\n                  />\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Brief Description</Form.Label>\n                  <ReactQuill\n                    theme=\"snow\"\n                    placeholder=\"Enter Description\"\n                    value={description}\n                    onChange={setDescription}\n                  />\n                </Col>\n              </Row>\n\n              <hr></hr>\n\n              <Row>\n                <Col xs={6}></Col>\n                <Col xs={6} className=\"d-flex justify-content-end\">\n                  <MuiButton\n                    variant=\"contained\"\n                    style={{\n                      color: \"white\",\n                      backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                    }}\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    Next\n                  </MuiButton>\n                </Col>\n              </Row>\n            </div>\n          </Form.Group>\n        </Form>\n      )}\n      {isSubmitting && <LinearProgress />}\n      {step === 2 && (\n        <>\n          <Row>\n            <Col>\n              <ImageUpload\n                entityId={newOpenClassId}\n                title={\"Open Class Images\"}\n                storageFolder={STORAGES.OPENCLASSICON}\n                maxImageCount={1}\n              ></ImageUpload>\n            </Col>\n          </Row>\n          <Row style={{ margin: \"1rem 0\" }}>\n            <Col style={{ textAlign: \"right\" }}>\n              <MuiButton\n                variant=\"contained\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                }}\n                onClick={() => setStep((prev) => prev - 1)}\n              >\n                Done\n              </MuiButton>\n            </Col>\n          </Row>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default OpenClassAdd;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { LinearProgress, Button as MuiButton } from \"@mui/material\";\nimport { db } from \"../config\";\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { COLLECTIONS, LEVELS } from \"../constants\";\nimport ImageUpload from \"./ImageUpload\";\nimport { STORAGES } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport danceStyles from \"../danceStyles.json\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport TimeRange from \"./TimeRange\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport cities from '../cities.json';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { putData } from \"../utils/common\";\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\n\nfunction OpenClassUpdate({ openClassId, instructors, studioId }) {\n  const currentCity = localStorage.getItem(FILTER_LOCATION_KEY) || \"\";\n\n  const showSnackbar = useSnackbar();\n\n  const [selectedStudio, setSelectedStudio] = useState(null);\n  const [selectedInstructors, setSelectedInstructors] = useState([]);\n\n  const danceStylesOptions = danceStyles.danceStyles;\n  const [selectedDanceStyles, setSelectedDanceStyles] = useState([]);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const [selectedDuration, setSelectedDuration] = useState(\"\");\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [openClassTime, setOpenClassTime] = useState(\"\");\n  const [openClassDate, setOpenClassDate] = useState(dayjs(new Date()));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [description, setDescription] = useState('');\n\n  const instructorNamesWithIds = instructors.map(\n    (instructor) => `${instructor.name} - ${instructor.id}`\n  );\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleDanceStylesChange = (event, value) => {\n    setSelectedDanceStyles(value);\n  };\n\n  const [selectedOpenClassId, setSelectedOpenClassId] = useState(\"\");\n  const [selectedOpenClass, setSelectedOpenClass] = useState(null);\n\n  const handleSelectStudio = async (event) => {\n    event.preventDefault();\n    const selected = event.target.value;\n    const selectedId = selected.split(\":\").pop().trim();\n    setSelectedOpenClassId(selectedId);\n    try {\n      const studioDoc = await getDoc(\n        doc(db, COLLECTIONS.OPEN_CLASSES, selectedId)\n      );\n      if (studioDoc.exists) {\n        setSelectedOpenClass(studioDoc.data());\n      } else {\n        setSelectedOpenClass(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching Open Class data:\", error, selectedId);\n    }\n  };\n\n  const isValidInputs = (form) => {\n    let validationFailed = true;\n    if (\n      !form.openClassName.value ||\n      !form.capacity.value ||\n      !description ||\n      !selectedDanceStyles?.length ||\n      !selectedInstructors?.length ||\n      !selectedStudio ||\n      !selectedDuration ||\n      !selectedLevel ||\n      !openClassTime ||\n      !openClassDate\n    )\n      validationFailed = false;\n\n    return validationFailed;\n  };\n\n  const handleUpdateStudio = async (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (!selectedOpenClassId) return;\n\n    if (!isValidInputs(form)) {\n      showSnackbar(\"Please fill all the fields.\", \"error\");\n      return;\n    }\n\n    try {\n      const dbPayload = {\n        openClassName: form.openClassName.value,\n        capacity: form.capacity.value,\n        description: description,\n        danceStyles: selectedDanceStyles,\n        instructors: selectedInstructors\n          ? selectedInstructors?.map?.(\n              (instructor) => instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n            )\n          : null,\n        author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n        UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n        creatorEmail: JSON.parse(localStorage.getItem(\"userInfo\")).email,\n        StudioId: selectedStudio\n          ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n          : null,\n        duration: selectedDuration,\n        level: selectedLevel,\n        time: openClassTime,\n        date: openClassDate.format(\"YYYY-MM-DD\"),\n        youtubeViedoLink: form.youtubeViedoLink.value,\n      };\n\n      setIsSubmitting(true);\n\n      const response = await putData(dbPayload, COLLECTIONS.OPEN_CLASSES, selectedOpenClassId) \n      if (response.ok) {\n        clearForm(form);\n        showSnackbar(\"Open class successfully updated.\", \"success\");\n      }else{\n        showSnackbar(`Error ${response}.`, \"error\");\n      }\n\n    } catch (error) {\n      console.error(\"Error updating Open Class: \", error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n    document.getElementById(\"updateStudioForm\").reset();\n  };\n\n  const clearForm = (form) => {\n    form.reset();\n    setSelectedDanceStyles([]);\n    setSelectedInstructors([]);\n    setSelectedStudio(null);\n    setSelectedDuration(\"\");\n    setSelectedLevel(\"\");\n    setOpenClassTime(\"\");\n    setOpenClassDate(dayjs(new Date()));\n    setSelectedOpenClass(null);\n    setSelectedOpenClassId(\"\");\n    setDescription('');\n  };\n\n  const handleDurationChange = (event, value) => {\n    setSelectedDuration(value);\n  };\n\n  const handleLevelChange = (event, value) => {\n    setSelectedLevel(value);\n  };\n\n  const handleSelectStudioValue = (event, value) => {\n    setSelectedStudio(value);\n  };\n\n  const handleInstructorChange = (event, value) => {\n    setSelectedInstructors(value);\n  };\n\n  const handleTimeSelect = (startTime, endTime) => {\n    const [currentStartTime, currentEndTime] = openClassTime.split(\" - \");\n    let newTime = `${currentStartTime} - ${currentEndTime}`;\n\n    if (startTime !== null) newTime = `${startTime} - ${currentEndTime}`;\n    if (endTime !== null) newTime = `${currentStartTime} - ${endTime}`;\n\n    setOpenClassTime(newTime);\n  };\n\n  useEffect(() => {\n    if (selectedOpenClass) {\n      const addedInstructors = instructors\n        .filter((instructor) =>\n          selectedOpenClass.instructors.includes(instructor.id)\n        )\n        .map((instructor) => `${instructor.name} - ${instructor.id}`);\n\n      setSelectedInstructors(addedInstructors);\n      if (selectedOpenClass && selectedOpenClass.danceStyles)\n        setSelectedDanceStyles(selectedOpenClass.danceStyles);\n\n      if (selectedOpenClass && selectedOpenClass.duration)\n        setSelectedDuration(selectedOpenClass.duration);\n\n      if (selectedOpenClass && selectedOpenClass.level)\n        setSelectedLevel(selectedOpenClass.level);\n\n      if (selectedOpenClass && selectedOpenClass.time)\n        setOpenClassTime(selectedOpenClass.time);\n\n      if (selectedOpenClass && selectedOpenClass.date)\n        setOpenClassDate(dayjs(selectedOpenClass.date));\n\n      if (selectedOpenClass && selectedOpenClass.StudioId) {\n        const studios = studioId.map((studio) => studio.split(\":\")[1].trim());\n        const currentStudioIndex = studios.findIndex(\n          (studio) => studio === selectedOpenClass.StudioId\n        );\n        setSelectedStudio(studioId[currentStudioIndex] || null);\n      }\n\n      setDescription(selectedOpenClass?.description || '');\n    }\n  }, [selectedOpenClass]);\n\n  useEffect(() => {\n    if (isDarkModeOn) {\n      const toolbarEle = document.getElementsByClassName(\"ql-toolbar ql-snow\")[0]\n      toolbarEle.style.backgroundColor = \"white\";\n\n      const inputEle = document.getElementsByClassName(\"ql-container ql-snow\")[0];\n      inputEle.style.backgroundColor = \"white\";\n\n      const editEle = document.getElementsByClassName(\"ql-editor \")[0];\n      console.log(editEle);\n      inputEle.style.color = \"black\";\n    }\n  }, [isDarkModeOn]);\n  \n  return (\n    <div\n      style={{\n        backgroundColor: isDarkModeOn ? \"#202020\" : \"\",\n        color: isDarkModeOn ? \"white\" : \"black\",\n      }}\n    >\n      <br></br>\n      <Form id=\"updateStudioForm\" onSubmit={handleUpdateStudio}>\n        <Form.Group controlId=\"formBasicUpdate\">\n          <Form.Label>Id</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"nameId\"\n            style={{\n              backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n              color: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n            onChange={handleSelectStudio}\n          >\n            <option value=\"\">Select a open class...</option>\n            {openClassId && openClassId.length > 0 ? (\n              openClassId.map((openClassItem) => (\n                <option key={openClassItem} value={openClassItem}>\n                  {openClassItem}\n                </option>\n              ))\n            ) : (\n              <option value=\"\">No open class yet!</option>\n            )}\n          </Form.Control>\n\n          <div>\n            <Row>\n              <Col md={6}>\n                <ImageUpload\n                  entityId={selectedOpenClassId}\n                  title={\"Open class Images\"}\n                  storageFolder={STORAGES.OPENCLASSICON}\n                  maxImageCount={1}\n                ></ImageUpload>\n              </Col>\n\n              <Col md={6}>\n              <br />\n                <Form.Label>Open Class Name</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={\n                    selectedOpenClass ? selectedOpenClass.openClassName : \"\"\n                  }\n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"textarea\"\n                  placeholder=\"Enter open class name\"\n                  name=\"openClassName\"\n                />\n\n                <br />\n\n                <Form.Label>Dance Styles</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    multiple\n                    id=\"tags-standard\"\n                    options={danceStylesOptions}\n                    value={selectedDanceStyles}\n                    onChange={handleDanceStylesChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Dance Styles\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n\n                <br />\n\n                <Form.Label>Names of Instructors</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    multiple\n                    id=\"tags-standard\"\n                    options={instructorNamesWithIds}\n                    value={selectedInstructors}\n                    onChange={handleInstructorChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Instructors\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Duration (in hours)</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\n                    value={selectedDuration}\n                    onChange={handleDurationChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Duration\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n\n              <Col md={6}>\n                <TimeRange\n                  defaultTime={openClassTime || \"00:00-00:00\"}\n                  handleSelect={handleTimeSelect}\n                />\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Date</Form.Label>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={[\"DatePicker\"]}>\n                    <ThemeProvider theme={darkTheme}>\n                      <CssBaseline />\n                      <DatePicker\n                        sx={{ width: \"100%\" }}\n                        value={openClassDate}\n                        onChange={(newValue) => setOpenClassDate(newValue)}\n                      />\n                    </ThemeProvider>\n                  </DemoContainer>\n                </LocalizationProvider>\n              </Col>\n              <Col md={6}>\n                <Form.Label>Level</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={[LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]}\n                    value={selectedLevel}\n                    onChange={handleLevelChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Level\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Maximum capacity</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={\n                    selectedOpenClass && selectedOpenClass.capacity !== undefined \n                      ? selectedOpenClass.capacity \n                      : \"\"\n                  } \n                  style={{\n                    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                  type=\"number\"\n                  placeholder=\"Enter capacity\"\n                  name=\"capacity\"\n                />\n              </Col>\n              <Col md={6}>\n                <Form.Label>Studio</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    id=\"tags-standard\"\n                    options={studioId}\n                    value={selectedStudio}\n                    onChange={handleSelectStudioValue}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Studio\"\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n            <Col md={6}>\n                  <Form.Label>Youtube video link</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    defaultValue={\n                      selectedOpenClass ? selectedOpenClass.youtubeViedoLink : \"\"\n                    }\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"text\"\n                    placeholder=\"Enter youtube video link\"\n                    name=\"youtubeViedoLink\"\n                  />\n                </Col>\n              <Col md={6}>\n                <Form.Label>Brief Description</Form.Label>\n                <ReactQuill\n                  theme=\"snow\"\n                  placeholder=\"Enter Description\"\n                  value={description}\n                  onChange={setDescription}\n                />\n              </Col>\n            </Row>\n\n            <hr></hr>\n\n            <Row>\n              <Col xs={6}></Col>\n              <Col xs={6} className=\"d-flex justify-content-end\">\n                <MuiButton\n                  variant=\"contained\"\n                  style={{\n                    color: \"white\",\n                    backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                  }}\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update Open Class\n                </MuiButton>\n              </Col>\n            </Row>\n          </div>\n        </Form.Group>\n        {isSubmitting && <LinearProgress />}\n      </Form>\n    </div>\n  );\n}\n\nexport default OpenClassUpdate;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../config\";\nimport {doc, getDoc, collection, where, getDocs, query, updateDoc} from \"firebase/firestore\";\nimport { COLLECTIONS } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport { useAuth } from \"../context/AuthContext\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport { Box } from \"@mui/material\";\nimport OpenClassAdd from \"../Components/OpenClassAdd\";\nimport OpenClassUpdate from \"../Components/OpenClassUpdate\";\nimport CardSlider from \"../Components/OpenClassCardSlider\";\n\nfunction CreatorOpenClass() {\n  const [studioId, setStudioId] = useState([]);\n  const [openClass, setOpenClass] = useState([]);\n  const [openClassId, setOpenClassId] = useState([]);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [instructors, setInstructors] = useState([]);\n  const [isCreator, setIsCreator] = useState(false);\n  const [premiumTill, setPremiumTill] = useState(-1);\n  const { currentUser } = useAuth();\n  const [value, setValue] = React.useState(\"1\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const activateOpenClass = async (openClassId) => {\n    try {\n      const docRef = doc(db, COLLECTIONS.OPEN_CLASSES, openClassId);\n      await updateDoc(docRef, { active: true });\n\n      setOpenClass((prev) =>\n        prev.map((openClass) =>\n          openClass.id === openClassId ? { ...openClass, active: true } : openClass\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deactivateOpenClass = async (openClassId) => {\n    try {\n      const docRef = doc(db, COLLECTIONS.OPEN_CLASSES, openClassId);\n      await updateDoc(docRef, { active: false });\n\n      setOpenClass((prev) =>\n        prev.map((openClass) =>\n          openClass.id === openClassId\n            ? { ...openClass, active: false }\n            : openClass\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const getCreatorMode = async (event) => {\n      try {\n        const userRef = doc(db, \"User\", currentUser.uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          if (userSnap.data() != null) {\n            setIsCreator(userSnap.data().CreatorMode);\n            setPremiumTill(userSnap.data().isPremium);\n          }\n        }\n      } catch (error) {\n        console.log(\" error\");\n      }\n    };\n\n    getCreatorMode();\n  }, [isCreator]);\n\n  useEffect(() => {\n    const fetchInstructors = async () => {\n      let userId = null;\n      if (\n        JSON.parse(localStorage.getItem(\"userInfo\")) &&\n        JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n      ) {\n        userId = JSON.parse(localStorage.getItem(\"userInfo\")).UserId;\n      }\n      if (!userId) {\n        alert(\"User not found\");\n        return;\n      }\n\n      const instructorRef = collection(db, COLLECTIONS.INSTRUCTORS);\n      const q = query(instructorRef, where(\"createdBy\", \"==\", userId));\n      const querySnapshot = await getDocs(q);\n\n      const instructorsList = [];\n      querySnapshot.forEach((doc) => {\n        instructorsList.push({\n          id: doc.id,\n          name: doc.data().name,\n        });\n      });\n      setInstructors(instructorsList);\n    };\n\n    fetchInstructors();\n  }, []);\n\n  useEffect(() => {\n    const getStudioCreated = async () => {\n      const q = query(\n        collection(db, COLLECTIONS.STUDIO),\n        where(\n          \"UserId\",\n          \"==\",\n          JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n        )\n      );\n\n      const querySnapshot = await getDocs(q);\n      const studiosOfUser = querySnapshot.docs\n        .filter((doc) => doc.data().studioName)\n        .map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n          };\n        });\n      setStudioId(\n        studiosOfUser.map(\n          (studio) => String(studio.studioName) + \" :\" + String(studio.id)\n        )\n      );\n    };\n\n    getStudioCreated();\n  }, []);\n\n  useEffect(() => {\n    const getOpenClassCreated = async () => {\n      const q = query(\n        collection(db, COLLECTIONS.OPEN_CLASSES),\n        where(\n          \"UserId\",\n          \"==\",\n          JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n        )\n      );\n      const querySnapshot = await getDocs(q);\n      const openClassesOfUserPromise = querySnapshot.docs\n        .filter((doc) => doc.data().openClassName)\n        .map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n          };\n        }).map(async (openClass) => {\n          const docRef = doc(db, COLLECTIONS.STUDIO, openClass?.StudioId);\n          const docSnap = await getDoc(docRef);\n          return { ...openClass, studioDetails: docSnap.data() };\n        });\n      const openClassesOfUser = await Promise.all(openClassesOfUserPromise)\n      localStorage.setItem(\"OpenCLassCreated\", JSON.stringify(openClassesOfUser));\n      setOpenClass(openClassesOfUser);\n      setOpenClassId(\n        openClassesOfUser.map(\n          (openClass) =>\n            String(openClass.openClassName) + \" :\" + String(openClass.id)\n        )\n      );\n    };\n\n    getOpenClassCreated();\n  }, [setOpenClass]);\n\n  useEffect(() => {\n    const openClassesOfUser =\n      JSON.parse(localStorage.getItem(\"OpenClassCreated\")) || [];\n      setOpenClass(openClassesOfUser);\n\n    const openClassIdList = openClassesOfUser.map(\n      (openClass) => `${openClass.openClassName} : ${openClass.id}`\n    );\n    setOpenClassId(openClassIdList);\n  }, [setOpenClassId]);\n\n  return (\n    <div>\n      <br></br>\n      {isCreator ? (\n        <>\n          <Box sx={{ width: \"100%\", typography: \"body1\" }}>\n            <TabContext value={value}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab\n                    style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                    label=\"Add Open Class\"\n                    value=\"1\"\n                  />\n                  <Tab\n                    style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                    label=\"Update Open Class\"\n                    value=\"2\"\n                  />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <OpenClassAdd\n                  instructors={instructors}\n                  studioId={studioId}\n                  setOpenClass={setOpenClass}\n                />\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <>\n                  <OpenClassUpdate\n                    instructors={instructors}\n                    openClassId={openClassId}\n                    studioId={studioId}\n                  />\n                </>\n              </TabPanel>\n            </TabContext>\n          </Box>\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {openClass.length > 0 && (\n        <>\n          <h3 style={{ color: isDarkModeOn ? \"white\" : \"black\" }}>\n            Your Open Classes:\n          </h3>\n          <CardSlider\n            dataList={openClass}\n            activateOpenClass={activateOpenClass}\n            deactivateOpenClass={deactivateOpenClass}\n            actionsAllowed\n          />\n        </>\n      )}\n    </div>\n  );\n}\nexport default CreatorOpenClass;\n","import { COLORS, SERVER_URLS,BASEURL_DEV,BASEURL_PROD } from \"../constants\";\n\nexport async function postData(dbPayload, collection_name, notify, metadata) {\n  const BASEURL = BASEURL_PROD;\n  const endpoint = 'crud/newEntity/'; // Define your endpoint here\n  const authToken = localStorage.getItem(\"authToken\");\n  try {\n    const response = await fetch(BASEURL + endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        data: dbPayload,\n        collection_name: collection_name,\n        notify: notify,\n        metadata : metadata,\n      }),\n    });\n\n    if (!response.ok) {\n      console.log('Error in postData:', response);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return response;\n  } catch (error) {\n    console.error('Error in postData:', error);\n    throw error;\n  }\n}\n\nexport async function putData(dbPayload, collection_name, entity_id, notify = null, metadata = null) {\n  const BASEURL = BASEURL_PROD;\n  const endpoint = `crud/updateEntity/${entity_id}`;\n  const authToken = localStorage.getItem(\"authToken\");\n  try {\n    const response = await fetch(BASEURL + endpoint, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        data: dbPayload,\n        collection_name: collection_name,\n        notify: notify,\n        metadata : metadata,\n      }),\n    });\n\n    if (!response.ok) {\n      console.log('Error in postData:', response);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return response;\n  } catch (error) {\n    console.error('Error in postData:', error);\n    throw error;\n  }\n}\n\nexport const getRandomColor = () => {\n  const colorKeys = Object.keys(COLORS);\n  const randomKey = colorKeys[Math.floor(Math.random() * colorKeys.length)];\n  return COLORS[randomKey];\n};\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const bookEntity = async (bookingData) => {\n  const url = `${SERVER_URLS.CLOUD}bookings/bookEntity/`; \n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userId: bookingData.userId,\n        entityType: bookingData.entityType,\n        entityId: bookingData.entityId,\n        associatedStudioId: bookingData.associatedStudioId,\n        emailLearner: bookingData.emailLearner,\n        personsAllowed: bookingData.personsAllowed,\n        pricePerPerson: bookingData.pricePerPerson,\n      })\n    });\n\n    const result = await response.json();\n    \n    if (response.ok) {\n      console.log('Booking successful:', result);\n      return result;  // Return the successful result\n    } else {\n      console.error('Booking failed:', result);\n      return result;  // Return null or an error message\n    }\n    \n  } catch (error) {\n    console.error('Error occurred while booking:', error);\n    return null;  // Return null or an error message\n  }\n};\n\n\n// Function to decode a Unicode (UTF-8) encoded string back to the original text\nexport const decodeUnicode = (unicodeString) => {\n  const utf8Encoded = unicodeString.split('').map((c) => c.charCodeAt(0));\n  const textDecoder = new TextDecoder();\n  return textDecoder.decode(new Uint8Array(utf8Encoded));\n};\n\nexport const convertToHtmlEntities= (text) =>{\n  return text.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\n      return '&#' + i.charCodeAt(0) + ';';\n  });\n}\n\nexport const getYoutubeVideoId = (link)=> {\n  console.log(\"MediaDisplay\", link)\n  if (!link){\n    return null\n  }\n  const text = link.trim();\n  const youtubeRegExp = /(?:https?:\\/\\/)?(?:www\\.|m\\.)?(?:youtube\\.com\\/(?:watch\\?v=|embed\\/|v\\/|shorts\\/)|youtu\\.be\\/)([\\w\\-]+)/;\n  const match = text.match(youtubeRegExp);\n  let videoId = null;\n\n  if (match) {\n    videoId = match[1];\n  }\n  console.log(\"MediaDisplay\", videoId)\n  return videoId\n}\n\nexport const formatDateString = (dateString = \"\") => {\n  // Split the input date string\n  const [year, month, day] = dateString.split('-');\n\n  // Create an array of month names\n  const monthNames = [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n      'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n  ];\n\n  // Determine the ordinal suffix for the day\n  const daySuffix = (day) => {\n      const lastDigit = day % 10;\n      const suffix = (lastDigit === 1 && day !== '11') ? 'st' :\n                     (lastDigit === 2 && day !== '12') ? 'nd' :\n                     (lastDigit === 3 && day !== '13') ? 'rd' : 'th';\n      return `${day}${suffix}`;\n  };\n\n  // Format and return the final date string\n  return `${daySuffix(day)} ${monthNames[parseInt(month) - 1]}, ${year}`;\n}\n\nexport const gradientStyles = [\n  { background: 'linear-gradient(to bottom right, #FFD700, #FFA500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #00BFFF, #1E90FF)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #32CD32, #008000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #FFA500, #FF4500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #DC143C, #8B0000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #000000, #2F4F4F)', color: 'white' },\n];"],"names":["ImageUpload","_ref","entityId","storageFolder","title","maxImageCount","updateMode","disable","showSnackbar","useSnackbar","selectedFiles","setSelectedFiles","useState","uploadedFiles","setUploadedFiles","newFiles","setNewFiles","deletedFiles","setDeletedFiles","isDarkModeOn","useSelector","selectDarkModeStatus","progressDelete","setProgressDelete","progressUpdate","setProgressUpdate","console","log","filesizes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","useEffect","fetchStudioImages","truncatedFiles","slice","alert","concat","calculateDelta","selectedFileIds","map","file","id","uploadedFileIds","imagesToDelete","filter","includes","newImages","async","folderPath","folderRef","ref","storage","fileList","listAll","files","Promise","all","items","downloadURL","getDownloadURL","fileRef","name","filename","fileURL","error","_jsx","className","style","display","width","justifyContent","children","flex","_jsxs","backgroundColor","STORAGES","STUDIOIMAGES","type","onChange","e","Array","from","target","updatedFiles","forEach","reader","FileReader","onloadend","push","shortid","filetype","fileimage","result","datetime","lastModifiedDate","toLocaleString","filesize","size","prevFiles","readAsDataURL","multiple","position","Card","sx","maxWidth","match","src","alt","maxHeight","objectFit","IconButton","disabled","onClick","window","confirm","fileToDelete","find","prevDeletedFiles","handleDeleteSelectedFile","top","right","DeleteIcon","color","CardContent","deleteAllImagesInFolder","uploadImages","deleteImages","hidden","value","max","defaultProps","WorkshopDetailsModal","_JSON$parse","_userDetails$BookedOp","_userDetails$BookedOp2","_dataItem$studioDetai","_dataItem$studioDetai2","_dataItem$studioDetai3","open","handleClose","dataItem","activateOpenClass","deactivateOpenClass","actionsAllowed","isBooking","setIsBooking","userDetails","setUserDetails","currentUser","JSON","parse","localStorage","getItem","UserId","isCreatorOfWorkshop","userRef","doc","db","userSnap","getDoc","exists","data","getUser","whatsappMessage","encodeURIComponent","isBooked","BookedOpenClasses","call","shareUrl","location","host","Modal","onClose","zIndex","Box","left","transform","overflow","xs","md","bgcolor","borderWidth","borderStyle","borderColor","boxShadow","p","borderRadius","Grid","container","spacing","rowGap","item","lg","minHeight","imageUrl","height","flexDirection","MUITypography","variant","component","dayjs","date","format","time","mt","venue","textAlign","Button","addDoc","collection","COLLECTIONS","BOOKINGS","StudioId","OpenClassId","bookingDate","Date","now","updateDoc","prev","_objectSpread","message","textTransform","fontSize","padding","border","lineHeight","my","columnGap","openClassName","danceStyles","dance","ShareButton","studioDetails","studioName","whatsappNumber","href","whatsAppImage","mobileNumber","callImage","dangerouslySetInnerHTML","__html","description","active","mr","OpenClassCard","_ref2","_dataItem$studioDetai4","setImageUrl","isWorkshopDetailsModalOpen","setIsWorkshopDetailsModalOpen","workshopId","url","readDocumentWithImageUrl","OPENCLASSICON","fetchImageUrl","cardStyle","marginRight","transition","_Fragment","cursor","handleWorkshopDetailsModalOpen","AspectRatio","ratio","loading","Stack","direction","bottom","form","index","Chip","marginLeft","marginBottom","trim","paddingTop","fontWeight","textColor","underline","overlay","extDecoder","background","Typography","level","noWrap","marginTop","handleWorkshopDetailsModalClose","dataList","deleteOpenClass","_defaultTime$split$","defaultTime","handleSelect","startTime_i","split","endTime_i","renderTimeOptions","defaultValue","timeOptions","generateTimeOptions","options","option_AM","option_PM","hours","minutes","formattedMinutes","toString","padStart","formattedHours","option","Row","Col","Form","Group","Label","Control","as","instructors","studioId","setOpenClass","newOpenClassId","setNewOpenClassId","selectedInstructors","setSelectedInstructors","selectedDanceStyles","setSelectedDanceStyles","instructorNamesWithIds","instructor","danceStylesOptions","isReady","setIsReady","selectedDuration","setSelectedDuration","selectedStudio","setSelectedStudio","selectedLevel","setSelectedLevel","openClassTime","setOpenClassTime","openClassDate","setOpenClassDate","isSubmitting","setIsSubmitting","step","setStep","setDescription","darkTheme","createTheme","palette","mode","clearForm","reset","document","getElementById","q","query","DRAFT_COLLECTIONS","DRAFT_OPEN_CLASSES","where","querySnapshot","getDocs","empty","_form$openClassName","_form$capacity","_selectedInstructors$2","_selectedStudio$split5","_selectedStudio$split6","_selectedStudio$split7","_selectedStudio$split8","capacity","_instructor$split2","_instructor$split2$ca","_instructor$split2$ca2","_instructor$split2$ca3","author","displayName","creatorEmail","email","duration","_foundOpenClass$dance","openClasses","foundOpenClass","currentStudioIndex","studio","findIndex","main","intervalId","previousState","foundOpenClasses","openClassRef","setInterval","_form$openClassName2","_form$capacity2","_selectedInstructors$3","_selectedStudio$split9","_selectedStudio$split10","_selectedStudio$split11","_selectedStudio$split12","currentState","_instructor$split3","_instructor$split3$ca","_instructor$split3$ca2","_instructor$split3$ca3","isEqual","err","clearInterval","getElementsByClassName","inputEle","editEle","onSubmit","event","preventDefault","validationFailed","isValidInputs","_selectedInstructors$","_selectedStudio$split","_selectedStudio$split2","_selectedStudio$split3","_selectedStudio$split4","currentUserEmail","dbPayload","_instructor$split","_instructor$split$cal","_instructor$split$cal2","_instructor$split$cal3","youtubeViedoLink","notifyEmails","metaData","entity_name","response","postData","OPEN_CLASSES","ok","json","studios","foundStudio","studioRef","deleteDoc","resetDraft","controlId","rows","placeholder","ThemeProvider","theme","CssBaseline","Autocomplete","handleDanceStylesChange","renderInput","params","TextField","handleInstructorChange","handleDurationChange","TimeRange","handleTimeSelect","startTime","endTime","currentStartTime","currentEndTime","newTime","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DatePicker","newValue","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","handleLevelChange","handleSelectStudio","ReactQuill","MuiButton","LinearProgress","margin","openClassId","selectedOpenClassId","setSelectedOpenClassId","selectedOpenClass","setSelectedOpenClass","addedInstructors","putData","selectedId","pop","studioDoc","openClassItem","handleSelectStudioValue","setStudioId","openClass","setOpenClassId","setInstructors","isCreator","setIsCreator","premiumTill","setPremiumTill","useAuth","setValue","React","uid","CreatorMode","isPremium","getCreatorMode","userId","instructorRef","INSTRUCTORS","instructorsList","fetchInstructors","STUDIO","studiosOfUser","docs","String","getStudioCreated","openClassesOfUserPromise","docRef","docSnap","openClassesOfUser","setItem","stringify","getOpenClassCreated","openClassIdList","typography","TabContext","borderBottom","TabList","handleChange","Tab","label","TabPanel","OpenClassAdd","OpenClassUpdate","CardSlider","collection_name","notify","metadata","BASEURL","BASEURL_PROD","authToken","fetch","method","headers","body","Error","status","entity_id","endpoint","bookEntity","SERVER_URLS","CLOUD","bookingData","entityType","associatedStudioId","emailLearner","personsAllowed","pricePerPerson","getYoutubeVideoId","link","videoId","formatDateString","dateString","year","month","day","lastDigit","suffix","daySuffix","parseInt"],"sourceRoot":""}