{"version":3,"file":"static/js/6853.5f26aef6.chunk.js","mappings":"mTAoKA,QAtJA,WAA2B,IAADA,EAAAC,EACxB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACrBC,QAAQC,IAAI,uBAAwBH,GACpC,MAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,KACfC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,OAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,OAClCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,GAE/CK,EAA0D,QAA/CpB,EAAGqB,KAAKC,MAAMC,aAAaC,QAAQ,oBAAY,IAAAxB,OAAA,EAA5CA,EAA8CyB,OAC5DC,EAA+D,QAA/CzB,EAAGoB,KAAKC,MAAMC,aAAaC,QAAQ,oBAAY,IAAAvB,OAAA,EAA5CA,EAA8C0B,MAGjEC,EACJZ,GAAYE,EACRF,EAASa,MAAQX,EAAiBY,EAAAA,GAAYC,4CAC9C,EAqFN,IA3CAC,EAAAA,EAAAA,YAAU,KAqCJ9B,IApCc+B,WAEhB,IACE,MAAMC,QAAaC,EAAAA,EAAAA,IAAaC,EAAAA,GAAYC,QAASnC,GAErD,GADAe,EAAYiB,GACRA,GAAQA,EAAKI,SAAU,CACzB,MAAMC,QAAsBJ,EAAAA,EAAAA,IAC1BC,EAAAA,GAAYI,OACZN,EAAKI,UAEPrB,GAAawB,IAAQ,IAAWA,EAAUF,mBAC5C,CACF,CAAE,MAAOG,GACPtC,QAAQsC,MAAM,gCAAiCA,GAC/ClC,EAAa,mCAAoC,QACnD,GAsBAmC,GAnBiBV,WACjB,IACE,MAAMW,QAAYC,EAAAA,EAAAA,IAChBC,EAAAA,GAASC,WACT7C,GAEFY,EACE8B,GACE,2EAEN,CAAE,MAAOF,GACPtC,QAAQsC,MAAM,4BAA6BA,GAC3C5B,EACE,2EAEJ,GAKAkC,GACF,GACC,CAAC9C,EAAUM,KAETQ,EACH,OACEiC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SACRC,UAEFP,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CAACC,MAAM,cAK9B,MAAMC,EAAkBC,mBACtB,4DAGF,OACEX,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACFU,QAAS,OACTC,UAAW,QACXJ,MAAOhD,EAAe,QAAU,SAChC8C,UAEFO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEV,SAAA,EAEzBP,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEb,UACvBP,EAAAA,EAAAA,KAACqB,EAAAA,EAAY,CACXC,iBAAkBvD,EAASuD,iBAC3B1D,SAAUA,EACV2D,QAASxD,EAASyD,YAAczD,EAAS0D,kBAG7CzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAAC3D,SAAUA,EAAUE,eAAgBA,EAAgBC,kBAAmBA,EAClFS,WAAYA,EAAYgD,WAxHnB3C,UACjB,IAAKb,EAGH,OAFAZ,EAAa,uBAAwB,gBACrCF,EAAS,UAGX,IACE,MAAMuE,EAAc,CAClBC,OAAQ1D,EACR2D,WAAY3C,EAAAA,GAAYC,QACxBnC,SAAUA,EACV8E,mBAAoBhE,EAASsB,SAC7B2C,aAAcvD,EACdR,eAAgBA,EAChBgE,eAAgBlE,EAASa,MACzBsD,oBAAqBrD,EAAAA,GAAYC,4CACjCH,WAAYA,GAGRwD,QAAeC,EAAAA,EAAAA,IAAWR,GAChC,GAAIO,GAAkC,MAAxBA,EAAOE,aACnB9E,EAAa,kBAAmB,gBAC3B,GAAI4E,GAAkC,MAAxBA,EAAOE,aAAsB,CAChD,MAAMC,EAAqBH,EAAOI,SAG5BC,EADO,IAAIC,KADoC,IAArBH,GAELI,iBAC3BnF,EAAc,8BAA6BiF,IAAiB,OAC9D,KAAO,CACL,MAAMG,EAAeR,EAChB,UAAS/D,KAAKwE,UAAUT,KACzB,6BACJ5E,EAAaoF,EAAc,QAC7B,CACF,CAAE,MAAOlD,GACPtC,QAAQsC,MAAMA,GACdlC,GAAkB,OAALkC,QAAK,IAALA,OAAK,EAALA,EAAOoD,UAAW,uBAAwB,QACzD,GAmF4Df,WAAY3C,EAAAA,GAAYC,WAIhFY,EAAAA,EAAAA,KAAC8C,EAAAA,EAAoB,CAAC/E,SAAUA,EAAU2C,gBAAiBA,QAKnE,C","sources":["Screens/CourseFullPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Grid, CircularProgress } from \"@mui/material\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { COLLECTIONS, STORAGES, ENTITY_FLAG } from \"../constants\"; // Adjust the import paths as necessary\nimport { readDocument, readDocumentWithImageUrl } from \"../utils/firebaseUtils\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { bookEntity } from \"../utils/common\";\n\nimport MediaDisplay from \"../Components/MediaDisplay\";\nimport EntityDetailsSection from \"../Components/EntityDetailsSection\";\nimport EntityBookingCard from \"../Components/EntityBookingCard\";\n\nfunction CourseFullPage() {\n  const { courseId } = useParams();\n  console.log(\"From CourseFullPage,\", courseId);\n  const navigate = useNavigate();\n  const showSnackbar = useSnackbar();\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [dataItem, setDataItem] = useState(null);\n  const [personsAllowed, setPersonsAllowed] = useState(1);\n\n  const currentUser = JSON.parse(localStorage.getItem(\"userInfo\"))?.UserId;\n  const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\"))?.email;\n\n  // Calculate Total Price\n  const totalPrice =\n    dataItem && personsAllowed\n      ? dataItem.price * personsAllowed + ENTITY_FLAG.INTERNET_CONV_CHARGES_WORKSHOPS_COURSES_INR\n      : 0;\n\n  const handleBook = async () => {\n    if (!currentUser) {\n      showSnackbar(\"Please login to book\", \"warning\");\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      const bookingData = {\n        userId: currentUser,\n        entityType: COLLECTIONS.COURSES,\n        courseId: courseId,\n        associatedStudioId: dataItem.StudioId,\n        emailLearner: currentUserEmail,\n        personsAllowed: personsAllowed,\n        pricePerPerson: dataItem.price,\n        internetConvCharges: ENTITY_FLAG.INTERNET_CONV_CHARGES_WORKSHOPS_COURSES_INR,\n        totalPrice: totalPrice,\n      };\n\n      const result = await bookEntity(bookingData);\n      if (result && result.nSuccessCode === 200) {\n        showSnackbar(\"Workshop booked\", \"success\");\n      } else if (result && result.nSuccessCode === 205) {\n        const timestampInSeconds = result.bookedAt;\n        const timestampInMilliseconds = timestampInSeconds * 1000;\n        const date = new Date(timestampInMilliseconds);\n        const formattedDate = date.toLocaleString();\n        showSnackbar(`Workshop already booked at ${formattedDate}`, \"info\");\n      } else {\n        const errorMessage = result\n          ? `Error: ${JSON.stringify(result)}`\n          : \"An unknown error occurred.\";\n        showSnackbar(errorMessage, \"error\");\n      }\n    } catch (error) {\n      console.error(error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n\n      try {\n        const data = await readDocument(COLLECTIONS.COURSES, courseId);\n        setDataItem(data);\n        if (data && data.StudioId) {\n          const studioDetails = await readDocument(\n            COLLECTIONS.STUDIO,\n            data.StudioId\n          );\n          setDataItem((prevData) => ({ ...prevData, studioDetails }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching workshop data:\", error);\n        showSnackbar(\"Failed to load workshop details.\", \"error\");\n      }\n    };\n\n    const fetchImage = async () => {\n      try {\n        const url = await readDocumentWithImageUrl(\n          STORAGES.COURSEICON,\n          courseId\n        );\n        setImageUrl(\n          url ||\n            \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      } catch (error) {\n        console.error(\"Error fetching image URL:\", error);\n        setImageUrl(\n          \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      }\n    };\n\n    if (courseId) {\n      fetchData();\n      fetchImage();\n    }\n  }, [courseId, showSnackbar]);\n\n  if (!dataItem) {\n    return (\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <CircularProgress color=\"primary\" />\n      </Box>\n    );\n  }\n\n  const whatsappMessage = encodeURIComponent(\n    \"Hey, I found your Course on nritya.co.in. I'm interested\"\n  );\n\n  return (\n    <Box\n      sx={{\n        padding: \"0rem\",\n        minHeight: \"100vh\",\n        color: isDarkModeOn ? \"white\" : \"black\",\n      }}\n    >\n      <Grid container spacing={2}>\n        {/* Workshop Image */}\n        <Grid item xs={12} lg={8}>\n          <MediaDisplay \n            youtubeViedoLink={dataItem.youtubeViedoLink} \n            imageUrl={imageUrl} \n            altText={dataItem.courseName || dataItem.workshopName} \n            />\n        </Grid>\n        <EntityBookingCard dataItem={dataItem} personsAllowed={personsAllowed} setPersonsAllowed={setPersonsAllowed}\n                totalPrice={totalPrice} handleBook={handleBook} entityType={COLLECTIONS.COURSES}/>\n        {/* Workshop Details */}\n\n        {/* Additional Workshop Details */}\n        <EntityDetailsSection dataItem={dataItem} whatsappMessage={whatsappMessage}/>\n      </Grid>\n\n    </Box>\n  );\n}\n\nexport default CourseFullPage;\n\n"],"names":["_JSON$parse","_JSON$parse2","courseId","useParams","console","log","navigate","useNavigate","showSnackbar","useSnackbar","isDarkModeOn","useSelector","selectDarkModeStatus","imageUrl","setImageUrl","useState","dataItem","setDataItem","personsAllowed","setPersonsAllowed","currentUser","JSON","parse","localStorage","getItem","UserId","currentUserEmail","email","totalPrice","price","ENTITY_FLAG","INTERNET_CONV_CHARGES_WORKSHOPS_COURSES_INR","useEffect","async","data","readDocument","COLLECTIONS","COURSES","StudioId","studioDetails","STUDIO","prevData","error","fetchData","url","readDocumentWithImageUrl","STORAGES","COURSEICON","fetchImage","_jsx","Box","sx","display","justifyContent","alignItems","height","children","CircularProgress","color","whatsappMessage","encodeURIComponent","padding","minHeight","_jsxs","Grid","container","spacing","item","xs","lg","MediaDisplay","youtubeViedoLink","altText","courseName","workshopName","EntityBookingCard","handleBook","bookingData","userId","entityType","associatedStudioId","emailLearner","pricePerPerson","internetConvCharges","result","bookEntity","nSuccessCode","timestampInSeconds","bookedAt","formattedDate","Date","toLocaleString","errorMessage","stringify","message","EntityDetailsSection"],"sourceRoot":""}