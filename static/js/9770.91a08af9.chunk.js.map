{"version":3,"file":"static/js/9770.91a08af9.chunk.js","mappings":"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","sources":["Components/CardSlider.js","Components/NStudioCard.js"],"sourcesContent":["import React from 'react';\nimport { Card as MuiCard } from '@mui/joy';\nimport { useState } from 'react';\nimport { Dialog, DialogContent, Button } from '@mui/material';\nimport CardCover from '@mui/joy/CardCover';\nimport ProductCard from './NStudioCard';\n\nconst CardSlider = ({ dataList, imgOnly = false }) => {\n  //console.log(\"Debug from CardSlider\", imgOnly);\n  //console.log(dataList);\n  const formattedDataList = Array.isArray(dataList) ? dataList : Object.values(dataList);\n  //console.log(formattedDataList)\n\n  const [open, setOpen] = useState(false);\n  const [selectedEntity, setSelectedEntity] = useState(null);\n\n  const handleOpen = (url) => {\n    console.log(url)\n    setSelectedEntity(url);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedEntity(null);\n  };\n\n  const cardHoverStyle = {\n    transform: 'scale(1.01)', // Scale up slightly on hover\n  };\n\n  return (\n    <div className=\"horizontal-scroll-wrapper no-important\">\n      {formattedDataList.map((entity, index) => (\n        imgOnly ? (\n          <a className=\"no-important\" key={index} onClick={() => handleOpen(entity)}>\n          <MuiCard\n            key={index}\n            style={{ marginRight: \"0.5rem\" }}\n            component=\"li\"\n            sx={{\n              height: 300,\n              width: 534,\n              '&:hover': {\n                ...cardHoverStyle,\n              },\n            }}\n          >\n            <CardCover>\n              <img\n                src={entity} // Use studio.iconUrl for the image source\n                loading=\"lazy\"\n                alt=\"Studio image\" // Use studioName for alt text\n              />\n            </CardCover>\n          </MuiCard>\n          </a>\n        ) : (\n\n          <a key={index} href={`#/studio/${entity.id}`}>\n            <ProductCard\n              key={entity.id}\n              data={entity}\n              img_src={entity.iconUrl}\n            />\n          </a>\n        )\n      ))}\n      <Dialog open={open} onClose={handleClose}>\n        {selectedEntity && (\n          <>\n            <DialogContent sx={{ padding: 0 }}>\n              <img\n                src={selectedEntity}\n                alt={\"Image\"}\n                style={{ maxWidth: '100%', height: 'auto' }}\n              />\n            </DialogContent>\n            <Button sx={{\n                          '&:hover': {\n                            backgroundColor: '#735EAB',\n                            color: 'white',\n                          }\n                        }} \n                        onClick={handleClose}>Close</Button>\n          </>\n        )}\n      </Dialog>\n    </div>\n\n  );\n};\n\nexport default CardSlider;\n","\nimport React from 'react';\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport Chip from '@mui/joy/Chip';\nimport Link from '@mui/joy/Link';\nimport Typography from '@mui/joy/Typography';\nimport { Stack } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { CHIP_LEVELS_DESIGN, COLORS, danceStylesColorChips } from '../constants';\nimport IconButton from '@mui/joy/IconButton';\nimport Favorite from '@mui/icons-material/Favorite';\n\n\nexport default function NStudioCard({img_src,data}) {\n    const isDarkModeOn = useSelector(selectDarkModeStatus);\n    \n    const studioId = data.id?data.id:data.studioId;\n\n    const cardStyle = {\n      backgroundColor: isDarkModeOn ? '#444' : 'white',\n      padding: '0px',\n      color: isDarkModeOn ? 'white' : 'black',\n      marginRight: \"10px\",\n      width: 320,\n      maxWidth: \"100%\",\n      boxShadow: 'lg',\n      transition: 'opacity 0.3s ease',\n    };\n  \n    const cardHoverStyle = {\n      transform: 'scale(1.01)',\n    };\n  \n  return (\n    <Card variant=\"solid\" sx={{\n      ...cardStyle,\n      '&:hover': cardHoverStyle,\n    }}>\n      \n        <AspectRatio ratio=\"1.78\" style={{ position: 'relative'}}>\n          <img\n            src={data && data.iconUrl ? data.iconUrl :\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: '100%', height: 'auto', overflow: 'hidden' }}\n            \n          />\n          <Stack direction=\"row\" spacing={2} style={{ position: 'absolute', bottom: 0, left: 0, padding: '1px' }}>\n        {data && data.danceStyles && typeof data.danceStyles === 'string' ? (data.danceStyles.split(\",\").slice(0, 3).map((form, index) => (\n        <Chip\n            key={index}\n            color={index % 2 === 0 ? \"danger\" : \"success\"}  \n            sx={{ marginBottom: \"10px\", fontSize: '0.8rem',  \n                    bgcolor: danceStylesColorChips[index].backgroundColor,\n                    color: danceStylesColorChips[index].color, \n            }}\n        >\n            {form.trim()}\n        </Chip>\n        ))):(\n            <Chip\n            key={10}\n            color={10 % 2 === 0 ? \"danger\" : \"success\"} \n            style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n        >\n            {\"No danceforms\"}\n        </Chip>\n        )}\n\n        </Stack>\n\n        <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", top: 0, left: 0, padding: \"1px\", paddingTop: \"1px\" }}\n          >\n            {data && data.freeTrialAvailable &&(\n            \n                <Chip\n                  key={1}\n                 \n                  sx={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                    bgcolor: COLORS.LIME.backgroundColor,  // Set the background color\n                    color: COLORS.LIME.color,  // Set the text color\n                  }}\n                >\n                  {'Free Trial Available'}\n                </Chip>\n              \n            )}\n          </Stack>\n\n        </AspectRatio>\n      <CardContent style={{padding:'10px'}}>\n        <Link\n          href={`#/studio/${studioId}`}\n          fontWeight=\"bold\"\n          color=\"neutral\"\n          textColor=\"text.primary\"\n          underline='none'\n          overlay\n          style={{color: isDarkModeOn?'white':'black'}}\n        >\n          {data && data.studioName?data.studioName:\"    \"}\n        </Link>\n        <Typography style={{color: isDarkModeOn?'white':'black'}} level=\"body-xs\">{data.street?data.street:\".  \"}</Typography>\n        <IconButton\n          hidden\n          aria-label=\"Like minimal photography\"\n          size=\"md\"\n          variant=\"solid\"\n          color=\"danger\"\n          sx={{\n            position: 'absolute',\n            zIndex: 2,\n            borderRadius: '50%',\n            right: '1rem',\n            bottom: '2rem',\n            transform: 'translateY(50%)',\n          }}\n        >\n          <Favorite />\n        </IconButton>\n        <Typography style={{color: isDarkModeOn ? 'white' : 'black'}}>\n            <span>⭐ {data && data.avgRating ? data.avgRating.toFixed(1) : \"Not rated yet\"}</span>\n            {data && data.minFee && (\n              <span style={{position: \"absolute\", right: 2}}>  Starts @₹{data.minFee}</span>\n            )}\n          </Typography>\n\n      </CardContent>\n    </Card>\n  );\n}"],"names":["_ref","dataList","imgOnly","formattedDataList","Array","isArray","Object","values","open","setOpen","useState","selectedEntity","setSelectedEntity","handleClose","cardHoverStyle","transform","_jsxs","className","children","map","entity","index","_jsx","onClick","handleOpen","url","console","log","MuiCard","style","marginRight","component","sx","height","width","CardCover","src","loading","alt","href","id","ProductCard","data","img_src","iconUrl","Dialog","onClose","_Fragment","DialogContent","padding","maxWidth","Button","backgroundColor","color","NStudioCard","isDarkModeOn","useSelector","selectDarkModeStatus","studioId","cardStyle","boxShadow","transition","Card","variant","AspectRatio","ratio","position","overflow","Stack","direction","spacing","bottom","left","danceStyles","split","slice","form","Chip","marginBottom","fontSize","bgcolor","danceStylesColorChips","trim","top","paddingTop","freeTrialAvailable","marginLeft","COLORS","LIME","CardContent","Link","fontWeight","textColor","underline","overlay","studioName","Typography","level","street","IconButton","hidden","size","zIndex","borderRadius","right","Favorite","avgRating","toFixed","minFee"],"sourceRoot":""}