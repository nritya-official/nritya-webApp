{"version":3,"file":"static/js/9195.3f843a9c.chunk.js","mappings":"iKAGA,MA2CA,EA3CqBA,IAAuC,IAAtC,UAAEC,EAAS,SAAEC,EAAQ,QAAEC,GAASH,EACpD,OAAOC,GACLG,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,SAAU,WACVC,cAAe,SACfC,OAAQ,EACRC,SAAU,SACVC,aAAc,OACdC,UAEFR,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFQ,UAAU,SACVC,IAAM,iCAAgCb,IACtCc,MAAOZ,GAAW,iBAClBG,GAAI,CACFC,SAAU,WACVS,IAAK,EACLC,KAAM,EACNC,MAAO,OACPT,OAAQ,OACRU,OAAQ,EACRR,aAAc,OAEhBS,MAAM,2FACNC,iBAAe,OAInBjB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFQ,UAAU,MACVC,IAAKZ,EACLoB,IAAKnB,GAAW,iBAChBG,GAAI,CACFY,MAAO,OACPT,OAAQ,OACRc,UAAW,QACXZ,aAAc,QAGnB,C,2XCqbH,QAxbA,WAA6B,IAADa,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1B,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,MACvBC,QAAQC,IAAI,yBAA0BH,GACtC,MAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,KACfC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BvC,EAAUwC,IAAeC,EAAAA,EAAAA,UAAS,OAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,OAClCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,IAC9CK,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,GAEzCO,EAA0D,QAA/C1B,EAAG2B,KAAKC,MAAMC,aAAaC,QAAQ,oBAAY,IAAA9B,OAAA,EAA5CA,EAA8C+B,OAC5DC,EAA+D,QAA/C/B,EAAG0B,KAAKC,MAAMC,aAAaC,QAAQ,oBAAY,IAAA7B,OAAA,EAA5CA,EAA8CgC,MAIjEC,EACJd,GAAYE,EACRF,EAASe,MAAQb,EAAiBc,EAAAA,GAClC,EAyFN,GA9CA3B,QAAQC,IAAI,sCACZ2B,EAAAA,EAAAA,YAAU,KAuCJ9B,IAtCc+B,WAChB7B,QAAQC,IAAI,8BACZ,IACE,MAAM6B,QAAaC,EAAAA,EAAAA,IAAaC,EAAAA,GAAYC,UAAWnC,GAIvD,GAHAE,QAAQC,IAAI,kCAAmC6B,GAC/ClB,EAAYkB,GACZ9B,QAAQC,IAAI,oCAAqC6B,GAC7CA,GAAQA,EAAKI,SAAU,CACzB,MAAMC,QAAsBJ,EAAAA,EAAAA,IAC1BC,EAAAA,GAAYI,OACZN,EAAKI,UAEPtB,GAAayB,IAAQ,IAAWA,EAAUF,mBAC5C,CACF,CAAE,MAAOG,GACPtC,QAAQsC,MAAM,gCAAiCA,GAC/ClC,EAAa,mCAAoC,QACnD,GAsBAmC,GAnBiBV,WACjB,IACE,MAAMW,QAAYC,EAAAA,EAAAA,IAChBC,EAAAA,GAASC,aACT7C,GAEFW,EACE+B,GACE,2EAEN,CAAE,MAAOF,GACPtC,QAAQsC,MAAM,4BAA6BA,GAC3C7B,EACE,2EAEJ,GAKAmC,GACF,GACC,CAAC9C,EAAYM,KAEXO,EACH,OACExC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACFwE,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZvE,OAAQ,SACRG,UAEFR,EAAAA,EAAAA,KAAC6E,EAAAA,EAAgB,CAACC,MAAM,cAK9B,MAAMC,EAAkBC,mBACtB,4DAQIC,EAAmBA,KACvBpC,GAAe,EAAM,EAGvB,OACEqC,EAAAA,EAAAA,MAACjF,EAAAA,EAAG,CACFC,GAAI,CACFiF,QAAS,OACTC,UAAW,QACXN,MAAO3C,EAAe,QAAU,SAChC3B,SAAA,EAEF0E,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE/E,SAAA,EAC3BR,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAElF,UACnBR,EAAAA,EAAAA,KAAC2F,EAAAA,EAAY,CACb9F,UAAW2C,EAAS3C,UACpBC,SAAUA,EACVC,QAASyC,EAASoD,kBAItB5F,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAElF,UACvB0E,EAAAA,EAAAA,MAACjF,EAAAA,EAAG,CACFC,GAAI,CACF2F,QAAS1D,EAAe,UAAY,UACpC2D,EAAG,EACHvF,aAAc,MACdmE,QAAS,OACTqB,cAAe,SACf1F,OAAQ,OACRsE,eAAgB,iBAChBnE,SAAA,EAGF0E,EAAAA,EAAAA,MAACjF,EAAAA,EAAG,CAAAO,SAAA,EACFR,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,CAACC,QAAQ,KAAKC,MAAO,CAACpB,MAAO3C,EAAe,QAAU,QAASgE,cAAe,OAAOC,eAAgB,QAAQ5F,SACxHgC,EAASoD,cAAgB,mBAE5B5F,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,CAACC,QAAQ,YAAWC,MAAO,CAACpB,MAAO3C,EAAe,QAAU,SAAS3B,SAC/EgC,EAAS6D,QAEbrG,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,CAACC,QAAQ,WAAWC,MAAO,CAACpB,MAAO3C,EAAe,QAAU,SAAS3B,SAAEgC,EAAS8D,QAE9FtG,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,CAACC,QAAQ,QAAQ/F,GAAI,CAAEqG,GAAI,OAAOzB,MAAO3C,EAAe,QAAU,SAAU3B,SACvFgC,EAASgE,MAAQ,aAItBtB,EAAAA,EAAAA,MAACjF,EAAAA,EAAG,CACFC,GAAI,CACFqG,GAAI,OACJ7B,QAAS,OACTqB,cAAe,SACfU,IAAK,OACL3B,MAAO3C,EAAe,QAAU,SAChC3B,SAAA,EAEJR,EAAAA,EAAAA,KAAA,SAAOkG,MAAO,CAAEpF,MAAO,OAAQ4F,eAAgB,YAAalG,UAClE0E,EAAAA,EAAAA,MAAA,SAAA1E,SAAA,EACE0E,EAAAA,EAAAA,MAAA,MAAA1E,SAAA,EACER,EAAAA,EAAAA,KAAA,MAAIkG,MAAO,CAAEf,QAAS,MAAOL,MAAO3C,EAAe,QAAU,SAAU3B,SACpEgC,GAAYA,EAASe,QACpBvD,EAAAA,EAAAA,KAAA,QAAAQ,SAAM,wBAGVR,EAAAA,EAAAA,KAAA,MAAIkG,MAAO,CAAEf,QAAS,MAAOL,MAAO3C,EAAe,QAAU,SAAU3B,SACpEgC,GAAYA,EAASe,QACpB2B,EAAAA,EAAAA,MAAA,QAAA1E,SAAA,CAAM,UAAGgC,EAASe,eAIxB2B,EAAAA,EAAAA,MAAA,MAAA1E,SAAA,EACCR,EAAAA,EAAAA,KAAA,MAAIkG,MAAO,CAAEf,QAAS,MAAOL,MAAO3C,EAAe,QAAU,SAAU3B,UACpER,EAAAA,EAAAA,KAAA,QAAME,GAAI,CAAE4E,MAAO3C,EAAe,QAAU,SAAU3B,SAAC,iBAEzDR,EAAAA,EAAAA,KAAA,MAAIkG,MAAO,CAAEf,QAAS,OAAQ3E,UAC5BR,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEwE,QAAS,OAAQE,WAAY,SAAU6B,IAAK,QAASjG,UAE9D0E,EAAAA,EAAAA,MAACyB,EAAAA,EAAK,CAACC,UAAU,MAAMrB,QAAS,EAAGX,WAAW,SAAQpE,SAAA,EACpDR,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CACHZ,QAAQ,YACRa,QAASA,IAAMnE,GAAmBoE,GAASC,KAAKC,IAAIF,EAAO,EAAG,KAC9DG,SAAUxE,GAAkB,EAC5BxC,GAAI,CACJiH,KAAM,EACN9G,OAAQ,OACRU,OAAQ,YACRqG,YAAajF,EAAe,QAAU,QACtC2C,MAAO3C,EAAe,QAAU,QAChCkF,gBAAiB,MACjB,UAAW,CACPA,gBAAiB,YAEnB7G,UAEFR,EAAAA,EAAAA,KAACsH,EAAAA,IAAO,OAGZtH,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CACHZ,QAAQ,YACR/F,GAAI,CACJiH,KAAM,EACN9G,OAAQ,OACRU,OAAQ,YACRqG,YAAajF,EAAe,QAAU,QACtC2C,MAAO3C,EAAe,QAAU,QAChCkF,gBAAiB,2BACjBE,eAAgB,aAChBC,UAAW,gCACX,UAAW,CACPH,gBAAiB,6BAEnB7G,SAEDkC,KAGL1C,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CACHZ,QAAQ,YACRa,QAASA,IAAMnE,GAAmBoE,GAASC,KAAKS,IAAIV,EAAO,EAAG,KAC9DG,SAAUxE,GAAkB,EAC5BxC,GAAI,CACJiH,KAAM,EACN9G,OAAQ,OACRU,OAAQ,YACRqG,YAAajF,EAAe,QAAU,QACtC2C,MAAO3C,EAAe,QAAU,QAChCkF,gBAAiB,QACjB,UAAW,CACPA,gBAAiB,cAEnB7G,UAEFR,EAAAA,EAAAA,KAAC0H,EAAAA,IAAM,sBAUb1H,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CACLZ,QAAQ,YACRa,QAjQKpD,UACjB,IAAKZ,EAGH,OAFAb,EAAa,uBAAwB,gBACrCF,EAAS,UAGX,IACE,MAAM4F,EAAc,CAClBC,OAAQ9E,EACR+E,WAAYhE,EAAAA,GAAYC,UACxBgE,SAAUnG,EACVoG,mBAAoBvF,EAASuB,SAC7BiE,aAAc5E,EACdV,eAAgBA,EAChBuF,eAAgBzF,EAASe,MACzB2E,oBAAqB1E,EAAAA,GACrBF,WAAYA,GAIR6E,QAAeC,EAAAA,EAAAA,IAAWT,GAChC,GAAIQ,GAAkC,MAAxBA,EAAOE,aACnBpG,EAAa,kBAAmB,gBAC3B,GAAIkG,GAAkC,MAAxBA,EAAOE,aAAsB,CAChD,MAAMC,EAAqBH,EAAOI,SAG5BC,EADO,IAAIC,KADoC,IAArBH,GAELI,iBAC3BzG,EAAc,8BAA6BuG,IAAiB,OAC9D,KAAO,CACL,MAAMG,EAAeR,EAChB,UAASpF,KAAK6F,UAAUT,KACzB,6BACJlG,EAAa0G,EAAc,QAC7B,CACF,CAAE,MAAOxE,GACPtC,QAAQsC,MAAMA,GACdlC,GAAkB,OAALkC,QAAK,IAALA,OAAK,EAALA,EAAO0E,UAAW,uBAAwB,QACzD,GA4NY3I,GAAI,CACFiG,cAAe,OACf2C,SAAU,GACV3D,QAAS,WACTkC,gBAAiBlF,EAAe,QAAU,QAC1C2C,MAAO3C,EAAe,QAAU,QAChC,UAAW,CACTkF,gBAAiBlF,EAAe,UAAY,YAE9C3B,SAEDsC,EAAe,aAAYQ,IAAe,mBAE7CtD,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CACPZ,QAAQ,OACRa,QAtKYiC,KACtBlG,GAAe,EAAK,EAsKV3C,GAAI,CACFiG,cAAe,OACf2C,SAAU,GACVhE,MAAO3C,EAAe,QAAU,QAChC,UAAW,CACTkF,gBAAiB,cACjBjB,eAAgB,SAElB5F,SACH,wBAKEsC,IACC9C,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,CACZC,QAAQ,UACR/F,GAAI,CAAEqG,GAAI,SAAUyC,UAAW,UAAWxI,SAC3C,0CAST0E,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGjF,SAAA,EAChBR,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,CAACC,QAAQ,KAAKC,MAAO,CAACpB,MAAO3C,EAAe,QAAU,QAAUgE,cAAe,OAAOC,eAAgB,QAAS6C,cAAY,EAAAzI,SACtIgC,EAASoD,cAAgB,mBAE5BV,EAAAA,EAAAA,MAACc,EAAAA,EAAa,CAACC,QAAQ,YAAYC,MAAO,CAACpB,MAAO3C,EAAe,QAAU,QAAUgE,cAAe,OAAOC,eAAgB,QAAS6C,cAAY,EAAAzI,SAAA,CAAC,OACrH,QAAtBc,EAAAkB,EAASwB,qBAAa,IAAA1C,OAAA,EAAtBA,EAAwB4H,aAAc,cACzC1G,EAAS2G,aAAe3G,EAAS2G,YAAYC,OAAS,IACrDlE,EAAAA,EAAAA,MAAAmE,EAAAA,SAAA,CAAA7I,SAAA,CACG,IAAI,KACFgC,EAAS2G,YAAYG,KAAK,aAInCtJ,EAAAA,EAAAA,KAACuJ,EAAAA,EAAI,CACCrJ,GAAI,CACAsJ,WAAY,OACZC,aAAc,OACdX,SAAU,SACVjD,SAA2C,QAAlCtE,EAAAmI,EAAAA,GAAmBlH,EAASmH,cAAM,IAAApI,OAAA,EAAlCA,EAAoC8F,kBAAmB,OAChEvC,OAAyC,QAAlCtD,EAAAkI,EAAAA,GAAmBlH,EAASmH,cAAM,IAAAnI,OAAA,EAAlCA,EAAoCsD,QAAS,SAExD8E,MAAOpH,EAASmH,SAGtBzE,EAAAA,EAAAA,MAACjF,EAAAA,EAAG,CAACC,GAAI,CAAEwE,QAAS,OAAQ+B,IAAK,SAAUoD,GAAI,OAAS/E,MAAO3C,EAAe,QAAU,SAAS3B,SAAA,EACxE,QAAtBiB,EAAAe,EAASwB,qBAAa,IAAAvC,OAAA,EAAtBA,EAAwBqI,kBACvB9J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAU,CACTjF,MAAM,UACNkF,KAAK,QACLC,OAAO,SACPC,IAAI,sBACJC,KAAO,mBAAkB3H,EAASwB,cAAc8F,uBAAuB/E,IAAkBvE,UAEzFR,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFQ,UAAU,MACVC,IAAK0J,EACLlJ,IAAI,WACJhB,GAAI,CAAEY,MAAO,GAAIT,OAAQ,SAIR,QAAtBqB,EAAAc,EAASwB,qBAAa,IAAAtC,OAAA,EAAtBA,EAAwB2I,gBACvBrK,EAAAA,EAAAA,KAAC+J,EAAAA,EAAU,CACTjF,MAAM,UACNkF,KAAK,QACLC,OAAO,SACPC,IAAI,sBACJC,KAAO,OAAM3H,EAASwB,cAAcqG,eAAe7J,UAEnDR,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFQ,UAAU,MACVC,IAAK4J,EACLpJ,IAAI,aACJhB,GAAI,CAAEY,MAAO,GAAIT,OAAQ,YAKjCL,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,CAACC,QAAQ,SAASC,MAAO,CAACpB,MAAO3C,EAAe,QAAU,SAAS3B,SAC9EgC,EAAS+H,aAAe,gCAM/BrF,EAAAA,EAAAA,MAACsF,EAAAA,EAAM,CACLC,KAAM7H,EACN8H,QAASzF,EACT0F,WAAS,EACTC,SAAS,KAAIpK,SAAA,EAEbR,EAAAA,EAAAA,KAAC6K,EAAAA,EAAW,CAAArK,SAAC,qBACbR,EAAAA,EAAAA,KAAC8K,EAAAA,EAAa,CAAAtK,UACZ0E,EAAAA,EAAAA,MAAC6F,EAAAA,EAAK,CAAAvK,SAAA,EACJR,EAAAA,EAAAA,KAACgL,EAAAA,EAAS,CAAAxK,UACR0E,EAAAA,EAAAA,MAAC+F,EAAAA,EAAQ,CAAAzK,SAAA,EACPR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAAA1K,UAACR,EAAAA,EAAAA,KAAA,UAAAQ,SAAQ,YACnBR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAACC,MAAM,QAAO3K,UAACR,EAAAA,EAAAA,KAAA,UAAAQ,SAAQ,4BAGrC0E,EAAAA,EAAAA,MAACkG,EAAAA,EAAS,CAAA5K,SAAA,EACR0E,EAAAA,EAAAA,MAAC+F,EAAAA,EAAQ,CAAAzK,SAAA,EACPR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAAA1K,SAAC,sBACXR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAACC,MAAM,QAAO3K,SAAEgC,EAASe,YAErC2B,EAAAA,EAAAA,MAAC+F,EAAAA,EAAQ,CAAAzK,SAAA,EACPR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAAA1K,SAAC,uBACXR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAACC,MAAM,QAAO3K,SAAEkC,QAE5BwC,EAAAA,EAAAA,MAAC+F,EAAAA,EAAQ,CAAAzK,SAAA,EACPR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAAA1K,SAAC,cACXR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAACC,MAAM,QAAO3K,SACrBgC,EAASe,MAAQb,QAGtBwC,EAAAA,EAAAA,MAAC+F,EAAAA,EAAQ,CAAAzK,SAAA,EACPR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAAA1K,SAAC,kCACXR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAACC,MAAM,QAAO3K,SAAEgD,EAAAA,SAE5B0B,EAAAA,EAAAA,MAAC+F,EAAAA,EAAQ,CAAAzK,SAAA,EACPR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAAA1K,UAACR,EAAAA,EAAAA,KAAA,UAAAQ,SAAQ,mBACnBR,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAACC,MAAM,QAAO3K,UACtB0E,EAAAA,EAAAA,MAAA,UAAA1E,SAAA,CAAQ,SAAE8C,mBAMpBtD,EAAAA,EAAAA,KAACqL,EAAAA,EAAa,CAAA7K,UACZR,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CAACC,QAAS7B,EAAkBgB,QAAQ,WAAUzF,SAAC,iBAOhE,C,iKC5dO,MAAM8K,EAAW,CACpBC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVC,SAAU,WACVC,oBAAqB,uBAGZC,EAAoB,CAC7BC,cAAe,eACfC,gBAAiB,iBACjBC,mBAAoB,mBACpBC,cAAe,gBAGNC,EAAS,CAClBC,IAAM,MACNC,UAAY,WACZC,aAAc,eACdC,SAAU,YAED7I,EAAwB,GACxB8I,EAAc,CACvBC,KAAO,mDACPC,MAAQ,0BAGCC,EAAS,CAClBC,MAAO,CAAErF,gBAAiB,UAAWvC,MAAO,QAC5C6H,KAAM,CAAEtF,gBAAiB,UAAWvC,MAAO,QAC3C8H,OAAQ,CAAEvF,gBAAiB,UAAWvC,MAAO,QAC7C+H,IAAK,CAAExF,gBAAiB,UAAWvC,MAAO,QAC1CgI,OAAQ,CAAEzF,gBAAiB,UAAWvC,MAAO,QAC7CiI,OAAQ,CAAE1F,gBAAiB,UAAWvC,MAAO,QAC7CkI,KAAM,CAAE3F,gBAAiB,UAAWvC,MAAO,QAC3CmI,KAAM,CAAE5F,gBAAiB,UAAWvC,MAAO,QAC3CoI,KAAM,CAAE7F,gBAAiB,UAAWvC,MAAO,QAE3CqI,UAAW,CAAE9F,gBAAiB,UAAWvC,MAAO,QAChDsI,SAAU,CAAE/F,gBAAiB,UAAWvC,MAAO,QAC/CuI,KAAM,CAAEhG,gBAAiB,UAAWvC,MAAO,QAC3CwI,OAAQ,CAAEjG,gBAAiB,UAAWvC,MAAO,QAC7CyI,KAAM,CAAElG,gBAAiB,UAAWvC,MAAO,QAC3C0I,MAAO,CAAEnG,gBAAiB,UAAWvC,MAAO,QAC5C2I,MAAO,CAAEpG,gBAAiB,UAAWvC,MAAO,QAC5C4I,WAAY,CAAErG,gBAAiB,UAAWvC,MAAO,QACjD6I,WAAY,CAAEtG,gBAAiB,UAAWvC,MAAO,QACjD8I,WAAY,CAAEvG,gBAAiB,UAAWvC,MAAO,QACjD+I,MAAO,CAAExG,gBAAiB,UAAWvC,MAAO,QAC5CgJ,MAAO,CAAEzG,gBAAiB,UAAWvC,MAAO,QAC5CiJ,OAAQ,CAAE1G,gBAAiB,UAAWvC,MAAO,QAC7CkJ,KAAM,CAAE3G,gBAAiB,UAAWvC,MAAO,QAC3CmJ,KAAM,CAAE5G,gBAAiB,UAAWvC,MAAO,QAC3CoJ,MAAO,CAAE7G,gBAAiB,UAAWvC,MAAO,SAInC4E,EAAqB,CAC9B,CAACuC,EAAOC,KAAMO,EAAOC,MACrB,CAACT,EAAOE,WAAYM,EAAOE,KAC3B,CAACV,EAAOG,cAAeK,EAAOG,OAC9B,CAACX,EAAOI,UAAWI,EAAOI,KAKjBsB,EAAwB,CAAC1B,EAAOK,OAAOL,EAAOM,OAAON,EAAOO,KAAKP,EAAOc,MAExE1J,EAAc,CACvBuK,KAAM,OACNC,SAAS,UACTC,MAAM,QACNC,QAAS,UACTC,aAAc,eACdvK,OAAQ,SACRwK,YAAa,cACbC,oBAAoB,oBACpB5K,UAAW,YACX6K,aAAc,cACdC,QAAS,UACTC,SAAU,YAGDtK,EAAU,CACnBuK,aAAa,eACbC,WAAW,aACXC,oBAAqB,sBACrBC,UAAU,YACVC,iBAAkB,mBAClB1K,aAAc,eACd2K,eAAgB,iBAChBC,cAAe,gBACfC,WAAY,aACZC,uBAAwB,uBASfC,EAAc,mDAEdC,EAAkB,CAC3B,IAAMxP,EAAAA,EAAAA,KAACyP,EAAAA,IAAW,IAClB,aAAazP,EAAAA,EAAAA,KAAC0P,EAAAA,GAAM,IACpB,YAAY1P,EAAAA,EAAAA,KAAC2P,EAAAA,IAAM,IACnB,QAAU3P,EAAAA,EAAAA,KAAC4P,EAAAA,IAAQ,IACnB,gBAAgB5P,EAAAA,EAAAA,KAAC6P,EAAAA,IAAM,IACvB,qBAAqB7P,EAAAA,EAAAA,KAAC8P,EAAAA,IAAkB,IACxC,iBAAiB9P,EAAAA,EAAAA,KAAC+P,EAAAA,IAAU,IAC5B,eAAe/P,EAAAA,EAAAA,KAACgQ,EAAAA,IAAO,IACvB,gBAAgBhQ,EAAAA,EAAAA,KAACiQ,EAAAA,IAAY,IAC7B,iBAAiBjQ,EAAAA,EAAAA,KAACkQ,EAAAA,IAAS,I,mDClHxB,MAMM9H,EAAa1E,UACxB,MAAMW,EAAO,GAAEiI,EAAAA,GAAYC,2BAE3B,IACE,MAAM4D,QAAiBC,MAAM/L,EAAK,CAChCgM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMxN,KAAK6F,UAAU,CACnBhB,OAAQD,EAAYC,OACpBC,WAAYF,EAAYE,WACxBC,SAAUH,EAAYG,SACtBC,mBAAoBJ,EAAYI,mBAChCC,aAAcL,EAAYK,aAC1BtF,eAAgBiF,EAAYjF,eAC5BuF,eAAgBN,EAAYM,mBAI1BE,QAAegI,EAASK,OAE9B,OAAIL,EAASM,IACX5O,QAAQC,IAAI,sBAAuBqG,GAC5BA,IAEPtG,QAAQsC,MAAM,kBAAmBgE,GAC1BA,EAGX,CAAE,MAAOhE,GAEP,OADAtC,QAAQsC,MAAM,gCAAiCA,GACxC,IACT,E,yMClCK,MAAMuM,EAAiBhN,UAC5B7B,QAAQC,IAAI,kBAAkB6O,GAC9B,IACA,MAAMC,GAAUC,EAAAA,EAAAA,IAAIC,EAAAA,GAAIjN,EAAAA,GAAYuK,KAAMuC,GACpCI,QAAiBC,EAAAA,EAAAA,IAAOJ,GAC9B,GAAIG,EAASE,SACX,GAAsB,MAAnBF,EAASpN,OAAe,CACzB,MAAMuN,EAAOH,EAASpN,OAAOwN,YAC7BtP,QAAQC,IAAI,qCAAqCoP,GACjDE,EAAAA,EAAmBC,QAAQ,cAAeH,EAE5C,MACErP,QAAQC,IAAI,6BAIdD,QAAQC,IAAI,iBAEd,CAAC,MAAMqC,GACLtC,QAAQC,IAAI,SAASqC,EACvB,GAoBWG,EAA2BZ,MAAO4N,EAAgBC,KAC3D1P,QAAQC,IAAI,SAAU,GAAEwP,KAAkBC,KAC1C,MAAMC,EAAe,GAAEF,KAAkBC,IACnCE,GAAYC,EAAAA,EAAAA,IAAIC,EAAAA,GAAQH,GAC9B,IACI,MAAMrJ,QAAeyJ,EAAAA,EAAAA,IAAQH,GAC7B,GAAItJ,EAAO0J,MAAMzI,OAAS,EAAG,CACzB,MAAM0I,EAAe3J,EAAO0J,MAAM,GAC5BxN,QAAY0N,EAAAA,EAAAA,IAAeD,GAEjC,OADAjQ,QAAQC,IAAI,aAAcuC,GACnBA,CACT,CAEE,OADAxC,QAAQC,IAAI,uCACL,IAEf,CAAE,MAAOqC,GAEP,OADAtC,QAAQsC,MAAM,2BAA4BA,GACnC,IACT,GAISP,EAAeF,MAAO4N,EAAgBU,KAC/C,MAAMC,GAASpB,EAAAA,EAAAA,IAAIC,EAAAA,GAAIQ,EAAgBU,GACjCE,QAAoBlB,EAAAA,EAAAA,IAAOiB,GACjC,OAAOC,EAAYjB,SAAWiB,EAAYvO,OAAS,IAAI,EAI9CwO,EAAezO,MAAO4N,EAAgBU,EAAYrO,KAC3D,MAAMsO,GAASpB,EAAAA,EAAAA,IAAIC,EAAAA,GAAIQ,EAAgBU,GAEvC,aADMI,EAAAA,EAAAA,IAAOH,EAAQtO,EAAM,CAAE0O,OAAO,IAC7B1O,CAAI,EAIF2O,EAA2B5O,MAAO4N,EAAgBU,EAAYO,KACzE,MAAMN,GAASpB,EAAAA,EAAAA,IAAIC,EAAAA,GAAIQ,EAAgBU,GAEvC,aADMQ,EAAAA,EAAAA,IAAUP,EAAQ,CAACQ,uBAAsB,EAAKF,iBAC7C,CAAI,EAIAG,EAAuBhP,MAAO4N,EAAgBU,EAAYW,KACnE,MAAMV,GAASpB,EAAAA,EAAAA,IAAIC,EAAAA,GAAIQ,EAAgBU,GAEvC,aADMQ,EAAAA,EAAAA,IAAUP,EAAQU,GACjB,CAAEC,GAAIZ,KAAeW,EAAQ,EAiB3BE,EAAsBnP,MAAO4N,EAAewB,EAAMC,EAAUC,KACrEnR,QAAQC,IAAI,QAAQwP,EAAewB,EAAMC,EAAUC,GACnD,MAAMC,GAAIC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAWrC,EAAAA,GAAIQ,IAAiB8B,EAAAA,EAAAA,IAAMN,EAAMC,EAAUC,IAEtE,aADuBK,EAAAA,EAAAA,IAAmBJ,IAC1BtP,OAAO2P,KAAK,EAKlBC,EAA0B7P,MAAO8P,EAAe1L,KAQ1D,MAAM2L,EAAc,GAAED,KAAiB1L,IACjC2J,GAAYC,EAAAA,EAAAA,IAAIC,EAAAA,GAAS8B,GACzBC,QAAiB9B,EAAAA,EAAAA,IAAQH,SAEzBkC,QAAQC,IAAIF,EAAS7B,MAAMgC,KAAInQ,gBAC7BoQ,EAAAA,EAAAA,IAAaC,EAAQ,IAC1B,EAISC,EAA2BtQ,MAAO8P,EAAe1L,EAASmM,KAQtE,MAAMR,EAAc,GAAED,KAAiB1L,KAAYmM,IAC7CxC,GAAYC,EAAAA,EAAAA,IAAIC,EAAAA,GAAS8B,GACzBC,QAAiB9B,EAAAA,EAAAA,IAAQH,SAEzBkC,QAAQC,IAAIF,EAAS7B,MAAMgC,KAAInQ,gBAC7BoQ,EAAAA,EAAAA,IAAaC,EAAQ,IAC1B,EAIMG,EAAexQ,eAAO8P,EAAcW,EAAerM,EAASsM,GAAkC,IAAtBC,EAAWC,UAAAlL,OAAA,QAAAmL,IAAAD,UAAA,GAAAA,UAAA,GAAC,KAS7F,MAAME,EAAQL,EAAe/K,OAC7B,IAAIqL,EAAO,QACLd,QAAQC,IAAIO,EAAeN,KAAInQ,UACnC,IAAI+P,EAAc,GAAED,KAAiB1L,KAAY4M,EAAKC,WAClDN,IACDZ,EAAc,GAAED,KAAiB1L,KAAYuM,KAAeK,EAAKC,YAEpE,MAAMC,GAAkBlD,EAAAA,EAAAA,IAAIC,EAAAA,GAAS8B,SAC/BK,EAAAA,EAAAA,IAAac,GACnBH,GAAQ,EACRL,EAAaK,EAAOD,EAAS,IAAI,IAErC,EAGWK,EAAenR,eAAO8P,EAAesB,EAAWhN,EAASsM,GAAkC,IAAtBC,EAAWC,UAAAlL,OAAA,QAAAmL,IAAAD,UAAA,GAAAA,UAAA,GAAC,KAS3FzS,QAAQC,IAAI0R,EAAc1L,GAC1B,MAAM0M,EAAQM,EAAU1L,OACvB,IAAIqL,EAAO,QACLd,QAAQC,IAAIkB,EAAUjB,KAAInQ,UAC9B,IAAI+P,EAAc,GAAED,KAAiB1L,IACjCuM,IACDZ,EAAc,GAAED,KAAiB1L,KAAYuM,KAEhD,MAAMN,GAAUrC,EAAAA,EAAAA,IAAIC,EAAAA,GAAU,GAAE8B,KAAcsB,EAAYL,KAAKM,cACzDC,EAAAA,EAAAA,IAAYlB,EAASgB,EAAYL,MACvCD,GAAQ,EACRL,EAAaK,EAAOD,EAAS,IAAI,IAErC,EAkFaU,EAAgBxR,eAAO8P,EAAesB,EAAWhN,GAA0D,IAAhDuM,EAAWC,UAAAlL,OAAA,QAAAmL,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMa,EAAUb,UAAAlL,OAAA,EAAAkL,UAAA,QAAAC,EAAEa,EAAUd,UAAAlL,OAAA,EAAAkL,UAAA,QAAAC,EAW5Gd,EAAc,GAAED,KAAiB1L,IACjCuM,IACFZ,EAAc,GAAED,KAAiB1L,KAAYuM,KAE/CxS,QAAQC,IAAIgT,EAAUA,EAAUE,MAChC,MAAMK,GAAc3D,EAAAA,EAAAA,IAAIC,EAAAA,GAAU,GAAE8B,KAAcqB,EAAUE,QACtDM,GAAaC,EAAAA,EAAAA,IAAqBF,EAAYP,GACpDQ,EAAWE,GAAG,iBACXC,IAEC,MAAMC,EAAaD,EAASC,WACtBC,EAAmBF,EAASE,iBAC5BC,EAAWF,EAAa,GAAMC,EAAmBD,EAAc,KAAKG,QAAQ,IAAM,EAGxF,OAFAV,EAAWS,GACX/T,QAAQC,IAAI,aAAe8T,EAAW,UAC9BH,EAASK,OACf,IAAK,SACHjU,QAAQC,IAAI,oBACZ,MACF,IAAK,UACHD,QAAQC,IAAI,qBAEhB,IAEDqC,IAGSA,EAAM4R,IAUd,IAEF,MAEEhE,EAAAA,EAAAA,IAAeuD,EAAWG,SAAS/D,KAAKsE,MAAMC,IAC5CpU,QAAQC,IAAI,oBAAqBmU,GACjCb,EAAWa,EAAY,GACvB,GAKR,EAoBaC,EAAwBxS,UACnC,MAAM+P,EAAc,GAAED,IAChB/B,GAAYC,EAAAA,EAAAA,IAAIC,EAAAA,GAAS8B,GAE/B,IACI,MAAMC,QAAiB9B,EAAAA,EAAAA,IAAQH,GAe/B,aAbqCkC,QAAQC,IAC3CF,EAAS7B,MAAMgC,KAAInQ,UACjB,MAAMuS,QAAoBlE,EAAAA,EAAAA,IAAegC,GAEzC,MAAO,CACLnB,GAAImB,EAAQiB,KACZL,SAAUZ,EAAQiB,KAClBmB,QAASF,EACV,IAMT,CAAE,MAAO9R,GAEL,MADAtC,QAAQsC,MAAM,2BAA4BA,GACpCA,CACV,E","sources":["Components/MediaDisplay.jsx","Screens/WorkShopFullPage.js","constants.js","utils/common.js","utils/firebaseUtils.js"],"sourcesContent":["import React from 'react';\nimport { Box } from '@mui/material';\n\nconst MediaDisplay = ({ youtubeId, imageUrl, altText }) => {\n  return youtubeId ? (\n    <Box\n      sx={{\n        position: \"relative\",\n        paddingBottom: \"56.25%\",  // 16:9 aspect ratio\n        height: 0,\n        overflow: \"hidden\",\n        borderRadius: \"8px\",\n      }}\n    >\n      <Box\n        component=\"iframe\"\n        src={`https://www.youtube.com/embed/${youtubeId}`}\n        title={altText || \"Workshop Video\"}\n        sx={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          border: 0,\n          borderRadius: \"8px\",\n        }}\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </Box>\n  ) : (\n    <Box\n      component=\"img\"\n      src={imageUrl}\n      alt={altText || \"Workshop Image\"}\n      sx={{\n        width: \"100%\",\n        height: \"auto\",\n        objectFit: \"cover\",\n        borderRadius: \"8px\",\n      }}\n    />\n  );\n};\n\nexport default MediaDisplay;\n","// src/pages/WorkShopFullPage.jsx\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  IconButton,\n  Typography as MUITypography,\n  Button,\n  TextField,\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n  CircularProgress,\n  Chip,\n  \n} from \"@mui/material\";\nimport { Remove, Add } from \"@mui/icons-material\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { COLLECTIONS, STORAGES, INTERNET_CONV_CHARGES, CHIP_LEVELS_DESIGN } from \"../constants\"; // Adjust the import paths as necessary\nimport {\n  readDocument,\n  readDocumentWithImageUrl,\n} from \"../utils/firebaseUtils\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport { FaMinus, FaPlus } from 'react-icons/fa';\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { bookEntity } from \"../utils/common\";\n\nimport whatsAppImage from \"../assets/images/whatsapp.png\";\nimport callImage from \"../assets/images/india_11009487.png\";\nimport MediaDisplay from \"../Components/MediaDisplay\";\n\nfunction WorkShopFullPage() {\n  const { workshopId } = useParams();\n  console.log(\"From WorkShopFullPage,\", workshopId);\n  const navigate = useNavigate();\n  const showSnackbar = useSnackbar();\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [dataItem, setDataItem] = useState(null);\n  const [personsAllowed, setPersonsAllowed] = useState(1); // Number of persons\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state\n\n  const currentUser = JSON.parse(localStorage.getItem(\"userInfo\"))?.UserId;\n  const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\"))?.email;\n\n\n  // Calculate Total Price\n  const totalPrice =\n    dataItem && personsAllowed\n      ? dataItem.price * personsAllowed + INTERNET_CONV_CHARGES\n      : 0;\n\n  const handleBook = async () => {\n    if (!currentUser) {\n      showSnackbar(\"Please login to book\", \"warning\");\n      navigate(\"/login\"); // Redirect to login page if not logged in\n      return;\n    }\n    try {\n      const bookingData = {\n        userId: currentUser,\n        entityType: COLLECTIONS.WORKSHOPS,\n        entityId: workshopId,\n        associatedStudioId: dataItem.StudioId,\n        emailLearner: currentUserEmail,\n        personsAllowed: personsAllowed,\n        pricePerPerson: dataItem.price,\n        internetConvCharges: INTERNET_CONV_CHARGES,\n        totalPrice: totalPrice,\n        // Add other necessary fields here\n      };\n\n      const result = await bookEntity(bookingData);\n      if (result && result.nSuccessCode === 200) {\n        showSnackbar(\"Workshop booked\", \"success\");\n      } else if (result && result.nSuccessCode === 205) {\n        const timestampInSeconds = result.bookedAt;\n        const timestampInMilliseconds = timestampInSeconds * 1000;\n        const date = new Date(timestampInMilliseconds);\n        const formattedDate = date.toLocaleString();\n        showSnackbar(`Workshop already booked at ${formattedDate}`, \"info\");\n      } else {\n        const errorMessage = result\n          ? `Error: ${JSON.stringify(result)}`\n          : \"An unknown error occurred.\";\n        showSnackbar(errorMessage, \"error\");\n      }\n    } catch (error) {\n      console.error(error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    }\n  };\n\n  console.log(\"WorkShopFullPage before useEffect\");\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(\"WorkShopFullPage fetchData\");\n      try {\n        const data = await readDocument(COLLECTIONS.WORKSHOPS, workshopId);\n        console.log(\"WorkShopFullPage fetchData data\", data);\n        setDataItem(data);\n        console.log(\"WorkShopFullPage before useEffect\", data);\n        if (data && data.StudioId) {\n          const studioDetails = await readDocument(\n            COLLECTIONS.STUDIO,\n            data.StudioId\n          );\n          setDataItem((prevData) => ({ ...prevData, studioDetails }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching workshop data:\", error);\n        showSnackbar(\"Failed to load workshop details.\", \"error\");\n      }\n    };\n\n    const fetchImage = async () => {\n      try {\n        const url = await readDocumentWithImageUrl(\n          STORAGES.WORKSHOPICON,\n          workshopId\n        );\n        setImageUrl(\n          url ||\n            \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      } catch (error) {\n        console.error(\"Error fetching image URL:\", error);\n        setImageUrl(\n          \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      }\n    };\n\n    if (workshopId) {\n      fetchData();\n      fetchImage();\n    }\n  }, [workshopId, showSnackbar]);\n\n  if (!dataItem) {\n    return (\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <CircularProgress color=\"primary\" />\n      </Box>\n    );\n  }\n\n  const whatsappMessage = encodeURIComponent(\n    \"Hey, I found your Studio on nritya.co.in. I'm interested\"\n  );\n\n  // Handlers for Modal\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"0rem\",\n        minHeight: \"100vh\",\n        color: isDarkModeOn ? \"white\" : \"black\",\n      }}\n    >\n      <Grid container spacing={2}>\n      <Grid item xs={12} lg={8}>\n            <MediaDisplay \n            youtubeId={dataItem.youtubeId} \n            imageUrl={imageUrl} \n            altText={dataItem.workshopName} \n            />\n        </Grid>\n\n        <Grid item xs={12} lg={4}>\n          <Box\n            sx={{\n              bgcolor: isDarkModeOn ? \"#333333\" : \"#efefef\",\n              p: 3,\n              borderRadius: \"8px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100%\",\n              justifyContent: \"space-between\",\n            }}\n          >\n\n            <Box>\n              <MUITypography variant=\"h4\" style={{color: isDarkModeOn ? 'white' : 'black', textTransform: 'none',textDecoration: 'none'}}>\n                {dataItem.workshopName || \"Workshop Name\"}\n              </MUITypography>\n              <MUITypography variant=\"subtitle \"style={{color: isDarkModeOn ? 'white' : 'black'}}>\n                {(dataItem.date)}\n              </MUITypography>\n              <br/>\n              <MUITypography variant=\"subtitle\" style={{color: isDarkModeOn ? 'white' : 'black'}}>{dataItem.time}</MUITypography>\n\n              <MUITypography variant=\"body1\" sx={{ mt: \"1rem\",color: isDarkModeOn ? 'white' : 'black' }}>\n                {dataItem.city || \"City\"}\n              </MUITypography>\n            </Box>\n\n            <Box\n              sx={{\n                mt: \"2rem\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"1rem\",\n                color: isDarkModeOn ? 'white' : 'black'\n              }}\n            >\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n      <tbody>\n        <tr>\n          <td style={{ padding: '8px', color: isDarkModeOn ? 'white' : 'black' }}>\n            {dataItem && dataItem.price && (\n              <span>Price per person</span>\n            )}\n          </td>\n          <td style={{ padding: '8px', color: isDarkModeOn ? 'white' : 'black' }}>\n            {dataItem && dataItem.price && (\n              <span> ₹{dataItem.price}</span>\n            )}\n          </td>\n        </tr>\n        <tr>\n         <td style={{ padding: '8px', color: isDarkModeOn ? 'white' : 'black' }}>\n            <span sx={{ color: isDarkModeOn ? 'white' : 'black' }}>Person(s)</span>\n          </td>\n          <td style={{ padding: '8px' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n              \n              <Stack direction=\"row\" spacing={0} alignItems=\"center\">\n                <Button\n                    variant=\"contained\"\n                    onClick={() => setPersonsAllowed((prev) => Math.max(prev - 1, 1))}\n                    disabled={personsAllowed <= 1}\n                    sx={{\n                    flex: 1, // Make the button take full available width\n                    height: '40px', // Set the height for uniformity\n                    border: '1px solid',\n                    borderColor: isDarkModeOn ? 'white' : 'black',\n                    color: isDarkModeOn ? 'white' : 'black',\n                    backgroundColor: 'red',\n                    '&:hover': {\n                        backgroundColor: 'darkred',\n                    },\n                    }}\n                >\n                    <FaMinus />\n                </Button>\n\n                <Button\n                    variant=\"contained\"\n                    sx={{\n                    flex: 1,\n                    height: '40px',\n                    border: '1px solid',\n                    borderColor: isDarkModeOn ? 'white' : 'black',\n                    color: isDarkModeOn ? 'white' : 'black', // Adjust text color for contrast\n                    backgroundColor: 'rgba(255, 255, 255, 0.2)', // Semi-transparent background\n                    backdropFilter: 'blur(10px)', // Glassmorphism effect\n                    boxShadow: '0 4px 10px rgba(0, 0, 0, 0.3)', // Shadow for depth\n                    '&:hover': {\n                        backgroundColor: 'rgba(255, 255, 255, 0.2)', // Slightly more opaque on hover\n                    },\n                    }}\n                >\n                    {personsAllowed}\n                </Button>\n\n                <Button\n                    variant=\"contained\"\n                    onClick={() => setPersonsAllowed((prev) => Math.min(prev + 1, 4))}\n                    disabled={personsAllowed >= 4}\n                    sx={{\n                    flex: 1,\n                    height: '40px',\n                    border: '1px solid',\n                    borderColor: isDarkModeOn ? 'white' : 'black',\n                    color: isDarkModeOn ? 'white' : 'black',\n                    backgroundColor: 'green',\n                    '&:hover': {\n                        backgroundColor: 'darkgreen',\n                    },\n                    }}\n                >\n                    <FaPlus />\n                </Button>\n                </Stack>\n            </Box>\n          </td>\n        </tr>\n        </tbody>\n        </table>\n\n              {/* Book Now Button */}\n              <Button\n                variant=\"contained\"\n                onClick={handleBook}\n                sx={{\n                  textTransform: \"none\",\n                  fontSize: 16,\n                  padding: \"8px 16px\",\n                  backgroundColor: isDarkModeOn ? \"white\" : \"black\",\n                  color: isDarkModeOn ? \"black\" : \"white\",\n                  \"&:hover\": {\n                    backgroundColor: isDarkModeOn ? \"#f0f0f0\" : \"#333333\",\n                  },\n                }}\n              >\n                {currentUser ? `Book Now @${totalPrice}` : \"Login to Book\"}\n              </Button>\n              <Button\n              variant=\"text\"\n              onClick={handleOpenModal}\n              sx={{\n                textTransform: 'none',\n                fontSize: 16,\n                color: isDarkModeOn ? 'white' : 'black',\n                '&:hover': {\n                  backgroundColor: 'transparent',\n                  textDecoration: 'none',\n                },\n              }}\n            >\n              Price Breakdown (i)\n            </Button>\n\n              {/* Payment Info */}\n              {currentUser && (\n                <MUITypography\n                  variant=\"caption\"\n                  sx={{ mt: \"0.5rem\", textAlign: \"center\" }}\n                >\n                  Book and groove at the venue\n                </MUITypography>\n              )}\n            </Box>\n          </Box>\n        </Grid>\n\n        {/* Additional Workshop Details */}\n        <Grid item xs={12}>\n          <MUITypography variant=\"h4\" style={{color: isDarkModeOn ? 'white' : 'black',  textTransform: 'none',textDecoration: 'none'}} gutterBottom>\n            {dataItem.workshopName || \"Workshop Name\"}\n          </MUITypography>\n          <MUITypography variant=\"subtitle1\" style={{color: isDarkModeOn ? 'white' : 'black',  textTransform: 'none',textDecoration: 'none'}} gutterBottom>\n            By {dataItem.studioDetails?.studioName || \"Studio Name\"}\n            {dataItem.danceStyles && dataItem.danceStyles.length > 0 && (\n              <>\n                {\" \"}\n                | {dataItem.danceStyles.join(\", \")}\n              </>\n            )}\n          </MUITypography>\n          <Chip\n                sx={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                    bgcolor: CHIP_LEVELS_DESIGN[dataItem.level]?.backgroundColor || 'grey',  // Fallback to grey\n                    color: CHIP_LEVELS_DESIGN[dataItem.level]?.color || 'white',  // Fallback to white\n                }}\n                label={dataItem.level}\n                >\n                </Chip>\n          <Box sx={{ display: \"flex\", gap: \"0.5rem\", mb: \"1rem\" , color: isDarkModeOn ? 'white' : 'black'}}>\n            {dataItem.studioDetails?.whatsappNumber && (\n              <IconButton\n                color=\"success\"\n                size=\"small\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://wa.me/91${dataItem.studioDetails.whatsappNumber}?text=${whatsappMessage}`}\n              >\n                <Box\n                  component=\"img\"\n                  src={whatsAppImage}\n                  alt=\"WhatsApp\"\n                  sx={{ width: 30, height: 28 }}\n                />\n              </IconButton>\n            )}\n            {dataItem.studioDetails?.mobileNumber && (\n              <IconButton\n                color=\"primary\"\n                size=\"small\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`tel:${dataItem.studioDetails.mobileNumber}`}\n              >\n                <Box\n                  component=\"img\"\n                  src={callImage}\n                  alt=\"Phone Call\"\n                  sx={{ width: 30, height: 28 }}\n                />\n              </IconButton>\n            )}\n          </Box>\n          <MUITypography variant=\"body1 \" style={{color: isDarkModeOn ? 'white' : 'black'}}>\n            {dataItem.description || \"Workshop Description\"}\n          </MUITypography>\n        </Grid>\n      </Grid>\n\n      {/* Price Breakdown Modal */}\n      <Dialog\n        open={isModalOpen}\n        onClose={handleCloseModal}\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        <DialogTitle>Price Breakdown</DialogTitle>\n        <DialogContent>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell><strong>Item</strong></TableCell>\n                <TableCell align=\"right\"><strong>Amount (₹)</strong></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>Price per Person</TableCell>\n                <TableCell align=\"right\">{dataItem.price}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Number of Persons</TableCell>\n                <TableCell align=\"right\">{personsAllowed}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Subtotal</TableCell>\n                <TableCell align=\"right\">\n                  {dataItem.price * personsAllowed}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Internet Convenience Charges</TableCell>\n                <TableCell align=\"right\">{INTERNET_CONV_CHARGES}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell><strong>Total Price</strong></TableCell>\n                <TableCell align=\"right\">\n                  <strong>₹{totalPrice}</strong>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseModal} variant=\"outlined\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default WorkShopFullPage;\n","import { FaSnowflake, FaWifi, FaTint, FaToilet, FaPlug, FaFireExtinguisher, FaFirstAid, FaVideo, FaCreditCard, FaParking  } from 'react-icons/fa';\n\nexport const STATUSES = {\n    SUBMITTED: \"Submitted\",\n    UNDER_REVIEW: \"Under Review\",\n    REVIEWED: \"Reviewed\",\n    VERIFIED: \"Verified\",\n    VERIFICATION_FAILED: \"Verification Failed\",\n};\n\nexport const DRAFT_COLLECTIONS = {\n    DRAFT_STUDIOS: 'DraftStudios',\n    DRAFT_WORKSHOPS: 'DraftWorkshops',\n    DRAFT_OPEN_CLASSES: 'DraftOpenClasses',\n    DRAFT_COURSES: 'DraftCourses'\n};\n\nexport const LEVELS = {\n    ALL : \"All\",\n    BEGINNERS : \"Beginner\", \n    INTERMEDIATE :\"Intermediate\", \n    ADVANCED :\"Advanced\"\n}\nexport const INTERNET_CONV_CHARGES = 30;\nexport const SERVER_URLS = {\n    PROD : 'https://nrityaserver-2b241e0a97e5.herokuapp.com/',\n    LOCAL : 'http://127.0.0.1:8000/'\n}\n\nexport const COLORS = {\n    GREEN: { backgroundColor: \"#28a745\", color: \"#fff\" },     // Green background, white text\n    BLUE: { backgroundColor: \"#007bff\", color: \"#fff\" },      // Blue background, white text\n    YELLOW: { backgroundColor: \"#ffc107\", color: \"#000\" },    // Yellow background, black text\n    RED: { backgroundColor: \"#dc3545\", color: \"#fff\" },       // Red background, white text\n    PURPLE: { backgroundColor: \"#6f42c1\", color: \"#fff\" },    // Purple background, white text\n    ORANGE: { backgroundColor: \"#fd7e14\", color: \"#fff\" },    // Orange background, white text\n    TEAL: { backgroundColor: \"#20c997\", color: \"#fff\" },      // Teal background, white text\n    PINK: { backgroundColor: \"#e83e8c\", color: \"#fff\" },      // Pink background, white text\n    GRAY: { backgroundColor: \"#6c757d\", color: \"#fff\" },       // Gray background, white text\n\n    LIGHTBLUE: { backgroundColor: \"#17a2b8\", color: \"#fff\" }, // Light blue background, white text\n    DARKBLUE: { backgroundColor: \"#343a40\", color: \"#fff\" },  // Dark blue background, white text\n    CYAN: { backgroundColor: \"#00bcd4\", color: \"#fff\" },      // Cyan background, white text\n    INDIGO: { backgroundColor: \"#6610f2\", color: \"#fff\" },    // Indigo background, white text\n    LIME: { backgroundColor: \"#cddc39\", color: \"#000\" },      // Lime background, black text\n    AMBER: { backgroundColor: \"#ffca28\", color: \"#000\" },     // Amber background, black text\n    BROWN: { backgroundColor: \"#795548\", color: \"#fff\" },     // Brown background, white text\n    LIGHTGREEN: { backgroundColor: \"#8bc34a\", color: \"#000\" },// Light green background, black text\n    DEEPPURPLE: { backgroundColor: \"#673ab7\", color: \"#fff\" },// Deep purple background, white text\n    DEEPORANGE: { backgroundColor: \"#ff5722\", color: \"#fff\" },// Deep orange background, white text\n    BLACK: { backgroundColor: \"#000000\", color: \"#fff\" },     // Black background, white text\n    WHITE: { backgroundColor: \"#ffffff\", color: \"#000\" },     // White background, black text\n    SILVER: { backgroundColor: \"#c0c0c0\", color: \"#000\" },    // Silver background, black text\n    GOLD: { backgroundColor: \"#ffd700\", color: \"#000\" },      // Gold background, black text\n    NAVY: { backgroundColor: \"#001f3f\", color: \"#fff\" },      // Navy background, white text\n    OLIVE: { backgroundColor: \"#3d9970\", color: \"#fff\" },     // Olive background, white text\n\n  };\n\nexport const CHIP_LEVELS_DESIGN = {\n    [LEVELS.ALL]: COLORS.GREEN,           // Green background, white text\n    [LEVELS.BEGINNERS]: COLORS.BLUE,     // Blue background, white text\n    [LEVELS.INTERMEDIATE]: COLORS.YELLOW,  // Yellow background, black text\n    [LEVELS.ADVANCED]: COLORS.RED      // Red background, white text\n  };\n  \n\n  \nexport const danceStylesColorChips = [COLORS.PURPLE,COLORS.ORANGE,COLORS.TEAL,COLORS.LIME]\n\nexport const COLLECTIONS = {\n    USER: \"User\",\n    USER_KYC:\"UserKyc\",\n    ADMIN:\"Admin\",\n    REVIEWS: \"Reviews\",\n    TRANSACTIONS: \"Transactions\",\n    STUDIO: \"Studio\",\n    INSTRUCTORS: \"Instructors\",\n    FREE_TRIAL_BOOKINGS:\"FreeTrialBookings\",\n    WORKSHOPS: 'Workshops',\n    OPEN_CLASSES: 'OpenClasses',\n    COURSES: 'Courses',\n    BOOKINGS: 'Bookings',\n}\n\nexport const STORAGES ={\n    STUDIOIMAGES:'StudioImages',\n    STUDIOICON:'StudioIcon',\n    STUDIOANNOUNCEMENTS :'StudioAnnouncements',\n    USERIMAGE:'UserImage',\n    INSTRUCTORIMAGES: 'InstructorImages',\n    WORKSHOPICON :\"WorkshopIcon\",\n    WORKSHOPIMAGES :\"WorkshopImages\",\n    OPENCLASSICON :\"OpenClassIcon\",\n    COURSEICON :\"CourseIcon\",\n    CREATORS_KYC_DOCUMENTS :\"CreatorKycDocuments\"\n}\n\nexport const SEARCH_FILTERS ={\n    DANCEFORMS:'danceforms',\n    DISTANCES:'distances',\n}\n\nexport const BASEURL_DEV = \"http://127.0.0.1:8000/\"\nexport const BASEURL_PROD= \"https://nrityaserver-2b241e0a97e5.herokuapp.com/\"\n\nexport const AMENITIES_ICONS = {\n    \"AC\": <FaSnowflake />,\n    \"Free Wifi\": <FaWifi />,\n    \"RO Water\": <FaTint />,\n    \"Toilet\": <FaToilet />,\n    \"Power Backup\": <FaPlug />,\n    \"Fire Extinguisher\": <FaFireExtinguisher />,\n    \"First Aid Kit\": <FaFirstAid />,\n    \"CCTV Camera\": <FaVideo />,\n    \"Card Payment\": <FaCreditCard />,\n    \"Parking Space\": <FaParking />,\n};\n\n","import { COLORS, SERVER_URLS } from \"../constants\";\n\nexport const getRandomColor = () => {\n  const colorKeys = Object.keys(COLORS);\n  const randomKey = colorKeys[Math.floor(Math.random() * colorKeys.length)];\n  return COLORS[randomKey];\n};\n\nexport const bookEntity = async (bookingData) => {\n  const url = `${SERVER_URLS.PROD}bookings/bookEntity/`; \n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userId: bookingData.userId,\n        entityType: bookingData.entityType,\n        entityId: bookingData.entityId,\n        associatedStudioId: bookingData.associatedStudioId,\n        emailLearner: bookingData.emailLearner,\n        personsAllowed: bookingData.personsAllowed,\n        pricePerPerson: bookingData.pricePerPerson,\n      })\n    });\n\n    const result = await response.json();\n    \n    if (response.ok) {\n      console.log('Booking successful:', result);\n      return result;  // Return the successful result\n    } else {\n      console.error('Booking failed:', result);\n      return result;  // Return null or an error message\n    }\n    \n  } catch (error) {\n    console.error('Error occurred while booking:', error);\n    return null;  // Return null or an error message\n  }\n};\n\n\n// Function to decode a Unicode (UTF-8) encoded string back to the original text\nexport const decodeUnicode = (unicodeString) => {\n  const utf8Encoded = unicodeString.split('').map((c) => c.charCodeAt(0));\n  const textDecoder = new TextDecoder();\n  return textDecoder.decode(new Uint8Array(utf8Encoded));\n};\n\nexport const convertToHtmlEntities= (text) =>{\n  return text.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\n      return '&#' + i.charCodeAt(0) + ';';\n  });\n}\n\nexport const gradientStyles = [\n  { background: 'linear-gradient(to bottom right, #FFD700, #FFA500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #00BFFF, #1E90FF)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #32CD32, #008000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #FFA500, #FF4500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #DC143C, #8B0000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #000000, #2F4F4F)', color: 'white' },\n];","import { doc, getDoc, setDoc, updateDoc, deleteDoc, collection, query, getDocs, where, getCountFromServer } from 'firebase/firestore';\nimport { db } from '../config';\nimport {ref,listAll,getDownloadURL,uploadBytes, deleteObject, uploadBytesResumable  } from \"firebase/storage\";\nimport { storage } from '../config';\nimport { COLLECTIONS } from '../constants';\nimport secureLocalStorage from 'react-secure-storage';\n\nexport const setCreatorMode = async (uid) => {\n  console.log(\"creatorMode uid\",uid)\n  try{\n  const userRef = doc(db, COLLECTIONS.USER, uid);\n  const userSnap = await getDoc(userRef);\n  if (userSnap.exists()) {\n    if(userSnap.data() != null){\n      const mode = userSnap.data().CreatorMode\n      console.log(\"setCreatorMode: Is User a creator?\",mode)\n      secureLocalStorage.setItem('CreatorMode', mode);\n        \n    }else{\n      console.log(\"userSnap.data() null\")\n      \n    }\n  } else {\n    console.log(\"User not found\");\n  }\n  }catch(error){\n    console.log(\" error\",error);\n  }\n}\n\nexport const getCreatorMode = async () => {\n  try{\n    const mode = secureLocalStorage.getItem('CreatorMode');\n    console.log(\"getCreatorMode \",mode)\n    if (mode){\n      return mode\n    }else{\n      return false\n    }\n  } \n  catch(error){\n    console.log(\" error\");\n    return false\n  }\n}\n\n// Read operation with image URL\nexport const readDocumentWithImageUrl = async (collectionName, productId) => {\n    console.log(\"Debug \",`${collectionName}/${productId}`)\n    const storagePath = `${collectionName}/${productId}`;\n    const folderRef = ref(storage,storagePath);\n    try {\n        const result = await listAll(folderRef);\n        if (result.items.length > 0) {\n            const firstFileRef = result.items[0];\n            const url = await getDownloadURL(firstFileRef);\n            console.log('Debug URL:', url);\n            return url;\n          } else {\n            console.log('Debug No files found in the folder.');\n            return null;\n          }\n    } catch (error) {\n      console.error('Error getting image URL:', error);\n      return null;\n    }\n  };\n\n// Read operation\nexport const readDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    const docSnapshot = await getDoc(docRef);\n    return docSnapshot.exists() ? docSnapshot.data() : null;\n};\n\n// Create or Update operation\nexport const saveDocument = async (collectionName, documentId, data) => {\n    const docRef = doc(db, collectionName, documentId);\n    await setDoc(docRef, data, { merge: true });\n    return data;\n};\n\n\nexport const handleSavePostOTPSuccess = async (collectionName, documentId, phoneNumber) => {\n  const docRef = doc(db, collectionName, documentId);\n  await updateDoc(docRef, {isPhoneNumberVerified:true,phoneNumber});\n  return true;\n};\n\n// Update specific fields in a document\nexport const updateDocumentFields = async (collectionName, documentId, fields) => {\n    const docRef = doc(db, collectionName, documentId);\n    await updateDoc(docRef, fields);\n    return { id: documentId, ...fields };\n};\n\n// Delete operation\nexport const deleteDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    await deleteDoc(docRef);\n    return { id: documentId };\n};\n\n// Query operation\nexport const queryDocuments = async (collectionName, conditions) => {\n    const q = query(collection(db, collectionName, conditions));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n};\n\nexport const queryDocumentsCount = async (collectionName,field,operation,value) => {\n    console.log(\"Hiii \",collectionName,field,operation,value)\n    const q = query(collection(db, collectionName), where(field,operation,value));\n    const snapshot = await getCountFromServer(q);\n    return snapshot.data().count;\n};\n\n\n  // Function to delete all images in a folder\nexport  const deleteAllImagesInFolder = async (storageFolder, entityId) => {\n    /*\n    Description: Deletes all images in the specified folder associated with the given entityId.\n\n    Args:\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: The unique identifier of the entity whose images are to be deleted eg UserId,StudioId like thing.\n    */\n    const folderPath = `${storageFolder}/${entityId}`;\n    const folderRef = ref(storage, folderPath);\n    const fileList = await listAll(folderRef);\n\n    await Promise.all(fileList.items.map(async (fileRef) => {\n      await deleteObject(fileRef);\n    }));\n  };\n\n    // Function to delete all images in a folder\n  export  const deleteAllImagesInFolder2 = async (storageFolder, entityId,subfolder) => {\n    /*\n    Description: Deletes all images in the specified folder associated with the given entityId.\n\n    Args:\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: The unique identifier of the entity whose images are to be deleted eg UserId,StudioId like thing.\n    */\n    const folderPath = `${storageFolder}/${entityId}/${subfolder}`;\n    const folderRef = ref(storage, folderPath);\n    const fileList = await listAll(folderRef);\n\n    await Promise.all(fileList.items.map(async (fileRef) => {\n      await deleteObject(fileRef);\n    }));\n  };\n\n  // Function to delete images\nexport const deleteImages = async (storageFolder,imagesToDelete,entityId,setProgress,thirdFolder=null) => {\n    /*\n    Description: Deletes specific images associated with the given entityId.\n\n    Args:\n      imagesToDelete <array>: An array of image objects to be deleted.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n    const total = imagesToDelete.length;\n    let done = 0;\n    await Promise.all(imagesToDelete.map(async (file) => {\n      let folderPath = `${storageFolder}/${entityId}/${file.filename}`;\n      if (thirdFolder){\n         folderPath = `${storageFolder}/${entityId}/${thirdFolder}/${file.filename}`;\n      }\n      const fileRefToDelete = ref(storage, folderPath);\n      await deleteObject(fileRefToDelete);\n      done += 1;\n      setProgress((done / total) * 100);\n    }));\n  };\n\n  // Function to upload new images\nexport const uploadImages = async (storageFolder, newImages, entityId,setProgress,thirdFolder=null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n\n    Args:\n      newImages <array>: An array of new image objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n   console.log(storageFolder,entityId)\n   const total = newImages.length;\n    let done = 0;\n    await Promise.all(newImages.map(async (newFileData) => {\n      let folderPath = `${storageFolder}/${entityId}`;\n      if (thirdFolder){\n         folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n      }\n      const fileRef = ref(storage, `${folderPath}/${newFileData.file.name}`);\n      await uploadBytes(fileRef, newFileData.file);\n      done += 1;\n      setProgress((done / total) * 100);\n    }));\n  };\n\n  export const uploadImages2 = async (storageFolder, newImages, entityId, thirdFolder = null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    uploadBytesResumable(storageRef, newImages).then((snapshot) => {\n      console.log('Uploaded a blob or file!');\n    });\n  };\n\n  export const uploadImages3 = async (storageFolder, newImages, entityId, thirdFolder = null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, newImages);\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, \n      (error) => {\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, \n      () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log('File available at', downloadURL);\n        });\n      }\n    );\n    \n  };\n\n\n  export const uploadImages4 = async (storageFolder, newImages, entityId, thirdFolder = null, onProgress, onComplete) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages,newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, newImages);\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const totalBytes = snapshot.totalBytes;\n        const bytesTransferred = snapshot.bytesTransferred;\n        const progress = totalBytes > 0 ? ((bytesTransferred / totalBytes) * 100).toFixed(2) : -1;\n        onProgress(progress);\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, \n      (error) => {\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, \n      () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log('File available at', downloadURL);\n          onComplete(downloadURL);\n        });\n\n      }\n    );\n    \n  };\n\n\n export const uploadOneImageAndGetURL = async (storageFolder, file, entityId) => {\n    try {\n      const folderPath = `${storageFolder}/${entityId}/${file.name}`;\n      console.log(folderPath)\n      const fileRef = ref(storage, folderPath);\n      \n      await uploadBytes(fileRef, file);\n  \n      const imageUrl = await getDownloadURL(fileRef);\n      console.log(imageUrl)\n      return imageUrl;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error; \n    }\n  };\n  \n  export const getAllFilesFromFolder = async (storageFolder) => {\n    const folderPath = `${storageFolder}`;\n    const folderRef = ref(storage, folderPath);\n    \n    try {\n        const fileList = await listAll(folderRef);\n\n        const imageUrlsComprehensive = await Promise.all(\n          fileList.items.map(async (fileRef) => {\n            const downloadURL = await getDownloadURL(fileRef);\n  \n            return {\n              id: fileRef.name,\n              filename: fileRef.name,\n              fileURL: downloadURL,\n            };\n          })\n        );\n\n        // return imageUrls;\n        return imageUrlsComprehensive\n    } catch (error) {\n        console.error('Error retrieving images:', error);\n        throw error;\n    }\n};\n\n"],"names":["_ref","youtubeId","imageUrl","altText","_jsx","Box","sx","position","paddingBottom","height","overflow","borderRadius","children","component","src","title","top","left","width","border","allow","allowFullScreen","alt","objectFit","_JSON$parse","_JSON$parse2","_dataItem$studioDetai","_CHIP_LEVELS_DESIGN$d","_CHIP_LEVELS_DESIGN$d2","_dataItem$studioDetai2","_dataItem$studioDetai3","workshopId","useParams","console","log","navigate","useNavigate","showSnackbar","useSnackbar","isDarkModeOn","useSelector","selectDarkModeStatus","setImageUrl","useState","dataItem","setDataItem","personsAllowed","setPersonsAllowed","isModalOpen","setIsModalOpen","currentUser","JSON","parse","localStorage","getItem","UserId","currentUserEmail","email","totalPrice","price","INTERNET_CONV_CHARGES","useEffect","async","data","readDocument","COLLECTIONS","WORKSHOPS","StudioId","studioDetails","STUDIO","prevData","error","fetchData","url","readDocumentWithImageUrl","STORAGES","WORKSHOPICON","fetchImage","display","justifyContent","alignItems","CircularProgress","color","whatsappMessage","encodeURIComponent","handleCloseModal","_jsxs","padding","minHeight","Grid","container","spacing","item","xs","lg","MediaDisplay","workshopName","bgcolor","p","flexDirection","MUITypography","variant","style","textTransform","textDecoration","date","time","mt","city","gap","borderCollapse","Stack","direction","Button","onClick","prev","Math","max","disabled","flex","borderColor","backgroundColor","FaMinus","backdropFilter","boxShadow","min","FaPlus","bookingData","userId","entityType","entityId","associatedStudioId","emailLearner","pricePerPerson","internetConvCharges","result","bookEntity","nSuccessCode","timestampInSeconds","bookedAt","formattedDate","Date","toLocaleString","errorMessage","stringify","message","fontSize","handleOpenModal","textAlign","gutterBottom","studioName","danceStyles","length","_Fragment","join","Chip","marginLeft","marginBottom","CHIP_LEVELS_DESIGN","level","label","mb","whatsappNumber","IconButton","size","target","rel","href","whatsAppImage","mobileNumber","callImage","description","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","Table","TableHead","TableRow","TableCell","align","TableBody","DialogActions","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","DRAFT_COLLECTIONS","DRAFT_STUDIOS","DRAFT_WORKSHOPS","DRAFT_OPEN_CLASSES","DRAFT_COURSES","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","SERVER_URLS","PROD","LOCAL","COLORS","GREEN","BLUE","YELLOW","RED","PURPLE","ORANGE","TEAL","PINK","GRAY","LIGHTBLUE","DARKBLUE","CYAN","INDIGO","LIME","AMBER","BROWN","LIGHTGREEN","DEEPPURPLE","DEEPORANGE","BLACK","WHITE","SILVER","GOLD","NAVY","OLIVE","danceStylesColorChips","USER","USER_KYC","ADMIN","REVIEWS","TRANSACTIONS","INSTRUCTORS","FREE_TRIAL_BOOKINGS","OPEN_CLASSES","COURSES","BOOKINGS","STUDIOIMAGES","STUDIOICON","STUDIOANNOUNCEMENTS","USERIMAGE","INSTRUCTORIMAGES","WORKSHOPIMAGES","OPENCLASSICON","COURSEICON","CREATORS_KYC_DOCUMENTS","BASEURL_PROD","AMENITIES_ICONS","FaSnowflake","FaWifi","FaTint","FaToilet","FaPlug","FaFireExtinguisher","FaFirstAid","FaVideo","FaCreditCard","FaParking","response","fetch","method","headers","body","json","ok","setCreatorMode","uid","userRef","doc","db","userSnap","getDoc","exists","mode","CreatorMode","secureLocalStorage","setItem","collectionName","productId","storagePath","folderRef","ref","storage","listAll","items","firstFileRef","getDownloadURL","documentId","docRef","docSnapshot","saveDocument","setDoc","merge","handleSavePostOTPSuccess","phoneNumber","updateDoc","isPhoneNumberVerified","updateDocumentFields","fields","id","queryDocumentsCount","field","operation","value","q","query","collection","where","getCountFromServer","count","deleteAllImagesInFolder","storageFolder","folderPath","fileList","Promise","all","map","deleteObject","fileRef","deleteAllImagesInFolder2","subfolder","deleteImages","imagesToDelete","setProgress","thirdFolder","arguments","undefined","total","done","file","filename","fileRefToDelete","uploadImages","newImages","newFileData","name","uploadBytes","uploadImages4","onProgress","onComplete","storageRef","uploadTask","uploadBytesResumable","on","snapshot","totalBytes","bytesTransferred","progress","toFixed","state","code","then","downloadURL","getAllFilesFromFolder","fileURL"],"sourceRoot":""}