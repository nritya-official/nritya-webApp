{"version":3,"file":"static/js/9212.906a8598.chunk.js","mappings":"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","sources":["Components/SideMenu.js","constants.js","utils/firebaseUtils.js"],"sourcesContent":["import { Offcanvas, Button } from 'react-bootstrap';\nimport { auth } from '../config';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { useSelector } from 'react-redux';\nimport logo from './../logo.png';\nimport './SideMenu.css';\nimport {useEffect} from \"react\";\nimport secureLocalStorage from 'react-secure-storage';\nimport { setCreatorMode } from '../utils/firebaseUtils';\n\nfunction SideMenu({ showProfileOffcanvas, closeProfileOffcanvas }) {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n\n  const handleLogout = async () => {\n    console.log(\"Logging out SideMenu\")\n    try {\n    await auth.signOut();\n    localStorage.clear()\n    secureLocalStorage.clear()\n     \n    } catch (error) {\n      console.error('Error during logout:', error.message);\n    }\n  };\n\n  const trySetCreatorMode = () => {\n    let attempts = 0;\n    while (attempts < 2) {\n      const creatorMode = secureLocalStorage.getItem('CreatorMode');\n      console.log(\"creatorMode\",creatorMode)\n      if (creatorMode == null) {\n        setCreatorMode();\n        attempts += 1;\n      } else {\n        break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    trySetCreatorMode();\n  }, []);\n\n  const regularMenuItems = [\n    { action: () => window.location.hash = '#/profile', name: 'Profile', show: true },\n    { action: () => window.location.hash = '#/transactions', name: 'Transactions',show:true },\n    { action: () => window.location.hash = '#/creatorDashboard', name: 'Dashboard',show: secureLocalStorage.getItem('CreatorMode')  },\n    { action: () => window.location.hash = '#/myBookings', name: 'Bookings',show:true },\n    { action: handleLogout, name: 'Sign Out',show:true },\n  ];\n\n  return (\n    <Offcanvas\n      style={{\n        width: '20rem',\n        backgroundColor: isDarkModeOn ? 'black' : 'white',\n        color: isDarkModeOn ? 'white' : 'black'\n      }}\n      show={showProfileOffcanvas}\n      onHide={closeProfileOffcanvas}\n    >\n      <Offcanvas.Header closeButton>\n        <img style={{ width: '6rem', height: '6rem', borderRadius: '50%' }} src={logo} alt=\"Logo\" />\n      </Offcanvas.Header>\n      <Offcanvas.Body>\n        <ul className=\"menu\">\n          <ul className=\"vertical-menu\">\n            {regularMenuItems.map(({ action, name,show }, index) => (\n              <li key={index} hidden={!show}>\n                <Button\n                  variant=\"outline-warning\"\n                  className=\"rounded-pill menu-button\"\n                  onClick={action}\n                >\n                  {name}\n                </Button>\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </Offcanvas.Body>\n    </Offcanvas>\n  );\n}\n\nexport default SideMenu;\n","import { FaSnowflake, FaWifi, FaTint, FaToilet, FaPlug, FaFireExtinguisher, FaFirstAid, FaVideo, FaCreditCard, FaParking  } from 'react-icons/fa';\n\nexport const STATUSES = {\n    SUBMITTED: \"Submitted\",\n    UNDER_REVIEW: \"Under Review\",\n    REVIEWED: \"Reviewed\",\n    VERIFIED: \"Verified\",\n    VERIFICATION_FAILED: \"Verification Failed\",\n};\n\nexport const DRAFT_COLLECTIONS = {\n    DRAFT_STUDIOS: 'DraftStudios',\n    DRAFT_WORKSHOPS: 'DraftWorkshops',\n    DRAFT_OPEN_CLASSES: 'DraftOpenClasses',\n    DRAFT_COURSES: 'DraftCourses'\n};\n\nexport const LEVELS = {\n    ALL : \"All\",\n    BEGINNERS : \"Beginner\", \n    INTERMEDIATE :\"Intermediate\", \n    ADVANCED :\"Advanced\"\n}\n\nexport const SERVER_URLS = {\n    PROD : 'https://nrityaserver-2b241e0a97e5.herokuapp.com/',\n    LOCAL : 'http://127.0.0.1:8000/'\n}\n\nexport const COLORS = {\n    GREEN: { backgroundColor: \"#28a745\", color: \"#fff\" },     // Green background, white text\n    BLUE: { backgroundColor: \"#007bff\", color: \"#fff\" },      // Blue background, white text\n    YELLOW: { backgroundColor: \"#ffc107\", color: \"#000\" },    // Yellow background, black text\n    RED: { backgroundColor: \"#dc3545\", color: \"#fff\" },       // Red background, white text\n    PURPLE: { backgroundColor: \"#6f42c1\", color: \"#fff\" },    // Purple background, white text\n    ORANGE: { backgroundColor: \"#fd7e14\", color: \"#fff\" },    // Orange background, white text\n    TEAL: { backgroundColor: \"#20c997\", color: \"#fff\" },      // Teal background, white text\n    PINK: { backgroundColor: \"#e83e8c\", color: \"#fff\" },      // Pink background, white text\n    GRAY: { backgroundColor: \"#6c757d\", color: \"#fff\" },       // Gray background, white text\n\n    LIGHTBLUE: { backgroundColor: \"#17a2b8\", color: \"#fff\" }, // Light blue background, white text\n    DARKBLUE: { backgroundColor: \"#343a40\", color: \"#fff\" },  // Dark blue background, white text\n    CYAN: { backgroundColor: \"#00bcd4\", color: \"#fff\" },      // Cyan background, white text\n    INDIGO: { backgroundColor: \"#6610f2\", color: \"#fff\" },    // Indigo background, white text\n    LIME: { backgroundColor: \"#cddc39\", color: \"#000\" },      // Lime background, black text\n    AMBER: { backgroundColor: \"#ffca28\", color: \"#000\" },     // Amber background, black text\n    BROWN: { backgroundColor: \"#795548\", color: \"#fff\" },     // Brown background, white text\n    LIGHTGREEN: { backgroundColor: \"#8bc34a\", color: \"#000\" },// Light green background, black text\n    DEEPPURPLE: { backgroundColor: \"#673ab7\", color: \"#fff\" },// Deep purple background, white text\n    DEEPORANGE: { backgroundColor: \"#ff5722\", color: \"#fff\" },// Deep orange background, white text\n    BLACK: { backgroundColor: \"#000000\", color: \"#fff\" },     // Black background, white text\n    WHITE: { backgroundColor: \"#ffffff\", color: \"#000\" },     // White background, black text\n    SILVER: { backgroundColor: \"#c0c0c0\", color: \"#000\" },    // Silver background, black text\n    GOLD: { backgroundColor: \"#ffd700\", color: \"#000\" },      // Gold background, black text\n    NAVY: { backgroundColor: \"#001f3f\", color: \"#fff\" },      // Navy background, white text\n    OLIVE: { backgroundColor: \"#3d9970\", color: \"#fff\" },     // Olive background, white text\n\n  };\n\nexport const CHIP_LEVELS_DESIGN = {\n    [LEVELS.ALL]: COLORS.GREEN,           // Green background, white text\n    [LEVELS.BEGINNERS]: COLORS.BLUE,     // Blue background, white text\n    [LEVELS.INTERMEDIATE]: COLORS.YELLOW,  // Yellow background, black text\n    [LEVELS.ADVANCED]: COLORS.RED      // Red background, white text\n  };\n  \n\n  \nexport const danceStylesColorChips = [COLORS.PURPLE,COLORS.ORANGE,COLORS.TEAL,COLORS.LIME]\n\nexport const COLLECTIONS = {\n    USER: \"User\",\n    USER_KYC:\"UserKyc\",\n    ADMIN:\"Admin\",\n    REVIEWS: \"Reviews\",\n    TRANSACTIONS: \"Transactions\",\n    STUDIO: \"Studio\",\n    INSTRUCTORS: \"Instructors\",\n    FREE_TRIAL_BOOKINGS:\"FreeTrialBookings\",\n    WORKSHOPS: 'Workshops',\n    OPEN_CLASSES: 'OpenClasses',\n    COURSES: 'Courses',\n    BOOKINGS: 'Bookings',\n}\n\nexport const STORAGES ={\n    STUDIOIMAGES:'StudioImages',\n    STUDIOICON:'StudioIcon',\n    STUDIOANNOUNCEMENTS :'StudioAnnouncements',\n    USERIMAGE:'UserImage',\n    INSTRUCTORIMAGES: 'InstructorImages',\n    WORKSHOPICON :\"WorkshopIcon\",\n    WORKSHOPIMAGES :\"WorkshopImages\",\n    OPENCLASSICON :\"OpenClassIcon\",\n    COURSEICON :\"CourseIcon\",\n    CREATORS_KYC_DOCUMENTS :\"CreatorKycDocuments\"\n}\n\nexport const SEARCH_FILTERS ={\n    DANCEFORMS:'danceforms',\n    DISTANCES:'distances',\n}\n\nexport const BASEURL_DEV = \"http://127.0.0.1:8000/\"\nexport const BASEURL_PROD= \"https://nrityaserver-2b241e0a97e5.herokuapp.com/\"\n\nexport const AMENITIES_ICONS = {\n    \"AC\": <FaSnowflake />,\n    \"Free Wifi\": <FaWifi />,\n    \"RO Water\": <FaTint />,\n    \"Toilet\": <FaToilet />,\n    \"Power Backup\": <FaPlug />,\n    \"Fire Extinguisher\": <FaFireExtinguisher />,\n    \"First Aid Kit\": <FaFirstAid />,\n    \"CCTV Camera\": <FaVideo />,\n    \"Card Payment\": <FaCreditCard />,\n    \"Parking Space\": <FaParking />,\n};\n\n","import { doc, getDoc, setDoc, updateDoc, deleteDoc, collection, query, getDocs, where, getCountFromServer } from 'firebase/firestore';\nimport { db } from '../config';\nimport {ref,listAll,getDownloadURL,uploadBytes, deleteObject  } from \"firebase/storage\";\nimport { storage } from '../config';\nimport { COLLECTIONS } from '../constants';\nimport secureLocalStorage from 'react-secure-storage';\n\nexport const setCreatorMode = async (uid) => {\n  console.log(\"setCreatorMode \",uid)\n  try{\n  const userRef = doc(db, COLLECTIONS.USER, uid);\n  const userSnap = await getDoc(userRef);\n  if (userSnap.exists()) {\n    if(userSnap.data() != null){\n      const mode = userSnap.data().CreatorMode\n      console.log(\"setCreatorMode: Is User a creator?\",mode)\n      secureLocalStorage.setItem('CreatorMode', mode);\n        \n    }else{\n      console.log(\"userSnap.data() null\")\n      \n    }\n  } else {\n    console.log(\"User not found\");\n  }\n  }catch(error){\n    console.log(\" error\");\n  }\n}\n\nexport const getCreatorMode = async () => {\n  try{\n    const mode = secureLocalStorage.getItem('CreatorMode');\n    console.log(\"getCreatorMode \",mode)\n    if (mode){\n      return mode\n    }else{\n      return false\n    }\n  } \n  catch(error){\n    console.log(\" error\");\n    return false\n  }\n}\n\n// Read operation with image URL\nexport const readDocumentWithImageUrl = async (collectionName, productId) => {\n    console.log(\"Debug \",`${collectionName}/${productId}`)\n    const storagePath = `${collectionName}/${productId}`;\n    const folderRef = ref(storage,storagePath);\n    try {\n        const result = await listAll(folderRef);\n        if (result.items.length > 0) {\n            const firstFileRef = result.items[0];\n            const url = await getDownloadURL(firstFileRef);\n            console.log('Debug URL:', url);\n            return url;\n          } else {\n            console.log('Debug No files found in the folder.');\n            return null;\n          }\n    } catch (error) {\n      console.error('Error getting image URL:', error);\n      return null;\n    }\n  };\n\n// Read operation\nexport const readDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    const docSnapshot = await getDoc(docRef);\n    return docSnapshot.exists() ? docSnapshot.data() : null;\n};\n\n// Create or Update operation\nexport const saveDocument = async (collectionName, documentId, data) => {\n    const docRef = doc(db, collectionName, documentId);\n    await setDoc(docRef, data, { merge: true });\n    return data;\n};\n\n\nexport const handleSavePostOTPSuccess = async (collectionName, documentId, phoneNumber) => {\n  const docRef = doc(db, collectionName, documentId);\n  await updateDoc(docRef, {isPhoneNumberVerified:true,phoneNumber});\n  return true;\n};\n\n// Update specific fields in a document\nexport const updateDocumentFields = async (collectionName, documentId, fields) => {\n    const docRef = doc(db, collectionName, documentId);\n    await updateDoc(docRef, fields);\n    return { id: documentId, ...fields };\n};\n\n// Delete operation\nexport const deleteDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    await deleteDoc(docRef);\n    return { id: documentId };\n};\n\n// Query operation\nexport const queryDocuments = async (collectionName, conditions) => {\n    const q = query(collection(db, collectionName, conditions));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n};\n\nexport const queryDocumentsCount = async (collectionName,field,operation,value) => {\n    console.log(\"Hiii \",collectionName,field,operation,value)\n    const q = query(collection(db, collectionName), where(field,operation,value));\n    const snapshot = await getCountFromServer(q);\n    return snapshot.data().count;\n};\n\n\n  // Function to delete all images in a folder\nexport  const deleteAllImagesInFolder = async (storageFolder, entityId) => {\n    /*\n    Description: Deletes all images in the specified folder associated with the given entityId.\n\n    Args:\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: The unique identifier of the entity whose images are to be deleted eg UserId,StudioId like thing.\n    */\n    const folderPath = `${storageFolder}/${entityId}`;\n    const folderRef = ref(storage, folderPath);\n    const fileList = await listAll(folderRef);\n\n    await Promise.all(fileList.items.map(async (fileRef) => {\n      await deleteObject(fileRef);\n    }));\n  };\n\n  // Function to delete images\nexport const deleteImages = async (storageFolder,imagesToDelete,entityId) => {\n    /*\n    Description: Deletes specific images associated with the given entityId.\n\n    Args:\n      imagesToDelete <array>: An array of image objects to be deleted.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n    await Promise.all(imagesToDelete.map(async (file) => {\n      const fileRefToDelete = ref(storage, `${storageFolder}/${entityId}/${file.filename}`);\n      await deleteObject(fileRefToDelete);\n    }));\n  };\n\n  // Function to upload new images\nexport const uploadImages = async (storageFolder, newImages, entityId) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n\n    Args:\n      newImages <array>: An array of new image objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n   console.log(storageFolder,entityId)\n    await Promise.all(newImages.map(async (newFileData) => {\n      const folderPath = `${storageFolder}/${entityId}`;\n      const fileRef = ref(storage, `${folderPath}/${newFileData.file.name}`);\n      await uploadBytes(fileRef, newFileData.file);\n    }));\n  };\n\n export const uploadOneImageAndGetURL = async (storageFolder, file, entityId) => {\n    try {\n      const folderPath = `${storageFolder}/${entityId}/${file.name}`;\n      console.log(folderPath)\n      const fileRef = ref(storage, folderPath);\n      \n      await uploadBytes(fileRef, file);\n  \n      const imageUrl = await getDownloadURL(fileRef);\n      console.log(imageUrl)\n      return imageUrl;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error; \n    }\n  };\n  \n  export const getAllImagesInFolder = async (storageFolder) => {\n    const folderPath = `${storageFolder}`;\n    const folderRef = ref(storage, folderPath);\n    \n    try {\n        const fileList = await listAll(folderRef);\n\n        const imageUrlsComprehensive = await Promise.all(\n          fileList.items.map(async (fileRef) => {\n            const downloadURL = await getDownloadURL(fileRef);\n  \n            return {\n              id: fileRef.name,\n              filename: fileRef.name,\n              fileURL: downloadURL,\n            };\n          })\n        );\n\n        // return imageUrls;\n        return imageUrlsComprehensive\n    } catch (error) {\n        console.error('Error retrieving images:', error);\n        throw error;\n    }\n};\n\n"],"names":["_ref","showProfileOffcanvas","closeProfileOffcanvas","isDarkModeOn","useSelector","selectDarkModeStatus","useEffect","trySetCreatorMode","attempts","creatorMode","secureLocalStorage","getItem","console","log","setCreatorMode","regularMenuItems","action","window","location","hash","name","show","async","auth","signOut","localStorage","clear","error","message","_jsxs","Offcanvas","style","width","backgroundColor","color","onHide","children","_jsx","Header","closeButton","height","borderRadius","src","logo","alt","Body","className","map","_ref2","index","hidden","Button","variant","onClick","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","DRAFT_COLLECTIONS","DRAFT_STUDIOS","DRAFT_WORKSHOPS","DRAFT_OPEN_CLASSES","DRAFT_COURSES","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","SERVER_URLS","PROD","LOCAL","COLORS","GREEN","BLUE","YELLOW","RED","PURPLE","ORANGE","TEAL","PINK","GRAY","LIGHTBLUE","DARKBLUE","CYAN","INDIGO","LIME","AMBER","BROWN","LIGHTGREEN","DEEPPURPLE","DEEPORANGE","BLACK","WHITE","SILVER","GOLD","NAVY","OLIVE","CHIP_LEVELS_DESIGN","danceStylesColorChips","COLLECTIONS","USER","USER_KYC","ADMIN","REVIEWS","TRANSACTIONS","STUDIO","INSTRUCTORS","FREE_TRIAL_BOOKINGS","WORKSHOPS","OPEN_CLASSES","COURSES","BOOKINGS","STORAGES","STUDIOIMAGES","STUDIOICON","STUDIOANNOUNCEMENTS","USERIMAGE","INSTRUCTORIMAGES","WORKSHOPICON","WORKSHOPIMAGES","OPENCLASSICON","COURSEICON","CREATORS_KYC_DOCUMENTS","BASEURL_PROD","AMENITIES_ICONS","FaSnowflake","FaWifi","FaTint","FaToilet","FaPlug","FaFireExtinguisher","FaFirstAid","FaVideo","FaCreditCard","FaParking","uid","userRef","doc","db","userSnap","getDoc","exists","data","mode","CreatorMode","setItem","readDocumentWithImageUrl","collectionName","productId","storagePath","folderRef","ref","storage","result","listAll","items","length","firstFileRef","url","getDownloadURL","readDocument","documentId","docRef","docSnapshot","saveDocument","setDoc","merge","handleSavePostOTPSuccess","phoneNumber","updateDoc","isPhoneNumberVerified","updateDocumentFields","fields","id","queryDocumentsCount","field","operation","value","q","query","collection","where","getCountFromServer","count","deleteAllImagesInFolder","storageFolder","entityId","folderPath","fileList","Promise","all","deleteObject","fileRef","deleteImages","imagesToDelete","fileRefToDelete","file","filename","uploadImages","newImages","newFileData","uploadBytes","getAllImagesInFolder","downloadURL","fileURL"],"sourceRoot":""}