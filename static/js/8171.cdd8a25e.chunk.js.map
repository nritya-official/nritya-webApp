{"version":3,"file":"static/js/8171.cdd8a25e.chunk.js","mappings":"gXAuFA,QA9EA,WACE,MAAOA,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CACnCC,iBAAkB,EAClBC,aAAc,EACdC,eAAgB,EAChBC,iBAAkB,EAClBC,aAAc,IAGVC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3B,YAAEC,IAAgBC,EAAAA,EAAAA,MAExBC,EAAAA,EAAAA,YAAU,KACYC,WAClB,MAAMX,QAAyBY,EAAAA,EAAAA,IAAoBC,EAAAA,GAAYC,YAAa,YAAa,KAAMN,EAAYO,KACrGd,QAAqBW,EAAAA,EAAAA,IAAoBC,EAAAA,GAAYG,OAAQ,SAAU,KAAMR,EAAYO,KACzFb,QAAuBU,EAAAA,EAAAA,IAAoBC,EAAAA,GAAYI,UAAW,SAAU,KAAMT,EAAYO,KAC9FZ,QAAyBS,EAAAA,EAAAA,IAAoBC,EAAAA,GAAYK,aAAc,SAAU,KAAMV,EAAYO,KACnGX,QAAqBQ,EAAAA,EAAAA,IAAoBC,EAAAA,GAAYM,QAAS,SAAU,KAAMX,EAAYO,KAEhGjB,EAAU,CACRE,mBACAC,eACAC,iBACAC,mBACAC,gBACA,EAGJgB,EAAa,GACZ,CAACZ,IAEJ,MACMa,EAAY,CAChB,CAAEC,MAAO,gBAAiBC,KAAM1B,EAAOI,aAAcuB,KAAM,mBAC3D,CAAEF,MAAO,oBAAqBC,KAAM1B,EAAOG,iBAAkBwB,KAAM,wBAWrE,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,UAAW,QAASC,SAAA,EAChCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,MAAO5B,EAAe,QAAU,QAAS6B,cAAe,cAAeN,SAAC,eAIvGC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAET,SACxBP,EAAUiB,KAAI,CAACC,EAAMC,KACpBX,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACI,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEf,UAC9BC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACZ,GAAI,CAACa,gBAAgBxC,EAAa,QAAQ,SAASuB,UACvDH,EAAAA,EAAAA,MAACqB,EAAAA,EAAW,CAAAlB,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKgB,UAAU,MAAMf,GAAI,CAACC,MAAM5B,EAAa,QAAQ,SAASuB,UAChFH,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAApB,SAAA,CACGW,EAAKjB,OACNO,EAAAA,EAAAA,KAAA,KAAGoB,KAAMV,EAAKf,KAAKI,UACjBC,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAACC,cAAc,MAAMC,UAAU,iBAAiBnB,MAAM,oBAIjEJ,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAACC,MAAM5B,EAAa,QAAQ,SAASuB,SAAGW,EAAKhB,aAX1CiB,QAkB1CX,EAAAA,EAAAA,KAAA,SAxC6BwB,QA4CnC,C","sources":["Screens/CreatorDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { useAuth } from '../context/AuthContext';\nimport { queryDocumentsCount } from '../utils/firebaseUtils';\nimport { COLLECTIONS } from '../constants';\nimport { Card, CardContent, Typography, Grid, Icon } from '@mui/material';\nimport CreatorDataTable from '../Components/CreatorDataTable.js';\n\nfunction CreatorDashboard() {\n  const [counts, setCounts] = useState({\n    instructorsCount: 0,\n    studiosCount: 0,\n    workshopsCount: 0,\n    openClassesCount: 0,\n    coursesCount: 0,\n  });\n  \n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    const fetchCounts = async () => {\n      const instructorsCount = await queryDocumentsCount(COLLECTIONS.INSTRUCTORS, 'createdBy', '==', currentUser.uid);\n      const studiosCount = await queryDocumentsCount(COLLECTIONS.STUDIO, \"UserId\", '==', currentUser.uid);\n      const workshopsCount = await queryDocumentsCount(COLLECTIONS.WORKSHOPS, \"UserId\", '==', currentUser.uid);\n      const openClassesCount = await queryDocumentsCount(COLLECTIONS.OPEN_CLASSES, \"UserId\", '==', currentUser.uid);\n      const coursesCount = await queryDocumentsCount(COLLECTIONS.COURSES, \"UserId\", '==', currentUser.uid);\n\n      setCounts({ \n        instructorsCount, \n        studiosCount, \n        workshopsCount, \n        openClassesCount, \n        coursesCount \n      });\n    };\n\n    fetchCounts();\n  }, [currentUser]);\n  \n  const isDashboardModuleVisible = process.env.REACT_APP_DASHBOARD_MODULES_VISIBLE === \"true\";\n  const cardItems = [\n    { title: \"Total Studios\", data: counts.studiosCount, link: \"#/modifyStudios\" },\n    { title: \"Total Instructors\", data: counts.instructorsCount, link: \"#/modifyInstructors\" }\n  ];\n  if (isDashboardModuleVisible) {\n    cardItems.push(\n      { title: \"Total Workshops\", data: counts.workshopsCount, link: \"#/modifyWorkshops\" },\n      { title: \"Total Open Classes\", data: counts.openClassesCount, link: \"#/modifyOpenClasses\" },\n      { title: \"Total Courses\", data: counts.coursesCount, link: \"#/modifyCourses\" },\n      { title: \"Studio Subscription\", data: counts.coursesCount, link: \"#/studioSubscription\" }\n    );\n  }\n\n  return (\n    <div style={{ minHeight: \"75vh\" }}>\n      <Typography variant=\"h4\" sx={{ color: isDarkModeOn ? \"white\" : \"black\", textTransform: 'capitalize' }}>\n        Dashboard\n      </Typography>\n\n      <Grid container spacing={2}>\n        {cardItems.map((item, index) => (\n          <Grid item xs={12} sm={6} md={4} key={index}>\n            <Card sx={{backgroundColor:isDarkModeOn?\"black\":\"white\"}}>\n              <CardContent >\n                <Typography variant=\"h6\" component=\"div\" sx={{color:isDarkModeOn?\"white\":\"black\"}}>\n                  <>\n                    {item.title}\n                    <a href={item.link} >\n                      <Icon baseClassName=\"fas\" className=\"fa-plus-circle\" color=\"primary\" />\n                    </a>\n                  </>\n                </Typography>\n                <Typography variant=\"h4\" sx={{color:isDarkModeOn?\"white\":\"black\"}} >{item.data}</Typography>\n                \n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n      <br/>\n      {isDashboardModuleVisible && <CreatorDataTable/>}\n    </div>\n  );\n}\n\nexport default CreatorDashboard;\n"],"names":["counts","setCounts","useState","instructorsCount","studiosCount","workshopsCount","openClassesCount","coursesCount","isDarkModeOn","useSelector","selectDarkModeStatus","currentUser","useAuth","useEffect","async","queryDocumentsCount","COLLECTIONS","INSTRUCTORS","uid","STUDIO","WORKSHOPS","OPEN_CLASSES","COURSES","fetchCounts","cardItems","title","data","link","_jsxs","style","minHeight","children","_jsx","Typography","variant","sx","color","textTransform","Grid","container","spacing","map","item","index","xs","sm","md","Card","backgroundColor","CardContent","component","_Fragment","href","Icon","baseClassName","className","process"],"sourceRoot":""}