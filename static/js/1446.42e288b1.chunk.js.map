{"version":3,"file":"static/js/1446.42e288b1.chunk.js","mappings":"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","sources":["Components/CardSliderCard.js","Components/NStudioCard.js","Screens/SearchPage.js","constants.js","utils/firebaseUtils.js"],"sourcesContent":["import React from 'react';\nimport NStudioCard from './NStudioCard';\n\nconst CardSliderCard = ({ studio }) => {\n  return (\n    <a href={`#/studio/${studio.id}`}>\n    <NStudioCard data={studio} img_src={\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}/>\n    </a>\n\n  );\n};\n\nexport default CardSliderCard;\n","\nimport React from 'react';\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport Chip from '@mui/joy/Chip';\nimport Box from '@mui/joy/Box';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/joy/Link';\nimport Typography from '@mui/joy/Typography';\nimport { Stack } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { CHIP_LEVELS_DESIGN, COLORS, danceStylesColorChips } from '../constants';\nimport IconButton from '@mui/joy/IconButton';\nimport Favorite from '@mui/icons-material/Favorite';\n\n\nexport default function NStudioCard({img_src,data}) {\n    const isDarkModeOn = useSelector(selectDarkModeStatus);\n    \n    const studioId = data.id?data.id:data.studioId;\n\n    const cardStyle = {\n      backgroundColor: isDarkModeOn ? '#444' : 'white',\n      padding: '0px',\n      color: isDarkModeOn ? 'white' : 'black',\n      marginRight: \"10px\",\n      width: 320,\n      maxWidth: \"100%\",\n      boxShadow: 'lg',\n      transition: 'opacity 0.3s ease',\n    };\n  \n    const cardHoverStyle = {\n      transform: 'scale(1.01)',\n    };\n  \n  return (\n    <Card variant=\"solid\" sx={{\n      ...cardStyle,\n      '&:hover': cardHoverStyle,\n    }}>\n      \n        <AspectRatio ratio=\"1.78\" style={{ position: 'relative'}}>\n          <img\n            src={data && data.iconUrl ? data.iconUrl :\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: '100%', height: 'auto', overflow: 'hidden' }}\n            \n          />\n          <Stack direction=\"row\" spacing={2} style={{ position: 'absolute', bottom: 0, left: 0, padding: '1px' }}>\n        {data && data.danceStyles && typeof data.danceStyles === 'string' ? (data.danceStyles.split(\",\").slice(0, 3).map((form, index) => (\n        <Chip\n            key={index}\n            color={index % 2 === 0 ? \"danger\" : \"success\"}  \n            sx={{ marginBottom: \"10px\", fontSize: '0.8rem',  \n                    bgcolor: danceStylesColorChips[index].backgroundColor,\n                    color: danceStylesColorChips[index].color, \n            }}\n        >\n            {form.trim()}\n        </Chip>\n        ))):(\n            <Chip\n            key={10}\n            color={10 % 2 === 0 ? \"danger\" : \"success\"} \n            style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n        >\n            {\"No danceforms\"}\n        </Chip>\n        )}\n\n        </Stack>\n\n        <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", top: 0, left: 0, padding: \"1px\", paddingTop: \"1px\" }}\n          >\n            {data && data.freeTrialAvailable &&(\n            \n                <Chip\n                  key={1}\n                 \n                  sx={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                    bgcolor: COLORS.LIME.backgroundColor,  // Set the background color\n                    color: COLORS.LIME.color,  // Set the text color\n                  }}\n                >\n                  {'Free Trial Available'}\n                </Chip>\n              \n            )}\n          </Stack>\n\n        </AspectRatio>\n      <CardContent style={{ padding: '10px' }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" columnGap={1}>\n          <Link\n            alignSelf=\"center\"\n            href={`#/studio/${studioId}`}\n            fontWeight=\"bold\"\n            color=\"neutral\"\n            textColor=\"text.primary\"\n            underline='none'\n            overlay\n            whiteSpace='nowrap'\n            overflow='hidden'\n            textOverflow='ellipsis'\n            style={{ color: isDarkModeOn ? 'white' : 'black' }}\n          >\n            {data && data.studioName ? data.studioName : \"    \"}\n          </Link>\n          {data && data.avgRating && data.avgRating>0 ?\n            <Typography width={52} flexShrink={0} alignSelf=\"center\" style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n              ⭐ {data.avgRating.toFixed(1)}\n            </Typography> : null\n          }\n        </Box>\n        <Typography style={{ color: isDarkModeOn ? 'white' : 'black' }} level=\"body-xs\">{data.street ? data.street : \".  \"}</Typography>\n        <IconButton\n          hidden\n          aria-label=\"Like minimal photography\"\n          size=\"md\"\n          variant=\"solid\"\n          color=\"danger\"\n          sx={{\n            position: 'absolute',\n            zIndex: 2,\n            borderRadius: '50%',\n            right: '1rem',\n            bottom: '2rem',\n            transform: 'translateY(50%)',\n          }}\n        >\n          <Favorite />\n        </IconButton>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography alignSelf=\"center\" fontSize={12} style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n            {data && data.minFee && data.minFee>=0 &&(`@ ₹${data.minFee} onwards`)}\n          </Typography>\n          <Button\n            size='small'\n            variant=\"contained\"\n            sx={{\n              alignSelf: \"center\",\n              color: 'white',\n              backgroundColor: '#735EAB',\n              '&:hover': {\n                backgroundColor: '#735EAB',\n                color: 'white',\n              },\n              '&.Mui-disabled': {\n                backgroundColor: isDarkModeOn ? 'rgba(115, 94, 171, 0.5)' : 'rgba(115, 94, 171, 0.3)',\n                color: 'rgba(255, 255, 255, 0.5)',\n              },\n            }}\n            type='button'\n          >\n            Explore\n          </Button>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport {Form, Button, Col,Row, Modal, ButtonGroup,\n      Container,} from \"react-bootstrap\";\nimport { Badge as MuiBadge, Chip as MuiChip, Autocomplete as MuiAutocomplete,\n  TextField as MuiTextField, createTheme,ThemeProvider,\n  Stack as MuiStack,Grid as MuiGrid, Box } from \"@mui/material\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport danceStyles from \"../danceStyles.json\";\nimport CardSliderCard from \"../Components/CardSliderCard\";\nimport './SearchPage.css';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { COLLECTIONS, LEVELS, BASEURL_PROD } from \"../constants\";\nimport NWorkshopCard from \"../Components/NWorkshopCard\";\nimport NOpenClassCard from \"../Components/NOpenClassCard\";\nimport NCourseCard from \"../Components/NCourseCard\";\nimport { useMediaQuery } from '@mui/material';\nimport { useLoader } from \"../context/LoaderContext\";\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\nconst FILTER_SEARCH_TYPE_KEY = \"filterSearchType\";\nconst FILTER_DISTANCES_KEY = \"filterDistances\";\nconst FILTER_DANCE_FORMS_KEY = \"filterDanceForms\";\nconst FILTER_USER_GEO_LOC = \"browserGeoLoc\";\n\nconst levelsTypes = [LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]\nconst MAX_PRICE  = 10**10\n\nconst distances = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst searchTypes = [\n  { name: \"studio\", label: \"Studios\", collection: COLLECTIONS.STUDIO },\n  { name: \"workshop\", label: \"Workshops\", collection: COLLECTIONS.WORKSHOPS },\n  { name: \"openClass\",label: \"Open Classes\",collection: COLLECTIONS.OPEN_CLASSES},\n  { name: \"course\", label: \"Courses\", collection: COLLECTIONS.COURSES },\n];\n\nconst getCollectionForSearchType = (searchType) => {\n  const searchTypeObject = searchTypes.find(type => type.name === searchType);\n  return searchTypeObject ? searchTypeObject.collection : COLLECTIONS.STUDIO;\n};\n\nconst SearchPage = () => {\n  const { setIsLoading } = useLoader();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [selectedDistances, setSelectedDistances] = useState(\"\");\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [showFilters, setShowFilters] = useState(false);\n  const [studioIdName,setStudioIdName] = useState({});\n  const [showFilterValue, setShowFilterValue] = useState(\"distances\");\n  const [activeFilters, setActiveFilters] = useState(0);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedDanceForms, setSelectedDanceForms] = useState([]);\n  const [selectedSearchType, setSelectedSearchType] = useState(\"studio\"); \n  const [selectedLevel, setSelectedLevel] = useState(\"All\");\n  const [selectedMaxPrice, setSelectedMaxPrice] = useState(MAX_PRICE);\n  const [searchData, setSearchData] = useState({\n    workshop: [],\n    openClass: [],\n    course: [],\n  });\n\n  const danceForms = danceStyles.danceStyles.map((danceForm) => ({\n    value: danceForm,\n    label: danceForm,\n  }));\n\n  const styles = {\n    valueContainer: (base) => ({\n      ...base,\n      maxHeight: 100,\n      overflowY: \"auto\",\n    }),\n    multiValue: (base, state) => {\n      return state.data.isFixed ? { ...base, backgroundColor: \"gray\" } : base;\n    },\n    multiValueLabel: (base, state) => {\n      return state.data.isFixed\n        ? { ...base, fontWeight: \"bold\", color: \"white\", paddingRight: 6 }\n        : base;\n    },\n    multiValueRemove: (base, state) => {\n      return state.data.isFixed ? { ...base, display: \"none\" } : base;\n    },\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const themeBar = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\", // Dynamically set dark or light mode\n    },\n  });\n\n  const handleInputChange = (event, value) => {\n    setQuery(value);\n  };\n  const countActiveFilters = () => {\n    let count = 0;\n    if (localStorage.getItem(FILTER_DISTANCES_KEY)) count++;\n    // if (localStorage.getItem(FILTER_SEARCH_TYPE_KEY)) count++;\n    if (selectedLevel && selectedLevel !== LEVELS.ALL) count++;\n    if (selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) count++;\n    const storedDanceForm = localStorage.getItem(FILTER_DANCE_FORMS_KEY);\n    if (storedDanceForm) count += JSON.parse(storedDanceForm).length;\n    return count;\n  };\n  const fetchIdNameMp = async (city) => {\n    try {\n      const apiEndpoint = `${BASEURL_PROD}api/autocomplete/?&city=${city}`;\n      const response = await fetch(apiEndpoint);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      \n      const data = await response.json();\n      setStudioIdName(data);\n      \n    } catch (error) {\n      console.error(\"Error in processing:\", error);\n    }\n  };\n\n  const handleSearch = () => {\n    setIsLoading(true);\n    const storedSelectedSearchType =\n      localStorage.getItem(FILTER_SEARCH_TYPE_KEY) ||\n      selectedSearchType ||\n      \"studio\";\n\n      \n      if (query == null) {\n      setQuery(\"\");\n    }\n    let apiEndpoint = `${BASEURL_PROD}api/search/?query=${query}`;\n    const entity = getCollectionForSearchType(storedSelectedSearchType);\n\n    const city = localStorage.getItem(FILTER_LOCATION_KEY) || \"New Delhi\";\n    apiEndpoint += `&city=${encodeURIComponent(city)}`;\n    fetchIdNameMp(city)\n    if (storedSelectedSearchType) {\n      apiEndpoint += `&entity=${encodeURIComponent(entity)}`;\n    }\n    \n    const storedSelectedDanceForms = JSON.parse(localStorage.getItem(FILTER_DANCE_FORMS_KEY) || \"[]\");\n    if (storedSelectedDanceForms.length > 0) {\n      apiEndpoint += `&danceStyle=${encodeURIComponent(storedSelectedDanceForms.join(\",\"))}`;\n    }\n\n    if (entity !== COLLECTIONS.STUDIO && selectedLevel && selectedLevel !== LEVELS.ALL) {\n      apiEndpoint += `&level=${encodeURIComponent(selectedLevel)}`\n    }\n\n    if ((entity === COLLECTIONS.WORKSHOPS || entity === COLLECTIONS.COURSES) && selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) {\n      apiEndpoint += `&price=${encodeURIComponent(selectedMaxPrice)}`\n    }\n\n    const geoLocation = getGeoLocationFromLocalStorage();\n    if (selectedDistances && geoLocation && localStorage.getItem(FILTER_DISTANCES_KEY)) {\n      apiEndpoint += `&distance=${encodeURIComponent(selectedDistances)}&user_lat=${encodeURIComponent(geoLocation.latitude)}&user_lon=${encodeURIComponent(geoLocation.longitude)}`;\n    }\n\n    console.log(\"apiEndpoint \", apiEndpoint);\n    fetch(apiEndpoint)\n      .then((response) => response.json())\n      .then((data) => {\n        const formattedData = Array.isArray(data) ? data : Object.values(data);\n        setResults(formattedData);\n      })\n      .catch((error) =>\n        console.error(\"Error fetching search results:\", error)\n      ).finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n\n  const handleChange = async (event, value) => {\n    const baseUrl = `${BASEURL_PROD}api`;\n    //setQuery(event.target.value);\n    setQuery(value);\n\n    if (value.length >= 3) {\n      try {\n        const FILTER_LOCATION_KEY = \"filterLocation\";\n        const defaultCity = \"New Delhi\";\n\n        const city = localStorage.getItem(FILTER_LOCATION_KEY) || defaultCity;\n        const cityParam = encodeURIComponent(city || defaultCity);\n\n        const endpoint = `${baseUrl}/autocomplete?query=${value}&city=${cityParam}`;\n\n        //const endpoint = baseUrl + `/autocomplete?query=${value}&city=Patna`;\n        const response = await axios.get(endpoint);\n        console.log(\"Response :\",response.data)\n        const filteredSuggestions = Object.values(response.data).filter(value => value !== null);\n        setSuggestions(filteredSuggestions);\n\n      } catch (error) {\n        console.error(\"Error fetching autocomplete suggestions:\", error);\n      }\n    } else {\n      // Clear suggestions if the input length is less than 3 characters\n      setSuggestions([]);\n    }\n  };\n\n  const handleApplyFilters = () => {\n    localStorage.setItem(FILTER_DISTANCES_KEY, selectedDistances);\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, selectedSearchType);\n    localStorage.setItem(\n      FILTER_DANCE_FORMS_KEY,\n      JSON.stringify(selectedDanceForms)\n    );\n    setActiveFilters(countActiveFilters());\n    //dispatch(refreshLocation())\n    setShowFilters(false);\n    handleSearch();\n  };\n\n  const handleClearFilters = () => {\n    setSelectedDistances(\"\");\n    setSelectedDanceForms([]);\n    setSelectedSearchType(\"studio\");\n    setSelectedMaxPrice(MAX_PRICE);\n    setSelectedLevel(LEVELS.ALL);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n    localStorage.removeItem(FILTER_DANCE_FORMS_KEY);\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, \"studio\");\n    setActiveFilters(countActiveFilters());\n    setShowFilters(false);\n    handleSearch();\n  };\n\n  const handleSelectChange = (selectedOptions) => {\n    setSelectedDanceForms(\n      selectedOptions ? selectedOptions.map((option) => option.value) : []\n    );\n  };\n\n  const handleSearchTypeClick = (clickedSearchType) => {\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, clickedSearchType);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n\n    setSelectedDistances(\"\");\n    setSelectedLevel(LEVELS.ALL);\n    setSelectedMaxPrice(MAX_PRICE);\n    setSelectedSearchType(clickedSearchType);\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  const handleRemoveDistance = () => {\n    setSelectedDistances(null);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  const handleRemoveDanceForm = (danceFormToRemove) => {\n    const filteredDanceForms = selectedDanceForms.filter(\n      (danceForm) => danceForm !== danceFormToRemove\n    );\n    setSelectedDanceForms(filteredDanceForms);\n    localStorage.setItem(\n      FILTER_DANCE_FORMS_KEY,\n      JSON.stringify(filteredDanceForms)\n    );\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  useEffect(() => {\n    const storedDistances = localStorage.getItem(FILTER_DISTANCES_KEY);\n    const storedDanceForm = localStorage.getItem(FILTER_DANCE_FORMS_KEY);\n    const storedSearchType = localStorage.getItem(FILTER_SEARCH_TYPE_KEY);\n\n    if (storedSearchType) {\n      setSelectedSearchType(storedSearchType);\n    } else {\n      setSelectedSearchType(\"studio\");\n      localStorage.setItem(FILTER_SEARCH_TYPE_KEY, \"studio\");\n    }\n\n    if (storedDistances) {\n      setSelectedDistances(storedDistances);\n    }\n\n    if (storedDanceForm) {\n      setSelectedDanceForms(JSON.parse(storedDanceForm));\n    }\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  }, [selectedLevel, selectedMaxPrice]);\n\n  const [label, setLabel] = useState('Search studios, workshops, open classes, courses...');\n\n  // Function to update label based on window width\n  const updateLabel = () => {\n    if (window.innerWidth < 600) {\n      setLabel('Search...');\n    } else {\n      setLabel('Search studios, workshops, open classes, courses...');\n    }\n  };\n\n  // Update label on component mount and window resize\n  useEffect(() => {\n    updateLabel(); // Set initial label\n    window.addEventListener('resize', updateLabel); // Listen for resize\n\n    return () => {\n      window.removeEventListener('resize', updateLabel); // Clean up listener\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        backgroundColor: isDarkModeOn ? \"#202020\" : \"white\",\n        padding: \"10px\",\n        minHeight: \"75vh\",\n      }}\n    >\n      <header>\n        <Container style={{ width: \"100%\" }}>\n          <MuiGrid container alignItems=\"center\">\n            <MuiGrid item xs={12}>\n              <ThemeProvider theme={themeBar}>\n                <MuiStack\n                  style={{\n                    width: \"100%\",\n                    paddingRight: 0,\n                    marginTop: 0,\n                    marginLeft: 0,\n                    marginBottom: 0,\n                  }}\n                  direction=\"row\"\n                  spacing={1}\n                >\n                  <MuiAutocomplete\n                    value={query}\n                    onInputChange={handleChange}\n                    onChange={handleInputChange}\n                    options={suggestions}\n                    getOptionLabel={(option) => option.toString()}\n                    renderInput={(params) => (\n                      <MuiTextField\n                      className=\"autocomplete-input\" // Style for Css\n                        {...params}\n                        label={label}\n                        variant=\"outlined\"\n                        InputProps={{\n                          ...params.InputProps,\n                          endAdornment: (\n                            <InputAdornment\n                              position=\"end\"\n                              style={{\n                                marginRight: 0,\n                                marginTop: 0,\n                                marginLeft: 0,\n                                marginBottom: 0,\n                              }}\n                            >\n                              <SearchIcon\n                                style={{\n                                  cursor: \"pointer\",\n                                  color: isDarkModeOn ? \"#892CDC\" : \"black\",\n                                  marginRight: 1,\n                                  width:\"40px\"\n                                }}\n                                onClick={handleSearch}\n                              />\n                            </InputAdornment>\n                          ),\n                          style: {\n                            paddingRight: 0,\n                            marginTop: 0,\n                            marginLeft: 0,\n                            marginBottom: 0,\n                          },\n                        }}\n                      />\n                    )}\n                    style={{ flex: 1/1 }}\n                  />\n                </MuiStack>\n              </ThemeProvider>\n            </MuiGrid>\n          </MuiGrid>\n          <br></br>\n          <Row className=\"align-items-center\">\n            <div className=\"horizontal-scroll-wrapper-for-filters\">\n              {/* Studio, Workshops, Open Classes, Courses */}\n              {searchTypes.map((searchType) => (\n                <Col key={searchType.name} xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                  <button\n                    onClick={() => handleSearchTypeClick(searchType.name)} // Add this line\n                    style={{\n                      cursor: 'pointer',\n                      backgroundColor: selectedSearchType === searchType.name\n                        ? (isDarkModeOn ? \"white\" : \"black\")\n                        : (isDarkModeOn ? \"black\" : \"white\"),\n                      color: selectedSearchType === searchType.name\n                        ? (isDarkModeOn ? \"black\" : \"white\")\n                        : (isDarkModeOn ? \"white\" : \"black\"),\n                      borderRadius: '10px',\n                      fontWeight: 'bold',\n                      border: `1px solid ${isDarkModeOn ? \"white\" : \"black\"}`,\n                      padding: '5px 10px',\n                      transition: 'background-color 0.3s, color 0.3s',\n                    }}\n                  >\n                    {searchType.label}\n                  </button>\n                </Col>\n              ))}\n            </div>\n          </Row>\n\n          <Row className=\"align-items-center\">\n          <div className=\"horizontal-scroll-wrapper-for-filters\"> \n            <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n              <MuiBadge\n                onClick={toggleFilters}\n                badgeContent={activeFilters}\n                color={isDarkModeOn ? \"warning\" : \"secondary\"}\n                pill\n              >\n                <MuiChip\n                  className=\"rounded-3\"\n                  color={isDarkModeOn ? \"warning\" : \"secondary\"}\n                  label=\"&#9776; filters\"\n                  variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                />\n              </MuiBadge>\n            </Col>\n\n            {(selectedDanceForms.length || selectedDistances || (selectedLevel && selectedLevel !== LEVELS.ALL) ||(selectedMaxPrice && selectedMaxPrice !== MAX_PRICE)) && (\n              <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                <MuiBadge\n                  color=\"error\"\n                  onClick={handleClearFilters}\n                  style={{ cursor: \"pointer\" }}\n                  pill\n                >\n                  <MuiChip\n                    color=\"error\"\n                    label=\"Clear All\"\n                    onDelete={handleClearFilters}\n                    style={{ cursor: \"pointer\" }}\n                    variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                    className=\"rounded-3\"\n                  />\n                </MuiBadge>\n              </Col>\n            )}\n\n            <Box display=\"flex\">\n            {/* Filter Badges */}\n            {selectedDistances && (\n              <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                <MuiBadge color=\"success\" pill>\n                  <MuiChip\n                    className=\"rounded-3\"\n                    color=\"success\"\n                    label={`Distance: ${selectedDistances} km`}\n                    variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                    onDelete={handleRemoveDistance}\n                  />\n                </MuiBadge>\n              </Col>\n            )}\n\n            {(selectedLevel && selectedLevel !== LEVELS.ALL) &&(\n              <Col xs=\"auto\">\n                {\n                  <MuiBadge\n                    key={selectedLevel}\n                    color=\"info\"\n                    style={{\n                      marginLeft: \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Level: ${selectedLevel}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => setSelectedLevel(LEVELS.ALL)}\n                    />\n                  </MuiBadge>\n                }\n              </Col>\n            )}\n\n            {(selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) &&(\n              <Col xs=\"auto\">\n                {\n                  <MuiBadge\n                    key={selectedMaxPrice}\n                    color=\"info\"\n                    style={{\n                      marginLeft: \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Prices Upto: ${selectedMaxPrice}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => setSelectedMaxPrice(MAX_PRICE)}\n                    />\n                  </MuiBadge>\n                }\n              </Col>\n            )}\n\n            {selectedDanceForms && (\n              <Col xs=\"auto\">\n                {selectedDanceForms.map((danceForm, index) => (\n                  <MuiBadge\n                    key={index}\n                    color=\"info\"\n                    style={{\n                      marginLeft: index !== 0 ? \"0.25rem\" : \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Dance Form: ${danceForm}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => handleRemoveDanceForm(danceForm)}\n                    />\n                  </MuiBadge>\n                ))}\n              </Col>\n            )}\n            </Box>\n           </div>\n          </Row>\n        </Container>\n      </header>\n\n      <Modal show={showFilters} onHide={toggleFilters} backdrop=\"static\">\n        <Modal.Header closeButton>\n          <Modal.Title>Filters</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            {/* Left side for filters list */}\n            <Col md={4}>\n              <h5>Filter By:</h5>\n              <ul style={{ listStyleType: \"none\", padding: 0 }}>\n\n                {selectedSearchType === \"studio\" && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"distances\"), setShowFilters(true)\n                      )}\n                    >\n                      Distances\n                    </li>\n                  </>\n                )}\n\n              {(selectedSearchType === \"workshop\" || selectedSearchType === \"course\") && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"price\"), setShowFilters(true)\n                      )}\n                    >\n                      Price\n                    </li>\n                  </>\n                )}\n\n                {selectedSearchType !== \"studio\" && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"level\"), setShowFilters(true)\n                      )}\n                    >\n                      Level\n                    </li>\n                    \n                  </>\n                )}\n\n                <hr style={{ margin: \"5px 0\" }}></hr>\n                <li\n                  style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                  onClick={() => (\n                    setShowFilterValue(\"danceForm\"), setShowFilters(true)\n                  )}\n                >\n                  Dance Forms\n                </li>\n                <hr style={{ margin: \"5px 0\" }}></hr>\n              </ul>\n            </Col>\n\n            <Col md={8}>\n              {showFilters && showFilterValue === \"distances\" && (\n                <Form.Group controlId=\"filterDistances\">\n                  <Form.Label>Distances:</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedDistances}\n                    onChange={(e) => setSelectedDistances(e.target.value)}\n                  >\n                    <option value=\"\">Select distance</option>\n                    {distances.map((distance) => (\n                      <option key={distance} value={distance}>\n                        {distance} km\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"level\" && (\n                <Form.Group controlId=\"filterLevel\">\n                  <Form.Label>Level :</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedLevel}\n                    onChange={(e) => setSelectedLevel(e.target.value)}\n                  >\n                    <option value=\"\">Select Lavel</option>\n                    {levelsTypes.map((level) => (\n                      <option key={level} value={level}>\n                        {level} \n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"price\" && (\n                <Form.Group controlId=\"filterPrice\">\n                  <Form.Label>Prices :</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedMaxPrice}\n                    onChange={(e) => setSelectedMaxPrice(e.target.value)}\n                  >\n                    <option value=\"\">Prices below</option>\n                    {[499,999,1499,1999,2999,4999,9999,MAX_PRICE].map((price) => (\n                      <option key={price} value={price}>\n                        {price >= MAX_PRICE ?\"All\":price} \n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"danceForm\" && (\n                <Form.Group controlId=\"filterDanceForms\">\n                  <Form.Label>Dance Forms:</Form.Label>\n                  <Select\n                    isMulti\n                    value={danceForms.filter((option) =>\n                      selectedDanceForms.includes(option.value)\n                    )}\n                    onChange={handleSelectChange}\n                    options={danceForms}\n                    closeMenuOnSelect={false}\n                    placeholder=\"Select Dance Forms\"\n                    styles={styles}\n                  />\n                </Form.Group>\n              )}\n            </Col>\n          </Row>\n          <ButtonGroup style={{ marginTop: \"1rem\" }}>\n            <Button variant=\"primary\" onClick={handleApplyFilters}>\n              Apply\n            </Button>\n            <Button\n              variant=\"danger\"\n              onClick={handleClearFilters}\n              style={{ marginLeft: \"10px\" }}\n            >\n              Clear All Filters\n            </Button>\n          </ButtonGroup>\n        </Modal.Body>\n      </Modal>\n\n      <hr></hr>\n      {selectedSearchType === \"studio\" && (\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n          {results.length === 0 ? (\n            <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n          ) : (\n            results.map((studio, index) => (\n              <div\n                key={index}\n                className=\"studio-card-container\"\n                style={{ padding: \"0.2rem\" }}\n                md={2}\n              >\n                <a\n                  href={`#/studio/${studio.studioId}`}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <CardSliderCard studio={studio} />\n                </a>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n\n      {selectedSearchType === \"workshop\" && (\n        \n          <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n            {results.length === 0 ? (\n              <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n            ) : (\n              results.map((data, index) => (\n                <div\n                  key={index}\n                  className=\"studio-card-container\"\n                  style={{ padding: \"0.2rem\" }}\n                  md={2}\n                >\n                  \n                    <NWorkshopCard\n                    key={data.id}\n                    dataItem={data}\n                    studioIdName={studioIdName}\n                  />\n                  \n                </div>\n              ))\n            )}\n          </div>\n      \n        \n      )}\n      {selectedSearchType === \"openClass\" && (\n         <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n         {results.length === 0 ? (\n           <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n         ) : (\n           results.map((data, index) => (\n             <div\n               key={index}\n               className=\"studio-card-container\"\n               style={{ padding: \"0.2rem\" }}\n               md={2}\n             >\n               <NOpenClassCard\n                key={data.id}\n                dataItem={data}\n                studioIdName={studioIdName}\n              />\n             </div>\n           ))\n         )}\n       </div>\n      )}\n      {selectedSearchType === \"course\" && (\n       <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n       {results.length === 0 ? (\n         <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n       ) : (\n         results.map((data, index) => (\n           <div\n             key={index}\n             className=\"studio-card-container\"\n             style={{ padding: \"0.2rem\" }}\n             md={2}\n           >\n             <NCourseCard\n            key={data.id}\n            dataItem={data}\n            studioIdName={studioIdName}\n          />\n           </div>\n         ))\n       )}\n     </div>\n      )}\n    </div>\n  );\n};\n\nfunction getGeoLocationFromLocalStorage() {\n  // Retrieve the stored JSON string from localStorage\n  var geoLocString = localStorage.getItem(FILTER_USER_GEO_LOC);\n\n  // Check if the data exists in localStorage\n  if (geoLocString !== null) {\n    try {\n      // Parse the JSON string to get an object\n      var geoLocObject = JSON.parse(geoLocString);\n      // Check if the latitude and longitude properties exist in the parsed object\n      if (\n        geoLocObject &&\n        geoLocObject[\"latitude\"] &&\n        geoLocObject[\"longitude\"]\n      ) {\n        // Extract latitude and longitude from the object\n        var latitude = geoLocObject.latitude;\n        var longitude = geoLocObject.longitude;\n\n        // Return an object with latitude and longitude\n        return { latitude: latitude, longitude: longitude };\n      }\n    } catch (error) {\n      console.error(\"Error parsing JSON:\", error);\n    }\n  }\n\n  // Return null if there's no valid data or an error occurred\n  return null;\n}\n\nexport default SearchPage;\n","import { FaSnowflake, FaWifi, FaTint, FaToilet, FaPlug, FaFireExtinguisher, FaFirstAid, FaVideo, FaCreditCard, FaParking  } from 'react-icons/fa';\n\nexport const STATUSES = {\n    SUBMITTED: \"Submitted\",\n    UNDER_REVIEW: \"Under Review\",\n    REVIEWED: \"Reviewed\",\n    VERIFIED: \"Verified\",\n    VERIFICATION_FAILED: \"Verification Failed\",\n};\n\nexport const DRAFT_COLLECTIONS = {\n    DRAFT_STUDIOS: 'DraftStudios',\n    DRAFT_WORKSHOPS: 'DraftWorkshops',\n    DRAFT_OPEN_CLASSES: 'DraftOpenClasses',\n    DRAFT_COURSES: 'DraftCourses'\n};\n\nexport const LEVELS = {\n    ALL : \"All\",\n    BEGINNERS : \"Beginner\", \n    INTERMEDIATE :\"Intermediate\", \n    ADVANCED :\"Advanced\"\n}\nexport const ENTITY_FLAG = {\n    INTERNET_CONV_CHARGES_WORKSHOPS_COURSES_INR : 30,\n    WORKSHOPS_BOOKING_LIMIT : 10,\n    OPEN_CLASSES_BOOKING_LIMIT : 2,\n    COURSES_BOOKING_LIMIT : 10,\n}\n\n\nexport const SERVER_URLS = {\n    CLOUD : process.env.REACT_APP_BACKEND_URL,\n    LOCAL : 'http://127.0.0.1:8000/'\n}\n\nexport const COLORS = {\n    GREEN: { backgroundColor: \"#28a745\", color: \"#fff\" },     // Green background, white text\n    BLUE: { backgroundColor: \"#007bff\", color: \"#fff\" },      // Blue background, white text\n    YELLOW: { backgroundColor: \"#ffc107\", color: \"#000\" },    // Yellow background, black text\n    RED: { backgroundColor: \"#dc3545\", color: \"#fff\" },       // Red background, white text\n    PURPLE: { backgroundColor: \"#6f42c1\", color: \"#fff\" },    // Purple background, white text\n    ORANGE: { backgroundColor: \"#fd7e14\", color: \"#fff\" },    // Orange background, white text\n    TEAL: { backgroundColor: \"#20c997\", color: \"#fff\" },      // Teal background, white text\n    PINK: { backgroundColor: \"#e83e8c\", color: \"#fff\" },      // Pink background, white text\n    GRAY: { backgroundColor: \"#6c757d\", color: \"#fff\" },       // Gray background, white text\n\n    LIGHTBLUE: { backgroundColor: \"#17a2b8\", color: \"#fff\" }, // Light blue background, white text\n    DARKBLUE: { backgroundColor: \"#343a40\", color: \"#fff\" },  // Dark blue background, white text\n    CYAN: { backgroundColor: \"#00bcd4\", color: \"#fff\" },      // Cyan background, white text\n    INDIGO: { backgroundColor: \"#6610f2\", color: \"#fff\" },    // Indigo background, white text\n    LIME: { backgroundColor: \"#cddc39\", color: \"#000\" },      // Lime background, black text\n    AMBER: { backgroundColor: \"#ffca28\", color: \"#000\" },     // Amber background, black text\n    BROWN: { backgroundColor: \"#795548\", color: \"#fff\" },     // Brown background, white text\n    LIGHTGREEN: { backgroundColor: \"#8bc34a\", color: \"#000\" },// Light green background, black text\n    DEEPPURPLE: { backgroundColor: \"#673ab7\", color: \"#fff\" },// Deep purple background, white text\n    DEEPORANGE: { backgroundColor: \"#ff5722\", color: \"#fff\" },// Deep orange background, white text\n    BLACK: { backgroundColor: \"#000000\", color: \"#fff\" },     // Black background, white text\n    WHITE: { backgroundColor: \"#ffffff\", color: \"#000\" },     // White background, black text\n    SILVER: { backgroundColor: \"#c0c0c0\", color: \"#000\" },    // Silver background, black text\n    GOLD: { backgroundColor: \"#ffd700\", color: \"#000\" },      // Gold background, black text\n    NAVY: { backgroundColor: \"#001f3f\", color: \"#fff\" },      // Navy background, white text\n    OLIVE: { backgroundColor: \"#3d9970\", color: \"#fff\" },     // Olive background, white text\n\n  };\n\nexport const CHIP_LEVELS_DESIGN = {\n    [LEVELS.ALL]: COLORS.GREEN,           // Green background, white text\n    [LEVELS.BEGINNERS]: COLORS.BLUE,     // Blue background, white text\n    [LEVELS.INTERMEDIATE]: COLORS.YELLOW,  // Yellow background, black text\n    [LEVELS.ADVANCED]: COLORS.RED      // Red background, white text\n  };\n  \n\n  \nexport const danceStylesColorChips = [COLORS.PURPLE,COLORS.ORANGE,COLORS.TEAL,COLORS.LIME]\n\nexport const COLLECTIONS = {\n    USER: \"User\",\n    USER_KYC:\"UserKyc\",\n    ADMIN:\"Admin\",\n    REVIEWS: \"Reviews\",\n    TRANSACTIONS: \"Transactions\",\n    STUDIO: \"Studio\",\n    INSTRUCTORS: \"Instructors\",\n    FREE_TRIAL_BOOKINGS:\"FreeTrialBookings\",\n    WORKSHOPS: 'Workshops',\n    OPEN_CLASSES: 'OpenClasses',\n    COURSES: 'Courses',\n    BOOKINGS: 'Bookings',\n}\n\nexport const STORAGES ={\n    STUDIOIMAGES:'StudioImages',\n    STUDIOICON:'StudioIcon',\n    STUDIOANNOUNCEMENTS :'StudioAnnouncements',\n    USERIMAGE:'UserImage',\n    INSTRUCTORIMAGES: 'InstructorImages',\n    WORKSHOPICON :\"WorkshopIcon\",\n    WORKSHOPIMAGES :\"WorkshopImages\",\n    OPENCLASSICON :\"OpenClassIcon\",\n    COURSEICON :\"CourseIcon\",\n    CREATORS_KYC_DOCUMENTS :\"CreatorKycDocuments\"\n}\n\nexport const SEARCH_FILTERS ={\n    DANCEFORMS:'danceforms',\n    DISTANCES:'distances',\n}\n\nexport const BASEURL_DEV = \"http://0.0.0.0:8000/\"\nexport const BASEURL_PROD= process.env.REACT_APP_BACKEND_URL\n\nexport const AMENITIES_ICONS = {\n    \"AC\": <FaSnowflake />,\n    \"Free Wifi\": <FaWifi />,\n    \"RO Water\": <FaTint />,\n    \"Toilet\": <FaToilet />,\n    \"Power Backup\": <FaPlug />,\n    \"Fire Extinguisher\": <FaFireExtinguisher />,\n    \"First Aid Kit\": <FaFirstAid />,\n    \"CCTV Camera\": <FaVideo />,\n    \"Card Payment\": <FaCreditCard />,\n    \"Parking Space\": <FaParking />,\n};\n\n","import { doc, getDoc, setDoc, updateDoc, deleteDoc, collection, query, getDocs, where, getCountFromServer } from 'firebase/firestore';\nimport { db } from '../config';\nimport {ref,listAll,getDownloadURL,uploadBytes, deleteObject, uploadBytesResumable  } from \"firebase/storage\";\nimport { storage } from '../config';\nimport { BASEURL_DEV, BASEURL_PROD } from '../constants';\nimport secureLocalStorage from 'react-secure-storage';\n\nexport const setCreatorMode = async (uid) => {\n  const BASEURL = BASEURL_PROD;\n  const url = `${BASEURL}crud/getUserMode/${uid}`;\n  //console.log(\"creatorMode uid\", uid, url);\n  \n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (data.success) {\n      let mode = false;\n      if (data.data === true) {\n        mode = true;\n      }\n      //console.log(\"setCreatorMode: Is User a creator?\", mode);\n      secureLocalStorage.setItem('CreatorMode', mode);\n    } else {\n      console.log(\"Error: \", data.message || \"Unknown error\");\n      //secureLocalStorage.setItem('CreatorMode', false);\n    }\n    \n  } catch (error) {\n    console.log(\"Error fetching user mode: \", error);\n    secureLocalStorage.setItem('CreatorMode', false);\n  }\n}\n\nexport const fetchStudioEntities = async (studioId, entityType, setState) => {\n  const BASE_URL = BASEURL_PROD;\n  try {\n    const url = `${BASE_URL}crud/${studioId}/${entityType}/`;\n    console.log(url)\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (data.success) {\n      setState(data.data);\n    } else {\n      console.error(`Error fetching ${entityType}:`, data.error);\n    }\n  } catch (error) {\n    console.error(`Error fetching ${entityType}:`, error);\n  }\n};\n\n\nexport const getCreatorMode = async () => {\n  try{\n    const mode = secureLocalStorage.getItem('CreatorMode');\n    console.log(\"getCreatorMode \",mode)\n    if (mode){\n      return mode\n    }else{\n      return false\n    }\n  } \n  catch(error){\n    console.log(\" error\");\n    return false\n  }\n}\n\nexport const setGetCreatorModeOnMount = async (uid) => {\n  await setCreatorMode(uid);\n  return await getCreatorMode();\n};\n\n\n// Read operation with image URL\nexport const readDocumentWithImageUrl = async (collectionName, productId) => {\n    console.log(\"Debug \",`${collectionName}/${productId}`)\n    const storagePath = `${collectionName}/${productId}`;\n    const folderRef = ref(storage,storagePath);\n    try {\n        const result = await listAll(folderRef);\n        if (result.items.length > 0) {\n            const firstFileRef = result.items[0];\n            const url = await getDownloadURL(firstFileRef);\n            console.log('Debug URL:', url);\n            return url;\n          } else {\n            console.log('Debug No files found in the folder.');\n            return null;\n          }\n    } catch (error) {\n      console.error('Error getting image URL:', error);\n      return null;\n    }\n  };\n\n// Read operation\nexport const readDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    const docSnapshot = await getDoc(docRef);\n    return docSnapshot.exists() ? docSnapshot.data() : null;\n};\n\n// Create or Update operation\nexport const saveDocument = async (collectionName, documentId, data) => {\n    const docRef = doc(db, collectionName, documentId);\n    await setDoc(docRef, data, { merge: true });\n    return data;\n};\n\n\nexport const handleSavePostOTPSuccess = async (collectionName, documentId, phoneNumber) => {\n  const docRef = doc(db, collectionName, documentId);\n  await updateDoc(docRef, {isPhoneNumberVerified:true,phoneNumber});\n  return true;\n};\n\n// Update specific fields in a document\nexport const updateDocumentFields = async (collectionName, documentId, fields) => {\n    const docRef = doc(db, collectionName, documentId);\n    await updateDoc(docRef, fields);\n    return { id: documentId, ...fields };\n};\n\n// Delete operation\nexport const deleteDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    await deleteDoc(docRef);\n    return { id: documentId };\n};\n\n// Query operation\nexport const queryDocuments = async (collectionName, conditions) => {\n    const q = query(collection(db, collectionName, conditions));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n};\n\nexport const queryDocumentsCount = async (collectionName,field,operation,value) => {\n    console.log(\"Hiii \",collectionName,field,operation,value)\n    const q = query(collection(db, collectionName), where(field,operation,value));\n    const snapshot = await getCountFromServer(q);\n    return snapshot.data().count;\n};\n\n\n  // Function to delete all images in a folder\nexport  const deleteAllImagesInFolder = async (storageFolder, entityId) => {\n    /*\n    Description: Deletes all images in the specified folder associated with the given entityId.\n\n    Args:\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: The unique identifier of the entity whose images are to be deleted eg UserId,StudioId like thing.\n    */\n    const folderPath = `${storageFolder}/${entityId}`;\n    const folderRef = ref(storage, folderPath);\n    const fileList = await listAll(folderRef);\n\n    await Promise.all(fileList.items.map(async (fileRef) => {\n      await deleteObject(fileRef);\n    }));\n  };\n\n    // Function to delete all images in a folder\n  export  const deleteAllImagesInFolder2 = async (storageFolder, entityId,subfolder) => {\n    /*\n    Description: Deletes all images in the specified folder associated with the given entityId.\n\n    Args:\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: The unique identifier of the entity whose images are to be deleted eg UserId,StudioId like thing.\n    */\n    const folderPath = `${storageFolder}/${entityId}/${subfolder}`;\n    const folderRef = ref(storage, folderPath);\n    const fileList = await listAll(folderRef);\n\n    await Promise.all(fileList.items.map(async (fileRef) => {\n      await deleteObject(fileRef);\n    }));\n  };\n\n  // Function to delete images\nexport const deleteImages = async (storageFolder,imagesToDelete,entityId,setProgress,thirdFolder=null) => {\n    /*\n    Description: Deletes specific images associated with the given entityId.\n\n    Args:\n      imagesToDelete <array>: An array of image objects to be deleted.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n    const total = imagesToDelete.length;\n    let done = 0;\n    await Promise.all(imagesToDelete.map(async (file) => {\n      let folderPath = `${storageFolder}/${entityId}/${file.filename}`;\n      if (thirdFolder){\n         folderPath = `${storageFolder}/${entityId}/${thirdFolder}/${file.filename}`;\n      }\n      const fileRefToDelete = ref(storage, folderPath);\n      await deleteObject(fileRefToDelete);\n      done += 1;\n      setProgress((done / total) * 100);\n    }));\n  };\n\n  // Function to upload new images\nexport const uploadImages = async (storageFolder, newImages, entityId,setProgress,thirdFolder=null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n\n    Args:\n      newImages <array>: An array of new image objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n   console.log(storageFolder,entityId)\n   const total = newImages.length;\n    let done = 0;\n    await Promise.all(newImages.map(async (newFileData) => {\n      let folderPath = `${storageFolder}/${entityId}`;\n      if (thirdFolder){\n         folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n      }\n      const fileRef = ref(storage, `${folderPath}/${newFileData.file.name}`);\n      await uploadBytes(fileRef, newFileData.file);\n      done += 1;\n      setProgress((done / total) * 100);\n    }));\n  };\n\n  export const uploadImages2 = async (storageFolder, newImages, entityId, thirdFolder = null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    uploadBytesResumable(storageRef, newImages).then((snapshot) => {\n      console.log('Uploaded a blob or file!');\n    });\n  };\n\n  export const uploadImages3 = async (storageFolder, newImages, entityId, thirdFolder = null) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, newImages);\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, \n      (error) => {\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, \n      () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log('File available at', downloadURL);\n        });\n      }\n    );\n    \n  };\n\n\n  export const uploadImages4 = async (storageFolder, newImages, entityId, thirdFolder = null, onProgress, onComplete) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n  \n    Args:\n      newImages <FileList or Array>: An array of File objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId, StudioId, etc.\n      thirdFolder <string|null>: Optional subfolder.\n    */\n\n    let folderPath = `${storageFolder}/${entityId}`;\n    if (thirdFolder){\n      folderPath = `${storageFolder}/${entityId}/${thirdFolder}`;\n    }\n    console.log(newImages,newImages.name)\n    const storageRef =  ref(storage, `${folderPath}/${newImages.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, newImages);\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const totalBytes = snapshot.totalBytes;\n        const bytesTransferred = snapshot.bytesTransferred;\n        const progress = totalBytes > 0 ? ((bytesTransferred / totalBytes) * 100).toFixed(2) : -1;\n        onProgress(progress);\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, \n      (error) => {\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, \n      () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log('File available at', downloadURL);\n          onComplete(downloadURL);\n        });\n\n      }\n    );\n    \n  };\n\n\n export const uploadOneImageAndGetURL = async (storageFolder, file, entityId) => {\n    try {\n      const folderPath = `${storageFolder}/${entityId}/${file.name}`;\n      console.log(folderPath)\n      const fileRef = ref(storage, folderPath);\n      \n      await uploadBytes(fileRef, file);\n  \n      const imageUrl = await getDownloadURL(fileRef);\n      console.log(imageUrl)\n      return imageUrl;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error; \n    }\n  };\n  \n  export const getAllFilesFromFolder = async (storageFolder) => {\n    const folderPath = `${storageFolder}`;\n    const folderRef = ref(storage, folderPath);\n    \n    try {\n        const fileList = await listAll(folderRef);\n\n        const imageUrlsComprehensive = await Promise.all(\n          fileList.items.map(async (fileRef) => {\n            const downloadURL = await getDownloadURL(fileRef);\n  \n            return {\n              id: fileRef.name,\n              filename: fileRef.name,\n              fileURL: downloadURL,\n            };\n          })\n        );\n\n        // return imageUrls;\n        return imageUrlsComprehensive\n    } catch (error) {\n        console.error('Error retrieving images:', error);\n        throw error;\n    }\n};\n\n"],"names":["_ref","studio","_jsx","href","concat","id","children","NStudioCard","data","img_src","isDarkModeOn","useSelector","selectDarkModeStatus","studioId","cardStyle","backgroundColor","padding","color","marginRight","width","maxWidth","boxShadow","transition","_jsxs","Card","variant","sx","transform","AspectRatio","ratio","style","position","src","iconUrl","loading","alt","height","overflow","Stack","direction","spacing","bottom","left","danceStyles","split","slice","map","form","index","Chip","marginBottom","fontSize","bgcolor","danceStylesColorChips","trim","top","paddingTop","freeTrialAvailable","marginLeft","COLORS","LIME","CardContent","Box","display","justifyContent","columnGap","Link","alignSelf","fontWeight","textColor","underline","overlay","whiteSpace","textOverflow","studioName","avgRating","Typography","flexShrink","toFixed","level","street","IconButton","hidden","size","zIndex","borderRadius","right","Favorite","minFee","Button","type","FILTER_SEARCH_TYPE_KEY","FILTER_DISTANCES_KEY","FILTER_DANCE_FORMS_KEY","FILTER_USER_GEO_LOC","levelsTypes","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","MAX_PRICE","distances","searchTypes","name","label","collection","COLLECTIONS","STUDIO","WORKSHOPS","OPEN_CLASSES","COURSES","SearchPage","setIsLoading","useLoader","query","setQuery","useState","results","setResults","selectedDistances","setSelectedDistances","showFilters","setShowFilters","studioIdName","setStudioIdName","showFilterValue","setShowFilterValue","activeFilters","setActiveFilters","suggestions","setSuggestions","selectedDanceForms","setSelectedDanceForms","selectedSearchType","setSelectedSearchType","selectedLevel","setSelectedLevel","selectedMaxPrice","setSelectedMaxPrice","searchData","setSearchData","workshop","openClass","course","danceForms","danceForm","value","toggleFilters","themeBar","createTheme","palette","mode","countActiveFilters","count","localStorage","getItem","storedDanceForm","JSON","parse","length","handleSearch","storedSelectedSearchType","apiEndpoint","BASEURL_PROD","entity","searchType","searchTypeObject","find","getCollectionForSearchType","city","encodeURIComponent","async","response","fetch","ok","Error","json","error","console","fetchIdNameMp","storedSelectedDanceForms","join","geoLocation","geoLocString","geoLocObject","latitude","longitude","getGeoLocationFromLocalStorage","log","then","formattedData","Array","isArray","Object","values","catch","finally","handleClearFilters","removeItem","setItem","useEffect","storedDistances","storedSearchType","setLabel","updateLabel","window","innerWidth","addEventListener","removeEventListener","minHeight","Container","MuiGrid","container","alignItems","item","xs","ThemeProvider","theme","MuiStack","paddingRight","marginTop","MuiAutocomplete","onInputChange","event","baseUrl","FILTER_LOCATION_KEY","defaultCity","cityParam","endpoint","axios","filteredSuggestions","filter","onChange","handleInputChange","options","getOptionLabel","option","toString","renderInput","params","MuiTextField","className","InputProps","endAdornment","InputAdornment","SearchIcon","cursor","onClick","flex","Row","Col","handleSearchTypeClick","clickedSearchType","border","MuiBadge","badgeContent","pill","MuiChip","onDelete","handleRemoveDistance","danceFormToRemove","filteredDanceForms","stringify","handleRemoveDanceForm","Modal","show","onHide","backdrop","Header","closeButton","Title","Body","md","listStyleType","_Fragment","margin","Form","Group","controlId","Label","Control","as","e","target","distance","price","Select","isMulti","includes","selectedOptions","closeMenuOnSelect","placeholder","styles","valueContainer","base","maxHeight","overflowY","multiValue","state","isFixed","multiValueLabel","multiValueRemove","ButtonGroup","handleApplyFilters","flexWrap","textDecoration","CardSliderCard","NWorkshopCard","dataItem","NOpenClassCard","NCourseCard","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","DRAFT_COLLECTIONS","DRAFT_STUDIOS","DRAFT_WORKSHOPS","DRAFT_OPEN_CLASSES","DRAFT_COURSES","ENTITY_FLAG","INTERNET_CONV_CHARGES_WORKSHOPS_COURSES_INR","WORKSHOPS_BOOKING_LIMIT","OPEN_CLASSES_BOOKING_LIMIT","COURSES_BOOKING_LIMIT","SERVER_URLS","CLOUD","process","LOCAL","GREEN","BLUE","YELLOW","RED","PURPLE","ORANGE","TEAL","PINK","GRAY","LIGHTBLUE","DARKBLUE","CYAN","INDIGO","AMBER","BROWN","LIGHTGREEN","DEEPPURPLE","DEEPORANGE","BLACK","WHITE","SILVER","GOLD","NAVY","OLIVE","CHIP_LEVELS_DESIGN","USER","USER_KYC","ADMIN","REVIEWS","TRANSACTIONS","INSTRUCTORS","FREE_TRIAL_BOOKINGS","BOOKINGS","STORAGES","STUDIOIMAGES","STUDIOICON","STUDIOANNOUNCEMENTS","USERIMAGE","INSTRUCTORIMAGES","WORKSHOPICON","WORKSHOPIMAGES","OPENCLASSICON","COURSEICON","CREATORS_KYC_DOCUMENTS","AMENITIES_ICONS","FaSnowflake","FaWifi","FaTint","FaToilet","FaPlug","FaFireExtinguisher","FaFirstAid","FaVideo","FaCreditCard","FaParking","setCreatorMode","BASEURL","url","uid","success","secureLocalStorage","message","fetchStudioEntities","entityType","setState","BASE_URL","setGetCreatorModeOnMount","getCreatorMode","readDocumentWithImageUrl","collectionName","productId","storagePath","folderRef","ref","storage","result","listAll","items","firstFileRef","getDownloadURL","readDocument","documentId","docRef","doc","db","docSnapshot","getDoc","exists","saveDocument","setDoc","merge","handleSavePostOTPSuccess","phoneNumber","updateDoc","isPhoneNumberVerified","updateDocumentFields","fields","queryDocumentsCount","field","operation","q","where","getCountFromServer","deleteAllImagesInFolder","storageFolder","entityId","folderPath","fileList","Promise","all","deleteObject","fileRef","deleteAllImagesInFolder2","subfolder","deleteImages","imagesToDelete","setProgress","thirdFolder","arguments","undefined","total","done","file","filename","fileRefToDelete","uploadImages","newImages","newFileData","uploadBytes","uploadImages4","onProgress","onComplete","storageRef","uploadTask","uploadBytesResumable","on","snapshot","totalBytes","bytesTransferred","progress","code","downloadURL","getAllFilesFromFolder","fileURL"],"sourceRoot":""}