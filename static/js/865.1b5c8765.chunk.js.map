{"version":3,"file":"static/js/865.1b5c8765.chunk.js","mappings":"0QAEO,SAASA,EAAqBC,GACnC,OAAOC,EAAAA,EAAAA,IAAqB,WAAYD,EAC1C,CACA,MAGA,GAHqBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,QAAS,MAAO,WAAY,uBAAwB,0BAA2B,sBAAuB,yBAA0B,YAAa,aAAc,YAAa,eAAgB,iBAAkB,eAAgB,eAAgB,qBAAsB,kBAEjU,8BAA+B,iCAAkC,+BAAgC,kCAAmC,iCAAkC,oCAAqC,kCAAmC,uC,eCH9O,MAAMC,EAAY,CAAC,eAAgB,YAAa,UAAW,YAAa,aAAc,kBAAmB,WAAY,UAAW,QAAS,YAAa,MAAO,eAAgB,QAAS,YAAa,WAAY,WAezMC,GAAgBC,EAAAA,EAAAA,GAAoB,YAgBpCC,GAAYC,EAAAA,EAAAA,IAAO,OAAQ,CAC/BC,KAAM,WACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAH7BL,CAIf,CACDM,SAAU,WACVC,QAAS,cAETC,cAAe,SACfC,WAAY,IAERC,GAAaV,EAAAA,EAAAA,IAAO,OAAQ,CAChCC,KAAM,WACNR,KAAM,QACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOQ,MAAOR,EAAOO,EAAWE,SAAUT,EAAO,eAADU,QAAgBC,EAAAA,EAAAA,GAAWJ,EAAWK,aAAaC,WAASH,QAAGC,EAAAA,EAAAA,GAAWJ,EAAWK,aAAaE,aAAWJ,QAAGC,EAAAA,EAAAA,GAAWJ,EAAWQ,WAAkC,YAArBR,EAAWS,OAAuBhB,EAAO,QAADU,QAASC,EAAAA,EAAAA,GAAWJ,EAAWS,SAAWT,EAAWU,WAAajB,EAAOiB,UAAU,GAPvTrB,EAShBsB,IAEG,IAFF,MACFC,GACDD,EACC,IAAIE,EACJ,MAAO,CACLjB,QAAS,OACTkB,cAAe,MACfC,SAAU,OACVC,eAAgB,SAChBC,aAAc,SACdC,WAAY,SACZvB,SAAU,WACVwB,UAAW,aACXC,WAAYR,EAAMS,WAAWD,WAC7BE,WAAYV,EAAMS,WAAWE,iBAC7BC,SAAUZ,EAAMS,WAAWI,QAAQ,IACnCC,SAAUC,GACVC,WAAY,EACZC,QAAS,QACTC,OAAQH,GACRI,aA1DoB,GA2DpBC,OAAQ,EAERC,WAAYrB,EAAMsB,YAAYC,OAAO,YAAa,CAChDC,OAAQxB,EAAMsB,YAAYE,OAAOC,UACjCC,SAAU1B,EAAMsB,YAAYI,SAASC,iBAEvCC,SAAU,IAAIC,OAAOC,MAAoC,OAA7B7B,EAAcD,EAAM+B,MAAgB9B,EAAcD,GAAOgC,SAASC,QAAOC,IACnG,IAAIC,EAAcC,EAClB,OAAuC,OAA9BD,EAAenC,EAAM+B,MAAgBI,EAAenC,GAAOgC,QAAQE,GAAKG,OAAwC,OAA9BD,EAAepC,EAAM+B,MAAgBK,EAAepC,GAAOgC,QAAQE,GAAKI,YAAY,IAC9KC,KAAI1C,IAAS,CACdjB,MAAO,CACLiB,SAEF2C,MAAO,CACLC,iBAAkBzC,EAAM+B,MAAQ/B,GAAOgC,QAAQnC,GAAOwC,KACtDxC,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQnC,GAAOyC,kBAE3C,CACH1D,MAAO,CACLU,QAAS,OAEXkD,MAAO,CACLrB,aAhFW,EAiFXD,OAAQwB,EACR5B,SAAU4B,EACVzB,QAAS,IAEV,CACDrC,MAAO+D,IAAA,IAAC,WACNvD,GACDuD,EAAA,MAA0C,QAArCvD,EAAWK,aAAaC,UAA6D,UAAvCN,EAAWK,aAAaE,YAAiD,gBAAvBP,EAAWQ,OAAyB,EAC1I4C,MAAO,CACLI,IAAK,EACLC,MAAO,EACPC,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAADxD,OAAMyD,EAAalD,YAAc,CAC/BgD,UAAW,mCAGd,CACDlE,MAAOqE,IAAA,IAAC,WACN7D,GACD6D,EAAA,MAA0C,WAArC7D,EAAWK,aAAaC,UAAgE,UAAvCN,EAAWK,aAAaE,YAAiD,gBAAvBP,EAAWQ,OAAyB,EAC7I4C,MAAO,CACLU,OAAQ,EACRL,MAAO,EACPC,UAAW,+BACXC,gBAAiB,YACjB,CAAC,KAADxD,OAAMyD,EAAalD,YAAc,CAC/BgD,UAAW,kCAGd,CACDlE,MAAOuE,IAAA,IAAC,WACN/D,GACD+D,EAAA,MAA0C,QAArC/D,EAAWK,aAAaC,UAA6D,SAAvCN,EAAWK,aAAaE,YAAgD,gBAAvBP,EAAWQ,OAAyB,EACzI4C,MAAO,CACLI,IAAK,EACLQ,KAAM,EACNN,UAAW,iCACXC,gBAAiB,QACjB,CAAC,KAADxD,OAAMyD,EAAalD,YAAc,CAC/BgD,UAAW,oCAGd,CACDlE,MAAOyE,IAAA,IAAC,WACNjE,GACDiE,EAAA,MAA0C,WAArCjE,EAAWK,aAAaC,UAAgE,SAAvCN,EAAWK,aAAaE,YAAgD,gBAAvBP,EAAWQ,OAAyB,EAC5I4C,MAAO,CACLU,OAAQ,EACRE,KAAM,EACNN,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAADxD,OAAMyD,EAAalD,YAAc,CAC/BgD,UAAW,mCAGd,CACDlE,MAAO0E,IAAA,IAAC,WACNlE,GACDkE,EAAA,MAA0C,QAArClE,EAAWK,aAAaC,UAA6D,UAAvCN,EAAWK,aAAaE,YAAiD,aAAvBP,EAAWQ,OAAsB,EACvI4C,MAAO,CACLI,IAAK,MACLC,MAAO,MACPC,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAADxD,OAAMyD,EAAalD,YAAc,CAC/BgD,UAAW,mCAGd,CACDlE,MAAO2E,IAAA,IAAC,WACNnE,GACDmE,EAAA,MAA0C,WAArCnE,EAAWK,aAAaC,UAAgE,UAAvCN,EAAWK,aAAaE,YAAiD,aAAvBP,EAAWQ,OAAsB,EAC1I4C,MAAO,CACLU,OAAQ,MACRL,MAAO,MACPC,UAAW,+BACXC,gBAAiB,YACjB,CAAC,KAADxD,OAAMyD,EAAalD,YAAc,CAC/BgD,UAAW,kCAGd,CACDlE,MAAO4E,IAAA,IAAC,WACNpE,GACDoE,EAAA,MAA0C,QAArCpE,EAAWK,aAAaC,UAA6D,SAAvCN,EAAWK,aAAaE,YAAgD,aAAvBP,EAAWQ,OAAsB,EACtI4C,MAAO,CACLI,IAAK,MACLQ,KAAM,MACNN,UAAW,iCACXC,gBAAiB,QACjB,CAAC,KAADxD,OAAMyD,EAAalD,YAAc,CAC/BgD,UAAW,oCAGd,CACDlE,MAAO6E,IAAA,IAAC,WACNrE,GACDqE,EAAA,MAA0C,WAArCrE,EAAWK,aAAaC,UAAgE,SAAvCN,EAAWK,aAAaE,YAAgD,aAAvBP,EAAWQ,OAAsB,EACzI4C,MAAO,CACLU,OAAQ,MACRE,KAAM,MACNN,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAADxD,OAAMyD,EAAalD,YAAc,CAC/BgD,UAAW,mCAGd,CACDlE,MAAO,CACLkB,WAAW,GAEb0C,MAAO,CACLnB,WAAYrB,EAAMsB,YAAYC,OAAO,YAAa,CAChDC,OAAQxB,EAAMsB,YAAYE,OAAOC,UACjCC,SAAU1B,EAAMsB,YAAYI,SAASgC,mBAI5C,IAoNH,EAlN2BC,EAAAA,YAAiB,SAAeC,EAASC,GAClE,IAAIC,EAAMC,EAAaC,EAAOC,EAAcC,EAAiBC,EAC7D,MAAMvF,EAAQN,EAAc,CAC1BM,MAAOgF,EACPlF,KAAM,cAGJe,aAAc2E,EAAmB,CAC/B1E,SAAU,MACVC,WAAY,SACb,UACD0E,EAAS,UACTC,EAAS,WACTC,EAAa,CAAC,EAAC,gBACfC,EAAkB,CAAC,EAAC,SACpBC,EACA7E,QAAS8E,EAAc,cACvB7E,MAAO8E,EAAY,UACnB7E,UAAW8E,GAAgB,EAC3BC,IAAKC,EAAU,GACfC,aAAcC,EAAgB,MAC9BC,EAAK,UACLC,EAAS,SACTC,GAAW,EACX7F,QAAS8F,EAAc,YACrBxG,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzC,aACJ0G,EACAjF,UAAWyF,EAAiB,IAC5BV,EACAW,aAAcC,GC9OX,SAAkBC,GACvB,MACEX,aAAcC,EACdlF,UAAW8E,GAAgB,EAC3BC,IAAKC,EAAU,GAAE,SACjBK,GAAW,GACTO,EACEC,GAAYC,EAAAA,EAAAA,GAAiB,CACjCb,aAAcC,EACdH,IAAKC,IAEP,IAAIhF,EAAY8E,GACM,IAAlBA,GAAgD,IAArBI,GAA2BG,IACxDrF,GAAY,GAEd,MAAM,aACJiF,EAAY,IACZF,EAAMC,GACJhF,EAAY6F,EAAYD,EAE5B,MAAO,CACLX,eACAjF,YACA+E,MACAW,aALmBT,GAAgBc,OAAOd,GAAgBF,EAAM,GAAHtF,OAAMsF,EAAG,KAAME,EAOhF,CDqNMe,CAAS,CACXjB,IAAKC,EACLhF,UAAW8E,EACXG,aAAcC,EACdG,aAEIQ,GAAYC,EAAAA,EAAAA,GAAiB,CACjCnG,aAAc2E,EACdvE,MAAO8E,EACP/E,QAAS8E,EACTpF,QAAS8F,EACTL,aAAcC,IAEVlF,EAAYyF,GAAqC,MAAhBR,GAAwC,QAAhBK,GACzD,MACJvF,EAAQ8E,EAAS,QACjB/E,EAAU8E,EAAW,aACrBjF,EAAe2E,EAAgB,QAC/B9E,EAAU8F,GACRtF,EAAY6F,EAAY/G,EACtB4G,EAA2B,QAAZlG,EAAoBmG,OAAuBM,EAC1D3G,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCmG,eACAjF,YACA+E,MACAW,eACAL,WACA1F,eACAI,QACAD,UACAN,YAEI2G,EAxQkB7G,KACxB,MAAM,MACJS,EAAK,aACLJ,EAAY,UACZK,EAAS,QACTF,EAAO,QACPN,EAAO,QACP2G,EAAU,CAAC,GACT7G,EACE6F,EAAQ,CACZnG,KAAM,CAAC,QACPO,MAAO,CAAC,QAASC,EAASQ,GAAa,YAAa,eAAFP,QAAiBC,EAAAA,EAAAA,GAAWC,EAAaC,WAASH,QAAGC,EAAAA,EAAAA,GAAWC,EAAaE,aAAW,eAAAJ,QAAmBC,EAAAA,EAAAA,GAAWC,EAAaC,WAASH,QAAGC,EAAAA,EAAAA,GAAWC,EAAaE,aAAWJ,QAAGC,EAAAA,EAAAA,GAAWI,IAAQ,UAAAL,QAAcC,EAAAA,EAAAA,GAAWI,IAAsB,YAAVC,GAAuB,QAAJN,QAAYC,EAAAA,EAAAA,GAAWK,MAE3U,OAAOqG,EAAAA,EAAAA,GAAejB,EAAOhH,EAAsBgI,EAAQ,EA2P3CE,CAAkB/G,GAG5BgH,EAAmH,OAAvGtC,EAA8D,OAAtDC,EAAuB,MAATkB,OAAgB,EAASA,EAAMnG,MAAgBiF,EAAcQ,EAAW8B,MAAgBvC,EAAOtF,EACjI8H,EAAyH,OAA5GtC,EAAiE,OAAxDC,EAAwB,MAATgB,OAAgB,EAASA,EAAM5F,OAAiB4E,EAAeM,EAAWgC,OAAiBvC,EAAQ7E,EACxIqH,EAAmF,OAAlEtC,EAA+B,MAAbgB,OAAoB,EAASA,EAAUpG,MAAgBoF,EAAkBM,EAAgB1F,KAC5H2H,GAAsF,OAApEtC,EAAgC,MAAbe,OAAoB,EAASA,EAAU7F,OAAiB8E,EAAmBK,EAAgBnF,MAChIqH,IAAYC,EAAAA,EAAAA,GAAa,CAC7BC,YAAaR,EACbS,kBAAmBL,EACnBM,uBAAwBzB,EACxB0B,gBAAiB,CACflD,MACAmD,GAAI1C,GAENlF,aACAiF,WAAW4C,EAAAA,EAAAA,GAAsB,MAAjBT,OAAwB,EAASA,EAAcnC,UAAW4B,EAAQnH,KAAMuF,KAEpF6C,IAAaP,EAAAA,EAAAA,GAAa,CAC9BC,YAAaN,EACbO,kBAAmBJ,GACnBrH,aACAiF,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQ5G,MAAyB,MAAlBoH,QAAyB,EAASA,GAAepC,aAElF,OAAoB8C,EAAAA,EAAAA,MAAMf,GAAUJ,EAAAA,EAAAA,GAAS,CAAC,EAAGU,GAAW,CAC1DjC,SAAU,CAACA,GAAuB2C,EAAAA,EAAAA,KAAKd,GAAWN,EAAAA,EAAAA,GAAS,CAAC,EAAGkB,GAAY,CACzEzC,SAAUe,QAGhB,G,2KEvTO,SAAS6B,EAAgCnJ,GAC9C,OAAOC,EAAAA,EAAAA,IAAqB,sBAAuBD,EACrD,EACgCE,EAAAA,EAAAA,GAAuB,sBAAuB,CAAC,OAAQ,cAAe,gBAAiB,eAAgB,iBAAkB,MAAO,SAAU,oBAAqB,sBAAuB,wB,ICLzMkJ,EAAAC,EAAAC,EAAAC,E,WAIb,MAAMpJ,EAAY,CAAC,YAAa,QAAS,gBAAiB,OAAQ,QAAS,YAAa,QAAS,WACjG,IACEqJ,EACAC,EACAC,EACAC,EAYF,MAAMC,EAAO,GACPC,GAAyBC,EAAAA,EAAAA,IAAUN,IAAOA,EAAMJ,IAAAA,GAAAW,EAAAA,EAAAA,GAAA,uGAShDC,GAAuBF,EAAAA,EAAAA,IAAUL,IAAQA,EAAOJ,IAAAA,GAAAU,EAAAA,EAAAA,GAAA,gQA8BhDE,GAAuB1J,EAAAA,EAAAA,IAAO,OAAQ,CAC1CC,KAAM,sBACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOC,KAAMD,EAAOO,EAAWE,SAAUT,EAAO,QAADU,QAASC,EAAAA,EAAAA,GAAWJ,EAAWS,SAAU,GAPvEpB,EAS1BqF,IAAA,IAAC,WACF1E,EAAU,MACVY,GACD8D,EAAA,OAAKkC,EAAAA,EAAAA,GAAS,CACbhH,QAAS,gBACe,gBAAvBI,EAAWE,SAA6B,CACzC+B,WAAYrB,EAAMsB,YAAYC,OAAO,cACf,YAArBnC,EAAWS,OAAuB,CACnCA,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ5C,EAAWS,OAAOwC,MACvD,IAAE2B,IAAA,IAAC,WACH5E,GACD4E,EAAA,MAA4B,kBAAvB5E,EAAWE,UAA+B8I,EAAAA,EAAAA,IAAIR,IAAQA,EAAOJ,IAAAA,GAAAS,EAAAA,EAAAA,GAAA,0DAE3DF,EAAuB,IACzBM,GAAsB5J,EAAAA,EAAAA,IAAO,MAAO,CACxCC,KAAM,sBACNR,KAAM,MACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOyJ,KAHnB7J,CAIzB,CACDO,QAAS,UAELuJ,GAAyB9J,EAAAA,EAAAA,IAAO,SAAU,CAC9CC,KAAM,sBACNR,KAAM,SACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAO2J,OAAQ3J,EAAO,SAADU,QAAUC,EAAAA,EAAAA,GAAWJ,EAAWE,WAAaF,EAAWqJ,eAAiB5J,EAAO6J,oBAAoB,GAPtGjK,EAS5BsB,IAAA,IAAC,WACFX,EAAU,MACVY,GACDD,EAAA,OAAKiG,EAAAA,EAAAA,GAAS,CACb2C,OAAQ,gBACgB,gBAAvBvJ,EAAWE,SAA6B,CACzC+B,WAAYrB,EAAMsB,YAAYC,OAAO,sBACb,kBAAvBnC,EAAWE,SAA+B,CAE3CsJ,gBAAiB,cACjBC,iBAAkB,GAClB,IAAElG,IAAA,IAAC,WACHvD,GACDuD,EAAA,MAA4B,kBAAvBvD,EAAWE,UAAgCF,EAAWqJ,gBAAiBL,EAAAA,EAAAA,IAAIP,IAAQA,EAAOJ,IAAAA,GAAAQ,EAAAA,EAAAA,GAAA,+DAExFC,EAAqB,IAuI7B,EA9HsCvE,EAAAA,YAAiB,SAA0BC,EAASC,GACxF,MAAMjF,GAAQN,EAAAA,EAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,yBAEF,UACF2F,EAAS,MACTxE,EAAQ,UAAS,cACjB4I,GAAgB,EAAK,KACrBK,EAAO,GAAE,MACTtG,EAAK,UACLuG,EAAY,IAAG,MACfC,EAAQ,EAAC,QACT1J,EAAU,iBACRV,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,GACzCe,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCiB,QACA4I,gBACAK,OACAC,YACAC,QACA1J,YAEI2G,EArGkB7G,KACxB,MAAM,QACJ6G,EAAO,QACP3G,EAAO,MACPO,EAAK,cACL4I,GACErJ,EACE6F,EAAQ,CACZnG,KAAM,CAAC,OAAQQ,EAAS,QAAFC,QAAUC,EAAAA,EAAAA,GAAWK,KAC3CyI,IAAK,CAAC,OACNE,OAAQ,CAAC,SAAU,SAAFjJ,QAAWC,EAAAA,EAAAA,GAAWF,IAAYmJ,GAAiB,wBAEtE,OAAOvC,EAAAA,EAAAA,GAAejB,EAAOoC,EAAiCpB,EAAQ,EAyFtDE,CAAkB/G,GAC5B6J,EAAc,CAAC,EACfC,EAAY,CAAC,EACbxC,EAAY,CAAC,EACnB,GAAgB,gBAAZpH,EAA2B,CAC7B,MAAM6J,EAAgB,EAAIC,KAAKC,KAAOvB,EAAOiB,GAAa,GAC1DE,EAAYL,gBAAkBO,EAAcG,QAAQ,GACpD5C,EAAU,iBAAmB0C,KAAKG,MAAMP,GACxCC,EAAYJ,iBAAmB,GAAHtJ,SAAQ,IAAMyJ,GAAS,IAAMG,GAAeG,QAAQ,GAAE,MAClFJ,EAAUpG,UAAY,gBACxB,CACA,OAAoBsE,EAAAA,EAAAA,KAAKe,GAAsBnC,EAAAA,EAAAA,GAAS,CACtD3B,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9B7B,OAAOwD,EAAAA,EAAAA,GAAS,CACdwD,MAAOV,EACP5H,OAAQ4H,GACPI,EAAW1G,GACdpD,WAAYA,EACZyE,IAAKA,EACL4F,KAAM,eACL/C,EAAWrB,EAAO,CACnBZ,UAAuB2C,EAAAA,EAAAA,KAAKiB,EAAqB,CAC/ChE,UAAW4B,EAAQqC,IACnBlJ,WAAYA,EACZsK,QAAS,GAAFnK,OAAKuI,GAAQ,KAAAvI,OAAIuI,GAAQ,KAAAvI,OAAIuI,EAAI,KAAAvI,OAAIuI,GAC5CrD,UAAuB2C,EAAAA,EAAAA,KAAKmB,EAAwB,CAClDlE,UAAW4B,EAAQuC,OACnBhG,MAAOyG,EACP7J,WAAYA,EACZuK,GAAI7B,EACJ8B,GAAI9B,EACJ+B,GAAI/B,EAAOiB,GAAa,EACxBe,KAAM,OACNC,YAAahB,QAIrB,G,sLCvLO,SAASiB,EAAkC9L,GAChD,OAAOC,EAAAA,EAAAA,IAAqB,sBAAuBD,EACrD,CACA,MACA,GADgCE,EAAAA,EAAAA,GAAuB,sBAAuB,CAAC,OAAQ,sBAAuB,oBAAqB,uBAAwB,WAAY,QAAS,QAAS,WAAY,a,0BCDrM,MAAMC,EAAY,CAAC,UAAW,YAAa,kBAAmB,UAAW,WAAY,oBAAqB,WAAY,QAAS,iBAAkB,OAAQ,WAAY,WAAY,YAAa,SA+BjL4L,GAAuBxL,EAAAA,EAAAA,IAAO,QAAS,CAClDC,KAAM,sBACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAAC,CACN,CAAC,MAADW,OAAO2K,EAAwBC,QAAUtL,EAAOsL,OAC/CtL,EAAOC,KAAMD,EAAO,iBAADU,QAAkBC,EAAAA,EAAAA,GAAWJ,EAAWgL,kBAAmB,GATjD3L,EAWjCuF,IAAA,IAAC,MACFhE,EAAK,WACLZ,GACD4E,EAAA,OAAKgC,EAAAA,EAAAA,GAAS,CACbhH,QAAS,cACTsB,WAAY,SACZ+J,OAAQ,UAERpL,cAAe,SACfqL,wBAAyB,cACzBC,YAAa,GACbC,YAAa,GAEb,CAAC,KAADjL,OAAM2K,EAAwBO,WAAa,CACzCJ,OAAQ,YAEqB,UAA9BjL,EAAWgL,gBAA8B,CAC1ClK,cAAe,cACfqK,WAAY,GAEZC,aAAc,IACiB,QAA9BpL,EAAWgL,gBAA4B,CACxClK,cAAe,iBACfqK,WAAY,IACmB,WAA9BnL,EAAWgL,gBAA+B,CAC3ClK,cAAe,SACfqK,WAAY,IACX,CACD,CAAC,MAADhL,OAAO2K,EAAwBC,QAAU,CACvC,CAAC,KAAD5K,OAAM2K,EAAwBO,WAAa,CACzC5K,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ0I,KAAKD,YAG9C,IACIE,GAAoBlM,EAAAA,EAAAA,IAAO,OAAQ,CACvCC,KAAM,sBACNR,KAAM,WACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO+L,UAHrBnM,EAIvBsB,IAAA,IAAC,MACFC,GACDD,EAAA,MAAM,CACL,CAAC,KAADR,OAAM2K,EAAwBW,QAAU,CACtChL,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ6I,MAAMxI,MAE9C,IA0JD,EApJsCsB,EAAAA,YAAiB,SAA0BC,EAASC,GACxF,IAAIC,EAAMgH,EACV,MAAMlM,GAAQN,EAAAA,EAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,yBAEF,UACF2F,EAAS,gBACTG,EAAkB,CAAC,EAAC,QACpBuG,EACAN,SAAUO,EAAY,kBACtBC,EACAd,MAAOe,EAAS,eAChBd,EAAiB,MACjBe,SAAUC,EAAY,UACtBlG,EAAY,CAAC,GACXtG,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,GACzCgN,GAAiBC,EAAAA,EAAAA,KACjBb,EAAoF,OAAxE3G,EAAuB,MAAhBkH,EAAuBA,EAAeD,EAAQnM,MAAM6L,UAAoB3G,EAAyB,MAAlBuH,OAAyB,EAASA,EAAeZ,SACnJU,EAA2B,MAAhBC,EAAuBA,EAAeL,EAAQnM,MAAMuM,SAC/DI,EAAe,CACnBd,WACAU,YAEF,CAAC,UAAW,OAAQ,WAAY,QAAS,YAAYK,SAAQtJ,IACzB,qBAAvB6I,EAAQnM,MAAMsD,IAA8C,qBAAftD,EAAMsD,KAC5DqJ,EAAarJ,GAAOtD,EAAMsD,GAC5B,IAEF,MAAMuJ,GAAMC,EAAAA,EAAAA,GAAiB,CAC3B9M,QACAyM,iBACAM,OAAQ,CAAC,WAELvM,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrC6L,WACAL,iBACAe,WACAN,MAAOY,EAAIZ,QAEP5E,EArHkB7G,KACxB,MAAM,QACJ6G,EAAO,SACPwE,EAAQ,eACRL,EAAc,MACdS,EAAK,SACLM,GACE/L,EACE6F,EAAQ,CACZnG,KAAM,CAAC,OAAQ2L,GAAY,WAAY,iBAAFlL,QAAmBC,EAAAA,EAAAA,GAAW4K,IAAmBS,GAAS,QAASM,GAAY,YACpHhB,MAAO,CAAC,QAASM,GAAY,YAC7BG,SAAU,CAAC,WAAYC,GAAS,UAElC,OAAO3E,EAAAA,EAAAA,GAAejB,EAAO+E,EAAmC/D,EAAQ,EAwGxDE,CAAkB/G,GAC5BwM,EAAwE,OAAjDd,EAAwB5F,EAAUzE,YAAsBqK,EAAwBtG,EAAgB/D,WAC7H,IAAI0J,EAAQe,EASZ,OARa,MAATf,GAAiBA,EAAM0B,OAASC,EAAAA,GAAeb,IACjDd,GAAqB/C,EAAAA,EAAAA,KAAK0E,EAAAA,GAAY9F,EAAAA,EAAAA,GAAS,CAC7C1B,UAAW,QACVsH,EAAqB,CACtBvH,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQkE,MAA8B,MAAvByB,OAA8B,EAASA,EAAoBvH,WAC1FI,SAAU0F,OAGMhD,EAAAA,EAAAA,MAAM8C,GAAsBjE,EAAAA,EAAAA,GAAS,CACvD3B,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYA,EACZyE,IAAKA,GACJwB,EAAO,CACRZ,SAAU,CAAcd,EAAAA,aAAmBoH,EAASQ,GAAeJ,GAAwBhE,EAAAA,EAAAA,MAAM4E,EAAAA,EAAO,CACtG/M,QAAS,QACTyF,SAAU,CAAC0F,GAAoBhD,EAAAA,EAAAA,MAAMwD,EAAmB,CACtDvL,WAAYA,EACZ,eAAe,EACfiF,UAAW4B,EAAQ2E,SACnBnG,SAAU,CAAC,SAAU,UAEpB0F,KAET,G,qJCjKO,SAAS6B,EAAoB9N,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,OAAQ,eAAgB,iBAAkB,cAAe,aAAc,gBAAiB,kBAAmB,gBAAiB,iBAAkB,kB,eCDrM,MAAMC,EAAY,CAAC,gBAAiB,YAAa,QAAS,YAAa,YAqBjE4N,GAAWxN,EAAAA,EAAAA,IAAO,OAAQ,CAC9BC,KAAM,UACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOC,KAA2B,YAArBM,EAAWS,OAAuBhB,EAAO,QAADU,QAASC,EAAAA,EAAAA,GAAWJ,EAAWS,SAAWhB,EAAO,WAADU,QAAYC,EAAAA,EAAAA,GAAWJ,EAAWwB,YAAa,GAP/InC,EASdqF,IAAA,IAAC,MACF9D,EAAK,WACLZ,GACD0E,EAAA,MAAM,CACLoI,WAAY,OACZ1C,MAAO,MACPtI,OAAQ,MAGRiL,SAAU,SACVnN,QAAS,eAEToN,UAAW,SAEXlN,WAAY,EACZ0B,SAAU,CACRyL,QAAS,UACTC,MAAOtM,EAAMS,WAAWI,QAAQ,IAChC0L,OAAQvM,EAAMS,WAAWI,QAAQ,IACjC2L,MAAOxM,EAAMS,WAAWI,QAAQ,KAChCzB,EAAWwB,UAEbf,MAAO,CACL4M,SAAUzM,EAAM+B,MAAQ/B,GAAOgC,QAAQyK,QAAQpK,KAC/CqK,WAAY1M,EAAM+B,MAAQ/B,GAAOgC,QAAQ0K,UAAUrK,KACnDsK,MAAO3M,EAAM+B,MAAQ/B,GAAOgC,QAAQ2K,KAAKtK,KACzCuK,SAAU5M,EAAM+B,MAAQ/B,GAAOgC,QAAQ4K,QAAQvK,KAC/CwK,SAAU7M,EAAM+B,MAAQ/B,GAAOgC,QAAQ6K,QAAQxK,KAC/CyK,QAAS9M,EAAM+B,MAAQ/B,GAAOgC,QAAQ8K,OAAOC,OAC7ClC,OAAQ7K,EAAM+B,MAAQ/B,GAAOgC,QAAQ6I,MAAMxI,KAC3CoI,UAAWzK,EAAM+B,MAAQ/B,GAAOgC,QAAQ8K,OAAOrC,SAC/C4B,aAAStG,GACT3G,EAAWS,OACd,IACKmN,EAAoBrJ,EAAAA,YAAiB,SAAcC,EAASC,GAChE,MAAMjF,GAAQN,EAAAA,EAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,aAEF,cACFuO,EAAgB,iBAAgB,UAChC5I,EAAS,MACTxE,EAAQ,UACRyE,UAAW4I,EAAY,OAAM,SAC7BtM,EAAW,UACThC,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,GACzCe,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCqO,gBACApN,QACAyE,UAAW4I,EACXtM,aAEIqF,EAzEkB7G,KACxB,MAAM,MACJS,EAAK,SACLe,EAAQ,QACRqF,GACE7G,EACE6F,EAAQ,CACZnG,KAAM,CAAC,OAAkB,YAAVe,GAAuB,QAAJN,QAAYC,EAAAA,EAAAA,GAAWK,IAAU,WAAFN,QAAaC,EAAAA,EAAAA,GAAWoB,MAE3F,OAAOsF,EAAAA,EAAAA,GAAejB,EAAO+G,EAAqB/F,EAAQ,EAgE1CE,CAAkB/G,GAClC,OAAoBgI,EAAAA,EAAAA,KAAK6E,GAAUjG,EAAAA,EAAAA,GAAS,CAC1CgB,GAAIkG,EACJ7I,WAAW4C,EAAAA,EAAAA,GAAKgG,EAGhB,cAAehH,EAAQnH,KAAMuF,GAC7BjF,WAAYA,EACZ,eAAe,EACfyE,IAAKA,GACJwB,GACL,IA8CA2H,EAAKG,QAAU,OACf,S,gKC7IA,MAAM9O,EAAY,CAAC,WAAY,YAAa,oBAAqB,QAAS,UAAW,yBAA0B,YAAa,4BA2BtH+O,GAAmB3O,EAAAA,EAAAA,IAAO,MAAO,CACrCC,KAAM,kBACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAAC,CACN,CAAC,MAADW,OAAO8N,EAAAA,EAAoBZ,UAAY5N,EAAO4N,SAC7C,CACD,CAAC,MAADlN,OAAO8N,EAAAA,EAAoBX,YAAc7N,EAAO6N,WAC/C7N,EAAOC,KAAMM,EAAWkO,OAASzO,EAAOyO,MAAOlO,EAAWqN,SAAWrN,EAAWsN,WAAa7N,EAAO0O,UAAWnO,EAAWoO,OAAS3O,EAAO2O,MAAM,GAX9H/O,EAatBqF,IAAA,IAAC,WACF1E,GACD0E,EAAA,OAAKkC,EAAAA,EAAAA,GAAS,CACbyH,KAAM,WACN3M,SAAU,EACV4M,UAAW,EACXC,aAAc,GACbvO,EAAWqN,SAAWrN,EAAWsN,WAAa,CAC/CgB,UAAW,EACXC,aAAc,GACbvO,EAAWkO,OAAS,CACrBM,YAAa,IACb,IAgHF,EA/GkCjK,EAAAA,YAAiB,SAAsBC,EAASC,GAChF,MAAMjF,GAAQN,EAAAA,EAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,qBAEF,SACF+F,EAAQ,UACRJ,EAAS,kBACT4G,GAAoB,EAAK,MACzBqC,GAAQ,EACRb,QAASoB,EAAW,uBACpBC,EACApB,UAAWqB,EAAa,yBACxBC,GACEpP,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzC,MACJmP,GACE7J,EAAAA,WAAiBsK,EAAAA,GACrB,IAAIxB,EAAyB,MAAfoB,EAAsBA,EAAcpJ,EAC9CiI,EAAYqB,EAChB,MAAM3O,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCqM,oBACAqC,QACAb,UAAWA,EACXC,YAAaA,EACbc,UAEIvH,EArEkB7G,KACxB,MAAM,QACJ6G,EAAO,MACPqH,EAAK,QACLb,EAAO,UACPC,EAAS,MACTc,GACEpO,EACE6F,EAAQ,CACZnG,KAAM,CAAC,OAAQwO,GAAS,QAASE,GAAS,QAASf,GAAWC,GAAa,aAC3ED,QAAS,CAAC,WACVC,UAAW,CAAC,cAEd,OAAOxG,EAAAA,EAAAA,GAAejB,EAAOiJ,EAAAA,EAA6BjI,EAAQ,EAwDlDE,CAAkB/G,GAqBlC,OApBe,MAAXqN,GAAmBA,EAAQZ,OAASC,EAAAA,GAAeb,IACrDwB,GAAuBrF,EAAAA,EAAAA,KAAK0E,EAAAA,GAAY9F,EAAAA,EAAAA,GAAS,CAC/C1G,QAASkO,EAAQ,QAAU,QAC3BnJ,UAAW4B,EAAQwG,QACnBnI,UAAqC,MAA1BwJ,GAAkCA,EAAuBxO,aAAUyG,EAAY,OAC1F/G,QAAS,SACR8O,EAAwB,CACzBrJ,SAAUgI,MAGG,MAAbC,GAAqBA,EAAUb,OAASC,EAAAA,GAAeb,IACzDyB,GAAyBtF,EAAAA,EAAAA,KAAK0E,EAAAA,GAAY9F,EAAAA,EAAAA,GAAS,CACjD1G,QAAS,QACT+E,UAAW4B,EAAQyG,UACnB7M,MAAO,iBACPb,QAAS,SACRgP,EAA0B,CAC3BvJ,SAAUiI,OAGMvF,EAAAA,EAAAA,MAAMiG,GAAkBpH,EAAAA,EAAAA,GAAS,CACnD3B,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYA,EACZyE,IAAKA,GACJwB,EAAO,CACRZ,SAAU,CAACgI,EAASC,KAExB,G,mCCtGA,Q,SAJkC/I,e,iCCElC,Q,SAJsCA,e,oLCH/B,SAASwK,EAAyBjQ,GACvC,OAAOC,EAAAA,EAAAA,IAAqB,eAAgBD,EAC9C,CACA,MACA,GADyBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,OAAQ,OAAQ,OAAQ,SAAU,YAAa,aAAc,kBAAmB,cAAe,YAAa,cAAe,aAAc,eAAgB,iB,eCD1N,MAAMC,EAAY,CAAC,QAAS,YAAa,YAAa,UAAW,QAAS,OAAQ,gBAAiB,WA2B7F+P,GAAgB3P,EAAAA,EAAAA,IAAO,KAAM,CACjCC,KAAM,eACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOC,KAAMD,EAAOO,EAAWE,SAAUT,EAAO,OAADU,QAAQC,EAAAA,EAAAA,GAAWJ,EAAW0J,QAAiC,WAAvB1J,EAAW6B,SAAwBpC,EAAO,UAADU,QAAWC,EAAAA,EAAAA,GAAWJ,EAAW6B,WAAkC,YAArB7B,EAAWiP,OAAuBxP,EAAO,QAADU,QAASC,EAAAA,EAAAA,GAAWJ,EAAWiP,SAAWjP,EAAWkP,cAAgBzP,EAAOyP,aAAa,GAPrS7P,EASnBqF,IAAA,IAAC,MACF9D,EAAK,WACLZ,GACD0E,EAAA,OAAKkC,EAAAA,EAAAA,GAAS,CAAC,EAAGhG,EAAMS,WAAW8N,MAAO,CACzCvP,QAAS,aACTC,cAAe,UAGfuP,aAAcxO,EAAM+B,KAAO,aAAHxC,OAAgBS,EAAM+B,KAAKC,QAAQyM,UAAUC,QAAM,kBAAAnP,OAChD,UAAvBS,EAAMgC,QAAQ2M,MAAmBC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAM7O,EAAMgC,QAAQ8M,QAAS,GAAI,MAAQC,EAAAA,EAAAA,KAAOF,EAAAA,EAAAA,IAAM7O,EAAMgC,QAAQ8M,QAAS,GAAI,MAC9H1C,UAAW,OACXnL,QAAS,IACe,SAAvB7B,EAAWE,SAAsB,CAClCO,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ0I,KAAK+B,QAC1CzL,WAAYhB,EAAMS,WAAWI,QAAQ,IACrCH,WAAYV,EAAMS,WAAWE,kBACL,SAAvBvB,EAAWE,SAAsB,CAClCO,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ0I,KAAK+B,SAClB,WAAvBrN,EAAWE,SAAwB,CACpCO,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ0I,KAAKgC,UAC1C1L,WAAYhB,EAAMS,WAAWI,QAAQ,IACrCD,SAAUZ,EAAMS,WAAWI,QAAQ,KACd,UAApBzB,EAAW0J,MAAoB,CAChC7H,QAAS,WACT,CAAC,KAAD1B,OAAMyP,EAAiBC,kBAAoB,CACzCzF,MAAO,GAEPvI,QAAS,gBACT,QAAS,CACPA,QAAS,KAGW,aAAvB7B,EAAW6B,SAA0B,CACtCuI,MAAO,GAEPvI,QAAS,aACe,SAAvB7B,EAAW6B,SAAsB,CAClCA,QAAS,GACa,SAArB7B,EAAWiP,OAAoB,CAChCjC,UAAW,QACW,WAArBhN,EAAWiP,OAAsB,CAClCjC,UAAW,UACW,UAArBhN,EAAWiP,OAAqB,CACjCjC,UAAW,QACXlM,cAAe,eACO,YAArBd,EAAWiP,OAAuB,CACnCjC,UAAW,WACVhN,EAAWkP,cAAgB,CAC5BvP,SAAU,SACV6D,IAAK,EACLxB,OAAQ,EACRqB,iBAAkBzC,EAAM+B,MAAQ/B,GAAOgC,QAAQkN,WAAWC,SAC1D,IAyHF,EAnH+BxL,EAAAA,YAAiB,SAAmBC,EAASC,GAC1E,MAAMjF,GAAQN,EAAAA,EAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,kBAEF,MACF2P,EAAQ,UAAS,UACjBhK,EACAC,UAAW8K,EACXnO,QAASoO,EACTC,MAAOC,EACPzG,KAAM0G,EAAQ,cACdC,EACAnQ,QAAS8F,GACPxG,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,GACzCqR,EAAQ/L,EAAAA,WAAiBgM,EAAAA,GACzBC,EAAYjM,EAAAA,WAAiBkM,EAAAA,GAC7BC,EAAaF,GAAmC,SAAtBA,EAAUtQ,QAC1C,IAAIgF,EAEFA,EADE8K,IAGUU,EAAa,KAAO,MAElC,IAAIR,EAAQC,EAGM,OAAdjL,EACFgL,OAAQvJ,GACEuJ,GAASQ,IACnBR,EAAQ,OAEV,MAAMhQ,EAAU8F,GAAewK,GAAaA,EAAUtQ,QAChDF,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCyP,QACA/J,YACArD,QAASoO,IAAgBK,GAASA,EAAMzO,QAAUyO,EAAMzO,QAAU,UAClE6H,KAAM0G,IAAaE,GAASA,EAAM5G,KAAO4G,EAAM5G,KAAO,UACtD2G,gBACAnB,aAA0B,SAAZhP,GAAsBoQ,GAASA,EAAMpB,aACnDhP,YAEI2G,EA5HkB7G,KACxB,MAAM,QACJ6G,EAAO,QACP3G,EAAO,MACP+O,EAAK,QACLpN,EAAO,KACP6H,EAAI,aACJwF,GACElP,EACE6F,EAAQ,CACZnG,KAAM,CAAC,OAAQQ,EAASgP,GAAgB,eAA0B,YAAVD,GAAuB,QAAJ9O,QAAYC,EAAAA,EAAAA,GAAW6O,IAAsB,WAAZpN,GAAwB,UAAJ1B,QAAcC,EAAAA,EAAAA,GAAWyB,IAAY,OAAF1B,QAASC,EAAAA,EAAAA,GAAWsJ,MAEzL,OAAO5C,EAAAA,EAAAA,GAAejB,EAAOkJ,EAA0BlI,EAAQ,EAgH/CE,CAAkB/G,GAClC,IAAI2Q,EAAW,KAIf,OAHIN,IACFM,EAA6B,QAAlBN,EAA0B,YAAc,eAEjCrI,EAAAA,EAAAA,KAAKgH,GAAepI,EAAAA,EAAAA,GAAS,CAC/CgB,GAAI1C,EACJT,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9B,YAAa0L,EACbT,MAAOA,EACPlQ,WAAYA,GACXiG,GACL,G,sLCxJO,SAAS2K,EAA0B9R,GACxC,OAAOC,EAAAA,EAAAA,IAAqB,oBAAqBD,EACnD,EAC0BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,OAAQ,UAAW,WAAY,QAAS,YAAa,Y,eCD5H,MAAMC,EAAY,CAAC,YAAa,UAAW,cAAe,YAAa,iBAAkB,WAAY,qBAAsB,OAAQ,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,SA2B1P4R,GAAiBxR,EAAAA,EAAAA,IAAOyR,EAAAA,EAAPzR,EAAmBqF,IAAA,IAAC,WACzC1E,GACD0E,EAAA,OAAKkC,EAAAA,EAAAA,GAAS,CACb/E,QAAS,EACTE,aAAc,OACO,UAApB/B,EAAW+Q,MAAoB,CAChC5F,WAAgC,UAApBnL,EAAW0J,MAAoB,GAAK,IAC3B,QAApB1J,EAAW+Q,MAAkB,CAC9B3F,YAAiC,UAApBpL,EAAW0J,MAAoB,GAAK,IACjD,IACIsH,GAAkB3R,EAAAA,EAAAA,IAAO,QAAS,CACtC4R,kBAAmBC,EAAAA,GADG7R,CAErB,CACD4L,OAAQ,UACRtL,SAAU,WACVwR,QAAS,EACT/G,MAAO,OACPtI,OAAQ,OACR0B,IAAK,EACLQ,KAAM,EACNoN,OAAQ,EACRvP,QAAS,EACTG,OAAQ,IA2NV,EArNgCuC,EAAAA,YAAiB,SAAoB/E,EAAOiF,GAC1E,MAAM,UACF4M,EACAC,QAASC,EAAW,YACpBC,EAAW,UACXvM,EAAS,eACTwM,EACApG,SAAUO,EAAY,mBACtB8F,GAAqB,EAAK,KAC1BX,GAAO,EAAK,KACZY,EAAI,GACJC,EAAE,WACFC,EAAU,SACVC,EAAQ,KACRxS,EAAI,OACJyS,EAAM,SACNC,EAAQ,QACRC,EAAO,SACPC,EAAQ,SACRnG,GAAW,EAAK,SAChBoG,EAAQ,KACR1F,EAAI,MACJ7C,GACEpK,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACxCqS,EAASc,IAAmBC,EAAAA,EAAAA,GAAc,CAC/CC,WAAYf,EACZxB,QAASwC,QAAQd,GACjBnS,KAAM,aACNkT,MAAO,YAEHvG,GAAiBC,EAAAA,EAAAA,KA6BvB,IAAIb,EAAWO,EACXK,GACsB,qBAAbZ,IACTA,EAAWY,EAAeZ,UAG9B,MAAMoH,EAAuB,aAAThG,GAAgC,UAATA,EACrCzM,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrC8R,UACAjG,WACAqG,qBACAX,SAEIlK,EAlHkB7G,KACxB,MAAM,QACJ6G,EAAO,QACPyK,EAAO,SACPjG,EAAQ,KACR0F,GACE/Q,EACE6F,EAAQ,CACZnG,KAAM,CAAC,OAAQ4R,GAAW,UAAWjG,GAAY,WAAY0F,GAAQ,OAAJ5Q,QAAWC,EAAAA,EAAAA,GAAW2Q,KACvF2B,MAAO,CAAC,UAEV,OAAO5L,EAAAA,EAAAA,GAAejB,EAAO+K,EAA2B/J,EAAQ,EAuGhDE,CAAkB/G,GAClC,OAAoB+H,EAAAA,EAAAA,MAAM8I,GAAgBjK,EAAAA,EAAAA,GAAS,CACjD1B,UAAW,OACXD,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9B0N,cAAc,EACdC,aAAclB,EACdrG,SAAUA,EACV8G,SAAU,KACV9H,UAAM1D,EACNsL,QAlDkBY,IACdZ,GACFA,EAAQY,GAEN5G,GAAkBA,EAAegG,SACnChG,EAAegG,QAAQY,EACzB,EA6CAd,OA3CiBc,IACbd,GACFA,EAAOc,GAEL5G,GAAkBA,EAAe8F,QACnC9F,EAAe8F,OAAOc,EACxB,EAsCA7S,WAAYA,EACZyE,IAAKA,GACJwB,EAAO,CACRZ,SAAU,EAAc2C,EAAAA,EAAAA,KAAKgJ,GAAiBpK,EAAAA,EAAAA,GAAS,CACrDyK,UAAWA,EACXC,QAASC,EACTE,eAAgBA,EAChBxM,UAAW4B,EAAQ6L,MACnBrH,SAAUA,EACVuG,GAAIa,EAAcb,OAAKjL,EACvBrH,KAAMA,EACN0S,SA/CsBa,IAExB,GAAIA,EAAMC,YAAYC,iBACpB,OAEF,MAAMC,EAAaH,EAAMI,OAAO3B,QAChCc,EAAgBY,GACZhB,GAEFA,EAASa,EAAOG,EAClB,EAsCEd,SAAUA,EACVzN,IAAKqN,EACL/F,SAAUA,EACV/L,WAAYA,EACZmS,SAAUA,EACV1F,KAAMA,GACI,aAATA,QAAiC9F,IAAViD,EAAsB,CAAC,EAAI,CACnDA,SACCiI,IAAcP,EAAUE,EAAcG,KAE7C,G,qEC5JA,SAAeuB,EAAAA,EAAAA,IAA4BlL,EAAAA,EAAAA,KAAK,OAAQ,CACtDmL,EAAG,uDACD,oB,sECFJ,SAAeD,EAAAA,EAAAA,IAA4BlL,EAAAA,EAAAA,KAAK,OAAQ,CACtDmL,EAAG,qDACD,qB,mHCNW,SAAS/S,EAAWgT,GACjC,GAAsB,kBAAXA,EACT,MAAM,IAAIC,MCGC,SAA+BC,GAC5C,MAAMC,EAAM,IAAIC,IAAI,0CAADrT,OAA2CmT,IAAQ,QAAAG,EAAAC,UAAAC,OADjBC,EAAI,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,EAAA,GAAAJ,UAAAI,GAGzD,OADAF,EAAKxH,SAAQ2H,GAAOR,EAAIS,aAAaC,OAAO,SAAUF,KAC/C,uBAAP5T,OAA8BmT,EAAI,YAAAnT,OAAWoT,EAAG,yBAClD,CDPqHW,CAAuB,IAE1I,OAAOd,EAAOe,OAAO,GAAGC,cAAgBhB,EAAOiB,MAAM,EACvD,CELe,SAASvN,EAAejB,EAAOyO,GAAsC,IAArBzN,EAAO6M,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,QAAG/M,EACvE,MAAM4N,EAAS,CAAC,EAChB,IAAK,MAAMC,KAAY3O,EAAO,CAC5B,MAAM/G,EAAO+G,EAAM2O,GACnB,IAAIC,EAAS,GACTC,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI7V,EAAK6U,OAAQgB,GAAK,EAAG,CACvC,MAAM/K,EAAQ9K,EAAK6V,GACf/K,IACF6K,KAAqB,IAAVC,EAAiB,GAAK,KAAOJ,EAAgB1K,GACxD8K,GAAQ,EACJ7N,GAAWA,EAAQ+C,KACrB6K,GAAU,IAAM5N,EAAQ+C,IAG9B,CACA2K,EAAOC,GAAYC,CACrB,CACA,OAAOF,CACT,CCpBe,SAASK,IAAoB,QAAAnB,EAAAC,UAAAC,OAANkB,EAAI,IAAAhB,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJe,EAAIf,GAAAJ,UAAAI,GAMxC,OAAOvP,EAAAA,SAAc,IACfsQ,EAAKC,OAAMrQ,GAAc,MAAPA,IACb,KAEFsQ,IACLF,EAAKzI,SAAQ3H,KCFJ,SAAgBA,EAAKmF,GACf,oBAARnF,EACTA,EAAImF,GACKnF,IACTA,EAAIuQ,QAAUpL,EAElB,CDHQqL,CAAOxQ,EAAKsQ,EAAS,GACrB,GAIHF,EACL,CEXA,MACA,EAD4C,qBAAXK,OAAyB3Q,EAAAA,gBAAwBA,EAAAA,U,0BCXlF,MAAM4Q,EAAmBC,GAAiBA,EAgB1C,EAfiCC,MAC/B,IAAIC,EAAWH,EACf,MAAO,CACLI,SAAAA,CAAUC,GACRF,EAAWE,CACb,EACAF,SAASF,GACAE,EAASF,GAElBK,KAAAA,GACEH,EAAWH,CACb,EACD,EAEwBE,GCddK,EAAqB,CAChC/H,OAAQ,SACR2D,QAAS,UACTqE,UAAW,YACXtK,SAAU,WACVI,MAAO,QACPmK,SAAU,WACVC,QAAS,UACTC,aAAc,eACdC,KAAM,OACN7D,SAAU,WACVnG,SAAU,WACViK,SAAU,YAEG,SAASjX,EAAqBqW,EAAetW,GAAiC,IAA3BmX,EAAiBvC,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,MACpF,MAAMwC,EAAmBR,EAAmB5W,GAC5C,OAAOoX,EAAmB,GAAH/V,OAAM8V,EAAiB,KAAA9V,OAAI+V,GAAgB,GAAA/V,OAAQgW,EAAmBb,SAASF,GAAc,KAAAjV,OAAIrB,EAC1H,CCjBe,SAASE,EAAuBoW,EAAevP,GAAkC,IAA3BoQ,EAAiBvC,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,MACvF,MAAM0C,EAAS,CAAC,EAIhB,OAHAvQ,EAAMuG,SAAQtN,IACZsX,EAAOtX,GAAQC,EAAqBqW,EAAetW,EAAMmX,EAAkB,IAEtEG,CACT,CCNO,SAASC,EAAwBvX,GACtC,OAAOC,EAAqB,cAAeD,EAC7C,CACO,MAAMwX,EAActX,EAAuB,cAAe,CAAC,cAAe,0BAA2B,qCAAsC,uCAAwC,sCAAuC,+BAAgC,aAAc,aAAc,cAAe,iBAAkB,gBAAiB,aAAc,mBAAoB,iBAAkB,kBAAmB,iBAAkB,oBAAqB,kBAAmB,mBAAoB,mBAAoB,oBAAqB,sBAAuB,OAAQ,eAAgB,YAAa,eAAgB,iBAAkB,gBAAiB,eAAgB,4BAA6B,0BAA2B,2BAA4B,yBAA0B,uBAAwB,wBAAyB,yBAA0B,uBAAwB,yBAA0B,2BAA4B,4BAA6B,qBAAsB,6BAA8B,+BAAgC,uBAAwB,iCAAkC,oBAAqB,6BAA8B,oCAAqC,4BAA6B,2BAA4B,gBAAiB,6BAA8B,4BAA6B,4BAA6B,6BAA8B,kBAAmB,oBAAqB,uBAAwB,0BAA2B,0BAA2B,iBAAkB,oBAAqB,cAAe,eAAgB,wBAAyB,kCAAmC,aAAc,QAAS,cAAe,eAAgB,eAAgB,cAAe,QAAS,kBAAmB,gBAAiB,SAAU,uBAAwB,qBAAsB,sBAAuB,aAAc,uBAAwB,+BAAgC,wBAAyB,0BAA2B,uBAAwB,aAAc,kBAAmB,kBAAmB,sBAAuB,gBAAiB,OAAQ,uBAAwB,kCAAmC,OAAQ,WAAY,iBAAkB,WAAY,WAAY,UAAW,iBAAkB,sBAAuB,OAAQ,wBAAyB,2BAA4B,uBAAwB,6BAA8B,kBAAmB,MAAO,gBAAiB,eAAgB,oBAAqB,mBAAoB,gBAAiB,qBAAsB,2BAA4B,oBAAqB,4BAA6B,WAAY,0BAA2B,iBAAkB,4BAA6B,cAAe,mBAAoB,oBAAqB,aAAc,YAAa,sBAAuB,wBAAyB,kBAAmB,0BAA2B,6BAA8B,gCAAiC,+BAAgC,mBAAoB,WAAY,mBAAoB,oBAAqB,kBAAmB,8BAA+B,yBAA0B,qCAAsC,4BAA6B,gBAAiB,qBAAsB,kBAAmB,wBAAyB,uBAAwB,gCAAiC,+BAAgC,uBAAwB,6BAA8B,uCAAwC,uBAAwB,6BAA8B,uCAAwC,aAAc,kBAAmB,qBAAsB,yBCJr+GuX,EAAK9T,OAAO8T,GACX,SAASC,EAAyBC,EAAGC,GAC1C,GAAID,IAAMC,EACR,OAAO,EAET,KAAMD,aAAahU,WAAaiU,aAAajU,QAC3C,OAAO,EAET,IAAIkU,EAAU,EACVC,EAAU,EAGd,IAAK,MAAM9T,KAAO2T,EAAG,CAEnB,GADAE,GAAW,GACNJ,EAAGE,EAAE3T,GAAM4T,EAAE5T,IAChB,OAAO,EAET,KAAMA,KAAO4T,GACX,OAAO,CAEX,CAGA,IAAK,MAAMG,KAAKH,EACdE,GAAW,EAEb,OAAOD,IAAYC,CACrB,CCxBA,MAAME,EAAgB,CAAC,EASR,SAASC,EAAWC,EAAMC,GACvC,MAAMxS,EAAMF,EAAAA,OAAauS,GAIzB,OAHIrS,EAAIuQ,UAAY8B,IAClBrS,EAAIuQ,QAAUgC,EAAKC,IAEdxS,CACT,CCfA,MAAMyS,EAAQ,GAKC,SAASC,EAAWC,GAGjC7S,EAAAA,UAAgB6S,EAAIF,EAEtB,CCRA,SAASG,EAAiBC,GACxB,OAAOA,EAASC,aAClB,CAEA,SAASC,EAAcC,EAAQH,GAC7B,OAAID,EAAiBC,GACZA,EAASG,GAEXH,EAASG,EAAOzC,QAAQxC,MACjC,CASA,MAAMkF,EAAiBjV,OAAO8T,GACjBoB,EAAuBnB,EAC9BoB,EAAaA,KAAA,CACjBpF,MAAO,KACPqF,OAAQ,KACRP,SAAU,OAICQ,EAAkB,SAACL,EAAQH,GAAsC,IAA5BO,EAAMnE,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAGgE,EAMzD,MAAM7C,EAAOkC,EAAWa,GAClBG,EAAoC,OAA1BlD,EAAKG,QAAQsC,UACtB9E,EAAOwF,GAAYzT,EAAAA,SAE1BwT,EAAU,KAAOP,EAAcC,EAAQH,IAavC,OAZAzC,EAAKG,QAAQxC,MAAQA,EACrBqC,EAAKG,QAAQ6C,OAASA,EACtBhD,EAAKG,QAAQsC,SAAWA,EACxBH,GAAW,IACFM,EAAOzC,QAAQiD,MAAMC,WAAU,KACpC,MAAMC,EAAWX,EAAcC,EAAQ5C,EAAKG,QAAQsC,UAC/CzC,EAAKG,QAAQ6C,OAAOhD,EAAKG,QAAQxC,MAAO2F,KAC3CtD,EAAKG,QAAQxC,MAAQ2F,EACrBH,EAASG,GACX,MAGG3F,CACT,ECvDa4F,EAAqC7T,EAAAA,mBAAoBoC,GAI/D,SAAS0R,IACd,MAAMC,EAAgB/T,EAAAA,WAAiB6T,GACvC,QAAsBzR,IAAlB2R,EACF,MAAM,IAAIjF,MAAM,CAAC,uDAAwD,oHAAqH,gFAAgFkF,KAAK,OAErR,OAAOD,CACT,CCXO,MAAME,EAAyBhG,GAASA,EAAMiG,WCerD,MAAMC,EAAqB,CACzB,CAAC,MAADvY,OAAOwY,EAAEC,sBAAwB,CAC/BC,WAAY,UACZzO,MAAO,QAET,CAAC,MAADjK,OAAOwY,EAAEG,WAAa,CACpB1O,MAAO,OACPyO,WAAY,YAMVE,EAA0B,CAC9B3O,MAAO,EACP4O,GAAI,IACJC,EAAG,MAMQC,GAAiB7Z,EAAAA,EAAAA,IAAO,MAAO,CAC1CC,KAAM,cACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,IAAW,CAAC,CACrC,CAAC,KAADU,OAAMwY,EAAEQ,aAAe1Z,EAAO0Z,YAC7B,CACD,CAAC,KAADhZ,OAAMwY,EAAES,0BAA4B3Z,EAAO2Z,yBAC1C,CACD,CAAC,KAADjZ,OAAMwY,EAAE,wCAA0ClZ,EAAO,uCACxD,CACD,CAAC,KAADU,OAAMwY,EAAE,0CAA4ClZ,EAAO,yCAC1D,CACD,CAAC,KAADU,OAAMwY,EAAE,yCAA2ClZ,EAAO,wCACzD,CACD,CAAC,KAADU,OAAMwY,EAAEU,+BAAiC5Z,EAAO4Z,8BAC/C,CACD,CAAC,KAADlZ,OAAMwY,EAAE,8BAA6B,MAAAxY,OAAKwY,EAAEW,OAAS7Z,EAAO,+BAC3D,CACD,CAAC,KAADU,OAAMwY,EAAEY,aAAe9Z,EAAO8Z,YAC7B,CACD,CAAC,MAADpZ,OAAOwY,EAAEa,kBAAoB/Z,EAAO+Z,iBACnC,CACD,CAAC,MAADrZ,OAAOwY,EAAEW,OAAS7Z,EAAO6Z,MACxB,CACD,CAAC,MAADnZ,OAAOwY,EAAE,mBAAqBlZ,EAAO,kBACpC,CACD,CAAC,MAADU,OAAOwY,EAAE,sBAAwBlZ,EAAO,qBACvC,CACD,CAAC,MAADU,OAAOwY,EAAE,oBAAsBlZ,EAAO,mBACrC,CACD,CAAC,MAADU,OAAOwY,EAAE,qBAAuBlZ,EAAO,oBACtC,CACD,CAAC,MAADU,OAAOwY,EAAE,oBAAsBlZ,EAAO,mBACrC,CACD,CAAC,MAADU,OAAOwY,EAAE,uBAAyBlZ,EAAO,sBACxC,CACD,CAAC,MAADU,OAAOwY,EAAE,qBAAuBlZ,EAAO,oBACtC,CACD,CAAC,MAADU,OAAOwY,EAAE,sBAAwBlZ,EAAO,qBACvC,CACD,CAAC,MAADU,OAAOwY,EAAE,2BAA6BlZ,EAAO,0BAC5C,CACD,CAAC,MAADU,OAAOwY,EAAEc,eAAiBha,EAAOga,cAChC,CACD,CAAC,MAADtZ,OAAOwY,EAAEe,eAAiBja,EAAOia,cAChC,CACD,CAAC,MAADvZ,OAAOwY,EAAEgB,gBAAkBla,EAAOka,eACjC,CACD,CAAC,MAADxZ,OAAOwY,EAAE,+BAAiClZ,EAAO,8BAChD,CACD,CAAC,MAADU,OAAOwY,EAAE,6BAA+BlZ,EAAO,4BAC9C,CACD,CAAC,MAADU,OAAOwY,EAAE,8BAAgClZ,EAAO,6BAC/C,CACD,CAAC,MAADU,OAAOwY,EAAE,4BAA8BlZ,EAAO,2BAC7C,CACD,CAAC,MAADU,OAAOwY,EAAE,0BAA4BlZ,EAAO,yBAC3C,CACD,CAAC,MAADU,OAAOwY,EAAE,2BAA6BlZ,EAAO,0BAC5C,CACD,CAAC,MAADU,OAAOwY,EAAE,4BAA8BlZ,EAAO,2BAC7C,CACD,CAAC,MAADU,OAAOwY,EAAE,0BAA4BlZ,EAAO,yBAC3C,CACD,CAAC,MAADU,OAAOwY,EAAE,mCAAqClZ,EAAO,kCACpD,CACD,CAAC,MAADU,OAAOwY,EAAEiB,eAAiBna,EAAOma,cAChC,CACD,CAAC,MAADzZ,OAAOwY,EAAEkB,kBAAoBpa,EAAOoa,iBACnC,CACD,CAAC,MAAD1Z,OAAOwY,EAAEmB,uBAAyBra,EAAOqa,sBACxC,CACD,CAAC,MAAD3Z,OAAOwY,EAAEoB,iCAAmCta,EAAOsa,gCAClD,CACD,CAAC,MAAD5Z,OAAOwY,EAAEqB,6BAA+Bva,EAAOua,4BAC9C,CACD,CAAC,MAAD7Z,OAAOwY,EAAE,gCAAkClZ,EAAO,+BACjD,CACD,CAAC,MAADU,OAAOwY,EAAE,+BAAiClZ,EAAO,8BAChD,CACD,CAAC,MAADU,OAAOwY,EAAEsB,kBAAoBxa,EAAOwa,iBACnC,CACD,CAAC,MAAD9Z,OAAOwY,EAAEuB,aAAeza,EAAOya,YAC9B,CACD,CAAC,MAAD/Z,OAAOwY,EAAEwB,gBAAkB1a,EAAO0a,eACjC,CACD,CAAC,MAADha,OAAOwY,EAAEG,WAAarZ,EAAOqZ,UAC5B,CACD,CAAC,MAAD3Y,OAAOwY,EAAEyB,iBAAmB3a,EAAO2a,gBAClC,CACD,CAAC,MAADja,OAAOwY,EAAE0B,WAAa5a,EAAO4a,UAC5B,CACD,CAAC,MAADla,OAAOwY,EAAE2B,WAAa7a,EAAO6a,UAC5B,CACD,CAAC,MAADna,OAAOwY,EAAE,mBAAqBlZ,EAAO,kBACpC,CACD,CAAC,MAADU,OAAOwY,EAAE,kBAAoBlZ,EAAO,iBACnC,CACD,CAAC,MAADU,OAAOwY,EAAE,mBAAqBlZ,EAAO,kBACpC,CACD,CAAC,MAADU,OAAOwY,EAAE4B,MAAQ9a,EAAO8a,KACvB,CACD,CAAC,MAADpa,OAAOwY,EAAE6B,4BAA8B/a,EAAO+a,2BAC7C,CACD,CAAC,MAADra,OAAOwY,EAAE8B,iBAAmBhb,EAAOgb,gBAClC,CACD,CAAC,MAADta,OAAOwY,EAAE,+BAAiClZ,EAAO,8BAChD,CACD,CAAC,MAADU,OAAOwY,EAAE+B,WAAajb,EAAOib,UAC5B,CACD,CAAC,MAADva,OAAOwY,EAAEgC,kBAAoBlb,EAAOkb,iBACnC,CACD,CAAC,MAADxa,OAAOwY,EAAEiC,uBAAyBnb,EAAOmb,sBACxC,CACD,CAAC,MAADza,OAAOwY,EAAEkC,6BAA+Bpb,EAAOob,4BAC9C,CACD,CAAC,MAAD1a,OAAOwY,EAAEmC,uCAAyCrb,EAAOqb,sCACxD,CACD,CAAC,MAAD3a,OAAOwY,EAAEoC,uCAAyCtb,EAAOsb,sCACxD,CACD,CAAC,MAAD5a,OAAOwY,EAAEqC,wBAA0Bvb,EAAOub,uBACzC,CACD,CAAC,MAAD7a,OAAOwY,EAAE,qCAAuClZ,EAAO,oCACtDA,EAAOC,OA3HkBL,EA4H3BqF,IAEG,IAAAuW,EAAAC,EAAAC,EAAAC,EAAA,IADJxa,MAAOya,GACR3W,EACC,MAAM+S,EAASY,IACTI,EAAaX,EAAgBL,EAAQe,GACrC8C,GAhKgB1a,EAgKaya,GA/JzB1Y,KACD/B,EAAM+B,KAAKC,QAAQyM,UAAUC,OAEX,UAAvB1O,EAAMgC,QAAQ2M,MACTC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAM7O,EAAMgC,QAAQ8M,QAAS,GAAI,MAE3CC,EAAAA,EAAAA,KAAOF,EAAAA,EAAAA,IAAM7O,EAAMgC,QAAQ8M,QAAS,GAAI,KAPjD,IAAwB9O,EAiKtB,MAAM2a,EAASF,EAAEG,MAAMzZ,aACjB0Z,EAAsBJ,EAAE1Y,KAAO0Y,EAAE1Y,KAAKC,QAAQkN,WAAWC,QAAmD,QAA5CkL,EAAuB,QAAvBC,EAAGG,EAAEK,OAAOC,mBAAW,IAAAT,OAAA,EAApBA,EAAsBO,2BAAmB,IAAAR,EAAAA,EAAII,EAAEzY,QAAQkN,WAAWC,QACrI6L,EAAyD,QAAzCT,EAAuB,QAAvBC,EAAGC,EAAEK,OAAOC,mBAAW,IAAAP,OAAA,EAApBA,EAAsBQ,wBAAgB,IAAAT,EAAAA,EAAIM,EAC7DI,EAAoBR,EAAE1Y,KAAO,QAAHxC,OAAWkb,EAAE1Y,KAAKC,QAAQkN,WAAWgM,eAAc,OAAA3b,OAAMkb,EAAE1Y,KAAKC,QAAQ8K,OAAOqO,gBAAe,MAAMtM,EAAAA,EAAAA,IAAM4L,EAAEzY,QAAQkN,WAAWC,QAASsL,EAAEzY,QAAQ8K,OAAOqO,iBACnLC,GAAgBX,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ8K,OAAOsO,aAC5CC,GAAcZ,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ8K,OAAOwO,MAC1CC,GAAmBd,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ8K,OAAOyO,gBAC/CC,EAAuBf,EAAE1Y,KAAO,QAAHxC,OAAW6b,EAAY,OAAA7b,OAAMgc,EAAe,KAC7EH,EAAeG,EACXE,EAAqBhB,EAAE1Y,KAAO,QAAHxC,OAAWkb,EAAE1Y,KAAKC,QAAQyK,QAAQiP,YAAW,OAAAnc,OAAMgc,EAAe,MAAM1M,EAAAA,EAAAA,IAAM4L,EAAEzY,QAAQyK,QAAQpK,KAAMkZ,GACjII,EAA0BlB,EAAE1Y,KAAO,QAAHxC,OAAWkb,EAAE1Y,KAAKC,QAAQyK,QAAQiP,YAAW,OAAAnc,OAAMic,EAAoB,MAAM3M,EAAAA,EAAAA,IAAM4L,EAAEzY,QAAQyK,QAAQpK,KAAMmZ,GAC3II,EAAUnB,EAAE1Y,KAAO8Z,EAAeC,EAClCC,EAA4BtZ,IAAmB,CACnD,CAAC,MAADlD,OAAOwY,EAAE,oBAAmB,SAAAxY,OAAQwY,EAAE,uBAAyB,CAC7DtV,kBACA,iBAAkB,CAChBA,gBAAiBmZ,EAAQnZ,EAAiBgZ,EAAoBF,GAC9D,UAAW,CACT9Y,gBAAiBmZ,EAAQnZ,EAAiBgZ,EAAoBD,QAMhEQ,EAAoBD,EADIH,EAAQZ,EAAkBK,EAAYD,IAE9Da,EAAgCL,EAAQZ,EAAkBS,EAAoBF,GAC9EW,EAAuBH,EAA0BE,GAEjDE,EAA4BJ,EADSH,EAAQZ,EAAkBW,EAAyBH,IAExFY,EAAiB,CACrB3Z,gBAAiBgZ,EACjB,UAAW,CACThZ,gBAAiBkZ,EAEjB,uBAAwB,CACtBlZ,gBAAiBgZ,KA2hBvB,OAvhBkBzV,EAAAA,EAAAA,GAAS,CACzB,6BAAgD,kBAAX2U,EAAsB,GAAHpb,OAAMob,EAAM,MAAOA,EAC3E,iCAAkCF,EAAEha,WAAWE,iBAC/C,wCAAyCsa,EACzC,iCAAkCJ,EAClC,8BAA+BG,EAC/B,4BAA6BN,EAC7B,kCAAmC,EACnC,mBAAoB,MACpB,wBAAyB,IACzB,wBAAyB,IACzB,2BAA4B,OAC5B,sBAAuB,MACvB,+BAAgC,MAChC,6BAA8B,MAC9B,8BAA+B,MAC/B,0BAA2B,MAC3B,gCAAiC,MACjC,gCAAiC,MACjC,mCAAoC,MACpCjN,KAAM,EACNlN,UAAW,aACXxB,SAAU,WACVsd,YAAa,MACbC,YAAa,QACb5B,cACAvZ,aAAc,kCACdtB,OAAQ4a,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ0I,KAAK+B,SACjCgO,EAAEha,WAAW8N,MAAO,CACrBgO,QAAS,OACTrb,OAAQ,OACRlC,QAAS,OACT8B,SAAU,EAEV0b,UAAW,EACXtc,cAAe,SACfiM,SAAU,SACVsQ,eAAgB,OAEhB,CAAC,IAADld,OAAKwY,EAAE1V,KAAI,oBAAA9C,OAjNU,0HAiN8B,CACjDmd,oBAAqB,kCACrBC,qBAAsB,mCAExB,CAAC,KAADpd,OAAMwY,EAAEQ,aAAe,CACrBrX,OAAQ,QAEV,CAAC,KAAD3B,OAAMwY,EAAEY,aAAe,CACrB,CAAC,MAADpZ,OAAOwY,EAAE6E,kCAAiC,SAAS,CACjDzQ,SAAU,sBAEZ,wBAAyB,CACvB,CAAC,MAAD5M,OAAOwY,EAAEC,sBAAwB,CAC/BxO,MAAO,eACPyO,WAAY,qBAEd,CAAC,MAAD1Y,OAAOwY,EAAEG,WAAa,CACpB1O,MAAO,eACPyO,WAAY,sBAGhB,CAAC,MAAD1Y,OAAOwY,EAAEW,OAAS,CAChBvM,SAAU,qBACV0Q,WAAY,SACZ/b,SAAU,yBACVgc,SAAU,0BAEZ,CAAC,MAADvd,OAAOwY,EAAEgF,uBAAyB,CAChCvT,MAAO,SAET,CAAC,MAADjK,OAAOwY,EAAEiC,uBAAyB,CAChCxQ,MAAO,UAGX,CAAC,MAADjK,OAAOwY,EAAEiB,aAAY,SAAAzZ,OAAQwY,EAAEW,OAAS,CACtCpO,wBAAyB,cACzBrJ,QAAS,SACTV,UAAW,cAEb,CAAC,MAADhB,OAAOwY,EAAEiB,aAAY,sBAAAzZ,OAAqBwY,EAAEW,KAAI,kBAAkB,CAChE6D,QAAS,SAAFhd,OAAWkb,EAAE1Y,KAAO,QAAHxC,OAAWkb,EAAE1Y,KAAKC,QAAQyK,QAAQiP,YAAW,YAAY7M,EAAAA,EAAAA,IAAM4L,EAAEzY,QAAQyK,QAAQpK,KAAM,IAAI,KAAA9C,OAlQ/F,EAkQoH,MACxIyd,eAAeC,GAEjB,CAAC,MAAD1d,OAAOwY,EAAEiB,aAAY,eAAAzZ,OAAcwY,EAAEW,KAAI,WAAW,CAClD6D,QAAS,SAAFhd,OAAWkb,EAAEzY,QAAQyK,QAAQpK,KAAI,KAAA9C,OAtQpB,EAsQyC,MAC7Dyd,eAAeC,GAOjB,CAAC,MAAD1d,OAAOwY,EAAEiB,aAAY,sBAAAzZ,OACdwY,EAAE,gCAA+B,gBAAAxY,OACjCwY,EAAE,iCAAgC,gBAAAxY,OAClCwY,EAAE,gCAA+B,gBAAAxY,OACjCwY,EAAE,+BAA8B,MAAAxY,OAAKwY,EAAE,8BAA6B,gBAAAxY,OACpEwY,EAAE,+BAA8B,MAAAxY,OAAKwY,EAAE,sBAAqB,aAC7D,CACJ,CAAC,MAADxY,OAAOwY,EAAEsB,kBAAoB,CAC3B9I,QAAS,GAGX,uBAAwB,CACtB,CAAC,MAADhR,OAAOwY,EAAE,gCAAkC,CACzCxH,QAAS,IAGb,CAAC,MAADhR,OAAOwY,EAAE,8BAA6B,WAAW,CAC/CxH,QAAS,IAGb,CAAC,KAADhR,OAAMwY,EAAE,mBAAkB,6CAA6C,CACrE2E,oBAAqB,+CAEvB,CAAC,KAADnd,OAAMwY,EAAE,mBAAkB,0BAAAxY,OAAyBwY,EAAE,wBAA0B,CAC7E4E,sBAAsB9E,EAAWqF,YAAgBrF,EAAWsF,YAA2C,IAA7BtF,EAAWuF,mBAAuErX,EAAhD,+CAE9G,CAAC,MAADxG,OAAOwY,EAAEmB,qBAAoB,SAAA3Z,OAAQwY,EAAEc,eAAiB,CACtD5X,QAAS,EACTb,eAAgB,SAChBE,WAAY,UAEd,CAAC,MAADf,OAAOwY,EAAEiB,eAAiB,CACxBja,SAAU,WACVC,QAAS,OACTsB,WAAY,UAEd,CAAC,MAADf,OAAOwY,EAAE,+BAA8B,MAAAxY,OAAKwY,EAAE,wBAA0B,CACtE5L,SAAU,UAEZ,CAAC,MAAD5M,OAAOwY,EAAE,wBAAuB,MAAAxY,OAAKwY,EAAEC,oBAAmB,SAAAzY,OAAQwY,EAAE,0BAAyB,MAAAxY,OAAKwY,EAAEC,sBAAwB,CAC1HC,WAAY,UACZzO,MAAO,QAET,CAAC,MAADjK,OAAOwY,EAAEiB,aAAY,UAAAzZ,OAASwY,EAAE,wBAAuB,OAAAxY,OAAMwY,EAAE+B,WAAa,CAC1EvJ,QAAS,EACTlP,WAAYoZ,EAAEnZ,YAAYC,OAAO,CAAC,WAAY,CAC5CG,SAAU+Y,EAAEnZ,YAAYI,SAAS2b,WAGrC,CAAC,MAAD9d,OAAOwY,EAAEqB,6BAA+B,CACtCpa,QAAS,OACTsB,WAAY,SACZgd,IAAK7C,EAAE8C,QAAQ,KACfzc,SAAU,EACV2M,KAAM,EACNoP,WAAY,SACZ1Q,SAAU,UAEZ,CAAC,MAAD5M,OAAOwY,EAAE6E,oCAAsC,CAC7CzQ,SAAU,SACVnN,QAAS,OACTsB,WAAY,UAEd,CAAC,MAADf,OAAOwY,EAAE,6BAA4B,MAAAxY,OAAKwY,EAAEqB,6BAA+B,CACzEoE,kBAAmB,MACnBC,kBAAmB,QACnBld,UAAW,cAEb,CAAC,MAADhB,OAAOwY,EAAE+B,SAAQ,SAAAva,OAAQwY,EAAEuB,aAAe,CACxC1Y,SAAU,WAEZ,CAAC,MAADrB,OAAOwY,EAAE,4BAA8B,CACrC1N,OAAQ,WAEV,CAAC,MAAD9K,OAAOwY,EAAE,6BAA4B,MAAAxY,OAAKwY,EAAEqB,6BAA+B,CACzEhZ,eAAgB,UAElB,CAAC,MAADb,OAAOwY,EAAE,4BAA2B,MAAAxY,OAAKwY,EAAEoB,+BAA8B,SAAA5Z,OAAQwY,EAAE,4BAA2B,MAAAxY,OAAKwY,EAAEqB,6BAA+B,CAClJlZ,cAAe,eAEjB,CAAC,MAADX,OAAOwY,EAAE,6BAA4B,MAAAxY,OAAKwY,EAAEG,WAAa,CACvD3N,WAAY,QAEd,CAAC,MAADhL,OAAOwY,EAAE,4BAA2B,MAAAxY,OAAKwY,EAAEG,WAAa,CACtD1N,YAAa,OACbD,YAAa,GAEf,CAAC,MAADhL,OAAOwY,EAAE,0BAA4B,CACnCtV,iBAAkBgY,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ8K,OAAOwO,OAEhD,CAAC,MAAD/b,OAAOwY,EAAE,4BAA2B,SAAAxY,OAAQwY,EAAE,+BAAiC,CAC7EhZ,SAAU,SACVqC,OAAQ,EAER8N,WAAY,oCAEd,CAAC,MAAD3P,OAAOwY,EAAEsB,kBAAoB,CAC3Bta,SAAU,WACVoN,SAAU,SACV/K,OAAQ,EACRpC,QAAS,OACTkB,cAAe,SACfE,eAAgB,SAChBE,WAAY,SACZwc,SAxX4B,GAyX5Bjd,MAAO6a,GAET,CAAC,MAADnb,OAAOwY,EAAE2F,gBAAkB,CACzBlU,MAAO,4BAET,wBAAyB,CACvB,CAAC,MAADjK,OAAOwY,EAAEiB,aAAY,WAAWlB,EAChC,CAAC,MAADvY,OAAOwY,EAAEiB,aAAY,UAAAzZ,OAASwY,EAAE,wBAAuB,aAAAxY,OAAYwY,EAAE+B,WAAa,CAChFvJ,QAAS,KAGb,uBAAwB,CACtB,CAAC,MAADhR,OAAOwY,EAAEiB,eAAiBlB,EAC1B,CAAC,MAADvY,OAAOwY,EAAEiB,aAAY,wBAAAzZ,OACdwY,EAAE,kCAAoC,CAC3C,CAAC,IAADxY,OAAKwY,EAAE,gCAAkC,CACvClY,OAAQ4a,EAAE1Y,MAAQ0Y,GAAGzY,QAAQyK,QAAQpK,QAI3C,CAAC,MAAD9C,OAAOwY,EAAE,+BAAiC,CACxC3U,MA7YwB,GA+Y1B,CAAC,MAAD7D,OAAOwY,EAAE,gCAAkC,CACzClV,OAhZwB,GAkZ1B,CAAC,MAADtD,OAAOwY,EAAE,iCAAgC,MAAAxY,OAAKwY,EAAE,+BAAiC,CAC/E3U,MAAMua,KAER,CAAC,MAADpe,OAAOwY,EAAE,iCAAgC,MAAAxY,OAAKwY,EAAE,gCAAkC,CAChFlV,OAAO8a,KAET,CAAC,MAADpe,OAAOwY,EAAE,gCAAkC,CACzC1N,OAAQ,aACRuT,YAAa,OACb,CAAC,KAADre,OAAMwY,EAAE,+BAAiC,CACvClY,OAAQ4a,EAAE1Y,MAAQ0Y,GAAGzY,QAAQyK,QAAQpK,MAGvC,uBAAwB,CACtB,CAAC,MAAD9C,OAAOwY,EAAEwB,cAAa,UAAUpB,GAElC,wBAAyB,CACvB,UAAW,CACTtY,OAAQ4a,EAAE1Y,MAAQ0Y,GAAGzY,QAAQyK,QAAQpK,KACrC,CAAC,MAAD9C,OAAOwY,EAAEwB,cAAa,UAAUpB,IAGpC,QAAS,CACP0F,cAAe,SAGnB,CAAC,MAADte,OAAOwY,EAAEwB,gBAAkB,CACzB1Z,MAAO,UACPwB,WAAYoZ,EAAEnZ,YAAYC,OAAO,CAAC,QAAS,SAAU,CACnDG,SAAU+Y,EAAEnZ,YAAYI,SAASoc,YAGrC,CAAC,MAADve,OAAOwY,EAAEG,WAAa,CACpB1O,MAAO,EACPyO,WAAY,SACZrX,SAAU,GACV4J,aAAc,EACdxL,QAAS,OACTsB,WAAY,UAEd,CAAC,IAADf,OAAKwY,EAAE0B,WAAa,CAClBxB,WAAY,UACZzO,MAAO,QAET,CAAC,MAADjK,OAAOwY,EAAEkB,kBAAoB,CAC3B,CAAC,MAAD1Z,OAAOwY,EAAEiB,eAAiB,CACxBzY,UAAW,aACXiO,aAAc,6CAIlB,CAAC,MAADjP,OAAOwY,EAAE,qBAAoB,MAAAxY,OAAKwY,EAAEiB,aAAY,gBAAAzZ,OACzCwY,EAAE,qBAAoB,MAAAxY,OAAKwY,EAAEgG,OAAM,gBAAAxe,OACnCwY,EAAE,qBAAoB,MAAAxY,OAAKwY,EAAEiG,kBAAoB,CACtDxP,aAAc,4CAEhB,CAAC,MAADjP,OAAOwY,EAAE,qBAAoB,MAAAxY,OAAKwY,EAAEW,OAAS,CAC3ClK,aAAc,mCAGhB,CAAC,IAADjP,OAAKwY,EAAE4B,MAAQ,CACb3a,QAAS,OACTwK,MAAO,2BACPyU,YAAa,QAGb,mBAAoB,iCACpB,CAAC,KAAD1e,OAAMwY,EAAE,uBAAyB,CAC/B,mBAAoB,eAEtB,UAAW,CACTtV,iBAAkBgY,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ8K,OAAOwO,MAE9C,uBAAwB,CACtB7Y,gBAAiB,gBAGrB,CAAC,KAADlD,OAAMwY,EAAEmG,YAAW,WAAW,CAC5Bzb,gBAAiB,eAEnB,iBAAkB2Z,GAEpB,CAAC,MAAD7c,OAAOwY,EAAE,kBAAiB,SAAAxY,OAAQwY,EAAE,uBAAyB,CAC3D,aAAc,CACZ7I,WAAY,wCAIhB,CAAC,MAAD3P,OAAOwY,EAAEW,OAAS,CAChBjL,KAAM,WACNvM,OAAQ,gBACRsI,MAAO,eACPxI,WAAY,4BAGZT,UAAW,aACX4d,UAAW,kCACXhS,SAAU,SACV0Q,WAAY,SACZuB,aAAc,WACd,iBAAkBhC,GAEpB,CAAC,MAAD7c,OAAOwY,EAAE,sCAAqC,MAAAxY,OAAKwY,EAAE,oBAAmB,MAAAxY,OAAKwY,EAAEW,OAAS,CACtF2F,eAAgB,eAElB,CAAC,MAAD9e,OAAOwY,EAAE,mBAAkB,oBAAoB,CAC7C,CAAC,MAADxY,OAAOwY,EAAEW,KAAI,OAAAnZ,OAAMwY,EAAEiG,kBAAoB,CACvCG,UAAW,SAGf,CAAC,KAAD5e,OAAMwY,EAAE,8BAA6B,MAAAxY,OAAKwY,EAAEW,OAAS,CACnDxM,WAAY,QAEd,CAAC,MAAD3M,OAAOwY,EAAE,sBAAqB,QAAAxY,OAAOwY,EAAEW,OAAS,CAC9CmE,WAAY,UACZ7b,WAAY,WAEd,CAAC,MAADzB,OAAOwY,EAAEuG,YAAc,CACrBrd,QAAS,EACTC,OAAQ,SAEV,CAAC,MAAD3B,OAAOwY,EAAEW,KAAI,KAAAnZ,OAAIwY,EAAE,yBAA2B,CAC5C1N,OAAQ,WAEV,CAAC,MAAD9K,OAAOwY,EAAEW,KAAI,KAAAnZ,OAAIwY,EAAE,mBAAqB,CACtC9W,QAAS,EACTjC,QAAS,OACTuf,UAAW9D,EAAE+D,QAAQ,GACrB/b,iBAAkBgY,EAAE1Y,MAAQ0Y,GAAGzY,QAAQkN,WAAWuP,MAClD,iBAAkB,CAChBlC,QAAS,GAAFhd,OAnhBW,EAmhBW,aAAAA,QAAakb,EAAE1Y,MAAQ0Y,GAAGzY,QAAQyK,QAAQpK,MACvE2a,eAAeC,IAGnB,CAAC,MAAD1d,OAAOwY,EAAE,kBAAoB,CAC3BwG,UAAW9D,EAAE+D,QAAQ,IAEvB,CAAC,MAADjf,OAAOwY,EAAE,gBAAe,MAAAxY,OAAKwY,EAAEW,OAAS,CACtC6F,UAAW9D,EAAE+D,QAAQ,GACrB/b,iBAAkBgY,EAAE1Y,MAAQ0Y,GAAGzY,QAAQkN,WAAWuP,OAEpD,CAAC,MAADlf,OAAOwY,EAAEa,kBAAoB,CAC3B5Z,QAAS,OACTkC,OAAQ,OACRsI,MAAO,OACPlJ,WAAY,SACZF,eAAgB,UAElB,CAAC,MAADb,OAAOwY,EAAE2G,YAAW,wBAAwB,CAC1C7e,OAAQ4a,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ0I,KAAKgC,WAEpC,CAAC,MAADnN,OAAOwY,EAAE2G,YAAW,yBAAyB,CAC3C7e,OAAQ4a,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ0I,KAAKD,UAEpC,CAAC,MAADlL,OAAOwY,EAAE4G,cAAgB,CACvB3f,QAAS,cACTsB,WAAY,SACZse,QAASnE,EAAE8C,QAAQ,IAErB,CAAC,MAADhe,OAAOwY,EAAE8B,iBAAmB,CAC1B7a,QAAS,cACTyO,KAAM,EACNnN,WAAY,SACZF,eAAgB,SAChBmQ,SAAUkK,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ8K,OAAOqO,iBAExC,CAAC,MAAD5b,OAAOwY,EAAE,+BAAiC,CACxC1N,OAAQ,OACRkG,QAAS,GAEX,CAAC,MAADhR,OAAOwY,EAAE8G,0BAA4B,CACnC5d,QAAS,EACTjC,QAAS,OACTsB,WAAY,WAEd,CAAC,IAADf,OAAKwY,EAAEgC,kBAAoB,CACzBW,eAEF,CAAC,MAADnb,OAAOwY,EAAE,wBAAuB,SAAAxY,OAAQwY,EAAE,kCAAoC,CAC5E+G,gBAAiB,iCACjBC,gBAAiB,MACjBC,gBAAiB,SAEnB,CAAC,MAADzf,OAAOwY,EAAE,yBAAwB,SAAAxY,OAAQwY,EAAE,mCAAqC,CAC9EkH,iBAAkB,iCAClBC,iBAAkB,MAClBC,iBAAkB,SAEpB,CAAC,MAAD5f,OAAOwY,EAAE,gBAAkB,CACzB/Y,QAAS,OACTsB,WAAY,SACZU,WAAY,WAEd,CAAC,MAADzB,OAAOwY,EAAE,oBAAsB,CAC7B3L,UAAW,OACXhM,eAAgB,cAElB,CAAC,MAADb,OAAOwY,EAAE,qBAAuB,CAC9B3L,UAAW,QACXhM,eAAgB,YAElB,CAAC,MAADb,OAAOwY,EAAE,sBAAwB,CAC/B3L,UAAW,SACXhM,eAAgB,UAElB,CAAC,MAADb,OAAOwY,EAAE,oBAAmB,SAAAxY,OAAQwY,EAAE,uBAAyB,CAC7DhZ,SAAU,SACVqC,OAAQ,EACR8N,WAAY,mCACZ,iBAAkB,CAChBzM,gBAAiBwZ,IAGrB,CAAC,MAAD1c,OAAOwY,EAAEqH,uBAAsB,MAAA7f,OAAKwY,EAAE4B,MAAQ,CAC5C,UAAWqC,EACX,iBAAkBE,EAClB,uBAAwBC,GAE1B,CAAC,MAAD5c,OAAOwY,EAAEsH,iBAAmB,CAC1B5R,KAAM,WACNzO,QAAS,gBAEX,CAAC,MAADO,OAAOwY,EAAEe,eAAiB,CACxBrL,KAAM,WACNvM,OAAQ,OACRlC,QAAS,cACTsB,WAAY,UAEd,CAAC,MAADf,OAAOwY,EAAEoB,iCAAmC,CAC1Cna,QAAS,OACTwK,MAAO,OACPtI,OAAQ,QAEV,CAAC,MAAD3B,OAAOwY,EAAE6B,4BAA8B,CACrC5a,QAAS,QAEX,CAAC,MAADO,OAAOwY,EAAE,0BAAyB,SAAAxY,OAAQwY,EAAE,mBAAqB,CAC/D7I,YAAauL,EAAE1Y,MAAQ0Y,GAAGzY,QAAQkN,WAAWuP,MAC7Cxd,QAAS,SACTE,aAAc,kCACdoP,SAAUkK,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ8K,OAAOqO,iBAExC,CAAC,MAAD5b,OAAOwY,EAAE,mBAAqB,CAC5B7I,YAAauL,EAAE1Y,MAAQ0Y,GAAGzY,QAAQkN,WAAWuP,MAC7Cxd,QAAS,SACTE,aAAc,kCACdoP,SAAUkK,EAAE1Y,MAAQ0Y,GAAGzY,QAAQ8K,OAAOqO,gBACtC,CAAC,MAAD5b,OAAOwY,EAAE6B,4BAA8B,CACrC5a,QAAS,SAGb,CAAC,MAADO,OAAOwY,EAAEiC,uBAAyB,CAChChb,QAAS,OACTsB,WAAY,SACZkJ,MAAO,QAET,CAAC,MAADjK,OAAOwY,EAAEkC,6BAA+B,CACtCxM,KAAM,WACN6R,UAAW,UACX9U,YAAaiQ,EAAE8C,QAAQ,IAEzB,CAAC,MAADhe,OAAOwY,EAAEmC,qCAAoC,OAAA3a,OAAMwY,EAAEoC,uCAAyC,CAC5Fnb,QAAS,OACTsB,WAAY,SACZF,eAAgB,SAChBc,OAAQ,QAEV,CAAC,MAAD3B,OAAOwY,EAAEgF,uBAAyB,CAChC/d,QAAS,OACTsB,WAAY,SACZkJ,MAAO,QAET,CAAC,MAADjK,OAAOwY,EAAEwH,6BAA+B,CACtC9R,KAAM,WACN6R,UAAW,UACX9U,YAAaiQ,EAAE8C,QAAQ,IAGzB,CAAC,IAADhe,OAAKwY,EAAEiG,kBAAoB,CACzBld,SAAU,mEACVwe,UAAW,UACX,CAAC,KAAD/f,OAAMwY,EAAE,gCAAkC,CACxCoG,UAAW,4CAEb,CAAC,KAAD5e,OAAMwY,EAAE,mCAAqC,CAC3CvJ,aAAc,4CAEhB,CAAC,KAADjP,OAAMwY,EAAE,kCAAoC,CAC1CtV,gBAAiB,mCACjB1D,SAAU,SACV8D,MAAO,IAGX,CAAC,MAADtD,OAAOwY,EAAEgG,SAAW,CAClBtQ,KAAM,YAER,CAAC,MAADlO,OAAOwY,EAAE,0BAA4B,CACnCvJ,aAAc,4CAGhB,CAAC,MAADjP,OAAOwY,EAAE,qCAAuC,CAC9C,CAAC,MAADxY,OAAOwY,EAAEqH,yBAA2B,CAIlCrgB,SAAU,QACVkZ,WAAY,UAEd,CAAC,MAAD1Y,OAAOwY,EAAE,uBAAsB,SAAAxY,OAAQwY,EAAEyH,WAAU,SAAAjgB,OAAQwY,EAAE0H,gBAAe,QAAAlgB,OAAOwY,EAAEgG,SAAW,CAC9F/e,QAAS,UAIC,IAOlB,SAAS8c,EAAM5M,EAAYwQ,EAASnP,GAAoB,IAAXoP,EAAK7M,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,EACnD,MAAM8M,EAAIA,CAAC9J,EAAG+J,IAAMzW,KAAKG,OAAOuM,IAAM,EAAI6J,IAAU,EAAIpP,GAAWsP,IAAM,EAAIF,GAASpP,IAAYoP,GAC5Fld,GAAkBqd,EAAAA,EAAAA,IAAe5Q,GACjC6Q,GAAeD,EAAAA,EAAAA,IAAeJ,GAC9BM,EAAM,CAACJ,EAAEnd,EAAgBwd,OAAO,GAAIF,EAAaE,OAAO,IAAKL,EAAEnd,EAAgBwd,OAAO,GAAIF,EAAaE,OAAO,IAAKL,EAAEnd,EAAgBwd,OAAO,GAAIF,EAAaE,OAAO,KAC1K,OAAOC,EAAAA,EAAAA,IAAe,CACpBrU,KAAM,MACNoU,OAAQD,GAEZ,CACA,MAAMG,EAAgBtgB,GAAS,YAAJN,OAAgBM,EAAK,eAChD,SAASgc,EAAa3M,EAAYwQ,EAASnP,GACzC,MAAO,qBAAPhR,OAA4B2P,EAAU,MAAA3P,OAAK4gB,EAAcT,GAAQ,UAAAngB,OAASgR,EAAO,YACnF,CCxvBA,MAAM6P,EAAoCzc,EAAAA,mBAAoBoC,GCCvD,MAAMsa,EAAmBA,KAC9B,MAAMC,EAAe3c,EAAAA,WAAiByc,GACtC,IAAKE,EACH,MAAM,IAAI7N,MAAM,8GAElB,OAAO6N,CAAY,E,cCIRC,EAA4BC,OAAO,aAWzC,SAASC,EACdC,GAE8B,IAD9BC,EAAA7N,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,4CAAAvT,cAA+DmhB,GAE/D,GAAoB,oBAATA,EACT,MAAM,IAAIE,UAAUD,EAExB,CAoDO,IAAME,EAAiBC,GACrB7N,MAAM8N,QAAQD,GAAQA,EAAO,CAACA,GAUhC,SAASE,EAAgBC,GAC9B,MAAMC,EAAejO,MAAM8N,QAAQE,EAAmB,IAClDA,EAAmB,GACnBA,EAOJ,OA9CK,SACLE,GAEiC,IADjCR,EAAA7N,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,gFAEA,IACGqO,EAAMjN,OAAO4M,GAA+C,oBAATA,IACpD,CACA,MAAMM,EAAYD,EACf5e,KAAIue,GACa,oBAATA,EAAS,YAAAvhB,OACAuhB,EAAKpiB,MAAQ,uBAClBoiB,IAEZnJ,KAAK,MACR,MAAM,IAAIiJ,UAAA,GAAArhB,OAAaohB,EAAA,KAAAphB,OAAgB6hB,EAAA,KACzC,CACF,CAyBEC,CACEH,EAAA,kGAIKA,CACT,CC3FiCV,SAInB3e,OAAOyf,eAAe,CAAC,GCsF9B,IAAMC,EAAqCA,CAAC1L,EAAGC,IAAMD,IAAMC,EAE3D,SAAS0L,EAAyBC,GACvC,OAAO,SACLC,EACAC,GAEA,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAK3O,SAAW4O,EAAK5O,OACzD,OAAO,EAIT,MAAM,OAAEA,GAAW2O,EACnB,IAAK,IAAI3N,EAAI,EAAGA,EAAIhB,EAAQgB,IAC1B,IAAK0N,EAAcC,EAAK3N,GAAI4N,EAAK5N,IAC/B,OAAO,EAIX,OAAO,CACT,CACF,CAgEO,SAAS6N,EACdlB,EACAmB,GAEA,MAAMC,EAC8B,kBAA3BD,EACHA,EACA,CAAEJ,cAAeI,IAEjB,cACJJ,EAAgBF,EAAA,QAChBQ,EAAU,EAAC,oBACXC,GACEF,EAEEG,EAAaT,EAAyBC,GAE5C,IAAIS,EAAe,EAEnB,MAAMC,EACJJ,GAAW,EAtLf,SAA8B9K,GAC5B,IAAImL,EACJ,MAAO,CACLC,IAAIngB,GACEkgB,GAASnL,EAAOmL,EAAMlgB,IAAKA,GACtBkgB,EAAMpZ,MAGRuX,EAGT+B,GAAAA,CAAIpgB,EAAc8G,GAChBoZ,EAAQ,CAAElgB,MAAK8G,QACjB,EAEAuZ,WAAU,IACDH,EAAQ,CAACA,GAAS,GAG3BI,KAAAA,GACEJ,OAAQ,CACV,EAEJ,CAgKQK,CAAqBR,GA9J7B,SAAwBF,EAAiB9K,GACvC,IAAIyL,EAAmB,GAEvB,SAASL,EAAIngB,GACX,MAAMygB,EAAaD,EAAQE,WAAUR,GAASnL,EAAO/U,EAAKkgB,EAAMlgB,OAGhE,GAAIygB,GAAc,EAAG,CACnB,MAAMP,EAAQM,EAAQC,GAQtB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQV,IAGXA,EAAMpZ,KACf,CAGA,OAAOuX,CACT,CAoBA,MAAO,CAAE8B,MAAKC,IAlBd,SAAapgB,EAAc8G,GACrBqZ,EAAIngB,KAASqe,IAEfmC,EAAQI,QAAQ,CAAE5gB,MAAK8G,UACnB0Z,EAAQ3P,OAASgP,GACnBW,EAAQK,MAGd,EAUmBR,WARnB,WACE,OAAOG,CACT,EAM+BF,MAJ/B,WACEE,EAAU,EACZ,EAGF,CAqHQM,CAAejB,EAASE,GAE9B,SAASgB,IACP,IAAIja,EAAQmZ,EAAME,IAAIvP,WACtB,GAAI9J,IAAUuX,EAAW,CAMvB,GAHAvX,EAAQ0X,EAAKwC,MAAM,KAAMpQ,WACzBoP,IAEIF,EAAqB,CACvB,MACMmB,EADUhB,EAAMI,aACQa,MAAKhB,GACjCJ,EAAoBI,EAAMpZ,MAA2BA,KAGnDma,IACFna,EAAQma,EAAcna,MACL,IAAjBkZ,GAAsBA,IAE1B,CAEAC,EAAMG,IAAIxP,UAAW9J,EACvB,CACA,OAAOA,CACT,CAaA,OAXAia,EAASI,WAAa,KACpBlB,EAAMK,QACNS,EAASK,mBAAmB,EAG9BL,EAASf,aAAe,IAAMA,EAE9Be,EAASK,kBAAoB,KAC3BpB,EAAe,CAAC,EAGXe,CACT,CC9OA,IAOMM,GACe,qBAAZC,QACHA,QATN,MACEC,WAAAA,CAAoBza,GAAA,KAAAA,MAAAA,CAAW,CAC/B0a,KAAAA,GACE,OAAOC,KAAK3a,KACd,GAQI4a,GAAe,EACfC,GAAa,EA0CnB,SAASC,KACP,MAAO,CACLC,EAAGH,GACHI,OAAG,EACHnE,EAAG,KACHoE,EAAG,KAEP,CAmGO,SAASC,GACdxD,GAEA,IADAyD,EAAArR,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAmD,CAAC,EAEhDsR,EAASN,KACb,MAAM,oBAAE9B,GAAwBmC,EAEhC,IAAIE,EAEAnC,EAAe,EAEnB,SAASe,IACP,IAAIqB,EAAYF,EAChB,MAAM,OAAErR,GAAWD,UACnB,IAAK,IAAIiB,EAAI,EAAGwQ,EAAIxR,EAAQgB,EAAIwQ,EAAGxQ,IAAK,CACtC,MAAMZ,EAAML,UAAUiB,GACtB,GACiB,oBAARZ,GACS,kBAARA,GAA4B,OAARA,EAC5B,CAEA,IAAIqR,EAAcF,EAAUzE,EACR,OAAhB2E,IACFF,EAAUzE,EAAI2E,EAAc,IAAIC,SAElC,MAAMC,EAAaF,EAAYnC,IAAIlP,QAChB,IAAfuR,GACFJ,EAAYR,KACZU,EAAYG,IAAIxR,EAAKmR,IAErBA,EAAYI,CAEhB,KAAO,CAEL,IAAIE,EAAiBN,EAAUL,EACR,OAAnBW,IACFN,EAAUL,EAAIW,EAAiB,IAAIC,KAErC,MAAMC,EAAgBF,EAAevC,IAAIlP,QACnB,IAAlB2R,GACFR,EAAYR,KACZc,EAAeD,IAAIxR,EAAKmR,IAExBA,EAAYQ,CAEhB,CACF,CAEA,MAAMC,EAAiBT,EAEvB,IAAI9O,EAEJ,GAAI8O,EAAUP,IAAMF,GAClBrO,EAAS8O,EAAUN,OAMnB,GAHAxO,EAASkL,EAAKwC,MAAM,KAAMpQ,WAC1BoP,IAEIF,EAAqB,KAAAgD,EAAAC,EAAAC,EACvB,MAAMC,EAAsC,QAAtCH,EAAkB,QAAlBC,EAAkBZ,SAAA,IAAAY,GAAY,QAAZC,EAAAD,EAAYvB,aAAA,IAAAwB,OAAA,EAAZA,EAAAE,KAAAH,UAAoB,IAAAD,EAAAA,EAAKX,EAG5B,MAAnBc,GACAnD,EAAoBmD,EAAqC3P,KAEzDA,EAAS2P,EAEQ,IAAjBjD,GAAsBA,KAOxBmC,EAHqB,kBAAX7O,GAAkC,OAAXA,GACb,oBAAXA,EAEmB,IAAI+N,GAAI/N,GAAUA,CAChD,CAMF,OAHAuP,EAAehB,EAAIF,GAEnBkB,EAAef,EAAIxO,EACZA,CACT,CAaA,OAXAyN,EAASI,WAAa,KACpBe,EAASN,KACTb,EAASK,mBAAmB,EAG9BL,EAASf,aAAe,IAAMA,EAE9Be,EAASK,kBAAoB,KAC3BpB,EAAe,CAAC,EAGXe,CACT,CCaO,SAASoC,GAUdC,GAOA,QAAAzS,EAAAC,UAAAC,OANGwS,EAAA,IAAAtS,MAAAJ,EAAA,EAAAA,EAAA,KAAA2S,EAAA,EAAAA,EAAA3S,EAAA2S,IAAAD,EAAAC,EAAA,GAAA1S,UAAA0S,GAQH,MAAMC,EAG0B,oBAArBH,EACP,CACEI,QAASJ,EACTK,eAAgBJ,GAElBD,EAEEM,EAAiB,WAgBlB,QAAAC,EAAA/S,UAAAC,OAVAkO,EAAA,IAAAhO,MAAA4S,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA7E,EAAA6E,GAAAhT,UAAAgT,GAWH,IAEIzB,EAFA0B,EAAiB,EACjBC,EAA2B,EAM3BC,EAKA,CAAC,EAGDC,EAAajF,EAAmB8B,MAUV,kBAAfmD,IACTD,EAAwBC,EAExBA,EAAajF,EAAmB8B,OAGlCtC,EACEyF,EAAA,8EAAA3mB,cACqF2mB,EAAA,MAKvF,MAAMC,EAAkB,IACnBV,KACAQ,IAGC,QACJP,EAAA,eACAC,EAAiB,GAAC,YAClBS,EAAclC,GAAA,mBACdmC,EAAqB,GAAC,cACtBC,EAAgB,CAAC,GACfH,EAOEI,EAAsB1F,EAAc8E,GACpCa,EAA0B3F,EAAcwF,GACxCnF,EAAeF,EAAgBC,GAE/BwF,EAAqBf,GAAQ,WAIjC,OAHAK,IAGQG,EAAgDhD,MACtD,KACApQ,UAEJ,MAAMyT,GAMN,MAAM7P,EAAW0P,GAAY,WAC3BJ,IAEA,MAAMU,EJpSL,SACLxF,EACAyF,GAEA,MAAMD,EAAuB,IACvB,OAAE3T,GAAWmO,EACnB,IAAK,IAAInN,EAAI,EAAGA,EAAIhB,EAAQgB,IAG1B2S,EAAqBE,KAAK1F,EAAanN,GAAGmP,MAAM,KAAMyD,IAExD,OAAOD,CACT,CIwRmCG,CAC3B3F,EACApO,WAmCF,OA9BAuR,EAAaoC,EAAmBvD,MAAM,KAAMwD,GA8BrCrC,CACT,MAAMmC,GAON,OAAO3kB,OAAOilB,OAAOpQ,EAAU,CAC7BwP,aACAO,qBACAvF,eACA8E,yBAA0BA,IAAMA,EAChCe,8BAA+BA,KAC7Bf,EAA2B,CAAC,EAE9B3B,WAAYA,IAAMA,EAClB0B,eAAgBA,IAAMA,EACtBiB,oBAAqBA,KACnBjB,EAAiB,CAAC,EAEpBL,UACAU,eAOJ,EAMA,OAJAvkB,OAAOilB,OAAOlB,EAAgB,CAC5BqB,UAAWA,IAAMrB,IAGZA,CAIT,CAWO,IAAMsB,GACK7B,GAAsBnB,IC5E3BiD,GACXtlB,OAAOilB,QACL,SAKEM,GAQG,IAPHC,EAAAvU,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAGIoU,ILpYH,SACLI,GAE8B,IAD9B3G,EAAA7N,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,2CAAAvT,cAA8D+nB,GAE9D,GAAsB,kBAAXA,EACT,MAAM,IAAI1G,UAAUD,EAExB,CKkYM4G,CACEH,EAAA,yHAAA7nB,cAEkE6nB,IAEpE,MAAMI,EAAoB3lB,OAAOC,KAAKslB,GAIhCK,EAAqBJ,EAHNG,EAAkBjlB,KACrCL,GAAOklB,EAAqBllB,MAI5B,WAAoC,QAAAwlB,EAAA5U,UAAAC,OAAhC2T,EAAA,IAAAzT,MAAAyU,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAjB,EAAAiB,GAAA7U,UAAA6U,GACF,OAAOjB,EAAqBkB,QAAO,CAACC,EAAa7e,EAAO8e,KACtDD,EAAYL,EAAkBM,IAAU9e,EACjC6e,IACN,CAAC,EACN,IAEF,OAAOJ,CACT,GACA,CAAER,UAAWA,IAAME,KClcvB,MAAMY,GAAyB1C,GAAsB,CACnDK,QAAS9D,EACT+D,eAAgB,CACd5D,QAAS,EACTN,cAAe5f,OAAO8T,MAgBpBwM,GAAQ,IAAIsC,QAClB,SAASuD,GAAchf,GACrB,MAAO,YAAaA,GAAS,eAAgBA,EAAMoL,OACrD,CACA,MAAM6T,GAAsB,CAC1BjX,GAAI,WAIOkW,GAAiB,SAACrR,EAAGC,EAAGiC,EAAGxF,EAAG2V,EAAGtI,GAC5C,IAAI9M,UAAAC,QAAA,IAAAD,UAAAC,OAAA,GAAe,EACjB,MAAM,IAAIN,MAAM,mCAElB,IAAIiE,EAGJ,GAAIb,GAAKC,GAAKiC,GAAKxF,GAAK2V,GAAKtI,EAC3BlJ,EAAWA,CAACyR,EAAeC,KACzB,MAAMC,EAAWL,GAAcG,GACzBG,EAA4B,OAAfF,QAAe,IAAfA,EAAAA,EAAoBC,EAAWF,EAAc/T,QAAQkU,WAAaL,GAC/ErW,EAAQyW,EAAWF,EAAc/T,QAAQxC,MAAQuW,EACjDI,EAAK1S,EAAEjE,EAAO0W,GACdE,EAAK1S,EAAElE,EAAO0W,GACdG,EAAK1Q,EAAEnG,EAAO0W,GACdI,EAAKnW,EAAEX,EAAO0W,GACdK,EAAKT,EAAEtW,EAAO0W,GACpB,OAAO1I,EAAE2I,EAAIC,EAAIC,EAAIC,EAAIC,EAAG,OAGzB,GAAI9S,GAAKC,GAAKiC,GAAKxF,GAAK2V,EAC7BxR,EAAWA,CAACyR,EAAeC,KACzB,MAAMC,EAAWL,GAAcG,GACzBG,EAA4B,OAAfF,QAAe,IAAfA,EAAAA,EAAoBC,EAAWF,EAAc/T,QAAQkU,WAAaL,GAC/ErW,EAAQyW,EAAWF,EAAc/T,QAAQxC,MAAQuW,EACjDI,EAAK1S,EAAEjE,EAAO0W,GACdE,EAAK1S,EAAElE,EAAO0W,GACdG,EAAK1Q,EAAEnG,EAAO0W,GACdI,EAAKnW,EAAEX,EAAO0W,GACpB,OAAOJ,EAAEK,EAAIC,EAAIC,EAAIC,EAAG,OAErB,GAAI7S,GAAKC,GAAKiC,GAAKxF,EACxBmE,EAAWA,CAACyR,EAAeC,KACzB,MAAMC,EAAWL,GAAcG,GACzBG,EAA4B,OAAfF,QAAe,IAAfA,EAAAA,EAAoBC,EAAWF,EAAc/T,QAAQkU,WAAaL,GAC/ErW,EAAQyW,EAAWF,EAAc/T,QAAQxC,MAAQuW,EACjDI,EAAK1S,EAAEjE,EAAO0W,GACdE,EAAK1S,EAAElE,EAAO0W,GACdG,EAAK1Q,EAAEnG,EAAO0W,GACpB,OAAO/V,EAAEgW,EAAIC,EAAIC,EAAG,OAEjB,GAAI5S,GAAKC,GAAKiC,EACnBrB,EAAWA,CAACyR,EAAeC,KACzB,MAAMC,EAAWL,GAAcG,GACzBG,EAA4B,OAAfF,QAAe,IAAfA,EAAAA,EAAoBC,EAAWF,EAAc/T,QAAQkU,WAAaL,GAC/ErW,EAAQyW,EAAWF,EAAc/T,QAAQxC,MAAQuW,EACjDI,EAAK1S,EAAEjE,EAAO0W,GACdE,EAAK1S,EAAElE,EAAO0W,GACpB,OAAOvQ,EAAEwQ,EAAIC,EAAG,MAEb,KAAI3S,IAAKC,EASd,MAAM,IAAIrD,MAAM,qBARhBiE,EAAWA,CAACyR,EAAeC,KACzB,MAAMC,EAAWL,GAAcG,GACzBG,EAA4B,OAAfF,QAAe,IAAfA,EAAAA,EAAoBC,EAAWF,EAAc/T,QAAQkU,WAAaL,GAC/ErW,EAAQyW,EAAWF,EAAc/T,QAAQxC,MAAQuW,EACjDI,EAAK1S,EAAEjE,EAAO0W,GACpB,OAAOxS,EAAEyS,EAAG,CAIhB,CAKA,OADA7R,EAASC,eAAgB,EAClBD,CACT,EAwEakS,GAAyB,WAAa,QAAA/V,EAAAC,UAAAC,OAATC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAC5C,MAAMwD,EAAWA,CAACyR,EAAeG,KAC/B,MAAMD,EAAWL,GAAcG,GACzBU,EAAWR,EAAWF,EAAc/T,QAAQkU,WAAuB,OAAVA,QAAU,IAAVA,EAAAA,EAAcL,GACvErW,EAAQyW,EAAWF,EAAc/T,QAAQxC,MAAQuW,EAMvD,MAAMW,EAAgB3G,GAAME,IAAIwG,GAC1BE,EAAyB,OAAbD,QAAa,IAAbA,EAAAA,EAAiB,IAAIjE,IACjCmE,EAAmB,OAATD,QAAS,IAATA,OAAS,EAATA,EAAW1G,IAAIrP,GAC/B,GAAI+V,GAAaC,EAGf,OAAOA,EAAQpX,EAAOiX,GAExB,MAAMrS,EAAKuR,MAA0B/U,GAKrC,OAJK8V,GACH3G,GAAMwC,IAAIkE,EAAUE,GAEtBA,EAAUpE,IAAI3R,EAAMwD,GACbA,EAAG5E,EAAOiX,EAAS,EAM5B,OADAnS,EAASC,eAAgB,EAClBD,CACT,ECpMMuS,GAAkB,CACtBC,QAHoC,GAIpCC,YAHwC,IAIxCC,SAAU,GAECC,GAAsBzX,GAASA,EAAM0X,QACrCC,GAA4BrC,GAAemC,IAAqBC,GAAWL,GAAgBK,K,gBCPxG,MAAMjrB,GAAY,CAAC,aAuBbmrB,GAAwB7lB,EAAAA,YAAiB,SAAkB/E,EAAOiF,GACtE,MAAM6C,EAAY2Z,KACZ,UACFhc,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASY,IACT6R,EAAUpS,EAAgBL,EAAQwS,IAElCI,EAAYzV,EADK6C,EAAOzC,QAAQsV,eACO7lB,GACvCzE,EAAasH,EACbT,EAtBkBE,EAAC/G,EAAYkqB,KACrC,MAAM,WACJ/Q,EAAU,QACVtS,EAAO,uBACP0jB,GACEvqB,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,OAAQyZ,GAAc,aAAc,gBAAFhZ,OAAkBC,EAAW8pB,IAAyC,OAA7BlqB,EAAW6F,MAAM2kB,SAAoB,kBAAmB,kBAAmBD,GAA0B,uBAE5JlU,EAAyBxP,EAAQ,EAa9CE,CAAkB/G,EAAYkqB,IAGvCO,EAAcC,GAAmBnmB,EAAAA,UAAe,GAIvD,OAHAomB,GAAkB,KAChBD,GAAgB,EAAK,GACpB,IACED,GAGeziB,EAAAA,GAAAA,KAAKkR,GAAgBtS,EAAAA,EAAAA,GAAS,CAChDnC,IAAK4lB,EACLplB,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYA,GACXiG,IANM,IAOX,ICnDO,IAAI2kB,GAAwC,SAAUA,GAG3D,OAFAA,EAA+B,KAAI,OACnCA,EAAgC,MAAI,QAC7BA,CACT,CAJmD,CAIjD,CAAC,GACI,MAAMC,GAA6B,CACxC7mB,KAAM,GACNP,MAAO,ICCIqnB,GAA2BtY,GAASA,EAAMuY,QAM1CC,GAA2BlD,GAAegD,IAA0BG,GAAgBA,EAAaC,gBAMjGC,GAA2BrD,GAAegD,IAA0BG,GAAgBA,EAAaG,SAMjGC,GAAgC7B,GAAuBwB,GAA0BG,IAA0B,CAACG,EAAWF,IAAWE,EAAUnoB,KAAIooB,GAASH,EAAOG,OAOhKC,GAAoC1D,GAAegD,IAA0BG,GAAgBA,EAAaQ,wBAM1GC,GAAuClC,GAAuB6B,GAA+BG,IAAmC,CAACT,EAASU,IAA0BV,EAAQloB,QAAO8oB,IAAkD,IAAxCF,EAAsBE,EAAOJ,WAM1NK,GAAkCpC,GAAuBkC,IAAsCG,GAAkBA,EAAe1oB,KAAIwoB,GAAUA,EAAOJ,UAYrJO,GAA6CtC,GAAuBsB,IANxCtY,GAASA,EAAMuZ,eAM8EH,ICrDrGpZ,GAASA,EAAMwZ,QDqD0I,CAACf,EAAcgB,EAAOC,EAAqBF,KACnO,MAAMG,EAOR,SAA8BJ,EAAehB,EAASqB,GAAQ,IAAAC,EAAAC,EAC5D,IAAKzY,MAAM8N,QAAQoK,EAAc/nB,QAAU6P,MAAM8N,QAAQoK,EAActoB,OACrE,OAAOonB,GAET,GAAmC,KAAb,QAAlBwB,EAAAN,EAAc/nB,YAAI,IAAAqoB,OAAA,EAAlBA,EAAoB1Y,SAAgD,KAAb,QAAnB2Y,EAAAP,EAActoB,aAAK,IAAA6oB,OAAA,EAAnBA,EAAqB3Y,QAC3D,OAAOkX,GAET,MAAMhoB,EAASA,CAAC0pB,EAAkBC,IAC3B3Y,MAAM8N,QAAQ4K,GAGZA,EAAiB1pB,QAAO0oB,GAASiB,EAAiBC,SAASlB,KAFzD,GAILmB,EAAoB7pB,EAAOkpB,EAAc/nB,KAAM+mB,GAC/C4B,EAAkC5B,EAAQloB,QAEhD0oB,IAAUmB,EAAkBD,SAASlB,KAC/BqB,EAAqB/pB,EAAOkpB,EAActoB,MAAOkpB,GACvD,GAAIP,EACF,MAAO,CACLpoB,KAAM4oB,EACNnpB,MAAOipB,GAGX,MAAO,CACL1oB,KAAM0oB,EACNjpB,MAAOmpB,EAEX,CAnC8BC,CAAqBZ,EAAOC,EAAqBF,GAK7E,MAJ6B,CAC3BhoB,KAAMmoB,EAAoBnoB,KAAKb,KAAIooB,GAASN,EAAaG,OAAOG,KAChE9nB,MAAO0oB,EAAoB1oB,MAAMN,KAAIooB,GAASN,EAAaG,OAAOG,KAEzC,IAoCtB,MAAMuB,GAA8BtD,GAAuBkC,IAAsCG,IACtG,MAAMkB,EAAY,GAClB,IAAIC,EAAkB,EACtB,IAAK,IAAIrY,EAAI,EAAGA,EAAIkX,EAAelY,OAAQgB,GAAK,EAC9CoY,EAAUvF,KAAKwF,GACfA,GAAmBnB,EAAelX,GAAGsY,cAEvC,OAAOF,CAAS,IAOLG,GAAgCpF,GAAe4D,GAAsCoB,IAA6B,CAACjB,EAAgBkB,KAC9I,MAAMI,EAAWtB,EAAelY,OAChC,OAAiB,IAAbwZ,EACK,EAEFJ,EAAUI,EAAW,GAAKtB,EAAesB,EAAW,GAAGF,aAAa,IAOhEG,GAA0C5D,GAAuB6B,IAA+BN,GAAWA,EAAQloB,QAAOwqB,GAAOA,EAAIC,eAMrIC,GAAqC/D,GAAuB6B,IAA+BN,GAAWA,EAAQvC,QAAO,CAACgF,EAAKH,KAClIA,EAAIC,aACNE,EAAIH,EAAI9B,OAAS8B,GAEZG,IACN,CAAC,KAOSC,GAAyBjE,GAAuB6B,IAA+BN,GAAWA,EAAQ2C,MAAK/B,QAA6BhlB,IAAnBglB,EAAOgC,YE/IxHC,GAAmCpb,GAASA,EAAMqb,gBCA/D,IAAIC,GAAyC,SAAUA,GAGrD,OAFAA,EAAmC,QAAI,UACvCA,EAAmC,QAAI,UAChCA,CACT,CAJ6C,CAI3CA,IAA6B,CAAC,GCHzB,MAAMC,GAA8BxpB,EAAAA,mBAAoBoC,GCCxD,SAASqnB,KACd,MAAMvW,EAASlT,EAAAA,WAAiBwpB,IAChC,QAAepnB,IAAX8Q,EACF,MAAM,IAAIpE,MAAM,CAAC,+CAAgD,oHAAqH,gFAAgFkF,KAAK,OAE7Q,OAAOd,CACT,CCCO,SAASwW,KAAuB,IAAAC,EAAAC,EAAAC,EACrC,MAAM3W,EAASuW,KACTjD,EAAUjT,EAAgBL,EAAQ4T,IAClC/jB,EAAY2Z,IACZoN,EAAuBvW,EAAgBL,EAAQmW,IAC/CU,EAAe7W,EAAOzC,QAAQuZ,6BAA6B,kBAAmB,KAA2C,QAAvCL,EAAEG,EAAqBG,wBAAgB,IAAAN,EAAAA,EAAIJ,GAA0BW,SAC7J,OAAoBzmB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM6oB,OAAO9nB,EAAAA,EAAAA,GAAS,CACvDgB,GAAIN,EAAUzB,MAAM8oB,WACpB5Y,KAAMgV,EAAQpX,OAAS,GAAK0a,EAAqBtY,KACjDnE,GAAIyc,EAAqBO,QACzB,kBAAmBP,EAAqBQ,SACpB,QAArBV,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBO,MAA0B,QAArBN,EAAE9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqBO,WAAY,CAC9DtpB,SAAUipB,IAEd,CClBO,SAASQ,KAAa,IAAAX,EAC3B,MAAM7mB,EAAY2Z,IAClB,OAAoBlZ,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CACxCc,SAAU,EAAc2C,EAAAA,GAAAA,KAAKimB,GAAsB,CAAC,GAAI3mB,EAAUzB,MAAM2kB,UAAwBxiB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM2kB,SAAS5jB,EAAAA,EAAAA,GAAS,CAAC,EAAsB,QAArBunB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB3D,YAEpK,C,gBCSA,SATA,SAA0BpT,GACxB,MAAM3S,EAAMF,EAAAA,OAAa6S,GAIzB,OAHAuT,GAAkB,KAChBlmB,EAAIuQ,QAAUoC,CAAE,IAEX7S,EAAAA,QAAa,kBAEpB,EAAIE,EAAIuQ,YAAStB,UAAQ,IAAEsB,OAC7B,EChBO,SAAS+Z,GAAS7pB,GACvB,OAAoBX,EAAAA,KAAWW,EAAWsR,EAC5C,CCFO,MAAMwY,GACX3K,WAAAA,GAAiD,IAArC4K,EAAOvb,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAFa,IAG9B6Q,KAAK2K,SAAW,IAAIzJ,IACpBlB,KAAK4K,eAJyB,IAK9B5K,KAAK4K,eAAiBF,CACxB,CACAG,QAAAA,CAASlH,EAAQmH,EAAaC,GACvB/K,KAAK2K,WACR3K,KAAK2K,SAAW,IAAIzJ,KAEtB,MAAMwJ,EAAUM,YAAW,KACE,oBAAhBF,GACTA,IAEF9K,KAAK2K,SAASM,OAAOF,EAAgBG,aAAa,GACjDlL,KAAK4K,gBACR5K,KAAK2K,SAAS3J,IAAI+J,EAAgBG,aAAcR,EAClD,CACAS,UAAAA,CAAWJ,GACT,MAAML,EAAU1K,KAAK2K,SAASjM,IAAIqM,EAAgBG,cAC9CR,IACF1K,KAAK2K,SAASM,OAAOF,EAAgBG,cACrCE,aAAaV,GAEjB,CACAxZ,KAAAA,GACM8O,KAAK2K,WACP3K,KAAK2K,SAAS9iB,SAAQ,CAACxC,EAAO9G,KAC5ByhB,KAAKmL,WAAW,CACdD,aAAc3sB,GACd,IAEJyhB,KAAK2K,cAAWvoB,EAEpB,ECpCK,MAAMipB,GACXvL,WAAAA,GACEE,KAAKsL,SAAW,IAAIC,sBAAqBT,IACZ,oBAAhBA,GACTA,GACF,GAEJ,CACAD,QAAAA,CAASlH,EAAQmH,EAAaC,GAC5B/K,KAAKsL,SAAST,SAASlH,EAAQmH,EAAaC,EAC9C,CACAI,UAAAA,CAAWJ,GACT/K,KAAKsL,SAASH,WAAWJ,EAC3B,CAGA7Z,KAAAA,GAAS,ECTX,IAAIsa,GAA6B,SAAUA,GAIzC,OAHAA,EAAwB,SAAI,WAC5BA,EAA2B,YAAI,cAC/BA,EAA+B,gBAAI,kBAC5BA,CACT,CALiC,CAK/BA,IAAiB,CAAC,GAEpB,MAAMC,IA+DN,MAAMC,GAAoB,CACxBJ,SAAU,MASCK,GArEN,SAAsCD,GAC3C,IAAIE,EAAuB,EAC3B,OAAO,SAAgC1Y,EAAQ2Y,EAAWC,EAAStL,GAC9B,OAA/BkL,EAAkBJ,WACpBI,EAAkBJ,SAA2C,qBAAzBC,qBAAuC,IAAIF,GAA6C,IAAIZ,IAElI,MAAOsB,GAAyB/rB,EAAAA,SAAe,IAAIyrB,IAC7CO,EAAehsB,EAAAA,OAAa,MAC5BisB,EAAajsB,EAAAA,SACnBisB,EAAWxb,QAAUqb,EACrB,MAAMI,EAAkBlsB,EAAAA,OAAa,MACrC,IAAKgsB,EAAavb,SAAWwb,EAAWxb,QAAS,CAC/C,MAAM0b,EAAkBA,CAACC,EAAQ9d,EAAO+d,KACN,IAAAC,EAA3Bhe,EAAMie,sBACS,QAAlBD,EAAAL,EAAWxb,eAAO,IAAA6b,GAAlBA,EAAA7K,KAAAwK,EAAqBG,EAAQ9d,EAAO+d,GACtC,EAEFL,EAAavb,QAAUyC,EAAOzC,QAAQ+b,eAAeX,EAAWM,EAAiB3L,GACjFoL,GAAwB,EACxBM,EAAgBzb,QAAU,CACxBya,aAAcU,GAEhBF,EAAkBJ,SAAST,SAASkB,GAEpC,KAAM,IAAAU,EACgB,QAApBA,EAAAT,EAAavb,eAAO,IAAAgc,GAApBA,EAAAhL,KAAAuK,GACAA,EAAavb,QAAU,KACvByb,EAAgBzb,QAAU,IAAI,GAC7Byb,EAAgBzb,QACrB,MAAYwb,EAAWxb,SAAWub,EAAavb,UAC7Cub,EAAavb,UACbub,EAAavb,QAAU,KACnByb,EAAgBzb,UAClBib,EAAkBJ,SAASH,WAAWe,EAAgBzb,SACtDyb,EAAgBzb,QAAU,OAG9BzQ,EAAAA,WAAgB,KACd,IAAKgsB,EAAavb,SAAWwb,EAAWxb,QAAS,CAC/C,MAAM0b,EAAkBA,CAACC,EAAQ9d,EAAO+d,KACN,IAAAK,EAA3Bpe,EAAMie,sBACS,QAAlBG,EAAAT,EAAWxb,eAAO,IAAAic,GAAlBA,EAAAjL,KAAAwK,EAAqBG,EAAQ9d,EAAO+d,GACtC,EAEFL,EAAavb,QAAUyC,EAAOzC,QAAQ+b,eAAeX,EAAWM,EAAiB3L,EACnF,CAOA,OANI0L,EAAgBzb,SAAWib,EAAkBJ,WAG/CI,EAAkBJ,SAASH,WAAWe,EAAgBzb,SACtDyb,EAAgBzb,QAAU,MAErB,KAAM,IAAAkc,EACS,QAApBA,EAAAX,EAAavb,eAAO,IAAAkc,GAApBA,EAAAlL,KAAAuK,GACAA,EAAavb,QAAU,IAAI,CAC5B,GACA,CAACyC,EAAQ2Y,EAAWrL,GACzB,CACF,CAWsCoM,CAA6BlB,IAC7DmB,GAA2B,CAC/BC,SAAS,GAEJ,SAASC,GAAwB7Z,EAAQ2Y,EAAWC,GACzDH,GAAuBzY,EAAQ2Y,EAAWC,EAASe,GACrD,CCzFO,MAAMG,GAAQlN,WAAAA,IAAAmN,EAAAA,EAAAA,GAAA,iBAIP,OAAIA,EAAAA,EAAAA,GAAA,cAYR,KACiB,OAAnBjN,KAAKkN,YACP9B,aAAapL,KAAKkN,WAClBlN,KAAKkN,UAAY,KACnB,KACDD,EAAAA,EAAAA,GAAA,sBACe,IACPjN,KAAKnB,OACb,CAvBD,aAAOjhB,GACL,OAAO,IAAIovB,EACb,CAMA7c,KAAAA,CAAMgd,EAAOta,GACXmN,KAAKnB,QACLmB,KAAKkN,UAAYlC,YAAW,KAC1BhL,KAAKkN,UAAY,KACjBra,GAAI,GACHsa,EACL,EAWa,SAASC,KACtB,MAAM1C,EAAUlY,EAAWwa,GAAQpvB,QAAQ6S,QAE3C,OADAmC,EAAW8X,EAAQ2C,eACZ3C,CACT,CC5Be,SAAS4C,GAAaC,EAActyB,GACjD,MAAM+U,EAAS,IACV/U,GAEL,IAAK,MAAMsD,KAAOgvB,EAChB,GAAIrvB,OAAOsvB,UAAUC,eAAehM,KAAK8L,EAAchvB,GAAM,CAC3D,MAAMmvB,EAAWnvB,EACjB,GAAiB,eAAbmvB,GAA0C,UAAbA,EAC/B1d,EAAO0d,GAAY,IACdH,EAAaG,MACb1d,EAAO0d,SAEP,GAAiB,oBAAbA,GAA+C,cAAbA,EAA0B,CACrE,MAAMC,EAAmBJ,EAAaG,GAChCnsB,EAAYtG,EAAMyyB,GACxB,GAAKnsB,EAEE,GAAKosB,EAEL,CACL3d,EAAO0d,GAAY,IACdnsB,GAEL,IAAK,MAAMqsB,KAAWD,EACpB,GAAIzvB,OAAOsvB,UAAUC,eAAehM,KAAKkM,EAAkBC,GAAU,CACnE,MAAMC,EAAeD,EACrB5d,EAAO0d,GAAUG,GAAgBP,GAAaK,EAAiBE,GAAetsB,EAAUssB,GAC1F,CAEJ,MAXE7d,EAAO0d,GAAYnsB,OAFnByO,EAAO0d,GAAYC,GAAoB,CAAC,CAc5C,WAAgCvrB,IAArB4N,EAAO0d,KAChB1d,EAAO0d,GAAYH,EAAaG,GAEpC,CAEF,OAAO1d,CACT,C,eCxCA,MAAMtV,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,eAAgB,aAAc,oBAAqB,iBAmB/LozB,IAAwBhzB,EAAAA,EAAAA,IAAOizB,GAAAA,GAAW,CAC9ChzB,KAAM,cACNR,KAAM,gBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO8yB,eAHjBlzB,EAI3BqF,IAAA,IAAC,MACF9D,GACD8D,EAAA,OAAKkC,EAAAA,EAAAA,GAAS,CAAC,EAAGhG,EAAMS,WAAW8N,MAAO,CACzCtN,QAAS,QACT,UAAW,CACTA,QAAS,SACTC,OAAQ,SAEV,IACI0wB,GAAiCjuB,EAAAA,YAAiB,CAAC/E,EAAOiF,KAC9D,MAAM6C,EAAY2Z,KACZ,GACFrP,EAAE,MACFhI,EAAK,MACL2hB,EAAK,OACLkH,EAAM,SACNC,EAAQ,WACRC,EAAa,IAAG,kBAChBC,EAAiB,cACjBC,GACErzB,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACTlc,EAAWvN,EAAAA,UACVuuB,EAAYC,GAAiBxuB,EAAAA,SAAeqF,GAC7C/C,EAtCkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,kBAEoB2W,EAAyBxP,EAAQ,EA+B9CE,CAAkBO,GAC5B0rB,EAAezuB,EAAAA,aAAkB0uB,UACrC,MAAMC,EAAWrgB,EAAMI,OAAOrJ,MAC1BipB,SACIA,EAAchgB,EAAOqgB,GAE7B,MAAMvH,EAASlU,EAAOzC,QAAQme,UAAU5H,GACxC,IAAI6H,EAAcF,EACdvH,EAAO0H,cACTD,EAAczH,EAAO0H,YAAYH,EAAUzb,EAAOzC,QAAQse,OAAO1hB,GAAK+Z,EAAQlU,IAEhFsb,EAAcK,GACd3b,EAAOzC,QAAQue,iBAAiB,CAC9B3hB,KACA2Z,QACA3hB,MAAOwpB,EACPT,aACAa,0BAA0B,GACzB3gB,EAAM,GACR,CAAC4E,EAAQkb,EAAYpH,EAAO3Z,EAAIihB,IAC7BY,EAAOhc,EAAOzC,QAAQ0e,yBAAyB9hB,EAAI2Z,GAWzD,OAVAhnB,EAAAA,WAAgB,KACa,+BAAnB,OAAJkvB,QAAI,IAAJA,OAAI,EAAJA,EAAME,eACRZ,EAAcnpB,EAChB,GACC,CAAC6pB,EAAM7pB,IACV+gB,GAAkB,KACZ+H,GACF5gB,EAASkD,QAAQ4e,OACnB,GACC,CAAClB,KACgB1qB,EAAAA,GAAAA,KAAKqqB,IAAuBzrB,EAAAA,EAAAA,GAAS,CACvDnC,IAAKA,EACLqN,SAAUA,EACV7M,UAAW4B,EAAQnH,KACnBM,WAAYsH,EACZusB,WAAW,EACXpnB,KAAsB,WAAhBgmB,EAAOhmB,KAAoBgmB,EAAOhmB,KAAO,OAC/C7C,MAAiB,OAAVkpB,QAAU,IAAVA,EAAAA,EAAc,GACrB9gB,SAAUghB,EACVc,aAAclB,GAAiC5qB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMkuB,SAAU,CAC5EvyB,SAAU,QACVf,MAAO,gBACJkG,GACJV,GAAO,IC5FC+tB,GAAoBA,CAAC/H,EAAOgI,IACnCA,GAAiChI,EAAMtY,OAAS,EAI3C,CAACsY,EAAM,IAETA,EAEIiI,GAA0BA,CAACC,EAAWF,IAAkCzhB,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CAChH4hB,SAASxtB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAM4hB,QAAS,CACnCD,UAAWH,GAAkBG,EAAWF,OA0E/BI,GAA2BA,CAACC,EAActf,KACrD,MAAMuf,EAAaD,EAAaE,QAAQxf,GACxC,OAAKA,IAA2B,IAAhBuf,GAAqBA,EAAa,IAAMD,EAAa3gB,OAG9D2gB,EAAaC,EAAa,GAFxBD,EAAa,EAEa,EAE/BG,GAAqBA,CAACC,EAAIC,IACpB,MAAND,GAAoB,MAANC,GACR,EAEA,MAANA,GAAoB,MAAND,EACT,EAEC,MAANA,GAAoB,MAANC,EACT,EAEF,KAEHC,GAAW,IAAIC,KAAKC,SAWbC,GAAuBA,CAACC,EAAQC,KAC3C,MAAMC,EAAaT,GAAmBO,EAAQC,GAC9C,OAAmB,OAAfC,EACKA,EAEFzuB,OAAOuuB,GAAUvuB,OAAOwuB,EAAO,EAE3BE,GAAqBA,CAACH,EAAQC,KACzC,MAAMC,EAAaT,GAAmBO,EAAQC,GAC9C,OAAmB,OAAfC,EACKA,EAELF,EAASC,EACJ,EAELD,EAASC,GACH,EAEH,CAAC,ECpIV,IAAIG,GAAW,EAoBf,MAGMC,GAHY,IACb9wB,GAE6B+wB,MAQnB,SAASA,GAAMC,GAE5B,QAAwB5uB,IAApB0uB,GAA+B,CACjC,MAAMG,EAAUH,KAChB,OAAiB,OAAVE,QAAU,IAAVA,EAAAA,EAAcC,CACvB,CAIA,OArCF,SAAqBD,GACnB,MAAOE,EAAWC,GAAgBnxB,EAAAA,SAAegxB,GAC3C3jB,EAAK2jB,GAAcE,EAWzB,OAVAlxB,EAAAA,WAAgB,KACG,MAAbkxB,IAKFL,IAAY,EACZM,EAAa,OAADv1B,OAAQi1B,KACtB,GACC,CAACK,IACG7jB,CACT,CAuBS+jB,CAAYJ,EACrB,CC1CA,MAAMt2B,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,WAAY,WAAY,iBAAkB,cAAe,aAAc,WAOrJ,SAAS22B,GAAqBp2B,GAAO,IAAAq2B,EAAA1H,EACnC,MAAM,KACFzM,EAAI,WACJoU,EAAU,KACVrpB,EAAI,OACJgL,EAAM,gBACNse,EAAe,SACf5jB,EAAQ,SACR9G,EAAQ,YACR2qB,EAAW,WACXC,EAAU,QACV/1B,EAAU,YACRV,EACJ02B,GAAShwB,EAAAA,EAAAA,GAA8B1G,EAAOP,IAC1Ck3B,EAAgBxE,MACfyE,EAAkBC,GAAuB9xB,EAAAA,SAAyB,QAAXsxB,EAACnU,EAAK9X,aAAK,IAAAisB,EAAAA,EAAI,KACtES,EAAUC,GAAiBhyB,EAAAA,UAAe,GAC3CqN,EAAK0jB,KACLhuB,EAAY2Z,IACZuV,EAAiBjyB,EAAAA,aAAkBsO,IACvC,MAAM,MACJjJ,GACEiJ,EAAMI,OACVojB,EAAoBI,OAAO7sB,IAC3B2sB,GAAc,GACdJ,EAAczhB,MAAMpN,EAAUovB,kBAAkB,KAC9C,MAAMC,GAAU/vB,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,EAAM,CACjC9X,MAAgB,WAAT6C,EAAoBhG,OAAOmD,GAASA,EAC3CgtB,UAAWhlB,IAEbkkB,EAAWa,GACXJ,GAAc,EAAM,GACpB,GACD,CAACJ,EAAe7uB,EAAUovB,iBAAkBhV,EAAMjV,EAAMmF,EAAIkkB,IAO/D,OANAvxB,EAAAA,WAAgB,KAEgD,IAAAsyB,EAD1CnV,EACJkV,YAAchlB,QAAqBjL,IAAf+a,EAAK9X,OACvCysB,EAAoBI,OAAiB,QAAXI,EAACnV,EAAK9X,aAAK,IAAAitB,EAAAA,EAAI,IAC3C,GACC,CAACjlB,EAAI8P,KACY1Z,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMixB,eAAelwB,EAAAA,EAAAA,GAAS,CAC/DgL,GAAIA,EACJ7G,MAAO0M,EAAOzC,QAAQ+hB,cAAc,yBACpCC,YAAavf,EAAOzC,QAAQ+hB,cAAc,+BAC1CntB,MAAOwsB,EACPpkB,SAAUwkB,EACVt2B,QAASA,EACTuM,KAAMA,GAAQ,OACdwpB,YAAYrvB,EAAAA,EAAAA,GAAS,CAAC,EAAG0vB,GAAYN,EAAc,CACjDlC,aAAcwC,GAAwBtuB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMkuB,SAAU,CACnEvyB,SAAU,QACVf,MAAO,WACJu1B,GACH,CAAC,EAAG,CACN3qB,YACC4qB,EAAY,CACbpkB,YAAYjL,EAAAA,EAAAA,GAAS,CACnBuL,YACW,OAAV8jB,QAAU,IAAVA,OAAU,EAAVA,EAAYpkB,cAEjBolB,gBAAiB,CACfC,QAAQ,GAEVplB,SAAUikB,GACTG,EAA2B,QAArB/H,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB2I,eAClC,CCvEO,SAASK,GAAWvtB,GACzB,MAAwB,oBAAVA,CAChB,CACO,SAASwtB,GAASxtB,GACvB,MAAwB,kBAAVA,GAAgC,OAAVA,CACtC,CAcO,SAASytB,GAAaztB,GAC3B,OAAOA,EAAM0tB,QAAQ,2BAA4B,OACnD,CAMO,MAAMC,GAAQA,CAAC3tB,EAAO4tB,EAAK/xB,IAAQuE,KAAKvE,IAAI+xB,EAAKxtB,KAAKwtB,IAAI/xB,EAAKmE,IAK/D,SAAS6tB,GAAMC,EAAMC,GAC1B,OAAO9jB,MAAM6jB,KAAK,CAChB/jB,OAAQgkB,EAAKD,IACZv0B,KAAI,CAAC0T,EAAGlC,IAAM+iB,EAAO/iB,GAC1B,CA6BO,SAASijB,GAAYnhB,EAAGC,GAC7B,GAAID,IAAMC,EACR,OAAO,EAET,GAAID,GAAKC,GAAkB,kBAAND,GAA+B,kBAANC,EAAgB,CAC5D,GAAID,EAAE4N,cAAgB3N,EAAE2N,YACtB,OAAO,EAET,GAAIxQ,MAAM8N,QAAQlL,GAAI,CACpB,MAAM9C,EAAS8C,EAAE9C,OACjB,GAAIA,IAAW+C,EAAE/C,OACf,OAAO,EAET,IAAK,IAAIgB,EAAI,EAAGA,EAAIhB,EAAQgB,GAAK,EAC/B,IAAKijB,GAAYnhB,EAAE9B,GAAI+B,EAAE/B,IACvB,OAAO,EAGX,OAAO,CACT,CACA,GAAI8B,aAAagP,KAAO/O,aAAa+O,IAAK,CACxC,GAAIhP,EAAE/M,OAASgN,EAAEhN,KACf,OAAO,EAET,MAAMmuB,EAAWhkB,MAAM6jB,KAAKjhB,EAAE6M,WAC9B,IAAK,IAAI3O,EAAI,EAAGA,EAAIkjB,EAASlkB,OAAQgB,GAAK,EACxC,IAAK+B,EAAEohB,IAAID,EAASljB,GAAG,IACrB,OAAO,EAGX,IAAK,IAAIA,EAAI,EAAGA,EAAIkjB,EAASlkB,OAAQgB,GAAK,EAAG,CAC3C,MAAMojB,EAASF,EAASljB,GACxB,IAAKijB,GAAYG,EAAO,GAAIrhB,EAAEuM,IAAI8U,EAAO,KACvC,OAAO,CAEX,CACA,OAAO,CACT,CACA,GAAIthB,aAAauhB,KAAOthB,aAAashB,IAAK,CACxC,GAAIvhB,EAAE/M,OAASgN,EAAEhN,KACf,OAAO,EAET,MAAM4Z,EAAUzP,MAAM6jB,KAAKjhB,EAAE6M,WAC7B,IAAK,IAAI3O,EAAI,EAAGA,EAAI2O,EAAQ3P,OAAQgB,GAAK,EACvC,IAAK+B,EAAEohB,IAAIxU,EAAQ3O,GAAG,IACpB,OAAO,EAGX,OAAO,CACT,CACA,GAAIsjB,YAAYC,OAAOzhB,IAAMwhB,YAAYC,OAAOxhB,GAAI,CAClD,MAAM/C,EAAS8C,EAAE9C,OACjB,GAAIA,IAAW+C,EAAE/C,OACf,OAAO,EAET,IAAK,IAAIgB,EAAI,EAAGA,EAAIhB,EAAQgB,GAAK,EAC/B,GAAI8B,EAAE9B,KAAO+B,EAAE/B,GACb,OAAO,EAGX,OAAO,CACT,CACA,GAAI8B,EAAE4N,cAAgB8T,OACpB,OAAO1hB,EAAE2hB,SAAW1hB,EAAE0hB,QAAU3hB,EAAE4hB,QAAU3hB,EAAE2hB,MAEhD,GAAI5hB,EAAE6hB,UAAY71B,OAAOsvB,UAAUuG,QACjC,OAAO7hB,EAAE6hB,YAAc5hB,EAAE4hB,UAE3B,GAAI7hB,EAAE8hB,WAAa91B,OAAOsvB,UAAUwG,SAClC,OAAO9hB,EAAE8hB,aAAe7hB,EAAE6hB,WAE5B,MAAM71B,EAAOD,OAAOC,KAAK+T,GACnB9C,EAASjR,EAAKiR,OACpB,GAAIA,IAAWlR,OAAOC,KAAKgU,GAAG/C,OAC5B,OAAO,EAET,IAAK,IAAIgB,EAAI,EAAGA,EAAIhB,EAAQgB,GAAK,EAC/B,IAAKlS,OAAOsvB,UAAUC,eAAehM,KAAKtP,EAAGhU,EAAKiS,IAChD,OAAO,EAGX,IAAK,IAAIA,EAAI,EAAGA,EAAIhB,EAAQgB,GAAK,EAAG,CAClC,MAAM7R,EAAMJ,EAAKiS,GACjB,IAAKijB,GAAYnhB,EAAE3T,GAAM4T,EAAE5T,IACzB,OAAO,CAEX,CACA,OAAO,CACT,CAIA,OAAO2T,IAAMA,GAAKC,IAAMA,CAC1B,CAyBO,SAAS8hB,GAAUC,GACxB,MAA+B,oBAApBC,gBACFA,gBAAgBD,GAElBE,KAAKC,MAAMD,KAAKE,UAAUJ,GACnC,C,eC7LA,MAAMx5B,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,QAAS,QAAS,aAAc,OAAQ,WACpH65B,GAAa,CAAC,OAOhB,SAASC,GAA6Bv5B,GACpC,MAAM,KACFkiB,EAAI,WACJoU,EAAU,KACVrpB,EAAI,OACJgL,EAAM,gBACNse,EAAe,MACft1B,EAAK,MACLgL,EAAK,WACLutB,EAAU,KACVtvB,EAAI,QACJxJ,EAAU,YACRV,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCg6B,EAAiB,CACrBx4B,QACAgL,QACAutB,aACAtvB,OACAxJ,YAEKk2B,EAAkBC,GAAuB9xB,EAAAA,SAAemd,EAAK9X,OAAS,IACvEgI,EAAK0jB,KACLhuB,EAAY2Z,IAClB1c,EAAAA,WAAgB,KAAM,IAAAsxB,EACpB,MAAMqD,EAAsB,QAAbrD,EAAGnU,EAAK9X,aAAK,IAAAisB,EAAAA,EAAI,GAChCQ,EAAoB6C,EAAU/1B,IAAIszB,QAAQ,GACzC,CAAC/U,EAAK9X,QACT,MAAMopB,EAAezuB,EAAAA,aAAkB,CAACsO,EAAOjJ,KAC7CysB,EAAoBzsB,EAAMzG,IAAIszB,SAC9BX,GAAWlvB,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,EAAM,CAC5B9X,MAAO,IAAIA,EAAMzG,KAAIg2B,GAA4B,WAAT1sB,EAAoBhG,OAAO0yB,GAAmBA,OACrF,GACF,CAACrD,EAAYpU,EAAMjV,IACtB,OAAoBzE,EAAAA,GAAAA,KAAKoxB,GAAAA,GAAcxyB,EAAAA,EAAAA,GAAS,CAC9CyyB,UAAU,EACVC,UAAU,EACVvU,QAAS,GACTwU,cAAeA,CAACxU,EAAS4L,KACvB,MAAM,WACJ6I,GACE7I,EACJ,OAAqB,MAAd6I,GAAqC,KAAfA,EAAoB,GAAK,CAACA,EAAW,EAEpE5nB,GAAIA,EACJhI,MAAOwsB,EACPpkB,SAAUghB,EACVyG,WAAYA,CAAC7vB,EAAO8vB,IAAgB9vB,EAAMzG,KAAI,CAACw2B,EAAQjR,KACrD,MAAMkR,EAAeF,EAAY,CAC7BhR,WAEF,IACE5lB,GACE82B,EACJC,GAAW3zB,EAAAA,EAAAA,GAA8B0zB,EAAcd,IACzD,OAAoB9wB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMi0B,UAAUlzB,EAAAA,EAAAA,GAAS,CAC1D1G,QAAS,WACTwJ,KAAM,QACNqB,MAAO4uB,GACNE,GAAW/2B,EAAI,IAEpBi3B,YAAapJ,IAAM,IAAAxC,EAAA,OAAiBnmB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMixB,eAAelwB,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CAC3F5lB,MAAO0M,EAAOzC,QAAQ+hB,cAAc,yBACpCC,YAAavf,EAAOzC,QAAQ+hB,cAAc,+BAC1CE,iBAAiBrwB,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAOsG,gBAAiB,CACpDC,QAAQ,IAEVplB,SAAUikB,EACVtpB,KAAMA,GAAQ,QACbwsB,EAAmC,QAArB9K,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB2I,eAAe,GACtD7wB,GACL,CC5EA,IAAI+zB,GAAiC,SAAUA,GAG7C,OAFAA,EAAuB,IAAI,MAC3BA,EAAsB,GAAI,KACnBA,CACT,CAJqC,CAInCA,IAAqB,CAAC,GCRjB,MAAMC,GAA4BA,KAAA,CACvCC,MAAO,GACPC,cAAeH,GAAkBI,IACjCC,kBAAmB,GACnBC,yBAA0BN,GAAkBI,MCLvC,SAASG,GAAgB9iB,GAC9B,MAAO,CACLzC,QAASyC,EAAOzC,QAAQwlB,eAE5B,CCEA,IAAIC,GAmBG,MAAMC,GAAkBA,CAAChZ,EAAMjK,KACpC,MAAMkjB,GAAY/zB,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,GAI/B,GAHoB,MAAhBiZ,EAAU/oB,KACZ+oB,EAAU/oB,GAAK5H,KAAKG,MAAsB,IAAhBH,KAAK4wB,WAEP,MAAtBD,EAAUE,SAAkB,CAG9B,MAAMlP,EAASR,GAAyB1T,GAAQkjB,EAAUpP,OAC1DoP,EAAUE,SAAWlP,GAAUA,EAAOmP,gBAAgB,GAAGlxB,KAC3D,CACA,OAAO+wB,CAAS,EAELI,GAAsBA,CAAC9O,EAAO+O,EAAiCvjB,KAC1E,MAAMwjB,EAAkBhP,EAAMiO,MAAMvmB,OAAS,EAC7C,IAAIumB,EAKFA,EAJEe,GAAmBD,EAIb,CAAC/O,EAAMiO,MAAM,IAEbjO,EAAMiO,MAEhB,MAAMgB,EAAqBD,GAAmBf,EAAMxM,MAAKhM,GAAmB,MAAXA,EAAK9P,KAYtE,OAX+BsoB,EAAMxM,MAAKhM,GAAyB,MAAjBA,EAAKmZ,YAWzBK,GACrBt0B,EAAAA,EAAAA,GAAS,CAAC,EAAGqlB,EAAO,CACzBiO,MAAOA,EAAM/2B,KAAIue,GAAQgZ,GAAgBhZ,EAAMjK,OAG/CwU,EAAMiO,QAAUA,GACXtzB,EAAAA,EAAAA,GAAS,CAAC,EAAGqlB,EAAO,CACzBiO,UAGGjO,CAAK,EAEDkP,GAA4BA,CAACC,EAAaJ,EAAiCvjB,IAAW4jB,IAAkBz0B,EAAAA,EAAAA,GAAS,CAAC,EAAGy0B,EAAgB,CAChJD,YAAaL,GAAoBK,EAAaJ,EAAiCvjB,KAEpE6jB,GAAmB1xB,GACT,kBAAVA,EACFA,EAAM2xB,UAAU,OAAOjE,QAAQ,mBAAoB,IAErD1tB,EAEH4xB,GAA4BA,CAACC,EAAYhkB,KAC7C,IAAKgkB,EAAWlQ,QAAUkQ,EAAWZ,SACnC,OAAO,KAET,MAAMlP,EAASlU,EAAOzC,QAAQme,UAAUsI,EAAWlQ,OACnD,IAAKI,EACH,OAAO,KAET,IAAIyH,EACJ,GAAIzH,EAAO0H,YAAa,KAAAqI,EACtB,MAAMC,EAAShQ,EAAO0H,YACtBD,EAAcvf,MAAM8N,QAAQ8Z,EAAW7xB,OAAyB,QAAnB8xB,EAAGD,EAAW7xB,aAAK,IAAA8xB,OAAA,EAAhBA,EAAkBv4B,KAAI8V,GAAK0iB,EAAO1iB,OAAGtS,EAAWglB,EAAQlU,KAAWkkB,EAAOF,EAAW7xB,WAAOjD,EAAWglB,EAAQlU,EACjK,MACE2b,EAAcqI,EAAW7xB,MAE3B,MAAM,iBACJgyB,GACEnkB,EAAOzC,QAAQ1N,UACfs0B,IACFxI,EAAckI,GAAiBlI,IAEjC,MAAMyI,GAAgBj1B,EAAAA,EAAAA,GAAS,CAAC,EAAG60B,EAAY,CAC7C7xB,MAAOwpB,IAEH0H,EAAkBnP,EAAOmP,gBAC/B,GAAoB,OAAfA,QAAe,IAAfA,IAAAA,EAAiBnnB,OACpB,MAAM,IAAIN,MAAM,gDAADlT,OAAiDwrB,EAAOJ,MAAK,OAE9E,MAAMuQ,EAAiBhB,EAAgB9W,MAAK6W,GAAYA,EAASjxB,QAAUiyB,EAAchB,WACzF,IAAKiB,EACH,MAAM,IAAIzoB,MAAM,+CAADlT,OAAgDwrB,EAAOJ,MAAK,0BAAAprB,OAAyB07B,EAAchB,SAAQ,OAE5H,MAAMkB,EAAexB,GAAgB9iB,GAC/BukB,EAAmBF,EAAeG,iBAAiBJ,EAAelQ,GACxE,MAAgC,oBAArBqQ,EACF,KAEF,CACLta,KAAMma,EACNzkB,GAAImD,IACF,IAAI3Q,EAAQ6N,EAAOzC,QAAQknB,YAAY3hB,EAAKoR,GAI5C,OAHIiQ,IACFhyB,EAAQ0xB,GAAiB1xB,IAEpBoyB,EAAiBpyB,EAAO2Q,EAAKoR,EAAQoQ,EAAa,EAE5D,EAEH,IAAII,GAAuB,EAQ3B,MAAMC,GAAoCA,CAAChB,EAAa3jB,EAAQ4kB,KAC9D,MAAM,MACJnC,GACEkB,EACEkB,EAAWpC,EAAM/2B,KAAIue,GAAQ8Z,GAA0B9Z,EAAMjK,KAAS5U,QAAO05B,KAAcA,IACjG,GAAwB,IAApBD,EAAS3oB,OACX,OAAO,KAET,GAAI0oB,IA3IN,WACE,QAAgB11B,IAAZ8zB,GACF,OAAOA,GAET,IACEA,GAAU,IAAI+B,SAAS,cAAb,EACZ,CAAE,MAAO3lB,GACP4jB,IAAU,CACZ,CACA,OAAOA,EACT,CAiIsBgC,GAElB,MAAO,CAACliB,EAAKmiB,KACX,MAAMC,EAAkB,CAAC,EACzB,IAAK,IAAIhoB,EAAI,EAAGA,EAAI2nB,EAAS3oB,OAAQgB,GAAK,EAAG,CAC3C,MAAMioB,EAAUN,EAAS3nB,GACpB+nB,IAAqBA,EAAkBE,EAAQlb,KAAK6J,SACvDoR,EAAgBC,EAAQlb,KAAK9P,IAAMgrB,EAAQxlB,GAAGmD,GAElD,CACA,OAAOoiB,CAAe,EAM1B,MAAME,EAAiB,IAAIL,SAAS,WAAY,MAAO,oBAAqB,kBAAAr8B,OAC5Em8B,EAASn5B,KAAI,CAACy5B,EAASjoB,IAAM,oBAALxU,OAAyBwU,EAAC,+CAAAxU,OAA8Cw4B,KAAKE,UAAU+D,EAAQlb,KAAK6J,OAAM,QAAMhT,KAAK,MAAK,4BAAApY,OAGlJm8B,EAASn5B,KAAI,CAACy5B,EAASjoB,IAAM,KAALxU,OAAUw4B,KAAKE,UAAUpC,OAAOmG,EAAQlb,KAAK9P,KAAI,kBAAAzR,OAAiBwU,EAAC,wBAAAxU,OAAuBwU,EAAC,gBAAc4D,KAAK,MAAK,4BAG3HukB,WAAW,KAAMrG,OAAO0F,MACxCA,IAAwB,EAIxB,MADmBV,CAAClhB,EAAKwiB,IAAoBF,EAAeP,EAAU/hB,EAAKwiB,EAC1D,EAENC,GAAwC5B,IAAe,IAAA6B,EAClE,OAAkD,QAAlDA,EAAO7B,EAAY8B,uCAA+B,IAAAD,GAAAA,CAAQ,EAuE/CE,GAA+BA,CAAC/B,EAAa3jB,EAAQ4kB,KAChE,MAAMe,EAA2BhB,GAAkChB,EAAa3jB,EAAQ4kB,GAClFgB,EAhEkCC,EAAClC,EAAa3jB,KAAW,IAAA8lB,EAAAC,EACjE,MAAMnD,EAAkE,QAAjDkD,EAAgC,QAAhCC,EAAGpC,EAAYf,yBAAiB,IAAAmD,OAAA,EAA7BA,EAA+B36B,OAAO0P,gBAAQ,IAAAgrB,EAAAA,EAAI,GAC5E,GAAiC,IAA7BlD,EAAkB1mB,OACpB,OAAO,KAET,MAAM8pB,EAAeT,GAAsC5B,GAAexP,GAAgCnU,GAAUuT,GAAyBvT,GACvIimB,EAAmB,IACnB,iBACJ9B,GACEnkB,EAAOzC,QAAQ1N,UACby0B,EAAexB,GAAgB9iB,GAgBrC,OAfAgmB,EAAarxB,SAAQmf,IACnB,MAAMI,EAASlU,EAAOzC,QAAQme,UAAU5H,GAClCoS,EAA8B,OAANhS,QAAM,IAANA,OAAM,EAANA,EAAQgS,sBAClCA,GACFD,EAAiBlW,KAAK,CACpBmE,SACA2Q,SAAUjC,EAAkBl3B,KAAIy6B,IAC9B,MAAMh0B,EAAQgyB,EAAmBN,GAAiBsC,GAAoBA,EACtE,MAAO,CACLxmB,GAAIumB,EAAsB/zB,EAAO+hB,EAAQoQ,GAC1C,KAGP,IAEK,SAAkCxhB,EAAKmiB,GAC5C,MAAMtmB,EAAS,CAAC,EAGhBynB,EAAO,IAAK,IAAIjZ,EAAI,EAAGA,EAAIyV,EAAkB1mB,OAAQiR,GAAK,EAAG,CAC3D,MAAMkZ,EAAczD,EAAkBzV,GACtC,IAAK,IAAIjQ,EAAI,EAAGA,EAAI+oB,EAAiB/pB,OAAQgB,GAAK,EAAG,CACnD,MAAM,OACJgX,EAAM,SACN2Q,GACEoB,EAAiB/oB,IACf,MACJ4W,GACEI,EACJ,GAAI+Q,IAAsBA,EAAkBnR,GAC1C,SAEF,MAAMqR,EAAUN,EAAS1X,GACzB,IAAIhb,EAAQ6N,EAAOzC,QAAQknB,YAAY3hB,EAAKoR,GAC5C,GAAmB,OAAfiR,EAAQxlB,KAGRwkB,IACFhyB,EAAQ0xB,GAAiB1xB,IAERgzB,EAAQxlB,GAAGxN,EAAO2Q,EAAKoR,EAAQoQ,IAClC,CACd3lB,EAAO0nB,IAAe,EACtB,SAASD,CACX,CACF,CACAznB,EAAO0nB,IAAe,CACxB,CACA,OAAO1nB,CACT,CAAC,EAIgCknB,CAAkClC,EAAa3jB,GAChF,OAAO,SAA8B8C,EAAKmiB,EAAmBtmB,GAAQ,IAAA2nB,EAAAC,EACnE5nB,EAAO6nB,mBAAuE,QAArDF,EAA2B,OAAxBX,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA2B7iB,EAAKmiB,UAAkB,IAAAqB,EAAAA,EAAI,KAClF3nB,EAAO8nB,yBAA6E,QAArDF,EAA2B,OAAxBX,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA2B9iB,EAAKmiB,UAAkB,IAAAsB,EAAAA,EAAI,IAC1F,CAAC,EAEGG,GAAY/nB,GAAoB,MAAVA,EAOfgoB,GAAkBA,CAACC,EAAsBC,EAAuBlD,EAAa3jB,EAAQsL,KAChG,MAAMwb,EAPiBC,EAACzb,EAAOtL,EAAQyiB,KAClCnX,EAAMwb,qBACTxb,EAAMwb,mBAAqBrE,EAAMr3B,QAAO6e,GAAoD,OAA5C8Z,GAA0B9Z,EAAMjK,MAE3EsL,EAAMwb,oBAGcC,CAAiBzb,EAAOtL,EAAQ2jB,EAAYlB,OACjEuE,EAA2BJ,EAAqBx7B,OAAOs7B,IACvDO,EAA4BJ,EAAsBz7B,OAAOs7B,IAG/D,GAAIM,EAAyB9qB,OAAS,EAAG,KAAAgrB,EAEvC,MAAMC,EAAsBld,GACnB+c,EAAyB/Q,MAAKmR,GAAoBA,EAAiBnd,EAAK9P,MAGjF,IAD+C,QAA5B+sB,EAAGvD,EAAYjB,qBAAa,IAAAwE,EAAAA,EAAI1E,KAA4BE,iBACzDH,GAAkBI,IAAK,CAE3C,IADyBmE,EAAmBzpB,MAAM8pB,GAEhD,OAAO,CAEX,KAAO,CAEL,IAD0BL,EAAmB7Q,KAAKkR,GAEhD,OAAO,CAEX,CACF,CAGA,GAAIF,EAA0B/qB,OAAS,GAAsC,MAAjCynB,EAAYf,kBAA2B,KAAAyE,EAEjF,MAAMC,EAA4Bn1B,GACzB80B,EAA0BhR,MAAKsR,GAA0BA,EAAuBp1B,KAGzF,IADqE,QAAvCk1B,EAAG1D,EAAYd,gCAAwB,IAAAwE,EAAAA,EAAI7E,KAA4BK,4BACpEN,GAAkBI,IAAK,CAEtD,IADmCgB,EAAYf,kBAAkBvlB,MAAMiqB,GAErE,OAAO,CAEX,KAAO,CAEL,IADoC3D,EAAYf,kBAAkB3M,KAAKqR,GAErE,OAAO,CAEX,CACF,CACA,OAAO,CAAI,EClSPE,GAAyBA,CAACC,EAAaC,IAAW1D,IACtD,IAAKA,EAAW7xB,MACd,OAAO,KAET,MAAMw1B,EAAeF,EAAczD,EAAW7xB,MAAQ6xB,EAAW7xB,MAAMy1B,OACjEC,EAAc,IAAInH,OAAOd,GAAa+H,GAAe,KAC3D,OAAOx1B,IACL,GAAa,MAATA,EACF,OAAOu1B,EAET,MAAMI,EAAUD,EAAYE,KAAK/I,OAAO7sB,IACxC,OAAOu1B,GAAUI,EAAUA,CAAO,CACnC,EAEGE,GAAyBA,CAACP,EAAaC,IAAW1D,IACtD,IAAKA,EAAW7xB,MACd,OAAO,KAET,MAAMw1B,EAAeF,EAAczD,EAAW7xB,MAAQ6xB,EAAW7xB,MAAMy1B,OACjEzK,EAAW,IAAIC,KAAKC,cAASnuB,EAAW,CAC5C+4B,YAAa,OACbC,MAAO,WAET,OAAO/1B,IACL,GAAa,MAATA,EACF,OAAOu1B,EAET,MAAMS,EAA+D,IAArDhL,EAASiL,QAAQT,EAAcx1B,EAAM2uB,YACrD,OAAO4G,GAAUS,EAAUA,CAAO,CACnC,EAEGE,GAAsBX,GAAU,IAC7Bv1B,IACL,MAAMm2B,EAAoB,KAAVn2B,GAAyB,MAATA,EAChC,OAAOu1B,GAAUY,EAAUA,CAAO,EC5CzBC,GAAsB,CACjC51B,MAAO,IACP1I,SAAU,GACVgc,SAAUuiB,IACVC,UAAU,EACVC,UAAU,EACVC,WAAW,EACX9S,YAAY,EACZ+S,WAAW,EACXC,UAAU,EAEVC,YAAY,EACZC,UAAU,EACVC,eVuF0CC,CAAC1L,EAAQC,KACnD,MAAMC,EAAaT,GAAmBO,EAAQC,GAC9C,OAAmB,OAAfC,EACKA,EAEa,kBAAXF,EACFJ,GAASiL,QAAQ7K,EAAOuD,WAAYtD,EAAOsD,YAE7CvD,EAASC,CAAM,EU9FtBxoB,KAAM,SACNwC,MAAO,OACP6rB,gBD+BoC,eAACoE,EAAWxrB,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,IAAAA,UAAA,GAAQ,MAAK,CAAC,CAC9D9J,MAAO,WACPqyB,iBAAkBgD,GAAuBC,GAAa,GACtDyB,eAAgB/K,IACf,CACDhsB,MAAO,iBACPqyB,iBAAkBgD,GAAuBC,GAAa,GACtDyB,eAAgB/K,IACf,CACDhsB,MAAO,SACPqyB,iBAAkBwD,GAAuBP,GAAa,GACtDyB,eAAgB/K,IACf,CACDhsB,MAAO,eACPqyB,iBAAkBwD,GAAuBP,GAAa,GACtDyB,eAAgB/K,IACf,CACDhsB,MAAO,aACPqyB,iBAAkBR,IAChB,IAAKA,EAAW7xB,MACd,OAAO,KAET,MAAMuvB,EAAkB+F,EAAczD,EAAW7xB,MAAQ6xB,EAAW7xB,MAAMy1B,OACpEC,EAAc,IAAInH,OAAO,IAADh4B,OAAKk3B,GAAa8B,GAAgB,OAAO,KACvE,OAAOvvB,GACW,MAATA,GAAgB01B,EAAYE,KAAK51B,EAAM2uB,WAC/C,EAEHoI,eAAgB/K,IACf,CACDhsB,MAAO,WACPqyB,iBAAkBR,IAChB,IAAKA,EAAW7xB,MACd,OAAO,KAET,MAAMuvB,EAAkB+F,EAAczD,EAAW7xB,MAAQ6xB,EAAW7xB,MAAMy1B,OACpEC,EAAc,IAAInH,OAAO,KAADh4B,OAAMk3B,GAAa8B,GAAgB,KAAK,KACtE,OAAOvvB,GACW,MAATA,GAAgB01B,EAAYE,KAAK51B,EAAM2uB,WAC/C,EAEHoI,eAAgB/K,IACf,CACDhsB,MAAO,UACPqyB,iBAAkB6D,IAAoB,GACtCc,qBAAqB,GACpB,CACDh3B,MAAO,aACPqyB,iBAAkB6D,IAAoB,GACtCc,qBAAqB,GACpB,CACDh3B,MAAO,UACPqyB,iBAAkBR,IAChB,IAAK5nB,MAAM8N,QAAQ8Z,EAAW7xB,QAAsC,IAA5B6xB,EAAW7xB,MAAM+J,OACvD,OAAO,KAET,MAAMwlB,EAAkB+F,EAAczD,EAAW7xB,MAAQ6xB,EAAW7xB,MAAMzG,KAAI09B,GAAOA,EAAIxB,SACnFzK,EAAW,IAAIC,KAAKC,cAASnuB,EAAW,CAC5C+4B,YAAa,OACbC,MAAO,WAET,OAAO/1B,GAAkB,MAATA,GAAgBuvB,EAAgBzL,MAAKoQ,GACc,IAA1DlJ,EAASiL,QAAQ/B,EAAal0B,EAAM2uB,YAAc,KACjD,EAEZoI,eAAgB5H,IAChB,CCjGiB+H,GACjBC,eX2IiCpQ,IAAuB3oB,EAAAA,GAAAA,KAAKwqB,IAAmB5rB,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,IW1I7FgN,sBDrBwC/zB,IACxC,IAAKA,EACH,OAAO,KAET,MAAM01B,EAAc,IAAInH,OAAOd,GAAaztB,GAAQ,KACpD,MAAO,CAACiN,EAAG0D,EAAKoR,EAAQlU,KACtB,IAAIupB,EAAcvpB,EAAOzC,QAAQisB,qBAAqB1mB,EAAKoR,GAI3D,OAHIlU,EAAOzC,QAAQ4mB,mBACjBoF,EAAc1F,GAAiB0F,IAEX,MAAfA,GAAsB1B,EAAYE,KAAKwB,EAAYzI,WAAmB,CAC9E,GEbG2I,GAAoBt3B,GACX,MAATA,EACK,KAEFnD,OAAOmD,GCDHu3B,IAAuBv6B,EAAAA,EAAAA,GAAS,CAAC,EAAGo5B,GAAqB,CACpEvzB,KAAM,SACNwC,MAAO,QACPmyB,YAAa,QACbX,eAAgB1L,GAChB1B,YAAazpB,GAAmB,KAAVA,EAAe,KAAOnD,OAAOmD,GACnDy3B,eAAgBz3B,GTXX,SAAkBA,GACvB,MAAwB,kBAAVA,IAAuBnD,OAAO66B,MAAM13B,EACpD,CSS2B23B,CAAS33B,GAASA,EAAM43B,iBAAmB53B,GAAS,GAC7EkxB,gBDI2C,CAAC,CAC5ClxB,MAAO,IACPqyB,iBAAkBR,GACQ,MAApBA,EAAW7xB,OAAiBnD,OAAO66B,MAAM7F,EAAW7xB,OAC/C,KAEFA,GACEs3B,GAAkBt3B,KAAW6xB,EAAW7xB,MAGnD+2B,eAAgB/K,GAChB6L,oBAAqB,CACnBh1B,KAAM,WAEP,CACD7C,MAAO,KACPqyB,iBAAkBR,GACQ,MAApBA,EAAW7xB,OAAiBnD,OAAO66B,MAAM7F,EAAW7xB,OAC/C,KAEFA,GACEs3B,GAAkBt3B,KAAW6xB,EAAW7xB,MAGnD+2B,eAAgB/K,GAChB6L,oBAAqB,CACnBh1B,KAAM,WAEP,CACD7C,MAAO,IACPqyB,iBAAkBR,GACQ,MAApBA,EAAW7xB,OAAiBnD,OAAO66B,MAAM7F,EAAW7xB,OAC/C,KAEFA,GACQ,MAATA,GAGGs3B,GAAkBt3B,GAAS6xB,EAAW7xB,MAGjD+2B,eAAgB/K,GAChB6L,oBAAqB,CACnBh1B,KAAM,WAEP,CACD7C,MAAO,KACPqyB,iBAAkBR,GACQ,MAApBA,EAAW7xB,OAAiBnD,OAAO66B,MAAM7F,EAAW7xB,OAC/C,KAEFA,GACQ,MAATA,GAGGs3B,GAAkBt3B,IAAU6xB,EAAW7xB,MAGlD+2B,eAAgB/K,GAChB6L,oBAAqB,CACnBh1B,KAAM,WAEP,CACD7C,MAAO,IACPqyB,iBAAkBR,GACQ,MAApBA,EAAW7xB,OAAiBnD,OAAO66B,MAAM7F,EAAW7xB,OAC/C,KAEFA,GACQ,MAATA,GAGGs3B,GAAkBt3B,GAAS6xB,EAAW7xB,MAGjD+2B,eAAgB/K,GAChB6L,oBAAqB,CACnBh1B,KAAM,WAEP,CACD7C,MAAO,KACPqyB,iBAAkBR,GACQ,MAApBA,EAAW7xB,OAAiBnD,OAAO66B,MAAM7F,EAAW7xB,OAC/C,KAEFA,GACQ,MAATA,GAGGs3B,GAAkBt3B,IAAU6xB,EAAW7xB,MAGlD+2B,eAAgB/K,GAChB6L,oBAAqB,CACnBh1B,KAAM,WAEP,CACD7C,MAAO,UACPqyB,iBAAkBA,IACTryB,GACW,MAATA,EAGXg3B,qBAAqB,GACpB,CACDh3B,MAAO,aACPqyB,iBAAkBA,IACTryB,GACW,MAATA,EAGXg3B,qBAAqB,GACpB,CACDh3B,MAAO,UACPqyB,iBAAkBR,GACX5nB,MAAM8N,QAAQ8Z,EAAW7xB,QAAsC,IAA5B6xB,EAAW7xB,MAAM+J,OAGlD/J,GACW,MAATA,GAAiB6xB,EAAW7xB,MAAM6iB,SAAShmB,OAAOmD,IAHlD,KAMX+2B,eAAgB5H,GAChB0I,oBAAqB,CACnBh1B,KAAM,YC/HRkxB,sBDLyC/zB,GAC5B,MAATA,GAAiBnD,OAAO66B,MAAM13B,IAAoB,KAAVA,EACnC,KAEFo3B,GACEE,GAAkBF,KAAiBE,GAAkBt3B,KEX1D3K,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,aAAc,iBAAkB,cAAe,WAAY,YAOzI,SAASyiC,GAAmCxI,EAAWyI,GACrD,GAAiB,MAAbzI,EACF,MAAO,GAET,MAAM0I,EAAW,IAAIC,KAAK3I,GAC1B,OAAIzyB,OAAO66B,MAAMM,EAASE,WACjB,GAES,SAAdH,EACKC,EAASG,cAAcC,UAAU,EAAG,IAE3B,mBAAdL,GAIFC,EAASK,WAAWL,EAASM,aAAeN,EAASO,qBAC9CP,EAASG,cAAcC,UAAU,EAAG,KAEtCJ,EAASG,cAAcC,UAAU,EAAG,GAC7C,CACA,SAASI,GAAoB5iC,GAAO,IAAA2uB,EAClC,MAAM,KACFzM,EAAI,WACJoU,EAAU,KACVrpB,EAAI,OACJgL,EAAM,gBACNse,EAAe,WACfE,EAAU,YACVD,EAAW,SACX7jB,EAAQ,SACR9G,GACE7L,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCk3B,EAAgBxE,MACfyE,EAAkBC,GAAuB9xB,EAAAA,UAAe,IAAMm9B,GAAmChgB,EAAK9X,MAAO6C,MAC7G6pB,EAAUC,GAAiBhyB,EAAAA,UAAe,GAC3CqN,EAAK0jB,KACLhuB,EAAY2Z,IACZuV,EAAiBjyB,EAAAA,aAAkBsO,IACvCsjB,EAAc/S,QACd,MAAMxZ,EAAQiJ,EAAMI,OAAOrJ,MAC3BysB,EAAoBzsB,GACpB2sB,GAAc,GACdJ,EAAczhB,MAAMpN,EAAUovB,kBAAkB,KAC9C,MAAM2L,EAAO,IAAIR,KAAKj4B,GACtBksB,GAAWlvB,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,EAAM,CAC5B9X,MAAOnD,OAAO66B,MAAMe,EAAKP,gBAAan7B,EAAY07B,KAEpD9L,GAAc,EAAM,GACpB,GACD,CAACT,EAAYpU,EAAMpa,EAAUovB,iBAAkBP,IAKlD,OAJA5xB,EAAAA,WAAgB,KACd,MAAMqF,EAAQ83B,GAAmChgB,EAAK9X,MAAO6C,GAC7D4pB,EAAoBzsB,EAAM,GACzB,CAAC8X,EAAK9X,MAAO6C,KACIzE,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMixB,eAAelwB,EAAAA,EAAAA,GAAS,CAC/DitB,WAAW,EACXjiB,GAAIA,EACJ7G,MAAO0M,EAAOzC,QAAQ+hB,cAAc,yBACpCC,YAAavf,EAAOzC,QAAQ+hB,cAAc,+BAC1CntB,MAAOwsB,EACPpkB,SAAUwkB,EACVt2B,QAAS,WACTuM,KAAMA,GAAQ,OACdwqB,gBAAiB,CACfC,QAAQ,GAEVplB,SAAUikB,EACVE,YAAYrvB,EAAAA,EAAAA,GAAS,CAAC,EAAG0vB,GAAYN,EAAc,CACjDlC,aAAcwC,GAAwBtuB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMkuB,SAAU,CACnEvyB,SAAU,QACVf,MAAO,WACJu1B,GACH,CAAC,EAAG,CACN3qB,YACC4qB,EAAY,CACbpkB,YAAYjL,EAAAA,EAAAA,GAAS,CACnBnB,IAAc,mBAATgH,EAA4B,mBAAqB,aACtD0F,YACW,OAAV8jB,QAAU,IAAVA,OAAU,EAAVA,EAAYpkB,eAEhB5L,EAA0B,QAArBkoB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB2I,eACjC,CC1FA,SAASwL,GAAmB7G,EAAY8G,EAAWC,EAAUC,GAC3D,IAAKhH,EAAW7xB,MACd,OAAO,KAET,MAAMy4B,EAAO,IAAIR,KAAKpG,EAAW7xB,OAC7B44B,EACFH,EAAKK,WAAW,EAAG,IAQnBL,EAAKJ,WAAWI,EAAKH,aAAeG,EAAKF,qBACzCE,EAAKM,SAAS,EAAG,EAAG,EAAG,IAEzB,MAAMC,EAAOP,EAAKP,UAClB,OAAOl4B,IACL,IAAKA,EACH,OAAO,EAET,GAAI64B,EACF,OAAOF,EAAU34B,EAAMk4B,UAAWc,GAIpC,MAAMhB,EAAW,IAAIC,KAAKj4B,GAM1B,OALI44B,EACFZ,EAASc,WAAW,EAAG,GAEvBd,EAASe,SAAS,EAAG,EAAG,EAAG,GAEtBJ,EAAUX,EAASE,UAAWc,EAAK,CAE9C,CACO,MAAMC,GAAuBL,GAAY,CAAC,CAC/C54B,MAAO,KACPqyB,iBAAkBR,GACT6G,GAAmB7G,GAAY,CAACzG,EAAQC,IAAWD,IAAWC,GAAQuN,GAE/E7B,eAAgByB,GAChBX,oBAAqB,CACnBh1B,KAAM+1B,EAAW,iBAAmB,SAErC,CACD54B,MAAO,MACPqyB,iBAAkBR,GACT6G,GAAmB7G,GAAY,CAACzG,EAAQC,IAAWD,IAAWC,GAAQuN,GAE/E7B,eAAgByB,GAChBX,oBAAqB,CACnBh1B,KAAM+1B,EAAW,iBAAmB,SAErC,CACD54B,MAAO,QACPqyB,iBAAkBR,GACT6G,GAAmB7G,GAAY,CAACzG,EAAQC,IAAWD,EAASC,GAAQuN,GAE7E7B,eAAgByB,GAChBX,oBAAqB,CACnBh1B,KAAM+1B,EAAW,iBAAmB,SAErC,CACD54B,MAAO,YACPqyB,iBAAkBR,GACT6G,GAAmB7G,GAAY,CAACzG,EAAQC,IAAWD,GAAUC,GAAQuN,GAE9E7B,eAAgByB,GAChBX,oBAAqB,CACnBh1B,KAAM+1B,EAAW,iBAAmB,SAErC,CACD54B,MAAO,SACPqyB,iBAAkBR,GACT6G,GAAmB7G,GAAY,CAACzG,EAAQC,IAAWD,EAASC,GAAQuN,GAAWA,GAExF7B,eAAgByB,GAChBX,oBAAqB,CACnBh1B,KAAM+1B,EAAW,iBAAmB,SAErC,CACD54B,MAAO,aACPqyB,iBAAkBR,GACT6G,GAAmB7G,GAAY,CAACzG,EAAQC,IAAWD,GAAUC,GAAQuN,GAE9E7B,eAAgByB,GAChBX,oBAAqB,CACnBh1B,KAAM+1B,EAAW,iBAAmB,SAErC,CACD54B,MAAO,UACPqyB,iBAAkBA,IACTryB,GACW,MAATA,EAGXg3B,qBAAqB,GACpB,CACDh3B,MAAO,aACPqyB,iBAAkBA,IACTryB,GACW,MAATA,EAGXg3B,qBAAqB,ICxGjB3hC,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,aAAc,eAAgB,oBAAqB,iBAU/L6jC,IAAkBzjC,EAAAA,EAAAA,IAAOizB,GAAAA,GAAPjzB,CAAkB,CACxCmC,SAAU,YAWZ,SAASuhC,GAAiBvjC,GACxB,MAAM,GACFoS,EACAhI,MAAOo5B,EAAS,MAChBzX,EAAK,OACLkH,EAAM,SACNC,EAAQ,WACR7gB,EAAU,cACVghB,GACErzB,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCgkC,EAA6B,aAAhBxQ,EAAOhmB,KACpBgL,EAASuW,KACTlc,EAAWvN,EAAAA,SACX2+B,EAAmB3+B,EAAAA,SAAc,KACrC,IAAI4+B,EAQAC,EACJ,GAPED,EADe,MAAbH,EACW,KACJA,aAAqBnB,KACjBmB,EAEA,IAAInB,MAAe,OAATmB,QAAS,IAATA,EAAAA,EAAa,IAAIzK,YAGxB,MAAd4K,GAAsB18B,OAAO66B,MAAM6B,EAAWrB,WAChDsB,EAAgB,OACX,CAELA,EADkB,IAAIvB,KAAKsB,EAAWrB,UAA6C,GAAjCqB,EAAWhB,oBAA2B,KAC9DJ,cAAcsB,OAAO,EAAGJ,EAAa,GAAK,GACtE,CACA,MAAO,CACLK,OAAQH,EACRI,UAAWH,EACZ,GACA,CAACJ,EAAWC,KACRnQ,EAAYC,GAAiBxuB,EAAAA,SAAe2+B,GAK7Cr8B,EAjDkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,kBAEoB2W,EAAyBxP,EAAQ,EA0C9CE,CAHG,CACjBF,QAFgBoa,IAEGpa,UAGf28B,EAAmBj/B,EAAAA,aAAkBqF,IACzC,GAAc,KAAVA,EACF,OAAO,KAET,MAAOy4B,EAAMO,GAAQh5B,EAAM65B,MAAM,MAC1BC,EAAMC,EAAOC,GAAOvB,EAAKoB,MAAM,KAChCN,EAAa,IAAItB,KAGvB,GAFAsB,EAAWU,YAAYp9B,OAAOi9B,GAAOj9B,OAAOk9B,GAAS,EAAGl9B,OAAOm9B,IAC/DT,EAAWR,SAAS,EAAG,EAAG,EAAG,GACzBC,EAAM,CACR,MAAOkB,EAAOC,GAAWnB,EAAKa,MAAM,KACpCN,EAAWR,SAASl8B,OAAOq9B,GAAQr9B,OAAOs9B,GAAU,EAAG,EACzD,CACA,OAAOZ,CAAU,GAChB,IACGnQ,EAAezuB,EAAAA,aAAkB0uB,UACrC,MAAM+Q,EAAmBnxB,EAAMI,OAAOrJ,MAChCq6B,EAAgBT,EAAiBQ,GACnCnR,SACIA,EAAchgB,EAAOoxB,GAE7BlR,EAAc,CACZuQ,OAAQW,EACRV,UAAWS,IAEbvsB,EAAOzC,QAAQue,iBAAiB,CAC9B3hB,KACA2Z,QACA3hB,MAAOq6B,GACNpxB,EAAM,GACR,CAAC4E,EAAQ8T,EAAO3Z,EAAIihB,EAAe2Q,IActC,OAbAj/B,EAAAA,WAAgB,KACdwuB,GAAcvgB,IAAS,IAAA0xB,EAAAC,EACrB,OAAIjB,EAAiBI,SAAW9wB,EAAM8wB,SAAiC,QAAvBY,EAAAhB,EAAiBI,cAAM,IAAAY,OAAA,EAAvBA,EAAyBpC,cAA0B,QAAjBqC,EAAK3xB,EAAM8wB,cAAM,IAAAa,OAAA,EAAZA,EAAcrC,WAC5FoB,EAEF1wB,CAAK,GACZ,GACD,CAAC0wB,IACJvY,GAAkB,KACZ+H,GACF5gB,EAASkD,QAAQ4e,OACnB,GACC,CAAClB,KACgB1qB,EAAAA,GAAAA,KAAK86B,IAAiBl8B,EAAAA,EAAAA,GAAS,CACjDkL,SAAUA,EACV+hB,WAAW,EACX5uB,UAAW4B,EAAQnH,KACnB+M,KAAMw2B,EAAa,iBAAmB,OACtCpxB,YAAYjL,EAAAA,EAAAA,GAAS,CACnBnB,IAAKw9B,EAAa,mBAAqB,cACtCpxB,GACHjI,MAAOkpB,EAAWyQ,UAClBvxB,SAAUghB,GACT/sB,GACL,CAmEO,MAAMm+B,GAAqBzT,IAAuB3oB,EAAAA,GAAAA,KAAK+6B,IAAkBn8B,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,ICtL7F,SAAS0T,GAAoB3/B,GAK1B,IAL2B,MAC5BkF,EAAK,WACL06B,EAAU,MACVC,EAAK,MACLhZ,GACD7mB,EACC,KAAMkF,aAAiBi4B,MACrB,MAAM,IAAIxuB,MAAM,CAAC,WAADlT,OAAamkC,EAAU,wDAA2D,iEAAkE,WAAFnkC,OAAaokC,EAAK,cAAApkC,OAAaorB,EAAK,OAAMhT,KAAK,MAErN,CACO,MA0BMisB,IAAoB59B,EAAAA,EAAAA,GAAS,CAAC,EAAGo5B,GAAqB,CACjEvzB,KAAM,OACNg0B,eAAgBtL,GAChBkM,eA7B+BoD,CAAC76B,EAAO2Q,EAAKoR,EAAQlU,KACpD,IAAK7N,EACH,MAAO,GAST,OANAy6B,GAAqB,CACnBz6B,QACA06B,WAAY,OACZC,MAJY9sB,EAAOzC,QAAQ0vB,SAASnqB,GAKpCgR,MAAOI,EAAOJ,QAET3hB,EAAM+6B,oBAAoB,EAmBjC7J,gBAAiB+H,KACjB9B,eAAgBqD,GAEhBQ,kBAAmBh7B,GAAS,IAAIi4B,KAAKj4B,KAE1Bi7B,IAAwBj+B,EAAAA,EAAAA,GAAS,CAAC,EAAGo5B,GAAqB,CACrEvzB,KAAM,WACNg0B,eAAgBtL,GAChBkM,eAzBmCyD,CAACl7B,EAAO2Q,EAAKoR,EAAQlU,KACxD,IAAK7N,EACH,MAAO,GAST,OANAy6B,GAAqB,CACnBz6B,QACA06B,WAAY,WACZC,MAJY9sB,EAAOzC,QAAQ0vB,SAASnqB,GAKpCgR,MAAOI,EAAOJ,QAET3hB,EAAM43B,gBAAgB,EAe7B1G,gBAAiB+H,IAAqB,GACtC9B,eAAgBqD,GAEhBQ,kBAAmBh7B,GAAS,IAAIi4B,KAAKj4B,KCxDjCm7B,GAAwBvyB,GAASA,EAAMwyB,KAChCC,GAAuBnd,GAAeid,IAAuBC,GAAQA,EAAKE,gBAC1EC,GAA0Brd,GAAeid,IAAuBC,GAAQA,EAAKI,UAC7EC,GAA+Bvd,GAAeid,IAAuBC,GAAQA,EAAKM,wBAGlFC,GAAyBzd,GAAeid,IAAuBC,GAAQA,EAAKQ,yBAC5EC,GAAsC3d,GAAeid,IAAuBC,GAAQA,EAAKU,sBACzFC,GAAsB7d,GAAeid,IAAuBC,GAAQA,EAAKY,OACzEC,GAA+B/d,GAAeid,IAAuBC,GAAQA,EAAKc,gBAClFC,GAA8Bje,GAAeid,IAAuBC,GAAQA,EAAKgB,eACjFC,GAA4Bne,GAAeid,IAAuBC,GAAQA,EAAKkB,aAC/EC,GAAkC3c,GAAuBub,IAAuBC,IAC3F,MAAM1hB,EAAU7gB,OAAO6gB,QAAQ0hB,EAAKkB,YACpC,OAAuB,IAAnB5iB,EAAQ3P,OACH,EAEF2P,EAAQzgB,QAAO6B,IAAA,IAAE,CAAE0hC,GAAU1hC,EAAA,OAAK0hC,EAAY,CAAC,IAAEjjC,KAAIyB,IAAA,IAAEyhC,GAAMzhC,EAAA,OAAK6B,OAAO4/B,EAAM,IAAEC,MAAK,CAAC7vB,EAAGC,IAAMA,EAAID,IAAG,GAAK,CAAC,IAEzG8vB,GAAyBze,GAAeid,IAAuBC,GAAQA,EAAKwB,aAU5EC,GAAyBjd,GALS1B,GAAeid,IAAuBC,GAAY,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,uBAKLA,IAAuB,IAAAC,EAAAC,EAAAC,EAAAC,EACnH,MAAMC,EAAmC,OAAnBL,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBtmB,WAC3C,MAAO,CACLtc,OAGG,QAHG6iC,EAAe,OAAbI,QAAa,IAAbA,GAAqB,QAARH,EAAbG,EAAejjC,cAAM,IAAA8iC,OAAA,EAArBA,EAAuBzjC,KAAI6jC,IAAQ,IAAAC,EAAA,MAAK,CAC9Cr1B,GAAIo1B,EAASp1B,GACbqa,MAAqB,QAAhBgb,EAAED,EAAS/a,aAAK,IAAAgb,EAAAA,EAAI,CAAC,EAC3B,WAAE,IAAAN,EAAAA,EAAI,GACPnjC,IAGG,QAHAqjC,EAAe,OAAbE,QAAa,IAAbA,GAAkB,QAALD,EAAbC,EAAevjC,WAAG,IAAAsjC,OAAA,EAAlBA,EAAoB3jC,KAAI6jC,IAAQ,IAAAE,EAAA,MAAK,CACxCt1B,GAAIo1B,EAASp1B,GACbqa,MAAqB,QAAhBib,EAAEF,EAAS/a,aAAK,IAAAib,EAAAA,EAAI,CAAC,EAC3B,WAAE,IAAAL,EAAAA,EAAI,GACR,IAMUM,GAA8Brf,GAAe2e,IAAwBrmB,IAAc,IAAAgnB,EAAAC,EAC9F,QAAkB,OAAVjnB,QAAU,IAAVA,GAAe,QAALgnB,EAAVhnB,EAAY5c,WAAG,IAAA4jC,OAAA,EAAfA,EAAiBzzB,SAAU,KAAgB,OAAVyM,QAAU,IAAVA,GAAkB,QAARinB,EAAVjnB,EAAYtc,cAAM,IAAAujC,OAAA,EAAlBA,EAAoB1zB,SAAU,EAAE,IC7C9D2zB,GAAqB,iCACrBC,GAAwBnmB,OAAO,wBAyBrC,MAAMomB,GAAuBA,CAACC,EAAU/C,EAAUgD,KACvD,MAAM91B,EAAK8yB,EAAWA,EAAS+C,GAAYA,EAAS71B,GAEpD,OARK,SAA+BA,EAAI2I,GACxC,GAAU,MAAN3I,EACF,MAAM,IAAIyB,MAAM,CAAC,mFAAoF,sFAFxCK,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,kDAEgJilB,KAAKE,UAAUte,IAAMhC,KAAK,MAE9O,CAGEovB,CAAsB/1B,EAAI61B,EAAUC,GAC7B91B,CAAE,EAEEg2B,GAA0BljC,IAKjC,IALkC,KACtCsgC,EAAI,SACJN,EAAQ,QACRU,EAAO,SACPyC,GACDnjC,EACC,MAAMojC,EAAU,CACdr7B,KAAM,OACNu4B,KAAM,IAEFQ,EAAyB,CAAC,EAC1BE,EAAsB,CAAC,EAC7B,IAAK,IAAI/wB,EAAI,EAAGA,EAAIqwB,EAAKrxB,OAAQgB,GAAK,EAAG,CACvC,MAAMsX,EAAQ+Y,EAAKrwB,GACb/C,EAAK41B,GAAqBvb,EAAOyY,GACvCc,EAAuB5zB,GAAMqa,EAC7ByZ,EAAoB9zB,GAAMA,EAC1Bk2B,EAAQ9C,KAAKxd,KAAK5V,EACpB,CACA,MAAO,CACLm2B,yBAA0B/C,EAC1BgD,gCAAiC5C,EACjC6C,iCAAkCJ,EAClCC,UACApC,sBACAF,yBACD,EAEU0C,GAAsBtjC,IAG7B,IAH8B,KAClCghC,EAAI,aACJuC,EAAe,GAChBvjC,EACC,MAAMwjC,EAAgBxC,EAAK0B,IAC3B,OAAOt9B,KAAKvE,IAAI0iC,EAAcC,EAAc/iC,SAASsO,QAAoC,MAA1By0B,EAAcC,SAAmB,EAAI,GAAG,EAE5FC,GAAwB3nC,IAO/B,IAPgC,OACpC8W,EAAM,aACN0wB,EAAe,EAAC,YAChBI,EAAW,aACXC,EAAY,mBACZC,EAAkB,sBAClBC,GACD/nC,EACC,MAAMoiB,EAAQtL,EAAOzC,QAAQ2zB,OAAO3D,MAIlCY,KAAMgD,EACN1C,WAAY2C,EACZrC,WAAYsC,EAAqB,aACjC9C,EAAY,cACZF,EAAgB,IACdruB,EAAOzC,QAAQ+zB,uBAAuB,kBAAmB,CAC3DP,eACAC,qBACAX,QAAS/kB,EAAM+kB,QACfpC,oBAAqB3iB,EAAM2iB,oBAC3BF,uBAAwBziB,EAAMyiB,uBAC9BkD,0BAIIM,EAAgCvxB,EAAOzC,QAAQuZ,6BAA6B,cAAe,CAC/FqX,KAAMgD,EACN1C,WAAY2C,EACZnD,oBAAqB3iB,EAAM2iB,oBAC3Bc,WAAYsC,EACZtD,uBAAwBziB,EAAMyiB,yBAahC,OATA/tB,EAAOzC,QAAQ2zB,OAAO3D,KAAK8C,QAAU,CACnCr7B,KAAM,UACNw8B,QAAS,CACPC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,IAEVC,iBAAkB,CAAC,IAEdziC,EAAAA,EAAAA,GAAS,CAAC,EAAGoiC,EAA+B,CACjD9D,cAAel7B,KAAKvE,IAAI0iC,EAAca,EAA8BxC,WAAW7yB,QAC/E2xB,sBAAuB4C,GAAoB,CACzCtC,KAAMoD,EAA8BpD,KACpCuC,iBAEFnC,eACAZ,QAASmD,EACTzC,iBACA,EAGSwD,GAAyBC,GAA4B,gBAAjBA,EAAQ98B,MAA2C,WAAjB88B,EAAQ98B,MAAsC,UAAjB88B,EAAQ98B,MAAoB88B,EAAQC,iBAAoC,cAAjBD,EAAQ98B,MAAwB88B,EAAQC,gBAClMC,GAAyBA,CAAC7D,EAAM8D,EAAUC,KACrD,MAAMC,EAAOhE,EAAK8D,GAClB,GAAkB,UAAdE,EAAKn9B,KACP,MAAO,GAET,MAAMo9B,EAAmB,GACzB,IAAK,IAAIl1B,EAAI,EAAGA,EAAIi1B,EAAKvkC,SAASsO,OAAQgB,GAAK,EAAG,CAChD,MAAMm1B,EAAQF,EAAKvkC,SAASsP,GACvBg1B,GAA0BL,GAAuB1D,EAAKkE,KACzDD,EAAiBriB,KAAKsiB,GAExB,MAAMC,EAAmBN,GAAuB7D,EAAMkE,EAAOH,GAC7D,IAAK,IAAIK,EAAI,EAAGA,EAAID,EAAiBp2B,OAAQq2B,GAAK,EAChDH,EAAiBriB,KAAKuiB,EAAiBC,GAE3C,CAIA,OAHKL,GAA0C,MAAjBC,EAAKvB,UACjCwB,EAAiBriB,KAAKoiB,EAAKvB,UAEtBwB,CAAgB,EAEZI,GAAyB1mC,IAKhC,IAAA2mC,EAAAC,EAAAC,EAAA,IALiC,cACrCC,EAAa,SACb3F,EAAQ,QACRoD,EAAO,UACPwC,GACD/mC,EACC,GAAmC,SAA/B8mC,EAAcvC,QAAQr7B,KACxB,MAAM,IAAI4G,MAAM,kFAKlB,MAAMk3B,EAAgB,IAAI9kB,IAC1BqiB,EAAQ17B,SAAQo+B,IACd,MAAM54B,EAAK41B,GAAqBgD,EAAQ9F,EAAU,4DAC9C6F,EAAczS,IAAIlmB,GACpB24B,EAAchlB,IAAI3T,GAAIhL,EAAAA,EAAAA,GAAS,CAAC,EAAG2jC,EAActnB,IAAIrR,GAAK44B,IAE1DD,EAAchlB,IAAI3T,EAAI44B,EACxB,IAEF,MAAMC,EAAiB,CACrBh+B,KAAM,UACNw8B,QAAS,CACPC,OAAQ,IAAyC,QAAxCgB,EAAIG,EAAcvC,QAAQmB,QAAQC,cAAM,IAAAgB,EAAAA,EAAI,IACrDf,OAAQ,IAAyC,QAAxCgB,EAAIE,EAAcvC,QAAQmB,QAAQE,cAAM,IAAAgB,EAAAA,EAAI,IACrDf,OAAQ,IAAyC,QAAxCgB,EAAIC,EAAcvC,QAAQmB,QAAQG,cAAM,IAAAgB,EAAAA,EAAI,KAEvDf,kBAAkBziC,EAAAA,EAAAA,GAAS,CAAC,EAAGyjC,EAAcvC,QAAQuB,kBACrDiB,aAEI9E,GAAyB5+B,EAAAA,EAAAA,GAAS,CAAC,EAAGyjC,EAAc7E,wBACpDE,GAAsB9+B,EAAAA,EAAAA,GAAS,CAAC,EAAGyjC,EAAc3E,qBACjDgF,EAAgC,CACpCxB,OAAQ,CAAC,EACTC,OAAQ,CAAC,EACTC,OAAQ,CAAC,GAQXmB,EAAcn+B,SAAQ,CAACu+B,EAAY/4B,KACjC,MAAMg5B,EAA4BH,EAAepB,iBAAiBz3B,GAIlE,GAA2B,WAAvB+4B,EAAWE,QAAsB,CAGnC,GAAkC,WAA9BD,IAA2CpF,EAAuB5zB,GACpE,OAaF,OARiC,MAA7Bg5B,IACFF,EAA8BE,GAA2Bh5B,IAAM,GAIjE64B,EAAexB,QAAQG,OAAO5hB,KAAK5V,UAC5B4zB,EAAuB5zB,eACvB8zB,EAAoB9zB,EAE7B,CACA,MAAMk5B,EAAStF,EAAuB5zB,GAGtC,GAAIk5B,EAeF,MAZkC,WAA9BF,GACFF,EAA8BtB,OAAOx3B,IAAM,EAC3C64B,EAAexB,QAAQE,OAAO3hB,KAAK5V,IAIC,MAA7Bg5B,GACPH,EAAexB,QAAQE,OAAO3hB,KAAK5V,QAIrC4zB,EAAuB5zB,IAAMhL,EAAAA,EAAAA,GAAS,CAAC,EAAGkkC,EAAQH,IAOlB,WAA9BC,GACFF,EAA8BtB,OAAOx3B,IAAM,EAC3C64B,EAAexB,QAAQC,OAAO1hB,KAAK5V,IAKC,MAA7Bg5B,GACPH,EAAexB,QAAQC,OAAO1hB,KAAK5V,GAIrC4zB,EAAuB5zB,GAAM+4B,EAC7BjF,EAAoB9zB,GAAMA,CAAE,IAE9B,MAAMm5B,EAAgCtoC,OAAOC,KAAKgoC,GAClD,IAAK,IAAI/1B,EAAI,EAAGA,EAAIo2B,EAA8Bp3B,OAAQgB,GAAK,EAAG,CAChE,MAAMq2B,EAAaD,EAA8Bp2B,GAC3Cs2B,EAAcP,EAA8BM,GAC9CvoC,OAAOC,KAAKuoC,GAAat3B,OAAS,IACpC82B,EAAexB,QAAQ+B,GAAcP,EAAexB,QAAQ+B,GAAYnoC,QAAO+O,IAAOq5B,EAAYr5B,KAEtG,CACA,MAAO,CACL4zB,yBACAE,sBACAoC,QAAS2C,EACT1C,yBAA0BsC,EAActC,yBACxCC,gCAAiCqC,EAAcrC,gCAC/CC,iCAAkCoC,EAAcpC,iCACjD,EAiBI,SAASiD,GAAwBzzB,GACtC,MAAMgB,EAAaD,EAAuBf,EAAOzC,QAAQxC,OACzD,MAAO,iCAAPrS,OAAwC,EAAIsY,EAAW0yB,UAAS,MAClE,CACO,SAASC,GAAmB3zB,EAAQqwB,EAASpD,GAClD,MAAM2G,EAAuB,GAe7B,OAdAvD,EAAQ17B,SAAQo+B,IACd,MAAM54B,EAAK41B,GAAqBgD,EAAQ9F,EAAU,4DAC5C6E,EAAU9xB,EAAOzC,QAAQs2B,WAAW15B,GAC1C,GAAsB,eAAX,OAAP23B,QAAO,IAAPA,OAAO,EAAPA,EAAS98B,MAAsB,CAEjC,MAAM8+B,EAAkB9zB,EAAOzC,QAAQ2zB,OAAOvoB,WACxCorB,EAAYD,EAAgBE,SAAS75B,GACvC45B,IACFD,EAAgBE,SAAS75B,IAAMhL,EAAAA,EAAAA,GAAS,CAAC,EAAG4kC,EAAWhB,GAE3D,MACEa,EAAqB7jB,KAAKgjB,EAC5B,IAEKa,CACT,CAEO,MAAMK,GAAoBA,CAACC,EAAeC,EAAkBC,IACpC,kBAAlBF,GAA8BA,EAAgB,EAChDA,EAMFC,EC5TH3sC,ID8T0B,CAAC,iEAAD,2CAAgHsZ,KAAK,MAClH,CAAC,kFAAD,2CAAiIA,KAAK,MC/TvJ,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,wBAoBlJ,SAASuzB,GAAmBtsC,GAC1B,MAAM,MACFoK,EAAK,QACL2/B,GACE/pC,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACT1mB,EAAY2Z,IAIZpa,EApBkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,gBAEoB2W,EAAyBxP,EAAQ,EAa9CE,CAHG,CACjBF,QAASS,EAAUT,UAIfklC,EADWj0B,EAAgBL,EAAQ0uB,IAG9B,GAAsB,UAAjBoD,EAAQ98B,OAA2C,IAAvBnF,EAAU0kC,SAChDp+B,EAAOrJ,EAAAA,SAAc,IAAMqF,EAAQtC,EAAUzB,MAAMomC,oBAAsB3kC,EAAUzB,MAAMqmC,sBAAsB,CAAC5kC,EAAUzB,MAAMqmC,qBAAsB5kC,EAAUzB,MAAMomC,oBAAqBriC,IACjM,OAAImiC,QAAwCplC,IAAViD,EACzB,MAEW5B,EAAAA,GAAAA,KAAK4F,GAAMhH,EAAAA,EAAAA,GAAS,CACtCpF,SAAU,QACVyD,UAAW4B,EAAQnH,KACnBysC,YAAa10B,EAAOzC,QAAQ+hB,cAAcntB,EAAQ,uBAAyB,yBAC3E,aAAc2I,QAAQ3I,IACrB3D,GACL,CAmEA,MAAMmmC,GAA+B7nC,EAAAA,KAAWunC,ICjH1C7sC,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAAa,WAAY,eAAgB,oBAAqB,QAAS,iBAkB7M,SAASotC,GAAoB7sC,GAAO,IAAA2uB,EAClC,MACIvc,GAAI06B,EAAM,MACV1iC,EAAK,MACL2hB,EAAK,UACLtmB,EAAS,SACTytB,EAAQ,cACRG,GACErzB,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACTlc,EAAWvN,EAAAA,OAAa,MACxBqN,EAAK0jB,MACJxC,EAAYC,GAAiBxuB,EAAAA,SAAeqF,GAC7CtC,EAAY2Z,IAIZpa,EA3BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,oBAEoB2W,EAAyBxP,EAAQ,EAoB9CE,CAHG,CACjBF,QAASS,EAAUT,UAGfmsB,EAAezuB,EAAAA,aAAkB0uB,UACrC,MAAMC,EAAWrgB,EAAMI,OAAO3B,QAC1BuhB,SACIA,EAAchgB,EAAOqgB,GAE7BH,EAAcG,SACRzb,EAAOzC,QAAQue,iBAAiB,CACpC3hB,GAAI06B,EACJ/gB,QACA3hB,MAAOspB,GACNrgB,EAAM,GACR,CAAC4E,EAAQ8T,EAAO+gB,EAAQzZ,IAS3B,OARAtuB,EAAAA,WAAgB,KACdwuB,EAAcnpB,EAAM,GACnB,CAACA,IACJ+gB,GAAkB,KACZ+H,GACF5gB,EAASkD,QAAQ4e,OACnB,GACC,CAAClB,KACgB1qB,EAAAA,GAAAA,KAAK,SAASpB,EAAAA,EAAAA,GAAS,CACzC2lC,QAAS36B,EACT3M,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,IAC7BgB,EAAO,CACRZ,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM2mC,cAAc5lC,EAAAA,EAAAA,GAAS,CACjEgL,GAAIA,EACJE,SAAUA,EACVR,QAASiB,QAAQugB,GACjB9gB,SAAUghB,EACVtpB,KAAM,SACc,QAArBykB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBqe,iBAE5B,CAmEO,MCxIDvtC,GAAY,CAAC,OAAQ,aAAc,SAAU,kBAAmB,iBAAkB,cAAe,WAAY,QAAS,UAAW,mBAOjIwtC,IAA2BptC,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAC7CO,QAAS,OACTsB,WAAY,SACZkJ,MAAO,OACP,WAAc,CACZgH,OAAQ,sBAGZ,SAASs7B,GAAuBltC,GAAO,IAAA2uB,EAAAwe,EAAAve,EAAAwe,EACrC,MAAM,KACFlrB,EAAI,WACJoU,EAAU,OACVre,EAAM,gBACNse,EAAe,YACfC,EAAW,SACX7jB,EACApH,MAAOe,EAAS,QAChB5L,EAAU,YACRV,EACJ02B,GAAShwB,EAAAA,EAAAA,GAA8B1G,EAAOP,KACzCm3B,EAAkBC,GAAuB9xB,EAAAA,SAAemd,EAAK9X,OAAS,IACvEtC,EAAY2Z,IACZ4N,EAAUyG,KACVuX,EAAWvX,KACXwX,GAAqC,QAAnB3e,EAAA7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB4e,aAAc,CAAC,EACtDC,EAAuC,QAAzBL,EAAGG,EAAgBG,cAAM,IAAAN,GAAAA,EACvCO,GAA2C,QAAnB9e,EAAA9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqB+e,mBAAoB,CAAC,EAClE3W,EAAiBjyB,EAAAA,aAAkBsO,IACvC,MAAMjJ,EAAQiJ,EAAMI,OAAOrJ,MAC3BysB,EAAoBzsB,GACpBksB,GAAWlvB,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,EAAM,CAC5B9X,MAAO2I,QAAQ3I,KACd,GACF,CAACksB,EAAYpU,IAChBnd,EAAAA,WAAgB,KACd8xB,EAAoB3U,EAAK9X,OAAS,GAAG,GACpC,CAAC8X,EAAK9X,QACT,MAAMmB,EAAiB,OAATe,QAAS,IAATA,EAAAA,EAAa2L,EAAOzC,QAAQ+hB,cAAc,yBACxD,OAAoBhvB,EAAAA,GAAAA,MAAM0kC,GAA0B,CAClDpnC,SAAU,EAAc0C,EAAAA,GAAAA,MAAMT,EAAUzB,MAAMunC,gBAAiB,CAC7DvZ,WAAW,EACXxuB,SAAU,EAAc2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMwnC,gBAAgBzmC,EAAAA,EAAAA,GAAS,CAAC,EAAsB,QAArBgmC,EAAEtlC,EAAUxB,iBAAS,IAAA8mC,OAAA,EAAnBA,EAAqBS,eAAgB,CAC7Gz7B,GAAIid,EACJqI,QAAQ,EACRh3B,QAASA,EACTmF,SAAU0F,MACMhD,EAAAA,GAAAA,MAAMT,EAAUzB,MAAMknC,YAAYnmC,EAAAA,EAAAA,GAAS,CAC3DioB,QAASA,EACTjd,GAAIi7B,EACJ9hC,MAAOA,EACPnB,MAAOwsB,EACPpkB,SAAUwkB,EACVt2B,QAASA,EACTotC,QAAqB,aAAZptC,QAAgCyG,EACzCsmC,OAAQD,EACRO,cAAc,EACd17B,WAAY,CACVpN,IAAKsxB,EACL5jB,aAED+jB,EAAkC4W,EAAiB,CACpDznC,SAAU,EAAc2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMsnC,kBAAkBvmC,EAAAA,EAAAA,GAAS,CAAC,EAAGsmC,EAAuB,CACjGD,OAAQD,EACRpjC,MAAO,GACPvE,SAAUoS,EAAOzC,QAAQ+hB,cAAc,sBACvB/uB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMsnC,kBAAkBvmC,EAAAA,EAAAA,GAAS,CAAC,EAAGsmC,EAAuB,CAC3FD,OAAQD,EACRpjC,MAAO,OACPvE,SAAUoS,EAAOzC,QAAQ+hB,cAAc,uBACvB/uB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMsnC,kBAAkBvmC,EAAAA,EAAAA,GAAS,CAAC,EAAGsmC,EAAuB,CAC3FD,OAAQD,EACRpjC,MAAO,QACPvE,SAAUoS,EAAOzC,QAAQ+hB,cAAc,8BAGzCf,IAER,CCrFO,MCwBMwX,IAAuB5mC,EAAAA,EAAAA,GAAS,CAAC,EAAGo5B,GAAqB,CACpEvzB,KAAM,UACN7M,QAAS,OACTqP,MAAO,SACPmyB,YAAa,SACbqM,WJuF+B9c,GACV,mCAAjBA,EAAOpF,OAA8C+d,GAAuB3Y,EAAO4Y,SAC9E,IAEWvhC,EAAAA,GAAAA,KAAKokC,IAAiBxlC,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,II1FvDoQ,eH2GmCpQ,IAAuB3oB,EAAAA,GAAAA,KAAKqkC,IAAqBzlC,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,IG1GjG8P,eAAgB1L,GAChBsM,eA3B2BqM,CAAC9jC,EAAO2Q,EAAKoR,EAAQlU,IACzC7N,EAAQ6N,EAAOzC,QAAQ+hB,cAAc,wBAA0Btf,EAAOzC,QAAQ+hB,cAAc,yBA2BnG+D,gBDjC2C,CAAC,CAC5ClxB,MAAO,KACPqyB,iBAAkBR,IAChB,IAAKA,EAAW7xB,MACd,OAAO,KAET,MAAM+jC,EAA8C,SAA7BlX,OAAOgF,EAAW7xB,OACzC,OAAOA,GACE2I,QAAQ3I,KAAW+jC,CAC3B,EAEHhN,eAAgB+L,KCuBhB/O,2BAAuBh3B,EAEvB45B,YAAY,EAEZqE,kBAAmBh7B,GA9BGA,KACtB,OAAQA,EAAMgkC,cAAcvO,QAC1B,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAO,EACT,IAAK,QACL,IAAK,KACL,IAAK,IACL,IAAK,OACL,IAAK,YACH,OAAO,EACT,QACE,OACJ,EAgB4BwO,CAAgBjkC,KCpC9C,IAAIkkC,GAAwC,SAAUA,GAMpD,OALAA,EAAuC,aAAI,eAC3CA,EAA0C,gBAAI,kBAC9CA,EAA2C,iBAAI,mBAC/CA,EAAwC,cAAI,gBAC5CA,EAAuC,aAAI,eACpCA,CACT,CAP4C,CAO1CA,IAA4B,CAAC,GAI3BC,GAAuC,SAAUA,GAMnD,OALAA,EAAsC,aAAI,eAC1CA,EAAuC,cAAI,gBAC3CA,EAAsC,aAAI,eAC1CA,EAAoC,WAAI,aACxCA,EAAyC,gBAAI,kBACtCA,CACT,CAP2C,CAOzCA,IAA2B,CAAC,GCrB1BC,GAA6B,SAAUA,GAGzC,OAFAA,EAAoB,KAAI,OACxBA,EAAmB,IAAI,MAChBA,CACT,CAJiC,CAI/BA,IAAiB,CAAC,GAChBC,GAA6B,SAAUA,GAGzC,OAFAA,EAAoB,KAAI,OACxBA,EAAoB,KAAI,OACjBA,CACT,CAJiC,CAI/BA,IAAiB,CAAC,GAChBC,GAA4B,SAAUA,GAGxC,OAFAA,EAAmB,KAAI,OACvBA,EAAmB,KAAI,OAChBA,CACT,CAJgC,CAI9BA,IAAgB,CAAC,GCbZ,SAASC,GAAqB1b,GACnC,MAAwB,kBAAX,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQhmB,KACjB,CACO,SAAS2hC,GAAgBziB,EAAQ0iB,GACtC,GAAK1iB,EAGL,MAAsC,oBAAxBA,EAAO2iB,aAA8B3iB,EAAO2iB,cAAa1nC,EAAAA,EAAAA,GAAS,CAC9E2kB,MAAOI,EAAOJ,OACb8iB,IAAqB1iB,EAAO2iB,YACjC,CACO,SAASC,GAAyB3kC,EAAO0kC,EAAcE,GAC5D,QAAqB7nC,IAAjB2nC,EACF,OAEF,MAAMl4B,EAASk4B,EAAatqB,MAAK2V,IAC/B,MAAM8U,EAAcD,EAAe7U,GACnC,OAAOlD,OAAOgY,KAAiBhY,OAAO7sB,EAAM,IAE9C,OAAO4kC,EAAep4B,EACxB,CCnBA,MAAMnX,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAAa,WAAY,eAAgB,oBAAqB,QAAS,gBAAiB,eAC5N65B,GAAa,CAAC,aAchB,SAAS4V,GAAyBlvC,GAAO,IAAA2uB,EAAAwe,EAAAve,EACvC,MAAM9mB,EAAY2Z,KACZ,GACFrP,EACAhI,MAAOo5B,EAAS,MAChBzX,EAAK,IACLhR,EAAG,OACHkY,EAAM,SACNC,EAAQ,MACRjnB,EAAK,cACLonB,EAAa,YACb8b,EAAcrnC,EAAUsnC,WAAaZ,GAAca,MACjDrvC,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACTvpB,EAAMF,EAAAA,SACNuN,EAAWvN,EAAAA,UACVwR,EAAM+4B,GAAWvqC,EAAAA,SAAeoqC,GAEjC3B,EAAuC,QAAzBL,IADuB,QAAnBxe,EAAA7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB4e,aAAc,CAAC,GACrBE,cAAM,IAAAN,GAAAA,EACvCjoC,GAA0B,QAAnB0pB,EAAA9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqB2e,aAAc,CAAC,GAC/C,UACEgC,GACErqC,EACJsqC,GAAuB9oC,EAAAA,EAAAA,GAA8BxB,EAAMo0B,IAM7D,GALAnO,GAAkB,KACF,IAAAskB,EAAVvc,IACc,QAAhBuc,EAAAn9B,EAASkD,eAAO,IAAAi6B,GAAhBA,EAAkBrb,QACpB,GACC,CAAClB,KACCyb,GAAqB1b,GACxB,OAAO,KAET,MAAM6b,EAAeF,GAAgB3b,EAAQ,CAC3C7gB,KACA2I,QAEF,IAAK+zB,EACH,OAAO,KAET,MAAME,EAAiB/b,EAAO+b,eACxBU,EAAiBzc,EAAOyc,eAoC9B,OAAKZ,GAAiB7b,GAGFzqB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMknC,YAAYnmC,EAAAA,EAAAA,GAAS,CAC5DnC,IAAKA,EACLqN,SAAUA,EACVlI,MAAOo5B,EACPhxB,SA1CmBihB,UACnB,IAAKkb,GAAqB1b,KAAY6b,EACpC,OAEFQ,GAAQ,GACR,MAEMK,EAAuBZ,GAFd17B,EAAMI,OAEwCrJ,MAAO0kC,EAAcE,GAC9E3b,SACIA,EAAchgB,EAAOs8B,SAEvB13B,EAAOzC,QAAQue,iBAAiB,CACpC3hB,KACA2Z,QACA3hB,MAAOulC,GACNt8B,EAAM,EA4BTkD,KAAMA,EACNq5B,OAfiBv8B,KA1ErB,SAAyBA,GACvB,QAASA,EAAM/P,GACjB,EAyEQusC,CAAgBx8B,IAAwB,UAAdA,EAAM/P,KAGpCgsC,GAAQ,EAAK,EAYbC,WAAWnoC,EAAAA,EAAAA,GAAS,CAClB0oC,QA7BgBC,CAAC18B,EAAO28B,KAC1B,GAAIloC,EAAUsnC,WAAaZ,GAAcyB,KAIzC,GAAe,kBAAXD,GAA4C,WAAd38B,EAAM/P,IAAkB,CACxD,MAAM6tB,EAASlZ,EAAOzC,QAAQ06B,cAAc99B,EAAI2Z,GAChD9T,EAAOzC,QAAQ26B,aAAa,gBAAgB/oC,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CAC/D6e,OAAsB,WAAd38B,EAAM/P,IAAmBirC,GAAwB6B,cAAgB7B,GAAwB8B,eAErG,OAREf,GAAQ,EAQV,GAoBGC,GACHtjC,MAAOA,EACPwhC,OAAQD,EACRnZ,WAAW,GACV5tB,EAAO+oC,EAAsB,CAC9B3pC,SAAUipC,EAAanrC,KAAI2sC,IAAe,IAAAlD,EACxC,MAAMhjC,EAAQ4kC,EAAesB,GAC7B,OAAoBC,EAAAA,EAAAA,eAAezoC,EAAUzB,MAAMsnC,kBAAkBvmC,EAAAA,EAAAA,GAAS,CAAC,GAAsB,QAAnBgmC,EAAAtlC,EAAUxB,iBAAS,IAAA8mC,OAAA,EAAnBA,EAAqBO,mBAAoB,CAAC,EAAG,CAC7HF,OAAQD,EACRlqC,IAAK8G,EACLA,MAAOA,IACLslC,EAAeY,GAAa,OAtB3B,IAyBX,CAuEO,MC7LD7wC,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,cAAe,WAAY,QAAS,UAAW,iBAAkB,cAAe,mBASxJ+wC,GAA4BtrC,IAO5B,IAP6B,OACjCinB,EAAM,gBACNskB,EAAe,eACff,EAAc,eACdV,EAAc,eACdxB,EAAc,sBACdE,GACDxoC,EAEC,MAD6B,CAAC,MAAQ0pC,GAAgBziB,IAAW,IACrCxoB,KAAIw2B,IAC9B,MAAM/vB,EAAQ4kC,EAAe7U,GAC7B,IAAI5uB,EAAQmkC,EAAevV,GAI3B,MAHc,KAAV5uB,IACFA,EAAQ,WAEUglC,EAAAA,EAAAA,eAAeE,GAAiBrpC,EAAAA,EAAAA,GAAS,CAAC,EAAGsmC,EAAuB,CACtFD,OAAQD,EACRlqC,IAAK8G,EACLA,MAAOA,IACLmB,EAAM,GACV,EAEEmlC,IAAgC7wC,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAClDO,QAAS,OACTsB,WAAY,WACZkJ,MAAO,OACP,WAAc,CACZgH,OAAQ,sBAGZ,SAAS++B,GAA4B3wC,GAAO,IAAAq2B,EAAAua,EAAAjiB,EAAAkiB,EAAAC,EAAAliB,EAAAwe,EAAA2D,EAC1C,MAAM,KACF7uB,EAAI,WACJoU,EAAU,KACVrpB,EAAI,OACJgL,EAAM,gBACNse,EAAe,YACfiB,EAAW,SACX7kB,EACApH,MAAOe,EAAS,QAChB5L,EAAU,WAAU,YACpB81B,GACEx2B,EACJ02B,GAAShwB,EAAAA,EAAAA,GAA8B1G,EAAOP,IAC1C6+B,EAAwB,QAAbjI,EAAGnU,EAAK9X,aAAK,IAAAisB,EAAAA,EAAI,GAC5BjkB,EAAK0jB,KACLzG,EAAUyG,KACVhuB,EAAY2Z,IACZ+rB,EAAwD,QAA1CoD,EAAsB,QAAtBjiB,EAAG7mB,EAAUxB,iBAAS,IAAAqoB,GAAY,QAAZA,EAAnBA,EAAqB4e,kBAAU,IAAA5e,OAAA,EAA/BA,EAAiC8e,cAAM,IAAAmD,GAAAA,EAC9D,IAAII,EAAiB,KACrB,GAAI9uB,EAAK6J,MAAO,CACd,MAAMI,EAASlU,EAAOzC,QAAQme,UAAUzR,EAAK6J,OACzC4iB,GAAqBxiB,KACvB6kB,EAAiB7kB,EAErB,CACA,MAAM6iB,EAA+B,QAAjB6B,EAAGG,SAAc,IAAAH,OAAA,EAAdA,EAAgB7B,eACjCU,EAA+B,QAAjBoB,EAAGE,SAAc,IAAAF,OAAA,EAAdA,EAAgBpB,eACjCuB,EAAsBlsC,EAAAA,SAAc,IACjC6pC,GAAgBoC,IACtB,CAACA,IACEha,EAAiBjyB,EAAAA,aAAkBsO,IACvC,IAAIjJ,EAAQiJ,EAAMI,OAAOrJ,MAGzBA,EAAQ2kC,GAAyB3kC,EAAO6mC,EAAqBjC,GAC7D1Y,GAAWlvB,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,EAAM,CAC5B9X,UACC,GACF,CAAC6mC,EAAqBjC,EAAgB1Y,EAAYpU,IACrD,IAAKysB,GAAqBqC,GACxB,OAAO,KAET,MAAMzlC,EAAiB,OAATe,QAAS,IAATA,EAAAA,EAAa2L,EAAOzC,QAAQ+hB,cAAc,yBACxD,OAAoBhvB,EAAAA,GAAAA,MAAMmoC,GAA+B,CACvD7qC,SAAU,EAAc0C,EAAAA,GAAAA,MAAMT,EAAUzB,MAAMunC,gBAAiB,CAC7DvZ,WAAW,EACXxuB,SAAU,EAAc2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMwnC,gBAAgBzmC,EAAAA,EAAAA,GAAS,CAAC,EAAsB,QAArBwnB,EAAE9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqBif,eAAgB,CAC7Gz7B,GAAIid,EACJ0d,QAAS36B,EACTslB,QAAQ,EACRh3B,QAASA,EACTmF,SAAU0F,MACM/C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMknC,YAAYnmC,EAAAA,EAAAA,GAAS,CAC1DgL,GAAIA,EACJ7G,MAAOA,EACP8jB,QAASA,EACTjlB,MAAOk0B,EACP9rB,SAAUwkB,EACVt2B,QAASA,EACTuM,KAAMA,GAAQ,OACdoF,WAAY,CACVM,WACA1N,IAAKsxB,EACLiB,YAAwB,OAAXA,QAAW,IAAXA,EAAAA,EAAevf,EAAOzC,QAAQ+hB,cAAc,gCAE3DkW,OAAQD,EACRM,QAAqB,aAAZptC,QAAgCyG,GACxCuvB,EAAqD,QAA9C0W,EAA2BtlC,EAAUxB,iBAAS,IAAA8mC,OAAA,EAAnBA,EAAqBG,WAAY,CACpE1nC,SAAU2qC,GAA0B,CAClCrkB,OAAQ6kB,EACRP,gBAAiB3oC,EAAUzB,MAAMsnC,iBACjC+B,iBACAV,iBACAxB,iBACAE,sBAA0C,QAArBqD,EAAEjpC,EAAUxB,iBAAS,IAAAyqC,OAAA,EAAnBA,EAAqBpD,yBAG9CnX,IAER,C,gBCvHA,MAAM/2B,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,QAAS,QAAS,aAAc,OAAQ,WACpH65B,GAAa,CAAC,OAQVj2B,IAAS6tC,EAAAA,GAAAA,KACf,SAASC,GAAoCnxC,GAAO,IAAA6wC,EAAAC,EAClD,MAAM,KACF5uB,EAAI,WACJoU,EAAU,OACVre,EAAM,gBACNse,EAAe,MACft1B,EAAK,MACLgL,EAAK,WACLutB,EAAU,KACVtvB,EAAI,QACJxJ,EAAU,YACRV,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCg6B,EAAiB,CACrBx4B,QACAgL,QACAutB,aACAtvB,OACAxJ,WAEI0R,EAAK0jB,KACLhuB,EAAY2Z,IAClB,IAAIuvB,EAAiB,KACrB,GAAI9uB,EAAK6J,MAAO,CACd,MAAMI,EAASlU,EAAOzC,QAAQme,UAAUzR,EAAK6J,OACzC4iB,GAAqBxiB,KACvB6kB,EAAiB7kB,EAErB,CACA,MAAM6iB,EAA+B,QAAjB6B,EAAGG,SAAc,IAAAH,OAAA,EAAdA,EAAgB7B,eACjCU,EAA+B,QAAjBoB,EAAGE,SAAc,IAAAF,OAAA,EAAdA,EAAgBpB,eACjC0B,EAAuBrsC,EAAAA,aAAkB,CAACo1B,EAAQ/vB,IAAU4kC,EAAe7U,KAAY6U,EAAe5kC,IAAQ,CAAC4kC,IAC/GqC,EAAuBtsC,EAAAA,SAAc,IAClC6pC,GAAgBoC,IAAmB,IACzC,CAACA,IAIEM,EAAiBvsC,EAAAA,SAAc,IAC9BsP,MAAM8N,QAAQD,EAAK9X,OAGjB8X,EAAK9X,MAAM4e,QAAO,CAACgF,EAAK5jB,KAC7B,MAAMmnC,EAAgBF,EAAqB7sB,MAAKY,GAAK4pB,EAAe5pB,KAAOhb,IAI3E,OAHqB,MAAjBmnC,GACFvjB,EAAIhG,KAAKupB,GAEJvjB,CAAG,GACT,IARM,IASR,CAACghB,EAAgB9sB,EAAK9X,MAAOinC,IAC1B7d,EAAezuB,EAAAA,aAAkB,CAACsO,EAAOjJ,KAC7CksB,GAAWlvB,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,EAAM,CAC5B9X,MAAOA,EAAMzG,IAAIqrC,KAChB,GACF,CAAC1Y,EAAYpU,EAAM8sB,IACtB,OAAoBxmC,EAAAA,GAAAA,KAAKoxB,GAAAA,GAAcxyB,EAAAA,EAAAA,GAAS,CAC9CyyB,UAAU,EACVtU,QAAS8rB,EACTD,qBAAsBA,EACtBrX,cAAe12B,GACf+O,GAAIA,EACJhI,MAAOknC,EACP9+B,SAAUghB,EACVkc,eAAgBA,EAChBzV,WAAYA,CAAC7vB,EAAO8vB,IAAgB9vB,EAAMzG,KAAI,CAACw2B,EAAQjR,KACrD,MAAMkR,EAAeF,EAAY,CAC7BhR,WAEF,IACE5lB,GACE82B,EACJC,GAAW3zB,EAAAA,EAAAA,GAA8B0zB,EAAcd,IACzD,OAAoB9wB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMi0B,UAAUlzB,EAAAA,EAAAA,GAAS,CAC1D1G,QAAS,WACTwJ,KAAM,QACNqB,MAAOmkC,EAAevV,IACrBE,GAAW/2B,EAAI,IAEpBi3B,YAAapJ,IAAM,IAAAxC,EAAA,OAAiBnmB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMixB,eAAelwB,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CAC3F5lB,MAAO0M,EAAOzC,QAAQ+hB,cAAc,yBACpCC,YAAavf,EAAOzC,QAAQ+hB,cAAc,+BAC1CE,iBAAiBrwB,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAOsG,gBAAiB,CACpDC,QAAQ,IAEVplB,SAAUikB,EACVtpB,KAAM,gBACLwsB,EAAmC,QAArB9K,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB2I,eAAe,GACtD7wB,GACL,CCjGA,MAAM+qC,GAAmBpnC,GACV,MAATA,GAAkBwtB,GAASxtB,GAGxBA,EAAMA,MAFJA,ECUEqnC,IAA6BrqC,EAAAA,EAAAA,GAAS,CAAC,EAAGo5B,GAAqB,CAC1EvzB,KAAM,eACNyiC,eAL4BtlC,GACrBwtB,GAASxtB,GAASA,EAAMmB,MAAQ0rB,OAAO7sB,GAK9C4kC,eAT4B5kC,GACrBwtB,GAASxtB,GAASA,EAAMA,MAAQA,EASvCy3B,cAAAA,CAAez3B,EAAO2Q,EAAKkY,EAAQhb,GAEjC,MAAM8sB,EAAQ9sB,EAAOzC,QAAQ0vB,SAASnqB,GACtC,IAAK4zB,GAAqB1b,GACxB,MAAO,GAET,MAAM6b,EAAeF,GAAgB3b,EAAQ,CAC3C7gB,GAAI2yB,EACJhqB,QAEF,GAAa,MAAT3Q,EACF,MAAO,GAET,IAAK0kC,EACH,OAAO1kC,EAET,GA5B2B,kBA4BL0kC,EA5BF,GA6BlB,OAAO7b,EAAOyc,eAAetlC,GAE/B,MAAMkmC,EAAcxB,EAAatqB,MAAK2V,GAAUlH,EAAO+b,eAAe7U,KAAY/vB,IAClF,OAAOkmC,EAAcrd,EAAOyc,eAAeY,GAAe,EAC5D,EACA/O,eJsJwCpQ,IAAuB3oB,EAAAA,GAAAA,KAAK0mC,IAA0B9nC,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,IIrJ3GmK,gBDjCgD,CAAC,CACjDlxB,MAAO,KACPqyB,iBAAkBR,GACQ,MAApBA,EAAW7xB,OAAsC,KAArB6xB,EAAW7xB,MAClC,KAEFA,GAASonC,GAAiBpnC,KAAWonC,GAAiBvV,EAAW7xB,OAE1E+2B,eAAgBwP,IACf,CACDvmC,MAAO,MACPqyB,iBAAkBR,GACQ,MAApBA,EAAW7xB,OAAsC,KAArB6xB,EAAW7xB,MAClC,KAEFA,GAASonC,GAAiBpnC,KAAWonC,GAAiBvV,EAAW7xB,OAE1E+2B,eAAgBwP,IACf,CACDvmC,MAAO,UACPqyB,iBAAkBR,IAChB,IAAK5nB,MAAM8N,QAAQ8Z,EAAW7xB,QAAsC,IAA5B6xB,EAAW7xB,MAAM+J,OACvD,OAAO,KAET,MAAMu9B,EAAmBzV,EAAW7xB,MAAMzG,IAAI6tC,IAC9C,OAAOpnC,GAASsnC,EAAiBzkB,SAASukB,GAAiBpnC,GAAO,EAEpE+2B,eAAgBgQ,KCQhB/L,kBAAmBA,CAACh7B,EAAO2Q,EAAKoR,KAC9B,MAAM8G,EAAS9G,EACT2iB,EAAeF,GAAgB3b,IAAW,GAC1C+b,EAAiB/b,EAAO+b,eAO9B,GANoBF,EAAatqB,MAAK2V,GAChC6U,EAAe7U,KAAY/vB,IAM/B,OAAOA,CAGO,I,0ECxDpB,MAAM3K,GAAY,CAAC,OAAQ,SAAU,UAAW,WAAY,WAAY,YAAa,YAc/E8H,GAAoB/G,IACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,SAEoB2W,EAAyBxP,EAAQ,EAE1DsqC,IAAe9xC,EAAAA,EAAAA,IAAO+xC,GAAAA,EAAQ,CAClC9xC,KAAM,cACNR,KAAM,OACNS,kBAAmBA,CAACsX,EAAGpX,IAAWA,EAAO4xC,MAHtBhyC,EAIlBqF,IAAA,IAAC,MACF9D,GACD8D,EAAA,MAAM,CACL1C,OAAQpB,EAAMoB,OAAOsvC,MACrB,CAAC,MAADnxC,OAAOmW,EAAYgE,WAAa,CAC9B6C,QAAS,GAEZ,IACKxZ,GAAkB,CACtB,eAAgB,WAChB,aAAc,aAEhB,SAAS4tC,GAAS/xC,GAAO,IAAA2uB,EACvB,MAAM,KACFpY,EAAI,OACJ9C,EAAM,QACNq8B,EAAO,SACPjqC,EAAQ,SACR1F,EAAQ,UACRsF,EAAS,SACTusC,GACEhyC,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACT1mB,EAAY2Z,IACZpa,EAAUE,GAAkBO,GAC5BmqC,EAAgBltC,EAAAA,OAAa,MACnComB,GAAkB,KAGT,IAAA+mB,EAAAC,EAFH57B,EACF07B,EAAcz8B,QAAU48B,SAASC,yBAAyBC,YAAcF,SAASC,cAAgB,MAE5E,QAArBH,EAAAD,EAAcz8B,eAAO,IAAA08B,GAAO,QAAPC,EAArBD,EAAuB9d,aAAK,IAAA+d,GAA5BA,EAAA3rB,KAAA0rB,GACAD,EAAcz8B,QAAU,KAC1B,GACC,CAACe,IACJxR,EAAAA,WAAgB,KAEd,MAAM6rB,EAAYra,EAAO,WAAa,YACtC0B,EAAOzC,QAAQ26B,aAAavf,EAAW,CACrCnd,UACA,GACD,CAACwE,EAAQ1B,EAAM9C,IAClB,MAQM8+B,EAAkBl/B,IAClBA,EAAMI,SAAWA,IAAWJ,EAAMI,QAAgB,OAANA,QAAM,IAANA,GAAAA,EAAQ++B,SAASn/B,EAAMI,UAGvEq8B,EAAQz8B,EAAM,EAEhB,OAAoB7K,EAAAA,GAAAA,KAAKmpC,IAAcvqC,EAAAA,EAAAA,GAAS,CAC9CgB,GAAIN,EAAUzB,MAAM8oB,WACpB1pB,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,EACZyO,KAAMA,EACNk8B,SAAUh/B,EACVhR,YAAY,EACZiwC,UAAWvyC,GACVsG,EAA0B,QAArBkoB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBQ,WAAY,CACzCtpB,SAAUT,IAAA,IAAC,gBACTutC,EAAe,UACfD,GACDttC,EAAA,OAAkBoD,EAAAA,GAAAA,KAAKoqC,GAAAA,EAAmB,CACzCC,YAAaN,EACbO,WAAY,cACZjtC,UAAuB2C,EAAAA,GAAAA,KAAKuqC,GAAAA,GAAM3rC,EAAAA,EAAAA,GAAS,CAAC,EAAGurC,EAAiB,CAC9D/uC,MAAO,CACLO,gBAAiBA,GAAgBuuC,IAEnCV,UAjCegB,EAiCuB,OAAfL,QAAe,IAAfA,OAAe,EAAfA,EAAiBX,SAjCP5H,IACjC4I,GACFA,IAEEhB,GACFA,EAAS5H,EACX,GA4BIvkC,UAAuB2C,EAAAA,GAAAA,KAAKyqC,GAAAA,EAAO,CACjCptC,SAAUA,SAnCGmtC,KAsCjB,IAEN,CC7GA,MAAMvzC,GAAY,CAAC,MAAO,SAAU,KAAM,WAAY,aAAc,QAAS,QAAS,iBAAkB,MAAO,UAAW,WAAY,WAAY,WAAY,mBAY9J,SAASyzC,GAAgBlzC,GAAO,IAAA2uB,EAC9B,MAAM,OACFsE,EAAM,GACN7gB,EAAE,SACF8gB,EAAQ,SACRvgB,EAAQ,SACRxS,EAAW,aAAY,gBACvBo2B,GACEv2B,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,KACxC0zC,EAAoBC,GAAyBruC,EAAAA,UAAgB,IAC7DwR,EAAM+4B,GAAWvqC,EAAAA,UAAe,GACjCkT,EAASuW,KACT6kB,EAAUtuC,EAAAA,OAAa,MACvBuuC,EAAYvuC,EAAAA,OAAa,MACzBwuC,EAAoBxuC,EAAAA,QAAa,GACjCyuC,EAAkBzuC,EAAAA,OAAa,CAAC,GAChCynB,GAAQinB,EAAAA,GAAAA,KACRC,EAAS5d,KACT6d,EAAW7d,KACXhuB,EAAY2Z,IAClB,IAtBiBwR,IAAuC,oBAAtBA,EAAO2gB,WAsBpCC,CAAW5gB,GACd,MAAM,IAAIpf,MAAM,iEAElB,MAAM0R,EAAU0N,EAAO2gB,WAAW37B,EAAOzC,QAAQs+B,aAAa1hC,IACxD2hC,EAAcxuB,EAAQliB,QAAO82B,IAAWA,EAAOn6B,MAAMg0C,aACrDC,EAAc1uB,EAAQliB,QAAO82B,GAAUA,EAAOn6B,MAAMg0C,aACpDE,EAAkBH,EAAY5/B,QAAU8/B,EAAY9/B,OAAS,EAAI,GACvEpP,EAAAA,iBAAsB,KACfmuB,GACHjwB,OAAO6gB,QAAQ0vB,EAAgBh+B,SAAS5I,SAAQ1H,IAAkB,IAAhBgkB,EAAOjkB,GAAIC,EACxD,OAAHD,QAAG,IAAHA,GAAAA,EAAKkvC,KAAK,CAAC,GAAG,YACLX,EAAgBh+B,QAAQ0T,EAAM,GACrC,GAEN,GACC,CAACgK,IACJnuB,EAAAA,WAAgB,KACd,GAAIouC,EAAqB,IAAME,EAAQ79B,QACrC,OAEF,GAAI29B,GAAsBE,EAAQ79B,QAAQ3P,SAASsO,OACjD,OAEYk/B,EAAQ79B,QAAQ3P,SAASstC,GACjC/e,MAAM,CACVggB,eAAe,GACf,GACD,CAACjB,IACJpuC,EAAAA,WAAgB,KACTmuB,IACHkgB,GAAuB,GACvBG,EAAkB/9B,SAAU,EAC9B,GACC,CAAC0d,IACJnuB,EAAAA,oBAA0BwxB,GAAiB,KAAM,CAC/CnC,KAAAA,GAEE,IAAKmf,EAAkB/9B,QAAS,CAE9B,MAAM6+B,EAAuB9uB,EAAQvB,WAAU/C,IAAMA,EAAEjhB,MAAM6L,WAC7DunC,EAAsBiB,EACxB,CACF,KACE,CAAC9uB,IACLxgB,EAAAA,WAAgB,KACVouC,GAAsBe,GACxBd,EAAsBc,EAAkB,EAC1C,GACC,CAACf,EAAoBe,IACxB,MAKMI,EAAWA,KACfhF,GAAQ,EAAM,EAEViF,EAAuBrrB,GAAS3T,IACpCi+B,EAAgBh+B,QAAQ0T,GAAS3T,CAAQ,EAErCi/B,EAAoBA,CAACtrB,EAAOurB,IAAYphC,IAC5C+/B,EAAsBlqB,GACtBqqB,EAAkB/9B,SAAU,EACxBi/B,GACFA,EAAQphC,EACV,EAyCF,OAAoB9K,EAAAA,GAAAA,MAAM,OAAOnB,EAAAA,EAAAA,GAAS,CACxCyD,KAAM,OACN5F,IAAKouC,EACL1gC,UAAW,EACXlN,UAAWqR,EAAYiJ,YACvB20B,UA5CwBrhC,IACxB,GAAI6gC,GAAmB,EACrB,OAEF,MAAMS,EAAcA,CAACzrB,EAAO0rB,KAAc,IAAAC,EACxC,GAAI3rB,EAAQ,GAAKA,EAAQ3D,EAAQpR,OAC/B,OAAO+U,EAIT,MACM4rB,GAA0B,SAAdF,GAAwB,EAAI,IAD/BpoB,GAAS,EAAI,GAI5B,OAAgC,QAAzBqoB,EAAAtvB,EAAQ2D,EAAQ4rB,UAAS,IAAAD,GAAzBA,EAA2B70C,MAAM6L,SAAW8oC,EAAYzrB,EAAQ4rB,EAAUF,GAAa1rB,EAAQ4rB,CAAQ,EAEhH,IAAIC,EAAW5B,EACG,eAAd9/B,EAAM/P,IACRyxC,EAAWJ,EAAYxB,EAAoB,SACpB,cAAd9/B,EAAM/P,MACfyxC,EAAWJ,EAAYxB,EAAoB,SAEzC4B,EAAW,GAAKA,GAAYb,GAG5Ba,IAAa5B,IACf9/B,EAAM2hC,iBACN3hC,EAAM4hC,kBACN7B,EAAsB2B,GACxB,GAgBCtuC,EAAO,CACRZ,SAAU,CAACkuC,EAAYpwC,KAAI,CAACuxC,EAAQhsB,IAAuBnkB,EAAAA,aAAmBmwC,EAAQ,CACpF5xC,IAAK4lB,EACLisB,eAAgBZ,EAAqBrrB,GACrCurB,QAASD,EAAkBtrB,EAAOgsB,EAAOl1C,MAAMy0C,SAC/C9hC,SAAUwgC,IAAuBjqB,EAAQvW,GAAY,MAClDshC,EAAY9/B,OAAS,GAAKw/B,IAAyBnrC,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+uC,gBAAgBhuC,EAAAA,EAAAA,GAAS,CACpGnC,IAAKquC,EACLlhC,GAAIuhC,EACJ,aAAc17B,EAAOzC,QAAQ+hB,cAAc,mBAC3C,gBAAiB,OACjB,gBAAiBhhB,EACjB,gBAAiBA,EAAOm9B,OAASvsC,EACjC0D,KAAM,WACNX,KAAM,QACNuqC,QA9EaY,KACf/F,GAAQ,GACR8D,EAAsBc,EAAkB,GACxCX,EAAkB/9B,SAAU,CAAI,EA4E9B2/B,eAAgBZ,EAAqBZ,GACrChhC,SAAUwgC,IAAuBY,EAAY5/B,OAASxB,GAAY,GAC9C,QAArBgc,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBymB,eAAgB,CACtCvvC,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMivC,gBAAiB,CAC3DtzC,SAAU,aAETiyC,EAAY9/B,OAAS,IAAkB3L,EAAAA,GAAAA,KAAKupC,GAAU,CACzDx7B,KAAMA,EACN9C,OAAQ6/B,EAAU99B,QAClBrV,SAAUA,EACV2vC,QAASwE,EACTzuC,UAAuB2C,EAAAA,GAAAA,KAAK+sC,GAAAA,EAAU,CACpCnjC,GAAIshC,EACJjuC,UAAWqR,EAAYgE,SACvB45B,UA5CoBrhC,IACN,QAAdA,EAAM/P,KACR+P,EAAM2hC,iBAEJ,CAAC,MAAO,UAAU/nB,SAAS5Z,EAAM/P,MACnCgxC,GACF,EAuCI,kBAAmBX,EACnBjzC,QAAS,OACT80C,eAAe,EACf3vC,SAAUouC,EAAYtwC,KAAI,CAACuxC,EAAQhsB,IAAuBnkB,EAAAA,aAAmBmwC,EAAQ,CACnF5xC,IAAK4lB,EACLusB,UAAWnB,aAKrB,CAiEO,MC1PMoB,GAA2B,UAC3BC,IAAuBvuC,EAAAA,EAAAA,GAAS,CAAC,EAAGo5B,GAAqB,CACpEG,UAAU,EACV7S,YAAY,EAEZiT,YAAY,EACZn2B,MAAO,IACPxK,QAAS,OACTqP,MAAO,SACPmyB,YAAa,SACbgU,WAAY,GACZC,mBAAmB,EACnBC,eAAe,EACf7H,WD6O+B9c,IAAuB3oB,EAAAA,GAAAA,KAAK0qC,IAAiB9rC,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,IC5OzFgN,2BAAuBh3B,IChBZ4uC,GAAmC/iC,GAASA,EAAMgjC,gBAClDC,GAAqC3tB,GAAeytB,IAEjEG,IAAoB,IAAAC,EAAA,OAAiC,QAAjCA,EAAwB,OAApBD,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBE,eAAO,IAAAD,GAAAA,CAAS,IACjDE,GAAuC/tB,GAAeytB,IAAkCG,GAAwBA,EAAqBI,UACrIC,GAAkCjuB,GAAeytB,IAAkCG,GAAwBA,EAAqBr7B,WCDhI27B,GAA6BxjC,GAASA,EAAMyjC,eAC5CC,GAAyC1sB,GAAuBwsB,IAA4BC,IAAc,IAAAE,EAAA,OAA0C,QAA1CA,EAAkB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,8BAAsB,IAAAD,EAAAA,EAAI,CAAC,CAAC,IAC1JE,GAAiC7sB,GAAuBwsB,IAA4BC,IAAc,IAAAK,EAAA,OAA0B,QAA1BA,EAAkB,OAAdL,QAAc,IAAdA,OAAc,EAAdA,EAAgB7qB,cAAM,IAAAkrB,EAAAA,EAAI,CAAC,CAAC,IAClIC,GAA0C/sB,GAAuBwsB,IAA4BC,IAAc,IAAAO,EAAA,OAAmC,QAAnCA,EAAkB,OAAdP,QAAc,IAAdA,OAAc,EAAdA,EAAgBQ,uBAAe,IAAAD,EAAAA,EAAI,EAAE,IACpJE,GAAyC5uB,GAAekuB,IAA4BC,IAAc,IAAAU,EAAA,OAA4B,QAA5BA,EAAkB,OAAdV,QAAc,IAAdA,OAAc,EAAdA,EAAgBW,gBAAQ,IAAAD,EAAAA,EAAI,CAAC,ICDnIE,GAA+B,CAAC,WAAY,WAAY,QAAS,QACxEC,GCDsB,CACxB1jC,OAAQ4sB,GACR+W,OAAQ5V,GACRkB,KAAMmC,GACNwS,SAAUnS,GACVoS,QAASzJ,GACT0J,aAAcjG,GACd,CAACiE,IAA2BC,GAC5BgC,OAAQnX,IDiGL,MAAMoX,GAAsBA,CAACC,EAAU5+B,KAC5C,MAAM6+B,EAAgB,CAAC,EACvB,IAAIC,EAAiB,EACjBC,EAA2B,EAC/B,MAAMC,EAAc,GAIpBJ,EAASnsB,cAAc9e,SAAQsrC,IAC7B,IAAI/rB,EAAS0rB,EAASjsB,OAAOssB,GACzBzqB,EAAgB,EAChB0qB,GAAS,GACuC,IAAhDN,EAAS5rB,sBAAsBisB,KAC7B/rB,EAAOtd,MAAQsd,EAAOtd,KAAO,GAC/BkpC,GAAkB5rB,EAAOtd,KACzBspC,GAAS,GAET1qB,EAAgBsK,GAAM5L,EAAOvhB,OAAS41B,GAAoB51B,MAAOuhB,EAAOjqB,UAAYs+B,GAAoBt+B,SAAUiqB,EAAOjO,UAAYsiB,GAAoBtiB,UAE3J85B,GAA4BvqB,GAE1BtB,EAAOsB,gBAAkBA,IAC3BtB,GAAS/kB,EAAAA,EAAAA,GAAS,CAAC,EAAG+kB,EAAQ,CAC5BsB,mBAGA0qB,GACFF,EAAYjwB,KAAKmE,GAEnB2rB,EAAcI,GAAe/rB,CAAM,IAErC,MAAMisB,OAAgCjxC,IAAf8R,EAA2B,EAAIA,EAAWo/B,kBAAkBztC,OAASqO,EAAWsF,WAAatF,EAAWuF,cAAgB,GACzI85B,EAAmB9tC,KAAKvE,IAAImyC,EAAiBJ,EAA0B,GAG7E,GAAID,EAAiB,GAAKK,EAAiB,EAAG,CAC5C,MAAMG,EArIH,SAAgCrzC,GAIpC,IAJqC,iBACtCozC,EAAgB,eAChBP,EAAc,YACdE,GACD/yC,EACC,MAAMszC,EAAoB,IAAIhgB,IAAIyf,EAAYt0C,KAAIkqB,GAAOA,EAAI9B,SACvD0sB,EAAoB,CACxBC,IAAK,CAAC,EACNC,aAAc,GACdC,OAAQ7sB,IACN,MAAM3hB,EAAQquC,EAAkBC,IAAI3sB,GAChC3hB,IAA0B,IAAjBA,EAAMyuC,SACjBJ,EAAkBC,IAAI3sB,GAAO8sB,QAAS,EACtCJ,EAAkBE,aAAa3wB,KAAK+D,GACtC,GA0EJ,OArEA,SAAS+sB,IAEP,GAAIL,EAAkBE,aAAaxkC,SAAWqkC,EAAkBtuC,KAC9D,OAEF,MAAM6uC,EAAmB,CACvB/gB,IAAK,CAAC,EACN/xB,IAAK,CAAC,GAER,IAAI+yC,EAAqBV,EACrBW,EAAYlB,EACZmB,EAAiB,EAGrBT,EAAkBE,aAAa/rC,SAAQmf,IACrCitB,GAAsBP,EAAkBC,IAAI3sB,GAAO0B,cACnDwrB,GAAaR,EAAkBC,IAAI3sB,GAAOld,IAAI,IAEhD,IAAK,IAAIsG,EAAI,EAAGA,EAAI8iC,EAAY9jC,OAAQgB,GAAK,EAAG,CAC9C,MAAMgX,EAAS8rB,EAAY9iC,GAC3B,GAAIsjC,EAAkBC,IAAIvsB,EAAOJ,SAAyD,IAA/C0sB,EAAkBC,IAAIvsB,EAAOJ,OAAO8sB,OAC7E,SAKF,IAAIprB,EADqBurB,EAAqBC,EACP9sB,EAAOtd,KAG1C4e,EAAgBtB,EAAOjqB,UACzBg3C,GAAkB/sB,EAAOjqB,SAAWurB,EACpCA,EAAgBtB,EAAOjqB,SACvB62C,EAAiB/gB,IAAI7L,EAAOJ,QAAS,GAC5B0B,EAAgBtB,EAAOjO,WAChCg7B,GAAkB/sB,EAAOjO,SAAWuP,EACpCA,EAAgBtB,EAAOjO,SACvB66B,EAAiB9yC,IAAIkmB,EAAOJ,QAAS,GAEvC0sB,EAAkBC,IAAIvsB,EAAOJ,OAAS,CACpC8sB,QAAQ,EACRprB,gBACA5e,KAAMsd,EAAOtd,KAEjB,CAGIqqC,EAAiB,EAEnBj2C,OAAOC,KAAK61C,EAAiB9yC,KAAK2G,SAAQmf,IACxC0sB,EAAkBG,OAAO7sB,EAAM,IAExBmtB,EAAiB,EAE1Bj2C,OAAOC,KAAK61C,EAAiB/gB,KAAKprB,SAAQmf,IACxC0sB,EAAkBG,OAAO7sB,EAAM,IAIjCksB,EAAYrrC,SAAQxH,IAEd,IAFe,MACnB2mB,GACD3mB,EACCqzC,EAAkBG,OAAO7sB,EAAM,IAKnC+sB,GACF,CACAA,GACOL,EAAkBC,GAC3B,CA4CiCS,CAAwB,CACnDb,mBACAP,iBACAE,gBAEFh1C,OAAOC,KAAKq1C,GAAsB3rC,SAAQmf,IACxC+rB,EAAc/rB,GAAO0B,cAAgB8qB,EAAqBxsB,GAAO0B,aAAa,GAElF,CACA,OAAOrmB,EAAAA,EAAAA,GAAS,CAAC,EAAGywC,EAAU,CAC5BjsB,OAAQksB,GACR,EAgDJ,SAASsB,GAAqBnsC,GAC5B,IAAIgmB,EAASqkB,GAAsC,OAInD,OAHIrqC,GAAQqqC,GAAarqC,KACvBgmB,EAASqkB,GAAarqC,IAEjBgmB,CACT,CACO,MAAMomB,GAAqBt1C,IAM5B,IAAAu1C,EAAAC,EAAAC,EAAA,IAN6B,OACjCvhC,EAAM,gBACNwhC,EAAe,aACfC,EAAY,sBACZztB,EAAwBD,GAAkC/T,GAAO,wBACjE0hC,GAA0B,GAC3B51C,EACC,MAAM61C,GAA4B3hC,EAAOzC,QAAQxC,MAAMuY,QACvD,IAAIE,EACJ,GAAImuB,EACFnuB,EAAe,CACbC,cAAe,GACfE,OAAQ,CAAC,EACTK,6BAEG,CACL,MAAM4tB,EAAevuB,GAAyBrT,EAAOzC,QAAQxC,OAC7DyY,EAAe,CACbC,cAAeiuB,EAA0B,GAAK,IAAIE,EAAanuB,eAC/DE,QAAQxkB,EAAAA,EAAAA,GAAS,CAAC,EAAGyyC,EAAajuB,QAElCK,wBAEJ,CACA,IAAI6tB,EAAgB,CAAC,EACjBH,IAA4BC,IAC9BE,EAAgB72C,OAAOC,KAAKuoB,EAAaG,QAAQ5C,QAAO,CAACgF,EAAK1qB,KAAQ8D,EAAAA,EAAAA,GAAS,CAAC,EAAG4mB,EAAK,CACtF,CAAC1qB,IAAM,KACL,CAAC,IAEP,MAAMy2C,EAAwB,CAAC,EAC/BN,EAAgB7sC,SAAQotC,IACtB,MAAM,MACJjuB,GACEiuB,EACJD,EAAsBhuB,IAAS,EAC/B+tB,EAAc/tB,IAAS,EACvB,IAAIkuB,EAAgBxuB,EAAaG,OAAOG,GACnB,MAAjBkuB,GACFA,GAAgB7yC,EAAAA,EAAAA,GAAS,CAAC,EAAGgyC,GAAqBY,EAAU/sC,MAAO,CACjE8e,QACAmuB,gBAAgB,IAElBzuB,EAAaC,cAAc1D,KAAK+D,IACvB4tB,GACTluB,EAAaC,cAAc1D,KAAK+D,GAI9BkuB,GAAiBA,EAAchtC,OAAS+sC,EAAU/sC,OACpDgtC,GAAgB7yC,EAAAA,EAAAA,GAAS,CAAC,EAAGgyC,GAAqBY,EAAU/sC,MAAO,CACjE8e,WAGJ,IAAImuB,EAAiBD,EAAcC,eACnC7C,GAA6BzqC,SAAQtJ,SACZ6D,IAAnB6yC,EAAU12C,KACZ42C,GAAiB,GACO,IAApBF,EAAU12C,KACZ02C,EAAU12C,GAAOm9B,KAErB,IAEFhV,EAAaG,OAAOG,GAASsG,GAAa4nB,GAAe7yC,EAAAA,EAAAA,GAAS,CAAC,EAAG4yC,EAAW,CAC/EE,mBACC,IAEDP,IAA4BC,GAC9B32C,OAAOC,KAAKuoB,EAAaG,QAAQhf,SAAQmf,IAClC+tB,EAAc/tB,WACVN,EAAaG,OAAOG,EAC7B,IAGJ,MACMouB,EA3HyBC,EAAC3uB,EAAciuB,KAC9C,IAAKA,EACH,OAAOjuB,EAET,MAAM,cACJC,EAAgB,GAAE,WAClBzS,EAAa,CAAC,GACZygC,EACEW,EAA+Bp3C,OAAOC,KAAK+V,GACjD,GAA4C,IAAxCohC,EAA6BlmC,QAAyC,IAAzBuX,EAAcvX,OAC7D,OAAOsX,EAET,MAAM6uB,EAAsB,CAAC,EACvBC,EAAqB,GAC3B,IAAK,IAAIplC,EAAI,EAAGA,EAAIuW,EAAcvX,OAAQgB,GAAK,EAAG,CAChD,MAAM4W,EAAQL,EAAcvW,GAGxBsW,EAAaG,OAAOG,KACtBuuB,EAAoBvuB,IAAS,EAC7BwuB,EAAmBvyB,KAAK+D,GAE5B,CACA,MAAMyuB,EAAiD,IAA9BD,EAAmBpmC,OAAesX,EAAaC,cAAgB,IAAI6uB,KAAuB9uB,EAAaC,cAAcroB,QAAO0oB,IAAUuuB,EAAoBvuB,MAC7K0uB,GAAkBrzC,EAAAA,EAAAA,GAAS,CAAC,EAAGqkB,EAAaG,QAClD,IAAK,IAAIzW,EAAI,EAAGA,EAAIklC,EAA6BlmC,OAAQgB,GAAK,EAAG,CAC/D,MAAM4W,EAAQsuB,EAA6BllC,GACrCulC,GAAYtzC,EAAAA,EAAAA,GAAS,CAAC,EAAGqzC,EAAgB1uB,GAAQ,CACrDmuB,gBAAgB,IAElBj3C,OAAO6gB,QAAQ7K,EAAW8S,IAAQnf,SAAQzL,IAAkB,IAAhBmC,EAAK8G,GAAMjJ,EACrDu5C,EAAUp3C,IAAkB,IAAX8G,EAAeq2B,IAAWr2B,CAAK,IAElDqwC,EAAgB1uB,GAAS2uB,CAC3B,CAKA,OAJwBtzC,EAAAA,EAAAA,GAAS,CAAC,EAAGqkB,EAAc,CACjDC,cAAe8uB,EACf5uB,OAAQ6uB,GAEY,EAoFkBL,CADFniC,EAAOzC,QAAQuZ,6BAA6B,iBAAkBtD,GACXiuB,GACzF,OAAO9B,GAAoBuC,EAAqE,QAAtCb,EAAkC,QAAlCC,GAAEC,EAAAvhC,EAAOzC,SAAQmlC,yBAAiB,IAAApB,OAAA,EAAhCA,EAAA/yB,KAAAgzB,UAAoC,IAAAF,EAAAA,OAAInyC,EAAU,EAsBzG,SAASyzC,GAAqB3iC,EAAQjY,GAAO,IAAA66C,EAClD,GAAI76C,EAAM86C,kBACR,OAAO,EAET,MAAMC,EAAgBpwB,GAA0B1S,GAC1Cm/B,EAAWF,GAAuCj/B,GAClD+iC,EAA2B/E,GAAmCh+B,GAGpE,OAF4BzN,KAAKywC,MAAMj7C,EAAMk7C,mBAAqBH,IAEpC,GAAa,OAAR3D,QAAQ,IAARA,EAAAA,EAAY,KADnB4D,EAA2BxwC,KAAKywC,OAA+B,QAAzBJ,EAAC76C,EAAMm7C,0BAAkB,IAAAN,EAAAA,EAAI76C,EAAMk7C,oBAAsBH,GAAiB,EAE9I,CElTA,MAYMK,IAAwBv7C,EAAAA,GAAAA,GAAO,MAAO,CAC1CC,KAAM,cACNR,KAAM,aACNS,kBAAmBA,CAACC,EAAOC,IAAW,CAAC,CACrC,CAAC,KAADU,OAAMmW,EAAY,sBAAwB7W,EAAO,qBAChD,CACD,CAAC,KAADU,OAAMmW,EAAY,uBAAyB7W,EAAO,sBACjDA,EAAOo7C,aAPkBx7C,EAQ3B,KAAM,CACPM,SAAU,WACV6D,IAAK,EACLxB,OAAQ,IACRoI,MAAO,GACPtG,OAAQ,EACR,CAAC,KAAD3D,OAAMmW,EAAY,sBAAwB,CACxCtS,KAAM,GAER,CAAC,KAAD7D,OAAMmW,EAAY,uBAAyB,CACzC7S,MAAO,OA6FJ,MAAMq3C,GAAiB/rB,IA1F9B,SAA2BvvB,GACzB,MAAM,gBACJu7C,GACEv7C,EACEqzC,EAAUtuC,EAAAA,OAAa,MACvBkT,EAASuW,KACTiB,EAAU0C,KACV4oB,EAAgBziC,EAAgBL,EAAQ0S,IACxC6wB,EAAoBljC,EAAgBL,EAAQyV,IAC5CzU,EAAaX,EAAgBL,EAAQe,GACrCyiC,EAAiB12C,EAAAA,OAAa,CAClCP,KAAM,EACNR,IAAK,IAED03C,EAAmBA,KACvB,GAAwB,SAApBH,EAEF,OAAOE,EAAejmC,QAAQhR,KAAO,EAEvC,GAAwB,UAApB+2C,EAA6B,CAE/B,MAAMI,EAAgBH,EAAoBviC,EAAW2iC,kBAAkBhxC,MACvE,OAAO6wC,EAAejmC,QAAQhR,KAAOm3C,CACvC,CACA,OAAO,CAAK,GAEPE,EAAUC,GAAe/2C,EAAAA,UAAe,IACxCg3C,EAAeC,GAAoBj3C,EAAAA,SAAe22C,GACnD5zC,EAAY2Z,IACZjhB,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGU,EAAW,CACzCyzC,oBAEIl0C,EA/DkB7G,KACxB,MAAM,gBACJ+6C,EAAe,QACfl0C,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,aAAc,eAAFS,OAAiB46C,KAET1kC,EAAyBxP,EAAQ,EAuD9CE,CAAkB/G,GAC5By7C,EAAoBrB,GAAqB3iC,EAAQnQ,GACjDo0C,EAAe1xC,KAAKywC,MAAMnzC,EAAUozC,mBAAqBH,GACzDn3C,EAAQ,CACZtB,OAAQ45C,EACRl4C,IAAKi4C,EAAoBC,GAEH,SAApBX,EACF33C,EAAMY,KAAOyU,EAAWkjC,gBACK,UAApBZ,IACT33C,EAAMK,MAAQgV,EAAWmjC,kBAAoBnjC,EAAWqF,WAAarF,EAAWuF,cAAgB,IAElG,MAIM69B,EAAiBC,IAAiBjpC,IACtC,IAAIkpC,EAIJ,GADAlpC,EAAM2hC,iBACkB,SAApBuG,EACFgB,EAASlpC,EAAMmpC,QAAUnJ,EAAQ79B,QAAQinC,wBAAwBx4C,UAC5D,IAAwB,UAApBs3C,EAGT,MAAM,IAAI1nC,MAAM,+BAFhB0oC,EAAS/xC,KAAKvE,IAAI,EAAGoN,EAAMmpC,QAAUnJ,EAAQ79B,QAAQinC,wBAAwBj4C,KAG/E,CACA+3C,EA5FS,KA4FCA,EA7FA,KAgGV9sB,EAAQva,MAAM,GAAG,KACf+C,EAAOzC,QAAQknC,OAAO,CACpBl4C,KAAMi3C,EAAejmC,QAAQhR,KAAO+3C,EACpCv4C,IAAKy3C,EAAejmC,QAAQxR,KAC5B,GACF,IAEE24C,EAA8BL,IAAiB,KACnDR,GAAY,EAAK,IAEbc,EAA4BN,IAAiB,KACjDR,GAAY,EAAM,IAKpB,OAHAprB,GAAuBzY,EAAQ,wBAhCP4kC,IACtBpB,EAAejmC,QAAUqnC,EACzBb,EAAiBN,EAAiB,IA+BpChrB,GAAuBzY,EAAQ,wBAAyB0kC,GACxDjsB,GAAuBzY,EAAQ,sBAAuB2kC,GACjDf,GAAaE,GAGEvzC,EAAAA,GAAAA,KAAK4yC,GAAuB,CAC9Cn2C,IAAKouC,EACL5tC,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,MACxBM,WAAYA,EACZs8C,WAAYT,EACZz4C,MAAOA,IAPA,IASX,I,gBChIA,MACA,GAD4C,qBAAX8R,OAAyB3Q,EAAAA,gBAAwBA,EAAAA,UCR5Eg4C,GAAOA,OCDb,MAAMA,GAAOA,OCDAC,GAAyBhqC,GAASA,EAAMohB,MACxC6oB,GAAwB30B,GAAe00B,IAAwBE,GAAcA,EAAWpjC,OACxFqjC,GAAgC70B,GAAe00B,IAAwBE,GAAcA,EAAW9iC,eAEhGgjC,IADsC90B,GAAe00B,IAAwBE,GAAcA,EAAWG,qBACjE/0B,GAAe00B,IAAwBE,GAAcA,EAAWI,qBACrGC,GAA4BvqC,GAASA,EAAML,SAC3C6qC,GAA2Bl1B,GAAei1B,IAA2BvqC,GAASA,EAAM8G,OACpF2jC,GAAmCn1B,GAAei1B,IAA2BvqC,GAASA,EAAMoH,eAE5FsjC,IADyCp1B,GAAei1B,IAA2BvqC,GAASA,EAAMqqC,qBAC1D/0B,GAAei1B,IAA2BvqC,GAASA,EAAMsqC,qBCHxGK,GAA2B3qC,GAASA,EAAM4hB,QAMnCgpB,GAA2Bt1B,GAAeq1B,IAA0BE,GAAgBA,EAAaC,aAMjGC,GAA+B/zB,GAAuB4zB,GAA0B7X,GAAwBI,IAAqB,CAAC6X,EAAWC,EAAcC,IAAYF,EAAUh1B,QAAO,CAACgF,EAAK5b,KACrM,MAAMqa,EAAQwxB,EAAa7rC,GACvBqa,GACFuB,EAAIhG,KAAK,CACP5V,KACAqa,UAGJ,MAAMsd,EAAUmU,EAAQ9rC,GASxB,OARI23B,GAAWD,GAAuBC,IACpC/b,EAAIhG,KAAK,CACP5V,KACAqa,MAAO,CACL,CAACsb,IAAwB31B,KAIxB4b,CAAG,GACT,MAMUmwB,GAAwB71B,GAAeq1B,IAA0B/oB,GAAWA,EAAQD,YAKpFypB,GAA+Bp0B,GAAuBm0B,IAAuBxpB,GACzEA,EAAU3L,QAAO,CAACq1B,EAAKC,EAAUp1B,KAC9Cm1B,EAAIC,EAASvyB,OAAS,CACpBlb,cAAeytC,EAASxX,KACxByX,UAAW5pB,EAAUxgB,OAAS,EAAI+U,EAAQ,OAAI/hB,GAEzCk3C,IACN,CAAC,KC/CAG,GAA0BxrC,GAASA,EAAM3P,OAMlCo7C,GAA0Bn2B,GAAek2B,IAAyBE,GAAeA,EAAY9iB,cAkB7F+iB,IAZgCr2B,GAAem2B,IAAyB7iB,GAAeA,EAAYf,oBAYlEvS,GAAek2B,IAAyBE,GAAeA,EAAYE,sBAmBpGC,IAb0Cv2B,GAAek2B,IAAyBE,GAAeA,EAAYI,8BAMjEx2B,GAAek2B,IAAyBE,GAAeA,EAAYK,gCAOxE/0B,IAzBPhX,GAASA,EAAMgsC,mBAyB8CjB,IAA8B,CAACiB,EAAmBlB,IAAeA,EAAWz6C,QAAO0X,IAAqC,IAA9BikC,EAAkBjkC,EAAI3I,SAO7M6sC,GAAmCj1B,GAAuB60B,IAAsCK,GAA2BA,EAAwBv7C,KAAIoX,GAAOA,EAAI3I,OAOlK+sC,GAAuCn1B,GAAuB20B,GAAgCZ,IAA8B,CAACa,EAAoBd,IAAeA,EAAWz6C,QAAO0X,IAAsC,IAA/B6jC,EAAmB7jC,EAAI3I,QAOhNgtC,GAAmCp1B,GAAuBm1B,IAAsCE,GAA4BA,EAAyB17C,KAAIoX,GAAOA,EAAI3I,OAkCpKktC,IA1BuDt1B,GAAuBi1B,GAAkC9Y,IAAqB,CAACoZ,EAAqBrB,KACtK,MAAMsB,EAAuB,CAAC,EAC9B,IAAIC,EAAY,EAChB,OAAOF,EAAoBv2B,QAAO,CAACgF,EAAK+W,KACtC,MAAMgF,EAAUmU,EAAQnZ,GAcxB,OAbKya,EAAqBzV,EAAQlD,SAChC2Y,EAAqBzV,EAAQlD,OAAS,GAMpCkD,EAAQlD,MAAQ4Y,IAClBD,EAAqBzV,EAAQlD,OAAS,GAExC4Y,EAAY1V,EAAQlD,MACpB2Y,EAAqBzV,EAAQlD,QAAU,EACvC7Y,EAAI+W,GAASya,EAAqBzV,EAAQlD,OACnC7Y,CAAG,GACT,CAAC,EAAE,IAOoDhE,GAAuB60B,GAAsC1Y,GAAqBQ,IAAiC,CAAC+Y,EAAmBxB,EAASyB,IACtMA,EAAe,EACVD,EAEFA,EAAkBr8C,QAAO0X,IAAG,IAAA6kC,EAAA,OAA+B,KAAZ,QAAfA,EAAA1B,EAAQnjC,EAAI3I,WAAG,IAAAwtC,OAAA,EAAfA,EAAiB/Y,MAAW,OAOxDgZ,GAA+Bv3B,GAAeu2B,IAAsCa,GAAqBA,EAAkBvrC,SAM3H2rC,GAAuCx3B,GAAeg3B,IAA8CS,GAA6BA,EAA0B5rC,SAO3J6rC,GAA+B13B,GAAe62B,IAAsCE,GAA4BA,EAAyBlrC,SAYzI8rC,IANyC33B,GAAe03B,GAA8BF,IAAsC,CAACpa,EAAewa,IAAqBxa,EAAgBwa,IAMjJl2B,GAAuBy0B,GAAyB9yB,IAA0B,CAACiQ,EAAaukB,KAAY,IAAAC,EAAA,OAAsB,QAAtBA,EAAKxkB,EAAYlB,aAAK,IAAA0lB,OAAA,EAAjBA,EAAmB/8C,QAAO6e,IAAQ,IAAAm+B,EAAAhqB,EACtL,IAAKnU,EAAK6J,MACR,OAAO,EAET,MAAMI,EAASg0B,EAAaj+B,EAAK6J,OACjC,GAAW,OAANI,QAAM,IAANA,IAAAA,EAAQmP,iBAAuD,KAA9B,OAANnP,QAAM,IAANA,GAAuB,QAAjBk0B,EAANl0B,EAAQmP,uBAAe,IAAA+kB,OAAA,EAAvBA,EAAyBlsC,QACvD,OAAO,EAET,MAAMmoB,EAAiBnQ,EAAOmP,gBAAgB9W,MAAK6W,GAAYA,EAASjxB,QAAU8X,EAAKmZ,WACvF,QAAKiB,KAGGA,EAAe6E,gBAAgC,MAAdjf,EAAK9X,OAA4C,MAAjB,QAAVisB,EAAAnU,EAAK9X,aAAK,IAAAisB,OAAA,EAAVA,EAAY0C,YAAiB,GAC5F,KAKWunB,GAAsCt2B,GAAuBi2B,IAA+BM,GACxFA,EAAcv3B,QAAO,CAACq1B,EAAKpiB,KACnCoiB,EAAIpiB,EAAWlQ,OAGlBsyB,EAAIpiB,EAAWlQ,OAAO/D,KAAKiU,GAF3BoiB,EAAIpiB,EAAWlQ,OAAS,CAACkQ,GAIpBoiB,IACN,CAAC,KCrKOmC,GAAeA,CAACnY,EAAUoY,EAAUC,IAC3CD,EAAW,GAAKpY,EAAW,EACtB79B,KAAKm2C,KAAKtY,EAAWoY,IAEZ,IAAdpY,EAEKqY,EAAO,EAET,EAEIE,GAAgCC,IAAgB,CAC3DH,KAAM,EACND,SAAUI,EAAe,EAAI,MAQlBC,GAAiCA,CAACL,EAAUM,KACvD,GAAIA,IAAkBxwB,GAAcywB,UAAYP,EAvB5B,IAwBlB,MAAM,IAAI5sC,MAAM,CAAC,0EAA2E,2FAA2FkF,KAAK,MAC9L,EChBWkoC,GAAyBjuC,GAASA,EAAMkuC,WAMxCC,GAA8B74B,GAAe24B,IAAwBC,GAAcA,EAAWE,kBAM9FC,GAAiC/4B,GAAe24B,IAAwBC,GAAcA,EAAW7Y,WAMjGiZ,GAA6Bh5B,GAAe24B,IAAwBC,GAAcA,EAAWjtB,OAM7FstB,GAAmBj5B,GAAe64B,IAA6BC,GAAmBA,EAAgBV,OAMlGc,GAAuBl5B,GAAe64B,IAA6BC,GAAmBA,EAAgBX,WAMtGgB,GAAwBn5B,GAAe64B,GAA6BE,IAAgC,CAACD,EAAiB/Y,IAAamY,GAAanY,EAAU+Y,EAAgBX,SAAUW,EAAgBV,QAMpMgB,GAAiC13B,GAAuBm3B,GAA6Bhb,GAAqBQ,GAAiCkY,GAAsCS,IAA8C,CAAC8B,EAAiBlD,EAASyB,EAAcT,EAAyByC,KAC5S,MAAMC,EAA0BD,EAAgCxtC,OAC1D0tC,EAAwBr3C,KAAKwtB,IAAIopB,EAAgBX,SAAWW,EAAgBV,KAAMkB,EAA0B,GAC5GE,GAnDuB,IAmDAV,EAAgBX,SAAsCmB,EAA0B,EAAIp3C,KAAKwtB,IAAI6pB,EAAwBT,EAAgBX,SAAW,EAAGmB,EAA0B,GAG1M,IAA+B,IAA3BC,IAA0D,IAA1BC,EAClC,OAAO,KAIT,GAAInC,EAAe,EACjB,MAAO,CACLoC,cAAeF,EACfG,aAAcF,GAGlB,MAAMG,EAAmBN,EAAgCE,GACnDK,EAAiCJ,EAAuBD,EAAwB,EAChFE,EAAgB7C,EAAwBl7B,WAAUjJ,GAAOA,EAAI3I,KAAO6vC,EAAiB7vC,KAC3F,IAAI4vC,EAAeD,EACfI,EAAmB,EACvB,KAAOH,EAAe9C,EAAwB/qC,QAAUguC,GAAoBD,GAAgC,KAAAtC,EAC1G,MACM/Y,EAAuB,QAAlB+Y,EAAG1B,EADFgB,EAAwB8C,GACV5vC,WAAG,IAAAwtC,OAAA,EAAfA,EAAiB/Y,WACjB1/B,IAAV0/B,EACFmb,GAAgB,IAEZG,EAAmBD,GAAkCrb,EAAQ,KAC/Dmb,GAAgB,GAEJ,IAAVnb,IACFsb,GAAoB,GAG1B,CACA,MAAO,CACLJ,gBACAC,aAAcA,EAAe,EAC9B,IAOUI,GAAmDp4B,GAAuB60B,GAAsC6C,IAAgC,CAACxC,EAAyBmD,IAChLA,EAGEnD,EAAwBrqC,MAAMwtC,EAAgBN,cAAeM,EAAgBL,aAAe,GAF1F,KASEM,GAA+Ct4B,GAAuBi1B,GAAkCyC,IAAgC,CAACnC,EAAqB8C,IACpKA,EAGE9C,EAAoB1qC,MAAMwtC,EAAgBN,cAAeM,EAAgBL,aAAe,GAFtF,KC5GEO,GAAiBA,CAACtqC,EAAQjY,KACrC,IAAIwlC,EACAvN,EAeJ,OAdIj4B,EAAMkhD,YAAuC,WAAzBlhD,EAAMwiD,gBAC5BvqB,EAAQypB,GAA+BzpC,GACvCutB,EAAO4c,GAAiDnqC,KAExDutB,EAAOqZ,GAAqC5mC,GAE1CggB,EADkB,IAAhBuN,EAAKrxB,OACC,KAEA,CACN4tC,cAAe,EACfC,aAAcxc,EAAKrxB,OAAS,IAI3B,CACLqxB,OACAvN,QACD,EAUUwqB,GAAqBA,CAACxqC,EAAQjY,KACzC,MAAM0iD,EAAWH,GAAetqC,EAAQjY,GACxC,OAAO+E,EAAAA,SAAc,KAAM,CACzBygC,KAAMkd,EAASld,KACfvN,MAAOyqB,EAASzqB,SACd,CAACyqB,EAASld,KAAMkd,EAASzqB,OAAO,ECrCzB0qB,IAD0B,qBAAdC,UAA4BA,UAAUC,UAAUzU,cAAgB,SACtDnhB,SAAS,WCC/B61B,GAAgC9vC,GAASA,EAAM+vC,aAC/CC,GAAgC16B,GAAew6B,IAA+BG,GAAaA,EAAU9uC,SACrG+uC,GAA2Bl5B,GAAuB84B,GAA+B/c,IAAwB,CAACod,EAAcC,IAAe,IAAIn9B,IAAIk9B,EAAax/C,KAAIyO,GAAM,CAACA,EAAIgxC,EAAWhxC,SACtLixC,GAA4Br5B,GAAuB84B,IAA+BG,GAAaA,EAAUj6B,QAAO,CAAC4C,EAAQmZ,KACpInZ,EAAOmZ,GAASA,EACTnZ,IACN,CAAC,KCRS03B,GAAuBtwC,GAASA,EAAMuwC,SCKtCC,GAA6BxwC,GAASA,EAAMywC,eAa5CC,IANoCp7B,GAAek7B,IAA4BxwC,GAASA,EAAMojC,UAMpD9tB,GAAek7B,IAA4BxwC,GAASA,EAAM2wC,qBAMpGC,GAAuCt7B,GAAek7B,IAA4BxwC,GAASA,EAAM6wC,iBAOjGC,GAA4Bx7B,GAAek7B,IAA4BxwC,GAASA,EAAM+wC,gBAQtFC,GAAmCh6B,IAAuBhX,GAASA,EAAMywC,eAAeM,cAAcE,mBAAkBjxC,GAASA,EAAMywC,eAAeM,cAAcG,kBAAiB,CAACD,EAAkBC,KAAoB,CACvOD,mBACAC,sBCvCK,SAASC,GAAiBrrC,EAAesrC,EAAY/qC,GAC1D,MAAMgrC,EAAgBt/C,EAAAA,QAAa,GACnComB,GAAkB,KAChBk5B,EAAc7uC,SAAU,EACxBsD,EAActD,QAAQoa,SAASvW,EAAY+qC,EAAW,GACrD,CAACtrC,EAAeO,EAAY+qC,IAC3BC,EAAc7uC,SAChBsD,EAActD,QAAQoa,SAASvW,EAAY+qC,EAE/C,CCRO,MAAME,GAAuB,CAClCvC,cAAe,EACfC,aAAc,EACdiC,iBAAkB,EAClBC,gBAAiB,GAENK,GAAiCA,CAACvxC,EAAOhT,KACpD,MAAM,sBACJwkD,EAAqB,WACrB7qC,GACE3Z,EACEyjD,EAAiB,CACrBrN,SAAUoO,EACVb,mBAAoBa,EACpBX,gBAAiBW,IAA0B7qC,EAC3CoqC,cAAeO,IAEjB,OAAOl9C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBywC,kBACA,ECrBJ,MAAMgB,GAA+BzxC,GAASA,EAAM0xC,YACvCC,GAAqCr8B,GAAem8B,IAA8BC,GAAeA,EAAYE,cAC7GC,GAAsCv8B,GAAem8B,IAA8BC,GAAeA,EAAYI,eAC9GC,GAA8Cz8B,GAAem8B,IAA8BC,GAAeA,EAAYM,sBCDtHC,GAAyBjyC,GAASA,EAAMkyC,eC2BrD,IAAIC,GAA+B,SAAUA,GAM3C,OALAA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAoB,GAAI,GAAK,KAC7CA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAuB,MAAI,GAAK,QACzCA,CACT,CAPmC,CAOjCA,IAAmB,CAAC,GACtB,MAAMC,GAAwB,CAC5BphD,IAAK,EACLQ,KAAM,GAEK6gD,GAAsBpiD,OAAO21C,OAAO,IAAI3yB,KAKrD,IAAIq/B,IAAU,EACd,IACwB,qBAAX5vC,SACT4vC,GAAU,QAAQtlB,KAAKtqB,OAAOktC,UAAUC,WAE5C,CAAE,MAAOxrC,IACP,CAEK,MAAMkuC,GAAyBA,KACpC,MAAMttC,EAASY,IACT/Q,EAAY2Z,KAEhBq5B,kBAAmB0K,GACjB19C,EACEukB,EAAiB/T,EAAgBL,GAAQ,IAAMutC,EAAW,CAACP,GAAuBhtC,EAAOzC,QAAQxC,QAAUkZ,GAAqCjU,KAChJ4rC,EAAiBvrC,EAAgBL,EAAQ2rC,MAA0C0B,GACnF3B,EAAoBrrC,EAAgBL,EAAQyrC,MAA6C4B,GACzFrsC,EAAaX,EAAgBL,EAAQe,GACrCysC,EAAYxsC,EAAWo/B,kBACvBz3B,EAAatI,EAAgBL,EAAQgvB,IACrCye,EAA0BptC,EAAgBL,EAAQqU,IAClDC,EAAgBi5B,EAAW,CAC/BhhD,KAAM,GACNP,MAAO,IACLyhD,EACEC,EAAsB/kC,EAAWtc,OAAO6P,OAAS,GAChDyxC,EAAQC,GAAa9gD,EAAAA,SAAesgD,IACrC74B,GAAQinB,EAAAA,GAAAA,KACRqS,EAAYxtC,EAAgBL,EAAQglC,IACpC8I,EAAeztC,EAAgBL,EAAQulC,IACvC+F,EAAWjrC,EAAgBL,EAAQqrC,IACnC0C,EAAqB1tC,EAAgBL,EAAQorC,IAC7C4C,EAAcxD,GAAmBxqC,EAAQnQ,GACzCo+C,EAAcjuC,EAAOzC,QAAQsV,eAC7Bq7B,EAAUluC,EAAOzC,QAAQ4wC,eACzBC,EAAcpuC,EAAOzC,QAAQ8wC,mBAC7BC,EAAuBtuC,EAAOzC,QAAQgxC,4BACtCC,EAAyBxuC,EAAOzC,QAAQkxC,8BACxCC,EAAgB1tC,EAAW2tC,YAAYtkD,OACvCk5C,EAAoBviC,EAAWuiC,kBAC/BqL,EAAavuC,EAAgBL,EAAQgW,KhBnFtC,SAA2BhpB,EAAK2S,EAAIw+B,GACzC,MAAM0Q,EAAQ/hD,EAAAA,OAAa,MAC3B+hD,EAAMtxC,QAAUoC,EAChBuT,IAAkB,KAChB,IAAgB,IAAZirB,GAA+C,qBAAnB2Q,eAC9B,OAAOhK,GAET,IAAIiK,EAAU,EACd,MAAMvzC,EAASxO,EAAIuQ,QACbyxC,EAAW,IAAIF,gBAAejjC,IAShCgjC,EAAMtxC,QAAQsO,EAChB,IAKF,OAHIrQ,GACFwzC,EAASC,QAAQzzC,GAEZ,KACDuzC,GACFG,qBAAqBH,GAEvBC,EAASG,YAAY,CACtB,GACA,CAACniD,EAAKmxC,GACX,CgBqDEiR,CAAkBlB,GAAS,IAAMluC,EAAOzC,QAAQ8xC,WAiBhD,MAAM7L,EAAiB12C,EAAAA,OAAaqgD,IAC9BmC,EAAgCxiD,EAAAA,OAAaqgD,IAC7CoC,EAAqBziD,EAAAA,OAAau/C,IAClCP,EAAgBzrC,EAAgBL,EAAQ6rC,IACxC2D,EAAgBt1B,KAChBu1B,EAAgB3iD,EAAAA,YAAaoC,GAC7BwgD,EAAcpwC,GAAW,IApEPqwC,EAACp7B,EAAOq7B,EAAaC,EAAgBC,EAAgBC,KAAqB,CAClGpT,UAAWuQ,GAAgB8C,KAC3BhzC,OAAQizC,GAAmB17B,EAAO24B,GAAgB8C,KAAMJ,EAAaC,EAAgBC,EAAgBC,KAkEhEJ,CAAkBp7B,EAAO1kB,EAAU+/C,YAAa//C,EAAUggD,eAAuC,GAAvB7uC,EAAW0yB,UAAgBwc,OAA2B3yC,QAC/J4yC,EAAc,CAClBC,SAAUtjD,EAAAA,SAAc,IAAM+gD,EAAYG,EAAYzgB,KAAKxhB,WAAUjJ,GAAOA,EAAI3I,KAAO0zC,EAAU1zC,MAAO,GAAG,CAAC0zC,EAAWG,EAAYzgB,OACnI8iB,YAAavjD,EAAAA,SAAc,IAAM+gD,EAAYz5B,EAAerI,WAAUmI,GAAUA,EAAOJ,QAAU+5B,EAAU/5B,SAAU,GAAG,CAAC+5B,EAAWz5B,KAEhIk8B,EAAsBxjD,EAAAA,aAAkByjD,IAC5C,GAmiBG,SAAgCC,EAAUC,GAC/C,GAAID,IAAaC,EACf,OAAO,EAET,OAAOD,EAAS1G,gBAAkB2G,EAAS3G,eAAiB0G,EAASzG,eAAiB0G,EAAS1G,cAAgByG,EAASxE,mBAAqByE,EAASzE,kBAAoBwE,EAASvE,kBAAoBwE,EAASxE,eAClN,CAxiBQyE,CAAuBH,EAAmBvwC,EAAOzC,QAAQxC,MAAMywC,eAAeM,eAChF,OAEF,MAAM6E,EAAwBJ,EAAkBzG,gBAAkByF,EAAmBhyC,QAAQusC,eAAiByG,EAAkBxG,eAAiBwF,EAAmBhyC,QAAQwsC,aAC5K/pC,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBywC,gBAAgBr8C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMywC,eAAgB,CACjDM,cAAeyE,QAQjBvvC,EAAW4vC,SAAWD,IACxBpB,EAAmBhyC,QAAUgzC,EAC7BvwC,EAAOzC,QAAQ26B,aAAa,6BAA8BqY,IAE5DjB,EAA8B/xC,QAAUimC,EAAejmC,OAAO,GAC7D,CAACyC,EAAQgB,EAAW4vC,UACjBC,EAA6BxM,IAAiB,KAClD,MAAMyM,EAAY,CAChB/kD,IAAKqiD,EAAY7wC,QAAQwzC,UACzBxkD,KAAM6hD,EAAY7wC,QAAQyzC,YAEtBC,EAAKH,EAAUvkD,KAAOi3C,EAAejmC,QAAQhR,KAC7C2kD,EAAKJ,EAAU/kD,IAAMy3C,EAAejmC,QAAQxR,IAC5ColD,EAAqB,IAAPF,GAAmB,IAAPC,EAChC1N,EAAejmC,QAAUuzC,EACzB,MAAMnU,EAAYwU,EA+gBtB,SAA2BF,EAAIC,GAC7B,GAAW,IAAPD,GAAmB,IAAPC,EACd,OAAOhE,GAAgB8C,KAGzB,OAAIz9C,KAAK6+C,IAAIF,IAAO3+C,KAAK6+C,IAAIH,GACvBC,EAAK,EACAhE,GAAgBmE,KAEhBnE,GAAgBoE,GAGrBL,EAAK,EACA/D,GAAgBqE,MAEhBrE,GAAgBsE,IAI7B,CAliBoCC,CAAkBR,EAAIC,GAAMhE,GAAgB8C,KAGtE0B,EAAYn/C,KAAK6+C,IAAI5N,EAAejmC,QAAQxR,IAAMujD,EAA8B/xC,QAAQxR,KACxF4lD,EAAep/C,KAAK6+C,IAAI5N,EAAejmC,QAAQhR,KAAO+iD,EAA8B/xC,QAAQhR,MAG5FqlD,EAAoBF,GAAa1wC,EAAW0yB,WAAaie,GA7HtC,GA8HnBE,EAAqBnC,EAAY/S,YAAcA,EAErD,KADqBiV,GAAqBC,GAExC,OAAO/F,EAKT,GAAI+F,EACF,OAAQlV,GACN,KAAKuQ,GAAgB8C,KACrB,KAAK9C,GAAgBsE,KACrB,KAAKtE,GAAgBqE,MACnB9B,EAAclyC,aAAUrO,EACxB,MACF,QACEugD,EAAclyC,QAAUuuC,EAI9B4D,EAAY/S,UAAYA,EACxB+S,EAAY1yC,OAASizC,GAAmB17B,EAAOooB,EAAW9sC,EAAU+/C,YAAa//C,EAAUggD,eAAuC,GAAvB7uC,EAAW0yB,UAAgBwc,KACtI,MACMK,EAAoBuB,GADXC,GAAe/xC,EAAQnQ,EAAW+7C,EAAgBF,GACVlI,EAAejmC,QAASmyC,GAO/E,OAJAsC,GAAAA,WAAmB,KACjB1B,EAAoBC,EAAkB,IAExCf,EAAcvyC,MAAM,IAAM4zC,GACnBN,CAAiB,IAEpB0B,EAA2BA,KAC/B,MACM1B,EAAoBuB,GADXC,GAAe/xC,EAAQnQ,EAAW+7C,EAAgBF,GACVlI,EAAejmC,QAASmyC,GAE/ED,EAAclyC,aAAUrO,EACxBohD,EAAoBC,EAAkB,EAElC2B,EAAe7N,IAAiBjpC,IACpC,MAAM,UACJ21C,EAAS,WACTC,GACE51C,EAAM+2C,cAGV,GAAIpB,EAAY,EACd,OAEF,IAAKx8B,GACCy8B,EAAa,EACf,OAGJ,GAAIz8B,GACEy8B,EAAa,EACf,OAGJ,MAAMT,EAAoBM,IAC1B7wC,EAAOzC,QAAQ26B,aAAa,uBAAwB,CAClDnsC,IAAKglD,EACLxkD,KAAMykD,EACNlF,cAAeyE,GACf,IAEE6B,EAAc/N,IAAiBjpC,IACnC4E,EAAOzC,QAAQ26B,aAAa,uBAAwB,CAAC,EAAG98B,EAAM,IAE1Di3C,EAAkBhO,IAAiBjpC,IACvC4E,EAAOzC,QAAQ26B,aAAa,2BAA4B,CAAC,EAAG98B,EAAM,IAmJ9Dk3C,EAA2B9E,EAAU76C,OAAS4wC,EAAoBiK,EAAU76C,MAC5E4/C,EAAgBzlD,EAAAA,SAAc,KAAM,CACxC0lD,WAAYF,GAA4B/E,EAAW,cAAWr+C,EAC9DujD,UAAW5iD,EAAU6R,WAAa,cAAWxS,KAC3C,CAACojD,EAA0BziD,EAAU6R,WAAY6rC,IAC/CoB,EAAc7hD,EAAAA,SAAc,KAChC,MAAMmF,EAAO,CACXU,MAAO2/C,EAA2B/O,EAAoB,OACtDmP,UAAWhE,EACXrmD,WAAY,GAKd,OAHIwH,EAAU6R,YAA0C,IAA5BssC,EAAYzgB,KAAKrxB,SAC3CjK,EAAK5H,OAASopC,GAAwBzzB,IAEjC/N,CAAI,GACV,CAAC+N,EAAQujC,EAAmBmL,EAAe4D,EAA0BziD,EAAU6R,WAAYssC,EAAYzgB,KAAKrxB,SAsC/G,OArCApP,EAAAA,WAAgB,KACdkT,EAAOzC,QAAQ26B,aAAa,mCAAmC,GAC9D,CAACl4B,EAAQ2uC,IACZz7B,GAAkB,KAEhBlT,EAAOzC,QAAQ8xC,QAAQ,GACtB,CAACrvC,EAAQsrC,EAASqH,yBACrBz/B,GAAkB,KAEZw4B,IACF0C,EAAY7wC,QAAQyzC,WAAa,GAE/BpF,IACFwC,EAAY7wC,QAAQwzC,UAAY,EAClC,GACC,CAACrF,EAAmBE,EAAgBqC,EAAaG,IACpDl7B,GAAkB,KACZq6B,IACFa,EAAY7wC,QAAQyzC,WAAa,EACnC,GACC,CAACzD,EAAUa,IfjZUwE,EAACC,EAAWC,KACpC,MAAMC,EAASjmD,EAAAA,QAAa,GAC5BomB,GAAkB,IACZ6/B,EAAOx1C,UAAYs1C,EACd/N,IAETiO,EAAOx1C,SAAU,EACVu1C,MAEN,CAACC,EAAOx1C,SAAWs1C,GAAW,EeyYjCD,CAA+B,IAApBpF,EAAU76C,OAAa,KAChC,MACMqgD,EAAuBlB,GADdC,GAAe/xC,EAAQnQ,EAAW+7C,EAAgBF,GACPlI,EAAejmC,QAASmyC,GAClFY,EAAoB0C,GACpBhzC,EAAOzC,QAAQ26B,aAAa,uBAAwB,CAClDnsC,IAAKy3C,EAAejmC,QAAQxR,IAC5BQ,KAAMi3C,EAAejmC,QAAQhR,KAC7Bu/C,cAAekH,GACf,IAEJhzC,EAAOzC,QAAQoa,SAAS,UAAW,CACjC24B,oBAAqB2B,IAEvBx5B,GAAuBzY,EAAQ,gBAAiBiyC,GAChDx5B,GAAuBzY,EAAQ,kBAAmBiyC,GAClDx5B,GAAuBzY,EAAQ,qBAAsBiyC,GAC9C,CACLnG,gBACA8B,YACAqF,QAzMc,WAAiB,IAAAC,EAAAC,EAAAz8B,EAAA,IAAhBwC,EAAMjd,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzB,IAAKid,EAAOqU,OAASygB,EAAYhuB,MAC/B,MAAO,GAET,MAAMozB,EAAwC,QAAvBF,EAAGh6B,EAAO4yB,qBAAa,IAAAoH,EAAAA,EAAIpH,EAC5CuH,GAAiB3F,QAA2Cx+C,IAApBgqB,EAAOhxB,UAA0BwlD,GAA2C,WAApBx0B,EAAOhxB,SACvGorD,OAAsCpkD,IAApBgqB,EAAOhxB,SAC/B,IAAIqrD,EAGJ,OAAQr6B,EAAOhxB,UACb,IAAK,MACHqrD,EAAiB,EACjB,MACF,IAAK,SACHA,EAAiB5qC,EAAW5c,IAAImQ,OAAS8xC,EAAYzgB,KAAKrxB,OAC1D,MACF,UAAKhN,EACHqkD,EAAiB5qC,EAAW5c,IAAImQ,OAGpC,MAAMs3C,EAAuB,QAAdL,EAAGj6B,EAAOqU,YAAI,IAAA4lB,EAAAA,EAAInF,EAAYzgB,KACvCkmB,EAAmBL,EAAkBtJ,cACrC4J,EAAkBnhD,KAAKwtB,IAAIqzB,EAAkBrJ,aAAcyJ,EAAUt3C,QACrEy3C,EAAaz6B,EAAOqU,KAAOvN,GAAM,EAAG9G,EAAOqU,KAAKrxB,QAAU8jB,GAAMyzB,EAAkBC,GACxF,IAAIE,GAAmB,EAClBN,IAA6C,IAA1BnD,EAAYC,WAC9BD,EAAYC,SAAWqD,IACzBG,EAAkBzD,EAAYC,SAC9BuD,EAAW1nC,QAAQ2nC,IAEjBzD,EAAYC,UAAYsD,IAC1BE,EAAkBzD,EAAYC,SAC9BuD,EAAW5jC,KAAK6jC,KAGpB,MAAMrmB,EAAO,GACPsmB,EAA8B,QAAtBn9B,EAAG7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB5T,IAChCgxC,EAAkBz+B,GAA4BrV,GAyGpD,OAxGA2zC,EAAWh/C,SAAQo/C,IAAkB,IAAAC,EACnC,MAAM,GACJ75C,EAAE,MACFqa,GACEg/B,EAAUO,GACR3D,IAAuB,OAAXpC,QAAW,IAAXA,GAAkB,QAAPgG,EAAXhG,EAAahuB,aAAK,IAAAg0B,OAAA,EAAlBA,EAAoBlK,gBAAiB,GAAKyJ,EAAiBQ,EAG7E,GAAInF,EAAY,CACd,MAAMqF,EAAiB3/B,EAAc/nB,KAAK2P,OACpCg4C,EAAgB9/B,EAAelY,OAASoY,EAActoB,MAAMkQ,OAClE8D,EAAOzC,QAAQ42C,iBAAiB,CAC9BrnB,MAAO3yB,EACP85C,iBACAC,gBACA5gC,QAASc,IAEPE,EAAc/nB,KAAK2P,OAAS,GAC9B8D,EAAOzC,QAAQ42C,iBAAiB,CAC9BrnB,MAAO3yB,EACP85C,eAAgB,EAChBC,cAAe5/B,EAAc/nB,KAAK2P,OAClCoX,QAASc,IAGTE,EAActoB,MAAMkQ,OAAS,GAC/B8D,EAAOzC,QAAQ42C,iBAAiB,CAC9BrnB,MAAO3yB,EACP85C,eAAgB7/B,EAAelY,OAASoY,EAActoB,MAAMkQ,OAC5Dg4C,cAAe9/B,EAAelY,OAC9BoX,QAASc,GAGf,CACA,MAAM6G,GAAoB,OAAT4yB,QAAS,IAATA,OAAS,EAATA,EAAW1zC,MAAOA,EAC7Bi6C,EAAiBp0C,EAAOzC,QAAQ82C,iBAAiBl6C,GAAiD,OAA3C6F,EAAOzC,QAAQ+2C,sBAAsBn6C,GAClG,IAAIo6C,EAEFA,EAD4B,MAA1BxG,EAAmB5zC,IAGR6F,EAAOzC,QAAQi3C,gBAAgBr6C,GAE9C,IAAIs6C,GAAiB,OACGvlD,IAApBgqB,EAAOhxB,WACTusD,EAAoC,IAAnBV,GAEnB,IAAIW,GAAgB,EACpB,MAAMC,EAAyBZ,IAAmBP,EAAUt3C,OAAS,EACrE,GAAIm3C,EACF,GAAKC,EAOHoB,EAAgBC,MAPI,CAEUZ,IADZ/F,EAAYzgB,KAAKrxB,OAAS,IAG1Cw4C,GAAgB,EAEpB,CAIF,MACME,EADeb,IAAmBH,EAExC,IAAIiB,EAAe,KACnB,GAAqB,OAAjB/G,GAAyBA,EAAa3zC,KAAOA,EAAI,CAEnD06C,EAAuC,SADpB70C,EAAOzC,QAAQ06B,cAAc99B,EAAI2zC,EAAah6B,OACvCghC,SAAsBhH,EAAah6B,MAAQ,IACvE,CACA,IAAIihC,EAAuB3B,GACtBE,GAAmB7D,EAAclyC,SAAWw2C,GAAkBtE,EAAclyC,QAAQusC,eAAiBiK,EAAiBtE,EAAclyC,QAAQwsC,eAC/IgL,EAAuBtF,EAAclyC,SAEvC,MAAMy3C,EAAaC,GAAkBnB,EAAiBiB,EAAsBzgC,EAAc/nB,KAAK2P,QACzFg5C,EAAmBP,GAA8C,QAApBz7B,EAAOhxB,SAoB1D,GAnBAqlC,EAAKxd,MAAkBxf,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM0U,KAAK3T,EAAAA,EAAAA,GAAS,CACxD2T,IAAK0R,EACLsY,MAAO3yB,EACP8W,MAAOm/B,EACP7xC,SAAUg2C,EACVY,UAAWj8B,EAAOqU,UAAOr+B,EAAYo8C,EAASh2B,UAAUy+B,GACxDiB,WAAYA,EACZh0C,WAAYA,EACZ0yB,UAAW0gB,EACXS,aAAcA,EACdvgC,cAAeA,EACfF,eAAgBA,EAChB03B,cAAeiJ,EACfK,mBAAoBn6B,EAAWk1B,EAAYE,iBAAcnhD,EACzDulD,eAAgBA,EAChBC,cAAeA,EACfE,aAAcA,EACdM,iBAAkBA,GACjBrB,GAAW15C,IACVy6C,EACF,OAEF,MAAM39B,EAAQ02B,EAAOniC,IAAIrR,GAIoC,IAAAk7C,EAAA9T,GAHzDtqB,GACFsW,EAAKxd,KAAKkH,QAEY/nB,IAApBgqB,EAAOhxB,UAA0BysD,IACnCpnB,EAAKxd,KAAoD,QAAhDslC,GAAC9T,EAAAvhC,EAAOzC,SAAQ+3C,wCAAgC,IAAAD,OAAA,EAA/CA,EAAA9mC,KAAAgzB,EAAkD,CAC1DgU,UAAWp7C,IAEf,IAEKozB,CACT,EA0DEioB,kBAAmBA,KAAA,CACjBxoD,IAAKkhD,IAEPuH,iBAAkBA,KAAA,CAChBzoD,IAAKohD,EACLsH,SAAUxD,EACVyD,QAASvD,EACTwD,YAAavD,EACb1mD,MAAO4mD,EACP3/C,KAAM,eAGN8H,SAAUm7C,IAAsB,OAAI3mD,IAEtC4mD,gBAAiBA,KAAA,CACfnqD,MAAOgjD,EACP/7C,KAAM,iBAERmjD,mBAAoBA,KAAA,CAClBnjD,KAAM,aAERojD,0BAA2BA,KAAA,CACzBhpD,IAAKshD,EACL17C,KAAM,iBAERqjD,4BAA6BA,KAAA,CAC3BjpD,IAAKwhD,EACL57C,KAAM,iBAET,EAEH,SAASm/C,GAAe/xC,EAAQnQ,EAAW+7C,EAAgBF,GAAmB,IAAAwK,EAAAC,EAC5E,MAAMn1C,EAAaD,EAAuBf,EAAOzC,QAAQxC,OACnDizC,EAAc1D,GAAetqC,EAAQnQ,GACrCukB,EAAiBvkB,EAAUgzC,kBAAoB,CAACmK,GAAuBhtC,EAAOzC,QAAQxC,QAAUkZ,GAAqCjU,GACrIo2C,EAAuBtJ,GAA4C9sC,GACnEu1C,EAAYv1C,EAAOzC,QAAQxC,MAAMwyB,KAAKwB,WAAWsnB,IAAI,GACrDC,EAAaliC,EAAeiiC,IAAI,GACtC,MAAO,CACLzK,iBACAF,oBACA1rC,SACA0B,WAAY7R,EAAU6R,WACtBkuC,YAAa//C,EAAU+/C,YACvBC,eAAgBhgD,EAAUggD,eAC1B3L,gBAAiBljC,EAAWkjC,gBAC5BX,kBAAmBviC,EAAWuiC,kBAC9BgT,mBAAoBv1C,EAAW2iC,kBAAkBhxC,MACjD6jD,oBAAqBx1C,EAAW2iC,kBAAkBt5C,OAClDosD,mBAA6BvnD,IAAdqmD,EAA0Bv1C,EAAOzC,QAAQ+2C,sBAAsBiB,GAAa,EAC3FmB,gBAA0C,QAA3BR,EAAY,OAAVI,QAAU,IAAVA,OAAU,EAAVA,EAAY9gC,qBAAa,IAAA0gC,EAAAA,EAAI,EAC9C5K,SAAUD,GAAqBrrC,EAAOzC,QAAQxC,OAC9C+4C,gBAAiBz+B,GAA4BrV,GAC7CutB,KAAMygB,EAAYzgB,KAClBvN,MAAOguB,EAAYhuB,MACnB1L,cAAeD,GAA2CrU,GAC1DoU,iBACAgiC,uBACA7I,SAAqC,QAA7B4I,EAAEtmD,EAAUgzC,yBAAiB,IAAAsT,GAAAA,EAEzC,CACA,SAASrE,GAAqB6E,EAAQnT,EAAgBkM,GACpD,MAAM5D,EAAgB,CACpBhC,cAAe,EACfC,aAAc4M,EAAOppB,KAAKrxB,OAC1B8vC,iBAAkB,EAClBC,gBAAiB0K,EAAOviC,eAAelY,SAEnC,IACJnQ,EAAG,KACHQ,GACEi3C,EACEoT,EAAWrkD,KAAK6+C,IAAI7kD,GAAQoqD,EAAOzS,gBACzC,GAAIyS,EAAO/K,eAAgB,CAGzB,IAAI9B,EAAgBv3C,KAAKwtB,IAAI82B,GAAwBF,EAAQ5qD,EAAK,CAChE+qD,SAAS,EACTC,aAAcJ,EAAOrL,SAASh2B,UAAUqhC,EAAOrL,SAASh2B,UAAUpZ,OAAS,GAAKy6C,EAAOF,gBACrFE,EAAOrL,SAASh2B,UAAUpZ,OAAS,GAIvC,MAAM86C,EAA0BL,EAAOP,qBAAqBtM,GAC5D,GAAIkN,EAAyB,CAC3B,MAAMC,EAAqB1kD,KAAKwtB,OAAO/0B,OAAOoe,OAAO4tC,IACrDlN,EAAgBv3C,KAAKwtB,IAAI+pB,EAAemN,EAC1C,CACA,MAAMlN,EAAe4M,EAAOj1C,WAAaooC,EAAgB6M,EAAOppB,KAAKrxB,OAAS26C,GAAwBF,EAAQ5qD,EAAM4qD,EAAOH,qBAC3H1K,EAAchC,cAAgBA,EAC9BgC,EAAc/B,aAAeA,CAC/B,CACA,GAAI4M,EAAOjL,kBAAmB,CAC5B,IAAIM,EAAmB,EACnBC,EAAkB0K,EAAO7C,gBAAgB53C,OACzCg7C,GAAuB,EAC3B,MAAOzD,EAAkBC,GAAmByD,GAAmB,CAC7DC,WAAYtL,EAAchC,cAC1BuN,UAAWvL,EAAc/B,aACzBuN,cAAe,EACfC,aAAcZ,EAAOppB,KAAKrxB,OAC1Bs7C,aAAc9H,EAAY1yC,OAAOy6C,UACjCC,YAAahI,EAAY1yC,OAAO26C,SAChCriC,UAAWqhC,EAAOrL,SAASh2B,UAC3BsiC,SAAUjB,EAAOF,gBAEnB,IAAK,IAAIv5C,EAAIu2C,EAAkBv2C,EAAIw2C,IAAoBwD,EAAsBh6C,GAAK,EAAG,CACnF,MAAM4F,EAAM6zC,EAAOppB,KAAKrwB,GACxBg6C,EAAuBP,EAAO32C,OAAOzC,QAAQ82C,iBAAiBvxC,EAAI3I,GACpE,CACK+8C,IACHlL,EAAmB6L,GAAajB,EAAUD,EAAO7C,gBAAiB,CAChEgD,SAAS,EACTC,aAAcJ,EAAOpT,oBAEvB0I,EAAkB4L,GAAajB,EAAWD,EAAOJ,mBAAoBI,EAAO7C,kBAE9EhI,EAAcE,iBAAmBA,EACjCF,EAAcG,gBAAkBA,CAClC,CACA,MAAM6L,EA6BR,SAA6BnB,EAAQpG,EAAmBb,GACtD,MAAO+D,EAAkBC,GAAmByD,GAAmB,CAC7DC,WAAY7G,EAAkBzG,cAC9BuN,UAAW9G,EAAkBxG,aAC7BuN,cAAe,EACfC,aAAcZ,EAAOppB,KAAKrxB,OAC1Bs7C,aAAc9H,EAAY1yC,OAAOy6C,UACjCC,YAAahI,EAAY1yC,OAAO26C,SAChCriC,UAAWqhC,EAAOrL,SAASh2B,UAC3BsiC,SAAUjB,EAAOF,iBAEZsB,EAA4BC,GAAsBb,GAAmB,CAC1EC,WAAY7G,EAAkBvE,iBAC9BqL,UAAW9G,EAAkBtE,gBAC7BqL,cAAeX,EAAOriC,cAAc/nB,KAAK2P,OACzCq7C,aAAcZ,EAAOviC,eAAelY,OAASy6C,EAAOriC,cAActoB,MAAMkQ,OACxEs7C,aAAc9H,EAAY1yC,OAAOi7C,aACjCP,YAAahI,EAAY1yC,OAAOk7C,YAChC5iC,UAAWqhC,EAAO7C,gBAClB8D,SAAUjB,EAAOD,kBAEbyB,EpBlTD,SAAyC/rD,GAM7C,IAN8C,oBAC/C+rD,EAAmB,OACnBn4C,EAAM,iBACNyzC,EAAgB,gBAChBC,EAAe,YACf0E,GACDhsD,EACKisD,EAAgCF,EACpC,IAAK,IAAIj7C,EAAIu2C,EAAkBv2C,EAAIw2C,EAAiBx2C,GAAK,EAEvD,GADYk7C,EAAYl7C,GACf,CACP,MAAM4vB,EAAQsrB,EAAYl7C,GAAG/C,GACvBm+C,EAAkBt4C,EAAOzC,QAAQg7C,4BAA4BzrB,EAAOqrB,GACtEG,GAAmBA,EAAgBE,mBACrCH,EAAgCC,EAAgBG,qBAEpD,CAEF,OAAOJ,CACT,CoB+R8BK,CAAiC,CAC3DP,oBAAqBJ,EACrB/3C,OAAQ22C,EAAO32C,OACfyzC,mBACAC,kBACA0E,YAAazB,EAAOppB,OAEtB,MAAO,CACLuc,cAAe2J,EACf1J,aAAc2J,EACd1H,iBAAkBmM,EAClBlM,gBAAiB+L,EAErB,CA/D8BW,CAAoBhC,EAAQ7K,EAAe4D,GACvE,OAAOoI,CACT,CACA,SAASjB,GAAwBF,EAAQrS,EAAQh3B,GAAS,IAAAsrC,EAAAC,EACxD,MAAMC,EAAqCnC,EAAO32C,OAAOzC,QAAQw7C,0BACjE,IAAIC,EAAkBF,IAAuCtwB,IAC7C,QAAZowB,EAAAjC,EAAO32B,aAAK,IAAA44B,GAAZA,EAAc7O,eAAiBiP,IAEjCA,EAAkBF,GAAsCnC,EAAO32B,MAAM+pB,cAEvE,MAAMkP,EAAyCn5B,GAAMg5B,IAAkD,QAAZD,EAAAlC,EAAO32B,aAAK,IAAA64B,OAAA,EAAZA,EAAc/O,gBAAiB,GAAI,EAAG6M,EAAOrL,SAASh2B,UAAUpZ,QAC3J,OAAI88C,GAAmBrC,EAAOrL,SAASh2B,UAAU2jC,IAA2C3U,EAGnFuT,GAAavT,EAAQqS,EAAOrL,SAASh2B,UAAWhI,GA0E3D,SAA2Bg3B,EAAQhvB,EAAWrE,GAA4B,IAArB3D,EAAOrR,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,QAAG/M,EACzDgqD,EAAW,EACf,KAAOjoC,EAAQqE,EAAUpZ,QAAU3J,KAAK6+C,IAAI97B,EAAUrE,IAAUqzB,GAC9DrzB,GAASioC,EACTA,GAAY,EAEd,OAAOrB,GAAavT,EAAQhvB,EAAWhI,EAAS/a,KAAKywC,MAAM/xB,EAAQ,GAAI1e,KAAKwtB,IAAI9O,EAAOqE,EAAUpZ,QACnG,CA1ESi9C,CAAkB7U,EAAQqS,EAAOrL,SAASh2B,UAAW2jC,EAAwC3rC,EACtG,CAgDA,SAASuqC,GAAavT,EAAQhvB,GAA6E,IAAlEhI,EAAOrR,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,QAAG/M,EAAWkqD,EAAUn9C,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,EAAGo9C,EAAQp9C,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAGqZ,EAAUpZ,OACjG,GAAIoZ,EAAUpZ,QAAU,EACtB,OAAQ,EAEV,GAAIk9C,GAAcC,EAChB,OAAOD,EAET,MAAME,EAAQF,EAAa7mD,KAAKywC,OAAOqW,EAAWD,GAAc,GAC1DlxD,EAAWotB,EAAUgkC,GAC3B,IAAIC,EACJ,GAAW,OAAPjsC,QAAO,IAAPA,GAAAA,EAASwpC,QAAS,CAEpByC,EAAWjV,IADIgV,IAAUhkC,EAAUpZ,OAAS,EAAIoR,EAAQypC,aAAezhC,EAAUgkC,EAAQ,IAAMpxD,GACnEA,CAC9B,MACEqxD,EAAWjV,GAAUp8C,EAEvB,OAAOqxD,EAAW1B,GAAavT,EAAQhvB,EAAWhI,EAAS8rC,EAAYE,GAASzB,GAAavT,EAAQhvB,EAAWhI,EAASgsC,EAAQ,EAAGD,EACtI,CASA,SAASlC,GAAkBlqD,GASxB,IATyB,WAC1BmqD,EAAU,UACVC,EAAS,aACTG,EAAY,YACZE,EAAW,cACXJ,EAAa,aACbC,EAAY,UACZjiC,EAAS,SACTsiC,GACD3qD,EACC,MAAMusD,EAAgBlkC,EAAU8hC,GAAcI,EACxCT,EAAezhC,EAAU+hC,GAAaK,EACtC+B,EAAmB5B,GAAa2B,EAAelkC,EAAW,CAC9DwhC,SAAS,EACTC,aAAczhC,EAAUA,EAAUpZ,OAAS,GAAK07C,IAE5C8B,EAAkB7B,GAAad,EAAczhC,GACnD,MAAO,CAACwK,GAAM25B,EAAkBnC,EAAeC,GAAez3B,GAAM45B,EAAiBpC,EAAeC,GACtG,CAOO,SAAStC,GAAkBnB,EAAiBhI,EAAe6N,GAAkB,IAAAC,EAAAC,EAClF,MAAMttD,GAAuD,QAAhDqtD,EAAC9F,EAAgBhI,EAAcE,yBAAiB,IAAA4N,EAAAA,EAAI,IAAuC,QAAtCC,EAAK/F,EAAgB6F,UAAiB,IAAAE,EAAAA,EAAI,GAC5G,OAAOtnD,KAAK6+C,IAAI7kD,EAClB,CAqBA,SAAS0jD,GAAmB17B,EAAOooB,EAAWiT,EAAaC,EAAgBC,EAAgBC,GACzF,GAAIx7B,EACF,OAAQooB,GACN,KAAKuQ,GAAgBsE,KACnB7U,EAAYuQ,GAAgBqE,MAC5B,MACF,KAAKrE,GAAgBqE,MACnB5U,EAAYuQ,GAAgBsE,KAKlC,OAAQ7U,GACN,KAAKuQ,GAAgB8C,KACnB,MAAO,CACL2H,SAAU/H,EACV6H,UAAW7H,EACXsI,YAAarI,EACboI,aAAcpI,GAElB,KAAK3C,GAAgBsE,KACnB,MAAO,CACLmG,SAAU,EACVF,UAAW,EACXS,YAAa,EACbD,aAAclI,GAElB,KAAK7C,GAAgBqE,MACnB,MAAO,CACLoG,SAAU,EACVF,UAAW,EACXS,YAAanI,EACbkI,aAAc,GAElB,KAAK/K,GAAgBoE,GACnB,MAAO,CACLqG,SAAU,EACVF,UAAW3H,EACXoI,YAAa,EACbD,aAAc,GAElB,KAAK/K,GAAgBmE,KACnB,MAAO,CACLsG,SAAU7H,EACV2H,UAAW,EACXS,YAAa,EACbD,aAAc,GAElB,QAEE,MAAM,IAAIr8C,MAAM,eAEtB,CCjuBO,MCKDk+C,IAAyBlyD,EAAAA,GAAAA,GAAO,MAAO,CAC3CC,KAAM,cACNR,KAAM,iBACNmS,kBAAmBugD,GAAiB,gBAATA,GAAmC,0BAATA,EACrDjyD,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOgyD,gBAJhBpyD,EAK5BqF,IAAA,IAAC,YACFgtD,EAAW,sBACXC,GACDjtD,EAAA,MAEyB,aAA1BitD,EAAuC,CACrChyD,SAAU,SAEV6D,IAAK,qCACLQ,KAAM,EACNoG,MAAO,EAEPtI,OAAQ,EAERE,OAAwB,mBAAhB0vD,EAAmC,EACzC,GACA,CAAC,CAAE,IACDE,IAA0BvyD,EAAAA,GAAAA,GAAO,MAAO,CAC5CC,KAAM,cACNR,KAAM,sBACNmS,kBAAmBugD,GAAiB,gBAATA,GAAmC,0BAATA,EACrDjyD,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOoyD,qBAJfxyD,CAK7B,CAAC,GACE0H,GAAoB/G,IACxB,MAAM,QACJ6G,GACE7G,EAKJ,OAAO8G,EAJO,CACZpH,KAAM,CAAC,kBACPoyD,MAAO,CAAC,wBAEmBz7C,EAAyBxP,EAAQ,EAEhE,SAASkrD,GAAmBvyD,GAC1B,MAAMiY,EAASuW,KACT1mB,EAAY2Z,IACZwkC,EAAcxD,GAAmBxqC,EAAQnQ,GACzCmR,EAAaX,EAAgBL,EAAQe,GAC3C,IAAI1W,EAAS2W,EAAWo/B,kBAAkB/1C,OAAS2W,EAAWu5C,mBAAqBv5C,EAAWw5C,uBAAyBx5C,EAAWqF,WAAarF,EAAWuF,cAAgB,IACtK1W,EAAU6R,YAA0C,IAA5BssC,EAAYzgB,KAAKrxB,QAA2B,IAAX7R,KAC3DA,EAASopC,GAAwBzzB,IAEnC,MAAM5Q,EAAUE,IAAkBH,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACpDqH,QAASS,EAAUT,WAErB,OAAoBmB,EAAAA,GAAAA,KAAKupD,IAAwB3qD,EAAAA,EAAAA,GAAS,CACxD3B,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,OACvBF,EAAO,CACR6F,UAAuB2C,EAAAA,GAAAA,KAAK4pD,IAAyBhrD,EAAAA,EAAAA,GAAS,CAC5D3B,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQirD,OACxB1uD,MAAO,CACLtB,SACAsI,MAAOqO,EAAWo/B,kBAAkBztC,QAErC5K,MAEP,CAiBO,SAAS0yD,GAAa1yD,GAAO,IAAA2yD,EAAAhkC,EAClC,MAAM,YACJujC,GACElyD,EACE8H,EAAY2Z,IAClB,IAAKywC,EACH,OAAO,KAET,MAAMU,EAAyB,QAAlBD,EAAG7qD,EAAUzB,aAAK,IAAAssD,OAAA,EAAfA,EAAkBT,GAC5BW,EAAkC,QAAtBlkC,EAAG7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAsBujC,GAC3C,OAAoB1pD,EAAAA,GAAAA,KAAK+pD,IAAoBnrD,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CAC/D6F,UAAuB2C,EAAAA,GAAAA,KAAKoqD,GAASxrD,EAAAA,EAAAA,GAAS,CAAC,EAAGyrD,MAEtD,CCzGO,MAAMC,GAAyB9/C,GAASA,EAAM+/C,WC8CrD,MAAMC,GAAsBzjC,IAjC5B,WAAuB,IAAAZ,EACrB,MAAM1W,EAASY,IACT/Q,EAAY2Z,IACZ4K,EAAiB/T,EAAgBL,EAAQiU,IACzC+mC,EAAqB36C,EAAgBL,EAAQqoC,IAC7C4S,EAAmB56C,EAAgBL,EAAQmmC,IAC3C+U,EAA4B76C,EAAgBL,EAAQwlC,IACpD2V,EAAoB96C,EAAgBL,EAAQulC,IAC5C6V,EAAiC/6C,EAAgBL,EAAQylC,IACzD4V,EAAoBh7C,EAAgBL,EAAQklC,IAC5CoW,EAAyBj7C,EAAgBL,EAAQmlC,IACjDoW,EAAyBl7C,EAAgBL,EAAQi/B,IACjDuc,EAAkBn7C,EAAgBL,EAAQ66C,IAC1CY,EAAmBp7C,EAAgBL,EAAQ+T,IAC3C2nC,EAA8Br7C,EAAgBL,EAAQ8+B,IACtD6c,IAAoE,OAAnCP,GAAyE,OAA9BF,GAA4D,OAAtBC,GAClHS,EAAsB57C,EAAOzC,QAAQs+C,0BAC3C,OAAoBtrD,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMyY,eAAe1X,EAAAA,EAAAA,GAAS,CAC/DnC,IAAK4uD,EACLxnC,eAAgBA,EAChB4mC,mBAAoBA,EACpBC,iBAAkBA,EAClBC,0BAA2BA,EAC3BE,+BAAgCA,EAChCC,kBAAmBA,EACnBC,uBAAwBA,EACxBC,uBAAwBA,EACxBC,gBAAiBA,EACjBC,iBAAkBA,EAClBC,4BAA6BA,EAC7BC,6BAA8BA,GACV,QAArBjlC,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB7P,eAC1B,IC5Cai1C,GAAwChvD,EAAAA,mBAAoBoC,GCClE,MAAM6sD,GAAuBA,KAClC,MAAMC,EAAgBlvD,EAAAA,WAAiBgvD,IACvC,QAAsB5sD,IAAlB8sD,EACF,MAAM,IAAIpgD,MAAM,CAAC,6DAA8D,oHAAqH,gFAAgFkF,KAAK,OAE3R,OAAOk7C,CAAa,ECDhBC,IAAkBr0D,EAAAA,GAAAA,GAAO,MAAPA,CAAc,CACpCM,SAAU,WACV6D,IAAK,qCACLQ,KAAM,EACNoG,MAAO,8EAEHupD,IAAUt0D,EAAAA,GAAAA,GAAO,MAAO,CAC5BC,KAAM,cACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOwD,MAH/B5D,CAIb,CACDu0D,SAAU,EACVj0D,SAAU,WACVoN,SAAU,SACVnN,QAAS,OACTkB,cAAe,WAEJ+yD,GAAiCtvD,EAAAA,YAAiB,CAAC/E,EAAOiF,KACrE,MAAM6C,EAAY2Z,IAEZ6yC,EADgBN,KACeO,MAAMC,wBAC3C,OAAoBjsD,EAAAA,GAAAA,MAAM4rD,IAAS/sD,EAAAA,EAAAA,GAAS,CAC1CnC,IAAKA,EACLzE,WAAYsH,EACZrC,UAAWzF,EAAMyF,UACjBkN,UAAW,GACV2hD,EAAgB,CACjBzuD,SAAU,EAAc2C,EAAAA,GAAAA,KAAK0rD,GAAiB,CAC5CrpD,KAAM,eACN,UAAW,oBACT7K,EAAM6F,YACT,IC9BC0B,GAAoBA,IAIjBD,EAHO,CACZpH,KAAM,CAAC,iBAEoB2W,EAAyB,CAAC,GAEnDs9C,IAAUt0D,EAAAA,GAAAA,GAAO,MAAPA,CAAc,CAC5BM,SAAU,SACVqC,OAAQ,EACRwB,IAAK,IAEA,SAASywD,GAAiBz0D,GAC/B,MAAMqH,EAAUE,KAChB,OAAoBiB,EAAAA,GAAAA,KAAK2rD,IAAS/sD,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACpDyF,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAM4W,EAAY,mBAC1CjM,KAAM,iBAEV,CCjBA,MAAMtD,GAAoBA,IAIjBD,EAHO,CACZpH,KAAM,CAAC,oBAEoB2W,EAAyB,CAAC,GAEnDs9C,IAAUt0D,EAAAA,GAAAA,GAAO,MAAPA,CAAc,CAC5BM,SAAU,SACVqC,OAAQ,EACR8B,OAAQ,qEAEH,SAASowD,GAAoB10D,GAClC,MAAMqH,EAAUE,KAChB,OAAoBiB,EAAAA,GAAAA,KAAK2rD,IAAS/sD,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACpDyF,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAM4W,EAAY,sBAC1CjM,KAAM,iBAEV,CChBA,MASM8pD,IAA6B90D,EAAAA,GAAAA,GAAO,MAAO,CAC/CC,KAAM,cACNR,KAAM,yBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOugB,wBAHZ3gB,CAIhC,CAAC,GACE+0D,GAA0C7vD,EAAAA,YAAiB,SAAoC/E,EAAOiF,GAAK,IAAA4vD,EAC/G,MAAM/sD,EAAY2Z,IAEZpa,EAjBkBE,EAACvH,EAAO80D,KAChC,MAAM,QACJztD,GACErH,EAIJ,OAAOsH,EAHO,CACZpH,KAAM,CAAC,yBAA0B40D,GAAqB,uCAE3Bj+C,EAAyBxP,EAAQ,EAU9CE,CAAkBO,GADPA,EAAU6R,YAAyC,UAAhB,QAAXk7C,EAAA70D,EAAM4D,aAAK,IAAAixD,OAAA,EAAXA,EAAaj3C,YAEhE,OAAoBpV,EAAAA,GAAAA,KAAKmsD,IAA4BvtD,EAAAA,EAAAA,GAAS,CAC5DnC,IAAKA,GACJjF,EAAO,CACRQ,WAAYsH,EACZrC,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMF,EAAMyF,aAExC,ICxBMsvD,IAASl1D,EAAAA,GAAAA,GAAO,MAAPA,CAAc,CAC3BO,QAAS,OACTkB,cAAe,MACfsJ,MAAO,2BACPjJ,UAAW,eAEPqzD,IAASn1D,EAAAA,GAAAA,GAAO,MAAPA,CAAc,CAC3BM,SAAU,SACVmC,OAAQ,OACRX,UAAW,aACX4d,UAAW,kCACX1b,gBAAiB,qCAEboxD,IAAap1D,EAAAA,GAAAA,GAAOm1D,GAAPn1D,CAAe,CAChC2E,KAAM,EACN0wD,YAAa,oCAETC,IAAct1D,EAAAA,GAAAA,GAAOm1D,GAAPn1D,CAAe,CACjCoE,MAAO,EACPmxD,WAAY,oCAERC,IAAOx1D,EAAAA,GAAAA,GAAO,MAAPA,CAAc,CACzBu0D,SAAU,EACV70C,UAAW,oCAwCb,MAAM+1C,GAAW/lC,IAtCjB,SAAkCrqB,GAE/B,IAFgC,WACjCqwD,GACDrwD,EACC,MAAM+S,EAASuW,MACT,kBACJ6pB,EAAiB,YACjBmd,EAAW,WACXl3C,EAAU,WACVC,EAAU,cACVC,EAAa,gBACb29B,EAAe,iBACfC,GACE9jC,EAAgBL,EAAQe,GACtB1W,EAASgc,EAAaE,EAAgB,EACtCi3C,EAAqBpd,EAAkB/1C,OAASkzD,EAAYlzD,OAAS,EAC3E,OAAe,IAAXA,GAAiBmzD,GAGDltD,EAAAA,GAAAA,MAAMwsD,GAAQ,CAChCtvD,UAAWqR,EAAYqI,OACvBtU,KAAM,eACNjH,MAAO,CACLtB,SACA,mBAAmC,IAAfizD,EAAmB,cAAgB,kCAEzD1vD,SAAU,CAACs2C,EAAkB,IAAkB3zC,EAAAA,GAAAA,KAAKysD,GAAY,CAC9DxvD,UAAWqR,EAAY,sBACvBlT,MAAO,CACLgH,MAAOuxC,MAEM3zC,EAAAA,GAAAA,KAAK6sD,GAAM,CAAC,GAAIjZ,EAAmB,IAAkB5zC,EAAAA,GAAAA,KAAK2sD,GAAa,CACtF1vD,UAAWqR,EAAY,uBACvBlT,MAAO,CACLgH,MAAOwxC,GAAoB79B,EAAaC,EAAgB,SAjBrD,IAqBX,ICpEM/e,GAAY,CAAC,aAqBbi2D,IAAgC71D,EAAAA,GAAAA,GAAO,MAAO,CAClDC,KAAM,cACNR,KAAM,4BACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO01D,2BAHT91D,CAInC,CACDM,SAAU,WACVC,QAAS,OAETkB,cAAe,WAEXs0D,GAA6C7wD,EAAAA,YAAiB,SAAuC/E,EAAOiF,GAChH,MAAM,UACFQ,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACT1mB,EAAY2Z,IACZpa,EA1BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,8BAEoB2W,EAAyBxP,EAAQ,EAmB9CE,CAAkBO,GAC5BslD,EAAY90C,EAAgBL,GAAQ,KAAM,IAAA49C,EAC9C,MAAM9R,EAAgBD,GAA0B7rC,GAEhD,OAAsD,QAAtD49C,EADiBvS,GAAqBrrC,EAAOzC,QAAQxC,OACrCua,UAAUw2B,EAAchC,sBAAc,IAAA8T,EAAAA,EAAI,CAAC,IAE7D,OAAoBrtD,EAAAA,GAAAA,KAAKktD,IAA+BtuD,EAAAA,EAAAA,GAAS,CAC/DnC,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,EACZlE,MAAO,CACLM,UAAW,kBAAFvD,OAAoBysD,EAAS,YAEvC3mD,GACL,ICnCMqvD,IAAYj2D,EAAAA,GAAAA,GAAO,MAAPA,CAAc,CAC9BM,SAAU,WACVC,QAAS,eACToC,OAAQ,EAKR,SAAU,mDAENuzD,IAAoBl2D,EAAAA,GAAAA,GAAOi2D,GAAPj2D,CAAkB,CAC1C+K,MAAO,cACPtI,OAAQ,sLACRooD,UAAW,OACXD,UAAW,SAEX9sC,QAAS,EACT,UAAW,CACT/S,MAAO,eAET5G,IAAK,qCACLC,MAAO,QAEH+xD,IAAsBn2D,EAAAA,GAAAA,GAAOi2D,GAAPj2D,CAAkB,CAC5C+K,MAAO,OACPtI,OAAQ,cACRooD,UAAW,SACXD,UAAW,OAEX9sC,QAAS,EACT,UAAW,CACTrb,OAAQ,eAEVgC,OAAQ,QAEJ2xD,GAAoClxD,EAAAA,YAAiB,SAA8B/E,EAAOiF,GAC9F,MAAMgT,EAASY,IACT/Q,EAAY2Z,IACZy0C,EAAWnxD,EAAAA,QAAa,GACxBiqD,EAAejqD,EAAAA,OAAa,GAC5BoxD,EAAepxD,EAAAA,OAAa,MAC5BqxD,EAAarxD,EAAAA,OAAa,MAC1BsC,EApDkBE,EAAC/G,EAAYL,KACrC,MAAM,QACJkH,GACE7G,EAKJ,OAAO8G,EAJO,CACZpH,KAAM,CAAC,YAAa,cAAFS,OAAgBR,IAClCk2D,QAAS,CAAC,qBAEiBx/C,EAAyBxP,EAAQ,EA4C9CE,CAAkBO,EAAW9H,EAAMG,UAC7C8Y,EAAaX,EAAgBL,EAAQe,GACrCs9C,EAAuC,aAAnBt2D,EAAMG,SAA0B,SAAW,QAC/Do2D,EAAoC,aAAnBv2D,EAAMG,SAA0B,YAAc,aAC/Dq2D,EAA+B,aAAnBx2D,EAAMG,SAA0B8Y,EAAWqF,WAAarF,EAAWsF,WAC/EqoC,EAAc3tC,EAAWu8C,YAAYc,IAAsBE,EAAYv9C,EAAWuF,cAAgB,GAElGi4C,GADmC,aAAnBz2D,EAAMG,SAA0B8Y,EAAW2iC,kBAAkBt5C,OAAS2W,EAAWo/B,kBAAkBztC,QAC7Eg8C,EAAc3tC,EAAWo/B,kBAAkBie,IACjFI,EAAmBpa,IAAiB,KACxC,MAAMqa,EAAW1+C,EAAOzC,QAAQ8wC,mBAAmB9wC,QAC7CohD,EAAYT,EAAa3gD,QAC/B,GAAImhD,EAASJ,KAAoBvH,EAAax5C,QAC5C,OAEF,GAAI0gD,EAAS1gD,QAEX,YADA0gD,EAAS1gD,SAAU,GAGrB0gD,EAAS1gD,SAAU,EACnB,MAAMpL,EAAQusD,EAASJ,GAAkB3P,EACzCgQ,EAAUL,GAAkBnsD,EAAQqsD,EACpCzH,EAAax5C,QAAUmhD,EAASJ,EAAe,IAE3CM,EAAoBva,IAAiB,KACzC,MAAMqa,EAAW1+C,EAAOzC,QAAQ8wC,mBAAmB9wC,QAC7CohD,EAAYT,EAAa3gD,QAC/B,GAAI0gD,EAAS1gD,QAEX,YADA0gD,EAAS1gD,SAAU,GAGrB0gD,EAAS1gD,SAAU,EACnB,MAAMpL,EAAQwsD,EAAUL,GAAkBE,EAC1CE,EAASJ,GAAkBnsD,EAAQw8C,CAAW,IAEhDjvC,GAAW,KACT,MAAMg/C,EAAW1+C,EAAOzC,QAAQ8wC,mBAAmB9wC,QAC7CohD,EAAYT,EAAa3gD,QAO/B,OANAmhD,EAASG,iBAAiB,SAAUJ,EAAkB,CACpDK,SAAS,IAEXH,EAAUE,iBAAiB,SAAUD,EAAmB,CACtDE,SAAS,IAEJ,KACLJ,EAASK,oBAAoB,SAAUN,EAAkB,CACvDK,SAAS,IAEXH,EAAUI,oBAAoB,SAAUH,EAAmB,CACzDE,SAAS,GACT,CACH,IAEHhyD,EAAAA,WAAgB,KACEqxD,EAAW5gD,QACnB5R,MAAMqzD,YAAYX,EAAmB,GAAF31D,OAAK81D,EAAkB,MAAK,GACtE,CAACA,EAAoBH,IACxB,MAAMY,EAA+B,aAAnBl3D,EAAMG,SAA0B41D,GAAoBC,GACtE,OAAoBxtD,EAAAA,GAAAA,KAAK0uD,EAAW,CAClCjyD,IAAKmQ,EAAWnQ,EAAKkxD,GACrB1wD,UAAW4B,EAAQnH,KACnB0D,MAA0B,aAAnB5D,EAAMG,UAA2B2H,EAAUgzC,kBAAoB,CACpEx4C,OAAQ,OACR0B,IAAK,QACHmD,EACJwL,UAAW,EACX,cAAe,OACf9M,UAAuB2C,EAAAA,GAAAA,KAAK,MAAO,CACjCvD,IAAKmxD,EACL3wD,UAAW4B,EAAQgvD,WAGzB,ICpGMc,IAAWt3D,EAAAA,GAAAA,GAAO,MAAO,CAC7BC,KAAM,cACNR,KAAM,kBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO4gB,iBAH9BhhB,CAId,CACDM,SAAU,WACVmC,OAAQ,OACR8xD,SAAU,EACV7mD,SAAU,SACV6pD,eAAgB,OAChBh3D,QAAS,OACTkB,cAAe,SACf,uBAAwB,CACtBlB,QAAS,QAEX,eAAgB,CACdmN,SAAU,UAGZ/K,OAAQ,IAEV,SAAS60D,GAAoBr3D,GAC3B,MAAMiY,EAASuW,KACT1mB,EAAY2Z,IACZxI,EAAaX,EAAgBL,EAAQe,GACrCs+C,EbhDuBC,MAC7B,MAAMt/C,EAASuW,KACT1mB,EAAY2Z,IACZikB,EAAgBptB,EAAgBL,EAAQwtB,IACxC+xB,EAAkBl/C,EAAgBL,EAAQ4nC,IAC1C4X,EAA2B,IAAlB/xB,EACTE,EAAUttB,EAAgBL,EAAQ0tB,IAGxC,IAAIusB,EAAc,KACdC,EAAwB,KAOf,IAAAxjC,EAIb,OAd2BiX,GAAW6xB,IAKpCvF,EAAc,kBAJctsB,GAAWF,EAAgB,GAAyB,IAApB8xB,IAO5DtF,EAAc,oBAEZtsB,IACFssB,EAAc,iBACdC,GAA2C,QAAnBxjC,EAAA7mB,EAAUxB,iBAAS,IAAAqoB,GAAgB,QAAhBA,EAAnBA,EAAqB+oC,sBAAc,IAAA/oC,OAAA,EAAnCA,EAAsC8oC,EAAS,gBAAkB,aAAc,MAElG,CACLvF,cACAC,wBACD,EawBqBoF,GAChBlwD,EApCkBE,EAAC/G,EAAYyY,EAAYk5C,KACjD,MAAM,QACJ9qD,GACE7G,EAKJ,OAAO8G,EAJO,CACZpH,KAAM,CAAC,OAAQ+Y,EAAWmjC,iBAAmB,GAAK,uBAAkD,aAA1B+V,GAAwC,mCAClHwE,SAAU,CAAC,kBAAmB19C,EAAWqF,YAAc,gCAE5BzH,EAAyBxP,EAAQ,EA4B9CE,CAAkBO,EAAWmR,EAAYq+C,EAAcnF,uBACjEtxC,EAAkB0kC,MAClB,kBACJkI,EAAiB,iBACjBC,EAAgB,gBAChBK,EAAe,mBACfC,EAAkB,0BAClBC,EAAyB,4BACzBC,EAA2B,QAC3BhD,GACErqC,EACE2kB,EAAO0lB,IACb,OAAoB3iD,EAAAA,GAAAA,MAAM2uD,IAAW9vD,EAAAA,EAAAA,GAAS,CAC5C3B,UAAW4B,EAAQnH,MAClButD,IAAqB,CACtB5nD,SAAU,EAAc2C,EAAAA,GAAAA,KAAK8yC,GAAgB,CAC3CC,gBAAiB,UACF/yC,EAAAA,GAAAA,KAAK8yC,GAAgB,CACpCC,gBAAiB,WACFhzC,EAAAA,GAAAA,MAAM4uD,IAAU/vD,EAAAA,EAAAA,GAAS,CACxC3B,UAAW4B,EAAQsvD,UAClBjJ,IAAoB,CACrBltD,WAAYsH,EACZjC,SAAU,EAAc0C,EAAAA,GAAAA,MAAMovD,GAAc,CAC1C9xD,SAAU,EAAEiC,EAAUgzC,oBAAkCtyC,EAAAA,GAAAA,KAAKovD,GAAa,CAAC,IAAiBpvD,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMua,WAAY,CAC3HzgB,SAAU,MACV0gB,gBAAiBA,QAEJrY,EAAAA,GAAAA,KAAKqvD,IAAUzwD,EAAAA,EAAAA,GAAS,CAAC,EAAGkwD,KAA8B9uD,EAAAA,GAAAA,KAAKsvD,IAAS1wD,EAAAA,EAAAA,GAAS,CAAC,EAAG2mD,IAAmB,CACvHloD,UAAuB0C,EAAAA,GAAAA,MAAMwvD,IAAY3wD,EAAAA,EAAAA,GAAS,CAAC,EAAG4mD,IAAsB,CAC1EnoD,SAAU,CAAC2/B,GAAmBh9B,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM2xD,aAAc,CAC/Dn3C,gBAAiBA,YAGLrY,EAAAA,GAAAA,KAAKyvD,GAAa,CAClC1C,WAAY/vB,EAAKrxB,UACF3L,EAAAA,GAAAA,KAAK0vD,GAAiB,CACrCryD,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMua,WAAY,CACtDzgB,SAAU,SACV0gB,gBAAiBA,UAGlB5H,EAAWsF,aAA2B/V,EAAAA,GAAAA,KAAKstD,IAAW1uD,EAAAA,EAAAA,GAAS,CAClEjH,SAAU,YACT8tD,MAA+Bh1C,EAAWqF,aAAexW,EAAUgzC,oBAAkCtyC,EAAAA,GAAAA,KAAKstD,IAAW1uD,EAAAA,EAAAA,GAAS,CAC/HjH,SAAU,cACT+tD,MAAiCluD,EAAM6F,YAE9C,CCtGO,SAASsyD,KAAwB,IAAAxpC,EACtC,MAAM7mB,EAAY2Z,IAClB,OAAI3Z,EAAUswD,WACL,MAEW5vD,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMgyD,QAAQjxD,EAAAA,EAAAA,GAAS,CAAC,EAAsB,QAArBunB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB0pC,QACrF,CCCA,SAASC,GAAqCrgD,EAAQsgD,GACpD,MAAMra,EAAU/X,GAAoBluB,GAC9BugD,EAAe5a,GAAyB3lC,GACxC2mC,EAAqBD,GAA+B1mC,GACpDwgD,EAAYva,EAAQqa,GAC1B,IAAKE,GAAgC,UAAnBA,EAAUxrD,KAC1B,MAAO,GAET,MAAMyrD,EAAc,GAEpB,IAAK,IAAIxvC,EADUsvC,EAAax0C,WAAU5R,GAAMA,IAAOmmD,IAAW,EACrCrvC,EAAQsvC,EAAarkD,SAAsC,QAA5BwkD,EAAAza,EAAQsa,EAAatvC,WAAO,IAAAyvC,OAAA,EAA5BA,EAA8B9xB,OAAQ4xB,EAAU5xB,MAAO3d,GAAS,EAAG,KAAAyvC,EAC7H,MAAMvmD,EAAKomD,EAAatvC,IACO,IAA3B01B,EAAmBxsC,IAAiB6F,EAAOzC,QAAQi3C,gBAAgBr6C,IACrEsmD,EAAY1wC,KAAK5V,EAErB,CACA,OAAOsmD,CACT,CAoCO,SAASE,GAA8B54D,GAC5C,OAAIA,EAAM64D,YAActoC,GAAcywB,SAE7BhhD,EAAM84D,oBAA2D,IAAtC94D,EAAM+4D,6BAElC/4D,EAAM+4D,2BAChB,CACA,MAyBaC,GAAmBA,CAAC/gD,EAAQmuB,EAAM6yB,EAAaC,EAAuBC,EAAmBC,KACpG,MAAMC,EAAe1a,GAA+B1mC,GAC9CqhD,EAAoBjW,GAA0BprC,GAC9CshD,EAAsB,IAAI/gC,IAAI,IACpC,GAAK0gC,GAA0BC,EAA/B,CAGA,GAAID,EAAuB,CACzB,MAAMnvB,EAAU3D,EAAK6yB,GACrB,GAAsB,WAAX,OAAPlvB,QAAO,IAAPA,OAAO,EAAPA,EAAS98B,MAAkB,CACTqrD,GAAqCrgD,EAAQghD,GACrDrsD,SAAQm4B,IAClBq0B,EAAOr0B,GACPw0B,EAAoBC,IAAIz0B,EAAM,GAElC,CACF,CACA,GAAIo0B,EAAmB,CACrB,MAAMM,EAA8B10B,IAClC,GAAIu0B,EAAkBv0B,KAAWA,IAAUw0B,EAAoBjhC,IAAIyM,GACjE,OAAO,EAET,MAAMqF,EAAOhE,EAAKrB,GAClB,MAAmB,WAAX,OAAJqF,QAAI,IAAJA,OAAI,EAAJA,EAAMn9B,OAGHm9B,EAAKvkC,SAASyP,MAAMmkD,EAA4B,EAEnDC,EAAkB30B,IACtB,MAAM40B,EAzCuBC,EAACxzB,EAAMizB,EAAcjnD,KACtD,MAAMg4B,EAAOhE,EAAKh0B,GAClB,IAAKg4B,EACH,MAAO,GAET,MAAMyvB,EAASzvB,EAAKyvB,OACpB,OAAc,MAAVA,EACK,GAEUzzB,EAAKyzB,GACNh0D,SAASxC,QAAOy2D,GAAWA,IAAY1nD,GAAMinD,EAAaS,IAAS,EA+BhEF,CAA2BxzB,EAAMizB,EAAct0B,GAChE,GAAwB,IAApB40B,EAASxlD,QAAgBwlD,EAASrkD,MAAMmkD,GAA8B,CACxE,MACMI,EADUzzB,EAAKrB,GACE80B,OACT,MAAVA,GAAkBA,IAAW/xB,IAAsB7vB,EAAOzC,QAAQi3C,gBAAgBoN,KACpFT,EAAOS,GACPN,EAAoBC,IAAIK,GACxBH,EAAgBG,GAEpB,GAEFH,EAAgBT,EAClB,CAnCA,CAmCA,EAEWc,GAAqBA,CAAC9hD,EAAQmuB,EAAM4zB,EAAed,EAAuBC,EAAmBc,KACxG,MAAMX,EAAoBjW,GAA0BprC,GACpD,GAAKkhD,GAAsBD,EAA3B,CAGA,GAAIC,EAAmB,CACrB,MAAMe,EA1EgBC,EAAC/zB,EAAMh0B,KAC/B,MAAMgoD,EAAU,GAChB,IAAIP,EAASznD,EACb,KAAiB,MAAVynD,GAAkBA,IAAW/xB,IAAoB,CACtD,MAAMsC,EAAOhE,EAAKyzB,GAClB,IAAKzvB,EACH,OAAOgwB,EAETA,EAAQpyC,KAAK6xC,GACbA,EAASzvB,EAAKyvB,MAChB,CACA,OAAOO,CAAO,EA+DOD,CAAkB/zB,EAAM4zB,GAC3CE,EAAWttD,SAAQitD,IACEP,EAAkBO,KAAYA,GAE/CI,EAAUJ,EACZ,GAEJ,CACA,GAAIX,EAAuB,CACzB,MAAMnvB,EAAU3D,EAAK4zB,GACrB,GAAsB,WAAX,OAAPjwB,QAAO,IAAPA,OAAO,EAAPA,EAAS98B,MAAkB,CACTqrD,GAAqCrgD,EAAQ+hD,GACrDptD,SAAQytD,IAClBJ,EAAUI,EAAW,GAEzB,CACF,CAlBA,CAkBA,EC3JK,SAASC,GAAmBp1D,GAKhC,IALiC,cAClC4T,EAAa,cACbm7C,EAAa,MACbj0D,EAAK,SACL6F,GACDX,EACC,MAAM+S,EAASlT,EAAAA,OAAa+T,EAActD,QAAQwlB,gBAClD,OAAoBxyB,EAAAA,GAAAA,KAAKurD,GAAyBwG,SAAU,CAC1DnwD,MAAO6pD,EACPpuD,UAAuB2C,EAAAA,GAAAA,KAAKgZ,EAAqB+4C,SAAU,CACzDnwD,MAAOpK,EACP6F,UAAuB2C,EAAAA,GAAAA,KAAKoQ,EAAsB2hD,SAAU,CAC1DnwD,MAAO0O,EACPjT,UAAuB2C,EAAAA,GAAAA,KAAK+lB,GAAegsC,SAAU,CACnDnwD,MAAO6N,EACPpS,SAAUA,SAKpB,CCzBO,MCED20D,GzEMC,WACL,IAIE,MAAMl3D,EAAM,+CAGZ,OAFAoS,OAAO+kD,aAAaC,QAAQp3D,EAAKA,GACjCoS,OAAO+kD,aAAaE,WAAWr3D,IACxB,CACT,CAAE,MAAOs3D,GACP,OAAO,CACT,CACF,CyElBmBC,IAAmE,MAAxCnlD,OAAO+kD,aAAaK,QAAQ,SACpE/d,GAAOA,OACPge,GAAa,CACjBC,MAAOje,GACPhvC,KAAMgvC,GACNke,KAAMle,GACN9wC,MAAO8wC,IAEHme,GAAa,CAAC,QAAS,OAAQ,OAAQ,SAC7C,SAASC,GAAYr7D,EAAMs7D,GAA8B,IAApBC,EAAQnnD,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAGonD,QAC9C,MAAMC,EAAiBL,GAAWlmC,QAAQomC,GAC1C,IAAwB,IAApBG,EACF,MAAM,IAAI1nD,MAAM,oBAADlT,OAAqBy6D,EAAQ,qBAE9C,MAAMI,EAASN,GAAWlyC,QAAO,CAACyyC,EAAWC,EAAQC,KAEjDF,EAAUC,GADRC,GAAOJ,EACW,WAAa,QAAAtnD,EAAAC,UAAAC,OAATC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAC1B,MAAOsnD,KAAYn1D,GAAS2N,EAC5BinD,EAASK,GAAQ,UAAD/6D,OAAWb,EAAI,OAAAa,OAAMi7D,MAAcn1D,EACrD,EAEoBs2C,GAEf0e,IACN,CAAC,GACJ,OAAOD,CACT,CC1BO,MAAMK,GACXh3C,WAAAA,GACEE,KAAK+2C,aAAe,GACpB/2C,KAAKg3C,UAAW,EAChBh3C,KAAKi3C,OAAS,CAAC,CACjB,CACAC,EAAAA,CAAGrrC,EAAWsrC,GAAwB,IAAd32C,EAAOrR,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7BioD,EAAap3C,KAAKi3C,OAAOprC,GACxBurC,IACHA,EAAa,CACXC,aAAc,IAAIn2C,IAClBo2C,QAAS,IAAIp2C,KAEflB,KAAKi3C,OAAOprC,GAAaurC,GAEvB52C,EAAQsM,QACVsqC,EAAWC,aAAar2C,IAAIm2C,GAAU,GAEtCC,EAAWE,QAAQt2C,IAAIm2C,GAAU,EASrC,CACAI,cAAAA,CAAe1rC,EAAWsrC,GACpBn3C,KAAKi3C,OAAOprC,KACd7L,KAAKi3C,OAAOprC,GAAWyrC,QAAQrsC,OAAOksC,GACtCn3C,KAAKi3C,OAAOprC,GAAWwrC,aAAapsC,OAAOksC,GAE/C,CACAK,kBAAAA,GACEx3C,KAAKi3C,OAAS,CAAC,CACjB,CACAQ,IAAAA,CAAK5rC,GACH,MAAMurC,EAAap3C,KAAKi3C,OAAOprC,GAC/B,IAAKurC,EACH,OAEF,MAAMM,EAAwBpoD,MAAM6jB,KAAKikC,EAAWC,aAAal5D,QAC3Dw5D,EAAmBroD,MAAM6jB,KAAKikC,EAAWE,QAAQn5D,QAAQ,QAAA+Q,EAAAC,UAAAC,OAN9CC,EAAI,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,EAAA,GAAAJ,UAAAI,GAOrB,IAAK,IAAIa,EAAIsnD,EAAsBtoD,OAAS,EAAGgB,GAAK,EAAGA,GAAK,EAAG,CAC7D,MAAM+mD,EAAWO,EAAsBtnD,GACnCgnD,EAAWC,aAAa9jC,IAAI4jC,IAC9BA,EAAS53C,MAAMS,KAAM3Q,EAEzB,CACA,IAAK,IAAIe,EAAI,EAAGA,EAAIunD,EAAiBvoD,OAAQgB,GAAK,EAAG,CACnD,MAAM+mD,EAAWQ,EAAiBvnD,GAC9BgnD,EAAWE,QAAQ/jC,IAAI4jC,IACzBA,EAAS53C,MAAMS,KAAM3Q,EAEzB,CACF,CACAuoD,IAAAA,CAAK/rC,EAAWsrC,GAEd,MAAMU,EAAO73C,KACbA,KAAKk3C,GAAGrrC,GAAW,SAASisC,IAC1BD,EAAKN,eAAe1rC,EAAWisC,GAAiB,QAAA51C,EAAA/S,UAAAC,OADHC,EAAI,IAAAC,MAAA4S,GAAAL,EAAA,EAAAA,EAAAK,EAAAL,IAAJxS,EAAIwS,GAAA1S,UAAA0S,GAEjDs1C,EAAS53C,MAAMs4C,EAAMxoD,EACvB,GACF,ECnEK,MAAM0oD,GACX,aAAOn6D,CAAOyH,GACZ,OAAO,IAAI0yD,GAAM1yD,EACnB,CACAya,WAAAA,CAAYk4C,GACVh4C,KAAK3a,WAAQ,EACb2a,KAAKi4C,eAAY,EACjBj4C,KAAKrM,UAAYd,IACfmN,KAAKi4C,UAAUxD,IAAI5hD,GACZ,KACLmN,KAAKi4C,UAAUhtC,OAAOpY,EAAG,GAG7BmN,KAAKk4C,YAAc,IACVl4C,KAAK3a,MAEd2a,KAAKimB,OAAS5gC,IACZ2a,KAAK3a,MAAQA,EACb2a,KAAKi4C,UAAUpwD,SAAQ+Y,GAAKA,EAAEvb,IAAO,EAEvC2a,KAAK3a,MAAQ2yD,EACbh4C,KAAKi4C,UAAY,IAAIxkC,GACvB,ECjBF,MAAM0kC,GAAqBt7C,OAAO,mBAOlC,IAAIgU,GAAW,EAyDR,SAASunC,GAAyBC,EAAap9D,GAAO,IAAAq9D,EAC3D,MAAM9gC,EAAex3B,EAAAA,SACf+T,EAAgB/T,EAAAA,SACjB+T,EAActD,UACjBsD,EAActD,QA5DlB,SAA0B+mB,GAAc,IAAA+gC,EACtC,MAAMC,EAAyC,QAAvBD,EAAG/gC,EAAa/mB,eAAO,IAAA8nD,OAAA,EAApBA,EAAuBJ,IAClD,GAAIK,EACF,OAAOA,EAET,MAAMvqD,EAAQ,CAAC,EACTwqD,EAAa,CACjBxqD,QACAyF,MAAOqkD,GAAMn6D,OAAOqQ,GACpB0W,WAAY,CACVtX,GAAIwjB,KA6BR,OA1BAA,IAAY,EACZ4nC,EAAWxiC,aAAe,IAAMuB,EAAa/mB,QAC7CgoD,EAAW5tC,SAAW,CAACvW,EAAYokD,KACjCx6D,OAAOC,KAAKu6D,GAAS7wD,SAAQ8wD,IAC3B,MAAMhC,EAAS+B,EAAQC,GACjBC,EAAuBH,EAAWE,GAMxC,IALqC,KAAb,OAApBC,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBC,QACxBD,EAAqBlqD,OAASioD,EAE9B8B,EAAWE,GAAchC,EAER,WAAfriD,EAAyB,CAC3B,MAAMwkD,EAAYthC,EAAa/mB,QACzBsoD,EAAsBD,EAAUH,IACF,KAAb,OAAnBI,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBF,QACvBE,EAAoBrqD,OAASioD,EAE7BmC,EAAUH,GAAchC,CAE5B,IACA,EAEJ8B,EAAW5tC,SAAS,UAAW,CAC7BuZ,OAAQ,CAAC,EACT40B,aAAc,IAAIlC,KAEb2B,CACT,CAoB4BQ,CAAiBzhC,IAEtCA,EAAa/mB,UAChB+mB,EAAa/mB,QAtBjB,SAAyBsD,GAavB,MAZkB,CAChB,SAAI9F,GACF,OAAO8F,EAActD,QAAQxC,KAC/B,EACA,SAAIyF,GACF,OAAOK,EAActD,QAAQiD,KAC/B,EACA,cAAIiR,GACF,OAAO5Q,EAActD,QAAQkU,UAC/B,EACA,CAACwzC,IAAqBpkD,EAActD,QAGxC,CAQ2ByoD,CAAgBnlD,IAEzC,MAAMq3B,EAAeprC,EAAAA,aAAkB,WAAa,QAAAkP,EAAAC,UAAAC,OAATC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAC7C,MAAOxU,EAAMqxB,EAAQ9d,EAAQ,CAAC,GAAKe,EAEnC,GADAf,EAAMie,qBAAsB,EA1EPje,SACelM,IAA/BkM,EAAM6qD,qBA0EPC,CAAiB9qD,IAAUA,EAAM6qD,uBACnC,OAEF,MAAM9sC,EAAUpxB,EAAM64D,YAActoC,GAAc6tC,aAAep+D,EAAM64D,YAActoC,GAAc8tC,gBAAkB,CACnHC,IAAKxlD,EAActD,QAAQwlB,gBACzB,CAAC,EACLliB,EAActD,QAAQuoD,aAAavB,KAAK18D,EAAMqxB,EAAQ9d,EAAO+d,EAC/D,GAAG,CAACtY,EAAe9Y,EAAM64D,YACnBtnC,EAAiBxsB,EAAAA,aAAkB,CAACsO,EAAOwd,EAAStL,KACxDzM,EAActD,QAAQuoD,aAAa9B,GAAG5oD,EAAOwd,EAAStL,GACtD,MAAM+4C,EAAMxlD,EAActD,QAC1B,MAAO,KACL8oD,EAAIP,aAAazB,eAAejpD,EAAOwd,EAAQ,CAChD,GACA,CAAC/X,IAeJ,OAdAqrC,GAAiBrrC,EAAe,CAC9ByY,iBACA4e,gBACC,WACCitB,GAAmC,QAApBC,EAACD,EAAY5nD,eAAO,IAAA6nD,GAAnBA,EAAqBrqD,QACvCoqD,EAAY5nD,QAAU+mB,EAAa/mB,SAErCzQ,EAAAA,oBAA0Bq4D,GAAa,IAAM7gC,EAAa/mB,SAAS,CAAC+mB,IACpEx3B,EAAAA,WAAgB,KACd,MAAMu5D,EAAMxlD,EAActD,QAC1B,MAAO,KACL8oD,EAAInuB,aAAa,UAAU,CAC5B,GACA,CAACr3B,IACGA,CACT,C,gBC9EO,MC7BMylD,GAAwB,OACxBC,GAA6B,CACxCC,gBAAiB,UACjBC,UAAW,UACX9pC,QAAS,UACT+pC,0BAA2B,WCGhBC,GAAwBA,CAACxB,EAAap9D,KACjD,MAAM8Y,EAAgBqkD,GAAyBC,EAAap9D,GAW5D,MPvByBiY,KACzB,MAAM6S,EAAiB/lB,EAAAA,OAAa,MAC9BqhD,EAAiBrhD,EAAAA,OAAa,MAC9BuhD,EAAqBvhD,EAAAA,OAAa,MAClCyhD,EAA8BzhD,EAAAA,OAAa,MAC3C2hD,EAAgC3hD,EAAAA,OAAa,MAC7C+uD,EAA4B/uD,EAAAA,OAAa,MAC/CkT,EAAOzC,QAAQoa,SAAS,SAAU,CAChC9E,mBAEF7S,EAAOzC,QAAQoa,SAAS,UAAW,CACjCw2B,iBACAE,qBACAE,8BACAE,gCACAoN,6BACA,EOHF+K,CAAY/lD,GCXcb,KAC1B,MAAMuU,GAAQinB,EAAAA,GAAAA,UACqBtsC,IAA/B8Q,EAAOzC,QAAQxC,MAAMwZ,QACvBvU,EAAOzC,QAAQxC,MAAMwZ,MAAQA,GAE/B,MAAMsyC,EAAgB/5D,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACV+5D,EAActpD,QAChBspD,EAActpD,SAAU,EAExByC,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDwZ,WAEJ,GACC,CAACvU,EAAQuU,GAAO,EDFnBuyC,CAAajmD,GNeqBkmD,EAAC/mD,EAAQjY,KAU3CmkD,GAAiBlsC,EAAQ,CACvBgnD,UAVgBl6D,EAAAA,aAAkBjF,GAC9B06D,GACKW,GAAYr7D,EAAM,QAASE,EAAMw7D,QAErCx7D,EAAMo7D,SAGJD,GAAYr7D,EAAME,EAAMo7D,SAASriC,WAAY/4B,EAAMw7D,QAFjDT,IAGR,CAAC/6D,EAAMo7D,SAAUp7D,EAAMw7D,UAGvB,UAAU,EM1BbwD,CAAqBlmD,EAAe9Y,GEZIiY,KACxC,MAAMinD,EAAqBn6D,EAAAA,OAAa,CAAC,IAClC,CAAEo6D,GAAkBp6D,EAAAA,WACrBq6D,EAAuBr6D,EAAAA,aAAkBs6D,IAC7CH,EAAmB1pD,QAAQ6pD,EAAiBC,SAAWD,CAAgB,GACtE,IACG7mD,EAAWzT,EAAAA,aAAkB,CAACiO,EAAOg9B,KACzC,IAAIr3B,EAMJ,GAJEA,EADEgf,GAAW3kB,GACFA,EAAMiF,EAAOzC,QAAQxC,OAErBA,EAETiF,EAAOzC,QAAQxC,QAAU2F,EAC3B,OAAO,EAET,IAAI4mD,GAAiB,EAGrB,MAAMC,EAAyB,GAkB/B,GAjBAv8D,OAAOC,KAAKg8D,EAAmB1pD,SAAS5I,SAAQ0yD,IAC9C,MAAMG,EAAeP,EAAmB1pD,QAAQ8pD,GAC1CI,EAAcD,EAAaE,cAAc1nD,EAAOzC,QAAQxC,MAAOiF,EAAOzC,QAAQkU,YAC9Ek2C,EAAcH,EAAaE,cAAchnD,EAAUV,EAAOzC,QAAQkU,YACpEk2C,IAAgBF,IAGpBF,EAAuBx3C,KAAK,CAC1Bs3C,QAASG,EAAaH,QACtBO,eAAgBD,IAAgBH,EAAaK,iBAIhB34D,IAA3Bs4D,EAAaK,WAA2BF,IAAgBH,EAAaK,YACvEP,GAAiB,GACnB,IAEEC,EAAuBrrD,OAAS,EAIlC,MAAM,IAAIN,MAAM,0FAADlT,OAA2F6+D,EAAuB,GAAGF,QAAO,8CAAA3+D,OAA6C6+D,EAAuB77D,KAAIo8D,GAAMA,EAAGT,UAASvmD,KAAK,MAAK,8BAQjP,GANKwmD,IAEHtnD,EAAOzC,QAAQxC,MAAQ2F,EACvBV,EAAOzC,QAAQ26B,aAAa,cAAex3B,GAC3CV,EAAOzC,QAAQiD,MAAMuyB,OAAOryB,IAEQ,IAAlC6mD,EAAuBrrD,OAAc,CACvC,MAAM,QACJmrD,EAAO,eACPO,GACEL,EAAuB,GACrBC,EAAeP,EAAmB1pD,QAAQ8pD,GAC1C7yC,EAAQgzC,EAAaE,cAAchnD,EAAUV,EAAOzC,QAAQkU,YAC9D+1C,EAAaO,cAAgBH,GAC/BJ,EAAaO,aAAavzC,EAAO,CAC/BujB,SACAsuB,IAAKrmD,EAAOzC,UAGX+pD,GACHtnD,EAAOzC,QAAQ26B,aAAasvB,EAAaQ,YAAaxzC,EAAO,CAC3DujB,UAGN,CACA,OAAQuvB,CAAc,GACrB,CAACtnD,IACEioD,EAAqBn7D,EAAAA,aAAkB,CAACzB,EAAK0P,EAAOg9B,IACjD/3B,EAAOzC,QAAQgD,UAAS2nD,IACtB/4D,EAAAA,EAAAA,GAAS,CAAC,EAAG+4D,EAAe,CACjC,CAAC78D,GAAM0P,EAAMmtD,EAAc78D,OAE5B0sC,IACF,CAAC/3B,IACEmoD,EAAcr7D,EAAAA,aAAkB,IAAMo6D,GAAe,IAAMlnD,EAAOzC,QAAQxC,SAAQ,CAACiF,IAKnFooD,EAAkB,CACtBH,qBACAd,wBAEFjb,GAAiBlsC,EARM,CACrBO,WACA4nD,eAMuC,UACzCjc,GAAiBlsC,EAAQooD,EAAiB,UAAU,EF1EpDC,CAA2BxnD,GFgBQb,KACnC,MAAMsL,EAAQxe,EAAAA,OAAa,CAAC,GACtBw7D,EAAYx7D,EAAAA,QAAa,GACzBy7D,EAAcz7D,EAAAA,aAAkB07D,KAChCF,EAAU/qD,SAAYirD,IAG1BF,EAAU/qD,SAAU,EACpBvS,OAAOoe,OAAOo/C,EAAW3jC,UAAUlwB,SAAQmwB,IACzCA,GAAU,IAEZwjC,EAAU/qD,SAAU,EAAK,GACxB,IACGkrD,EAAwB37D,EAAAA,aAAkB,CAAC47D,EAAOvuD,EAAIwuD,KACrDr9C,EAAM/N,QAAQmrD,KACjBp9C,EAAM/N,QAAQmrD,GAAS,CACrBE,WAAY,IAAI56C,IAChB66C,kBAAmB,GACnBhkC,SAAU,CAAC,IAGf,MAAM2jC,EAAal9C,EAAM/N,QAAQmrD,GAOjC,OANqBF,EAAWI,WAAWp9C,IAAIrR,KAC1BwuD,IACnBH,EAAWI,WAAW96C,IAAI3T,EAAIwuD,GAC9BH,EAAWK,kBAAoBzsD,MAAM6jB,KAAK3U,EAAM/N,QAAQmrD,GAAOE,WAAWx/C,UAC1Em/C,EAAYC,IAEP,KACLl9C,EAAM/N,QAAQmrD,GAAOE,WAAW7wC,OAAO5d,GACvCmR,EAAM/N,QAAQmrD,GAAOG,kBAAoBzsD,MAAM6jB,KAAK3U,EAAM/N,QAAQmrD,GAAOE,WAAWx/C,SAAS,CAC9F,GACA,CAACm/C,IACEO,EAAsBh8D,EAAAA,aAAkB,CAAC47D,EAAOvuD,EAAIgrB,KACnD7Z,EAAM/N,QAAQmrD,KACjBp9C,EAAM/N,QAAQmrD,GAAS,CACrBE,WAAY,IAAI56C,IAChB66C,kBAAmB,GACnBhkC,SAAU,CAAC,IAGfvZ,EAAM/N,QAAQmrD,GAAO7jC,SAAS1qB,GAAMgrB,EAC7B,KACL,MAAM4jC,EAAYz9C,EAAM/N,QAAQmrD,GAAO7jC,SACrCmkC,GAAgBv6D,EAAAA,EAAAA,GAA8Bs6D,EAAW,CAAC5uD,GAAIzO,IAAIu9D,GAAAA,IACpE39C,EAAM/N,QAAQmrD,GAAO7jC,SAAWmkC,CAAa,IAE9C,IACGE,EAAmCp8D,EAAAA,aAAkB47D,IACzDH,EAAYj9C,EAAM/N,QAAQmrD,GAAO,GAChC,CAACH,IAkBEY,EAAyB,CAC7BryC,6BAlB0BhqB,EAAAA,aAAkB,WAAa,QAAAkP,EAAAC,UAAAC,OAATC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GACpD,MAAOqsD,EAAOv2D,EAAOi3D,GAAWjtD,EAChC,IAAKmP,EAAM/N,QAAQmrD,GACjB,OAAOv2D,EAET,MAAMy2D,EAAat9C,EAAM/N,QAAQmrD,GAAOG,kBACxC,IAAIlqD,EAASxM,EACb,IAAK,IAAI+K,EAAI,EAAGA,EAAI0rD,EAAW1sD,OAAQgB,GAAK,EAC1CyB,EAASiqD,EAAW1rD,GAAGyB,EAAQyqD,GAEjC,OAAOzqD,CACT,GAAG,KASHutC,GAAiBlsC,EARe,CAC9ByoD,wBACAK,sBACAI,oCAKgD,WAClDhd,GAAiBlsC,EAAQmpD,EAAwB,SAAS,EEvF1DE,CAAsBxoD,GDiCiBb,KACvC,MAAMspD,EAAsBx8D,EAAAA,OAAa,IAAIkhB,KACvCu7C,EAAkBz8D,EAAAA,OAAa,CAAC,GAChC08D,EAA4B18D,EAAAA,aAAkB,CAAC28D,EAAcC,EAAef,KAChF,MAAMgB,EAAUA,KACd,MAAM18D,EAAOs8D,EAAgBhsD,QAAQmsD,GACnCE,GAAkBn7D,EAAAA,EAAAA,GAA8BxB,EAAM,CAACw8D,GAAc/9D,IAAIu9D,GAAAA,IAC3EM,EAAgBhsD,QAAQmsD,GAAiBE,CAAe,EAErDL,EAAgBhsD,QAAQmsD,KAC3BH,EAAgBhsD,QAAQmsD,GAAiB,CAAC,GAE5C,MAAMG,EAAqBN,EAAgBhsD,QAAQmsD,GAC7CI,EAAoBD,EAAmBJ,GAE7C,OADAI,EAAmBJ,GAAgBd,EAC9BmB,GAAqBA,IAAsBnB,GAG5Cc,IAAiBzpD,EAAOzC,QAAQwsD,kBAAkBxD,GAA2BmD,KAC/E1pD,EAAOzC,QAAQ26B,aAAa,gCAAiCwxB,GAExDC,GALEA,CAKK,GACb,CAAC3pD,IACEsxB,EAAyBxkC,EAAAA,aAAkB,CAAC48D,EAAexwC,KAC/D,MAAM8wC,EAAiBhqD,EAAOzC,QAAQwsD,kBAAkBxD,GAA2BmD,IACnF,GAAsB,MAAlBM,EACF,MAAM,IAAIpuD,MAAM,uEAElB,MAAM4sD,EAAae,EAAgBhsD,QAAQmsD,GAC3C,IAAKlB,IAAeA,EAAWwB,GAC7B,MAAM,IAAIpuD,MAAM,qCAADlT,OAAsCghE,EAAa,mBAAAhhE,OAAkBshE,EAAc,MAGpG,OAAOrB,EADWH,EAAWwB,IACZ9wC,EAAO,GACvB,CAAClZ,IACE+pD,EAAoBj9D,EAAAA,aAAkBm9D,IAAiB,IAAAC,EAC3D,MACMC,EADkB/tD,MAAM6jB,KAAKqpC,EAAoB/rD,QAAQsO,WAChBU,MAAKpf,IAAkB,IAAhB,CAAEi9D,GAASj9D,EAC/D,OAAIi9D,EAAS1B,QAAUuB,GAGhBG,EAASC,aAAa,IAE/B,OAAkC,QAAlCH,EAA6B,OAAtBC,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAyB,UAAE,IAAAD,EAAAA,EAAI5D,EAAqB,GAC1D,IACGgE,EAA0Bx9D,EAAAA,aAAkB,CAACm9D,EAAeR,EAAcY,KAC9Ef,EAAoB/rD,QAAQuQ,IAAI27C,EAAc,CAC5Cf,MAAOuB,EACPI,gBAEFrqD,EAAOzC,QAAQ26B,aAAa,6BAA6B,GACxD,CAACl4B,IAOJksC,GAAiBlsC,EANa,CAC5BwpD,4BACAl4B,yBACAy4B,oBACAO,2BAE8C,UAAU,EC1F1DC,CAA0B1pD,GGlBK2pD,EAACxqD,EAAQjY,KACxC,MAAMu3B,EAAgBxyB,EAAAA,aAAkBzB,IACtC,GAA6B,MAAzBtD,EAAM0iE,WAAWp/D,GACnB,MAAM,IAAIuQ,MAAM,+BAADlT,OAAgC2C,EAAG,MAEpD,OAAOtD,EAAM0iE,WAAWp/D,EAAI,GAC3B,CAACtD,EAAM0iE,aACVzqD,EAAOzC,QAAQoa,SAAS,SAAU,CAChC2H,iBACA,EHUFkrC,CAAkB3pD,EAAe9Y,GACjC8Y,EAActD,QAAQoa,SAAS,UAAW,CACxC9nB,UAAW9H,IAEN8Y,CAAa,EIvBT6pD,GAAyBA,CAACC,EAAa9pD,EAAe9Y,KACjE,MAAM6iE,EAAgB99D,EAAAA,QAAa,GAC9B89D,EAAcrtD,UACjBsD,EAActD,QAAQxC,MAAQ4vD,EAAY9pD,EAActD,QAAQxC,MAAOhT,EAAO8Y,GAC9E+pD,EAAcrtD,SAAU,EAC1B,ECLK,SAASstD,GAAchqD,EAAehZ,GAC3C,MAAM07D,EAASz2D,EAAAA,OAAa,MAC5B,GAAIy2D,EAAOhmD,QACT,OAAOgmD,EAAOhmD,QAEhB,MAAMutD,EAAYjqD,EAActD,QAAQypD,UAAUn/D,GAElD,OADA07D,EAAOhmD,QAAUutD,EACVA,CACT,CCNO,MAAMC,GAA6BA,CAAC/qD,EAAQhT,EAAK2rB,EAAWC,EAAStL,KAAY,IAAA09C,EACtF,MAAMzH,EAASsH,GAAc7qD,EAAQ,2BAC9BirD,EAAOC,GAAYp+D,EAAAA,UAAe,GACnCisB,EAAajsB,EAAAA,OAAa8rB,GAC1BuyC,EAAgBzrC,GAAW1yB,GAAOA,IAAoB,QAAfg+D,EAAM,OAAHh+D,QAAG,IAAHA,OAAG,EAAHA,EAAKuQ,eAAO,IAAAytD,EAAAA,EAAI,KAC1DI,EAAct+D,EAAAA,aAAkBsO,GAC7B2d,EAAWxb,SAAWwb,EAAWxb,QAAQnC,IAC/C,IACHtO,EAAAA,WAAgB,KACdisB,EAAWxb,QAAUqb,CAAO,GAC3B,CAACA,IACJ9rB,EAAAA,WAAgB,KACd,GAAIq+D,GAAiBxyC,IAAcsyC,EAAO,CACxC1H,EAAOR,MAAM,kBAADr6D,OAAmBiwB,EAAS,WACxCwyC,EAActM,iBAAiBlmC,EAAWyyC,EAAa99C,GACvD49C,GAAS,GACT,MAAMtzC,EAAcA,KAClB2rC,EAAOR,MAAM,mBAADr6D,OAAoBiwB,EAAS,WACzCwyC,EAAcpM,oBAAoBpmC,EAAWyyC,EAAa99C,EAAQ,EAEpEtN,EAAOzC,QAAQ+b,eAAe,UAAW1B,EAC3C,IACC,CAACuzC,EAAeC,EAAazyC,EAAWsyC,EAAO1H,EAAQj2C,EAAStN,GAAQ,ECvBvExY,GAAY,CAAC,QAAS,KAAM,iBAAkB,MAAO,UAAW,SAAU,aAAc,WAAY,WAAY,WAAY,OAmB5H6jE,GAA0Cv+D,EAAAA,YAAiB,SAAkC/E,EAAOiF,GAAK,IAAAs+D,EAAAC,EAAA70C,EAC7G,MAAM,MACF5C,EAAK,GACL3Z,EAAE,QACF23B,EAAO,SACP7W,EAAQ,SACRvgB,GACE3S,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACT1mB,EAAY2Z,IAIZpa,EAvBkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,kBAEoB2W,EAAyBxP,EAAQ,EAgB9CE,CAHG,CACjBF,QAASS,EAAUT,UAGfo8D,EAAkB1+D,EAAAA,OAAa,MAC/B2+D,EAAY3+D,EAAAA,OAAa,MACzB8lB,EAAYzV,EAAWquD,EAAiBx+D,GAQ9CF,EAAAA,iBAAsB,KACpB,GAAiB,IAAb4N,EAAgB,CAClB,MAAMgxD,EAAU1rD,EAAOzC,QAAQouD,eAAexxD,EAAI2Z,GAC9C43C,IACFA,EAAQhxD,UAAY,EAExB,IACC,CAACsF,EAAQtF,EAAUP,EAAI2Z,IAC1BhnB,EAAAA,WAAgB,KACd,GAAImuB,EAAU,KAAA2wC,EACZ,MAAM3wD,EAA+B,QAA1B2wD,EAAGJ,EAAgBjuD,eAAO,IAAAquD,OAAA,EAAvBA,EAAyBC,cAAc,SAChD,OAAL5wD,QAAK,IAALA,GAAAA,EAAOkhB,MAAM,CACXggB,eAAe,GAEnB,MAAWsvB,EAAUluD,SAEnBkuD,EAAUluD,QAAQ2+B,KAAK,CAAC,EAC1B,GACC,CAACjhB,IACJ,MAAM6wC,EAAgBh/D,EAAAA,aAAkBsO,IACpB,MAAdA,EAAM/P,KAGR+P,EAAM4hC,iBACR,GACC,IACG+uB,EAAe/rD,EAAOzC,QAAQi3C,gBAAgBr6C,GAC9C6xD,GhB1CiC1L,EgB0CgBnmD,EhB1CP+mD,EgB0CqD,QAA5CoK,EAAmC,QAAnCC,EAAE17D,EAAUo8D,+BAAuB,IAAAV,OAAA,EAAjCA,EAAmCpJ,eAAO,IAAAmJ,GAAAA,EhBzC9Fj7C,GAAe6d,GAAqByX,GAA0Be,GAAgC0E,IAA2B,CAACnF,EAASsa,EAAc5Z,EAAoBulB,KAC1K,MAAM1L,EAAYva,EAAQqa,GAC1B,IAAKE,GAAgC,UAAnBA,EAAUxrD,KAC1B,MAAO,CACLm3D,iBAAiB,EACjBC,UAAWF,EAAmB5L,KAAaA,GAG/C,GAAI4L,EAAmB5L,KAAaA,EAClC,MAAO,CACL6L,iBAAiB,EACjBC,WAAW,GAGf,IAAIC,EAA6B,EAC7BC,EAA2B,EAE/B,IAAK,IAAIr7C,EADUsvC,EAAax0C,WAAU5R,GAAMA,IAAOmmD,IAAW,EACrCrvC,EAAQsvC,EAAarkD,SAAsC,QAA5BqwD,EAAAtmB,EAAQsa,EAAatvC,WAAO,IAAAs7C,OAAA,EAA5BA,EAA8B39B,OAAQ4xB,EAAU5xB,MAAO3d,GAAS,EAAG,KAAAs7C,EAC7H,MAAMpyD,EAAKomD,EAAatvC,IACO,IAA3B01B,EAAmBxsC,KACrBkyD,GAA8B,OACCn9D,IAA3Bg9D,EAAmB/xD,KACrBmyD,GAA4B,GAGlC,CACA,MAAO,CACLH,gBAAiBG,EAA2B,IAAMA,EAA2BD,QAA8Dn9D,IAAhCg9D,EAAmB5L,IAC9H8L,UAAWlL,EAAoBoL,EAA2B,EAAIJ,EAAmB5L,KAAaA,EAC/F,KA9BE,IAAkCA,EAASY,EgB2ChD,MAAM,gBACJiL,EAAe,UACfC,GACE/rD,EAAgBL,EAAQgsD,GAC5B,GAAqB,WAAjBl6B,EAAQ98B,MAAsC,cAAjB88B,EAAQ98B,KACvC,OAAO,KAET,MAAM1B,EAAQ0M,EAAOzC,QAAQ+hB,cAAc8sC,EAAY,+BAAiC,8BAClFvyD,EAAoD,WAA1ChK,EAAU28D,4BAA2CJ,IAAcD,EAAkBC,EACrG,OAAoB77D,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM2mC,cAAc5lC,EAAAA,EAAAA,GAAS,CAC9DnC,IAAK4lB,EACLlY,SAAUA,EACVb,QAASA,EACTU,SAhDmBa,IACnB,MAAM8d,EAAS,CACb/mB,MAAOiJ,EAAMI,OAAO3B,QACpBM,MAEF6F,EAAOzC,QAAQ26B,aAAa,6BAA8Bhf,EAAQ9d,EAAM,EA4CxE5N,UAAW4B,EAAQnH,KACnBmS,WAAY,CACV,aAAc9G,GAEhBmpC,UAAWqvB,EACXW,cAAeN,EACfv4D,UAAWm4D,EACX7uB,eAAgBuuB,GACI,QAArB/0C,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBqe,aAAcvmC,GACxC,IAmEak+D,GAA2BrB,GClKlC7jE,GAAY,CAAC,QAAS,UAuBtBmlE,GAAkC7/D,EAAAA,YAAiB,SAA4B/E,EAAOiF,GAAK,IAAA0pB,EAC/F,MAAMloB,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,KAC5C,CAAE2gE,GAAer7D,EAAAA,UAAe,GACjCkT,EAASuW,KACT1mB,EAAY2Z,IAIZpa,EAjBkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,kBAEoB2W,EAAyBxP,EAAQ,EAU9CE,CAHG,CACjBF,QAASS,EAAUT,UAGfw9D,EAAgBvsD,EAAgBL,EAAQwlC,IACxCwF,EAAY3qC,EAAgBL,EAAQ6qC,IACpCgiB,EAAgBxsD,EAAgBL,EAAQgnC,IACxC8lB,EAAyBzsD,EAAgBL,EAAQqqC,IACjD0iB,EAAoBjgE,EAAAA,SAAc,IACG,oBAA9B+C,EAAU2kD,gBACZxJ,EAEFA,EAAU5/C,QAAO+O,KAEjB6F,EAAOzC,QAAQse,OAAO1hB,IAGpBtK,EAAU2kD,gBAAgBx0C,EAAOzC,QAAQs+B,aAAa1hC,OAE9D,CAAC6F,EAAQnQ,EAAU2kD,gBAAiBxJ,IAGjCgiB,EAAsBlgE,EAAAA,SAAc,KACxB+C,EAAUo5C,YAAep5C,EAAUo9D,6BAA+CH,EAAhBD,GAIpE97C,QAAO,CAACgF,EAAK5b,KACzB4b,EAAI5b,IAAM,EACH4b,IACN,CAAC,IACH,CAAClmB,EAAUo5C,WAAYp5C,EAAUo9D,6BAA8BH,EAAwBD,IAGpFK,EAAuBpgE,EAAAA,SAAc,IAAMigE,EAAkB3hE,QAAO+O,GAAM6yD,EAAoB7yD,KAAK+B,QAAQ,CAAC6wD,EAAmBC,IAC/Hb,EAAkBe,EAAuB,GAAKA,EAAuBliE,OAAOC,KAAK+hE,GAAqB9wD,OACtGkwD,EAAYc,EAAuB,EAOnCxyD,EAA6B,OAAlBkyD,GAA0BA,EAAc94C,QAAU/rB,EAAM+rB,MAAQ,GAAK,EACtFhnB,EAAAA,iBAAsB,KACpB,MAAM4+D,EAAU1rD,EAAOzC,QAAQ4vD,uBAAuBplE,EAAM+rB,OAC3C,IAAbpZ,GAAkBgxD,IACpBA,EAAQhxD,UAAY,EACtB,GACC,CAACA,EAAUsF,EAAQjY,EAAM+rB,QAC5B,MAAMg4C,EAAgBh/D,EAAAA,aAAkBsO,IACpB,MAAdA,EAAM/P,KAER2U,EAAOzC,QAAQ26B,aAAa,gCAAiC,CAC3D/lC,OAAQi6D,GAEZ,GACC,CAACpsD,EAAQosD,IACNgB,EAAwBtgE,EAAAA,aAAkB,KAC9Cq7D,GAAY/6C,IAAMA,GAAE,GACnB,IACHtgB,EAAAA,WAAgB,IACPkT,EAAOzC,QAAQ+b,eAAe,qBAAsB8zC,IAC1D,CAACptD,EAAQotD,IACZ,MAAM95D,EAAQ0M,EAAOzC,QAAQ+hB,cAAc8sC,EAAY,mCAAqC,kCACtFvyD,EAAoD,WAA1ChK,EAAU28D,4BAA2CJ,IAAcD,EAAkBC,EACrG,OAAoB77D,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM2mC,cAAc5lC,EAAAA,EAAAA,GAAS,CAC9DnC,IAAKA,EACLy/D,cAAeN,EACftyD,QAASA,EACTU,SAjCmBa,IACnB,MAAM8d,EAAS,CACb/mB,MAAOiJ,EAAMI,OAAO3B,SAEtBmG,EAAOzC,QAAQ26B,aAAa,gCAAiChf,EAAO,EA8BpE1rB,UAAW4B,EAAQnH,KACnBmS,WAAY,CACV,aAAc9G,GAEhBoH,SAAUA,EACV+hC,UAAWqvB,EACXl4D,UAAW+sD,GAA8B9wD,IACrB,QAArB6mB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBqe,aAAcvmC,GACxC,ICtGa6+D,GAAgC,YAChCC,IAAkCn+D,EAAAA,EAAAA,GAAS,CAAC,EAAG4mC,GAAsB,CAChF/gC,KAAM,SACN8e,MAAOu5C,GACP16D,MAAO,GACPg2B,WAAW,EACXD,UAAU,EACV7S,YAAY,EAEZiT,YAAY,EACZ8U,mBAAmB,EACnB2vB,gBAAgB,EAChB1vB,eAAe,EACf3X,2BAAuBh3B,EACvB/G,QAAS,OACTqlE,YAAaA,CAACr7D,EAAO2Q,EAAKoR,EAAQlU,SAGE9Q,IAFVk8C,GAA0BprC,GACpCA,EAAOzC,QAAQ0vB,SAASnqB,IAGxC2qD,aAAcv0C,IAAuB3oB,EAAAA,GAAAA,KAAKo8D,IAAoBx9D,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,IAC3E8c,WAAY9c,IAAuB3oB,EAAAA,GAAAA,KAAKm8D,IAA0Bv9D,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,MC1BjF,SAASw0C,GAAkBv7D,EAAOw7D,GAChC,GAAc,OAAVx7D,QAA4BjD,IAAViD,EACpB,MAAO,GAET,MAAMy7D,EAA4B,kBAAVz7D,EAAqBA,EAAQ,GAAHzJ,OAAMyJ,GACxD,GAAIw7D,EAAWE,oBAAsBF,EAAWG,eAAgB,CAC9D,MAAMC,EAAeH,EAAS/tC,QAAQ,KAAM,MAC5C,OAAI8tC,EAAWG,gBAET,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,MAAM94C,SAAS+4C,EAAa,IAClD,MAAPrlE,OAAYqlE,EAAY,KAIxB,CAACJ,EAAWK,UAAW,KAAM,KAAM,KAAK/3C,MAAK+3C,GAAaJ,EAAS54C,SAASg5C,KACvE,IAAPtlE,OAAWqlE,EAAY,KAElBA,CACT,CACA,OAAOH,CACT,CACO,MAAMK,GAAqBA,CAACC,EAAY5gD,KAC7C,MAAM,WACJqgD,EAAU,qBACVQ,GACE7gD,EACJ,IAAInb,EACJ,GAAIg8D,EAAsB,KAAAC,EACxB,MAAMvhC,EAAaqhC,EAAWlzC,OAAOhmB,KACrC,GAAmB,WAAf63B,EACF16B,EAAQ6sB,OAAOkvC,EAAW/7D,YACrB,GAAmB,SAAf06B,GAAwC,aAAfA,EAA2B,KAAAwhC,EAC7Dl8D,EAAwB,QAAnBk8D,EAAGH,EAAW/7D,aAAK,IAAAk8D,OAAA,EAAhBA,EAAkB/jC,aAC5B,MACEn4B,EAD+C,oBAAf,QAAvBi8D,EAAOF,EAAW/7D,aAAK,IAAAi8D,OAAA,EAAhBA,EAAkBttC,UAC1BotC,EAAW/7D,MAAM2uB,WAEjBotC,EAAW/7D,KAEvB,MACEA,EAAQ+7D,EAAWI,eAErB,OAAOZ,GAAkBv7D,EAAOw7D,EAAW,EAE7C,MAAMY,GACJ3hD,WAAAA,CAAYU,GACVR,KAAKQ,aAAU,EACfR,KAAK0hD,UAAY,GACjB1hD,KAAKwb,SAAU,EACfxb,KAAKQ,QAAUA,CACjB,CACAmhD,QAAAA,CAASt8D,GACF2a,KAAKwb,UACRxb,KAAK0hD,WAAa1hD,KAAKQ,QAAQqgD,WAAWK,WAEE,oBAAnClhD,KAAKQ,QAAQogD,kBACtB5gD,KAAK0hD,WAAa1hD,KAAKQ,QAAQogD,kBAAkBv7D,EAAO2a,KAAKQ,QAAQqgD,YAErE7gD,KAAK0hD,WAAar8D,EAEpB2a,KAAKwb,SAAU,CACjB,CACAomC,YAAAA,GACE,OAAO5hD,KAAK0hD,SACd,EA0BK,SAASG,GAASrhD,GACvB,MAAM,QACJgG,EAAO,OACPs7C,EAAM,WACNjB,EAAU,qBACVQ,EAAoB,OACpBnuD,GACEsN,EACEuhD,EAAUD,EAAO79C,QAAO,CAACgF,EAAK5b,IAAO,GAALzR,OAAQqtB,GAAGrtB,OAhC9BuE,KAMf,IANgB,GACpBkN,EAAE,QACFmZ,EAAO,cACP2kB,EAAa,WACb01B,EAAU,qBACVQ,GACDlhE,EACC,MAAM6V,EAAM,IAAIyrD,GAAO,CACrBZ,eAcF,OAZAr6C,EAAQ3e,SAAQuf,IACd,MAAMg6C,EAAaj2B,EAAc99B,EAAI+Z,EAAOJ,OAM5ChR,EAAI2rD,SAASR,GAAmBC,EAAY,CAC1CC,uBACAR,eACC,IAEE7qD,EAAI4rD,cAAc,EAU2BI,CAAa,CAC/D30D,KACAmZ,UACA2kB,cAAej4B,EAAOzC,QAAQ06B,cAC9Bk2B,uBACAR,eACA,SAAQ,IAAI/lC,OACd,IAAK+lC,EAAWoB,eACd,OAAOF,EAET,MAAMG,EAAkB17C,EAAQloB,QAAO8oB,GAAUA,EAAOJ,QAAUw5C,GAAgCx5C,QAC5Fm7C,EAAa,GACnB,GAAItB,EAAWuB,2BAA4B,CACzC,MAAMC,EAAoBnvD,EAAOzC,QAAQ6xD,qBACzC,IAAIC,EAAuB,EAC3B,MAAMC,EAAyBN,EAAgBj+C,QAAO,CAACgF,EAAK7B,KAC1D,MAAMq7C,EAAkBvvD,EAAOzC,QAAQiyD,mBAAmBt7C,EAAOJ,OAGjE,OAFAiC,EAAI7B,EAAOJ,OAASy7C,EACpBF,EAAuB98D,KAAKvE,IAAIqhE,EAAsBE,EAAgBrzD,QAC/D6Z,CAAG,GACT,CAAC,GACJ,IAAK,IAAI7Y,EAAI,EAAGA,EAAImyD,EAAsBnyD,GAAK,EAAG,CAChD,MAAMuyD,EAAiB,IAAIlB,GAAO,CAChCZ,aACAD,uBAEFuB,EAAWl/C,KAAK0/C,GAChBT,EAAgBr6D,SAAQuf,IACtB,MAAMw7C,GAAiBJ,EAAuBp7C,EAAOJ,QAAU,IAAI5W,GAC7DyyD,EAAcR,EAAkBO,GACtCD,EAAehB,SAASkB,EAAcA,EAAYhyB,YAAcgyB,EAAYrP,QAAU,GAAG,GAE7F,CACF,CACA,MAAMsP,EAAgB,IAAIrB,GAAO,CAC/BZ,aACAD,uBAEFsB,EAAgBr6D,SAAQuf,IACtB07C,EAAcnB,SAASv6C,EAAOypB,YAAczpB,EAAOJ,MAAM,IAE3Dm7C,EAAWl/C,KAAK6/C,GAChB,MAAMC,EAAU,GAAHnnE,OAAMumE,EAAWvjE,KAAIoX,GAAOA,EAAI4rD,iBAAgB5tD,KAAK,QAAO,QACzE,MAAO,GAAApY,OAAGmnE,GAAOnnE,OAAGmmE,GAAUjnC,MAChC,CCxIO,SAASkoC,GAAe10D,GAC7B,OAA4B,IAArBA,EAAM/P,IAAI6Q,SAAiBd,EAAM20D,UAAY30D,EAAM40D,OAC5D,CACO,MAOMC,GAAkB5kE,GAAgC,IAAzBA,EAAI0xB,QAAQ,UAA0C,IAAxB1xB,EAAI0xB,QAAQ,SAAyB,MAAR1xB,GAAuB,SAARA,GAA0B,QAARA,EAM3H,SAAS6kE,GAAgB90D,GAC9B,OAAQA,EAAM20D,SAAW30D,EAAM40D,UAMQ,MAAvChxC,OAAOmxC,aAAa/0D,EAAMg1D,WAAqBh1D,EAAMi1D,WAAaj1D,EAAMk1D,MAC1E,CC1BA,SAASC,GAAyBC,GAChC,MAAMC,EAAOt2B,SAASu2B,cAAc,QACpCD,EAAK9kE,MAAMqa,WAAa,MACxByqD,EAAK9kE,MAAM0J,WAAa,MACxBo7D,EAAK9kE,MAAM+N,QAAU,MACrB+2D,EAAKE,YAAcH,EACnBr2B,SAASy2B,KAAKC,YAAYJ,GAC1B,MAAMzwC,EAAQma,SAAS22B,cACvB9wC,EAAM+wC,WAAWN,GACjB,MAAMzlB,EAAYvtC,OAAOuzD,eACzBhmB,EAAUimB,kBACVjmB,EAAUkmB,SAASlxC,GACnB,IACEma,SAASg3B,YAAY,OACvB,CAAE,QACAh3B,SAASy2B,KAAKQ,YAAYX,EAC5B,CACF,CA6BO,MAAMY,GAAmBA,CAACrxD,EAAQjY,KACvC,MAAMupE,EAA2BvpE,EAAMwpE,iCACjCpD,GAA4D,kBAA7BmD,EAAgE,OAAxBA,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0BE,gBAAkBF,KAA6B,EAChJG,EAA6B1pE,EAAM0pE,2BACnCC,EAAa5kE,EAAAA,aAAkBsO,IACnC,IDtBG,SAAwBA,GAC7B,OAAQA,EAAM20D,SAAW30D,EAAM40D,UAAmD,MAAvChxC,OAAOmxC,aAAa/0D,EAAMg1D,WAAqBh1D,EAAMi1D,WAAaj1D,EAAMk1D,MACrH,CCoBSqB,CAAev2D,GAClB,OAIF,GA7BJ,SAA4BswD,GAAS,IAAAkG,EAEnC,QAAyB,QAAzBA,EAAIn0D,OAAOuzD,sBAAc,IAAAY,IAArBA,EAAuB9wC,gBAOvB4qC,IAAYA,EAAQmG,cAAgB,IAAMnG,EAAQoG,gBAAkB,GAAK,EAI/E,CAgBQC,CAAmB32D,EAAMI,QAC3B,OAEF,IAAIw2D,EAAa,GAEjB,GADqBhyD,EAAOzC,QAAQ00D,kBACnBhgE,KAAO,EACtB+/D,EAAahyD,EAAOzC,QAAQ20D,aAAa,CACvCnD,gBAAgB,EAChBf,UAAWyD,EACX5D,oBAAoB,EACpBC,gBAAgB,QAEb,CACL,MAAM3d,EAAcnL,GAAsBhlC,GAC1C,GAAImwC,EAAa,CACf,MAAM+d,EAAaluD,EAAOzC,QAAQ06B,cAAckY,EAAYh2C,GAAIg2C,EAAYr8B,OAC5Ek+C,EAAa/D,GAAmBC,EAAY,CAC1CP,WAAY,CACVK,UAAWyD,EACX5D,oBAAoB,EACpBC,gBAAgB,GAElBK,wBAEJ,CACF,CA/DJ,IAAyBqC,EAgErBwB,EAAahyD,EAAOzC,QAAQuZ,6BAA6B,gBAAiBk7C,GACtEA,IAjEiBxB,EAkEHwB,EAjEhBrnB,UAAUwnB,UACZxnB,UAAUwnB,UAAUC,UAAU5B,GAAM6B,OAAM,KACxC9B,GAAyBC,EAAK,IAGhCD,GAAyBC,GA6DvBxwD,EAAOzC,QAAQ26B,aAAa,gBAAiB85B,GAC/C,GACC,CAAChyD,EAAQmuD,EAAsBsD,IAClC1G,GAA2B/qD,EAAQA,EAAOzC,QAAQsV,eAAgB,UAAW6+C,GAC7E73C,GAAwB7Z,EAAQ,gBAAiBjY,EAAMuqE,gBAAgB,ECzF5DC,GAA6Bx3D,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACrE+/C,WAAY,CACVx8C,MAAM,KCNGk0D,GAAiB1tC,IAC5B,MAAMsnB,EAAgBt/C,EAAAA,QAAa,GAC/Bs/C,EAAc7uC,UAChB6uC,EAAc7uC,SAAU,EACxBunB,IACF,ECJW2tC,GAA+BA,CAACzyD,EAAQ0oD,EAAO5jC,KAC1D,MAAM6kC,EAAU78D,EAAAA,SACVqN,EAAKrN,EAAAA,OAAa,OAADpE,OAAQ6J,KAAKG,MAAsB,IAAhBH,KAAK4wB,YACzCuvC,EAAuB5lE,EAAAA,aAAkB,KAC7C68D,EAAQpsD,QAAUyC,EAAOzC,QAAQkrD,sBAAsBC,EAAOvuD,EAAGoD,QAASunB,EAAS,GAClF,CAAC9kB,EAAQ8kB,EAAU4jC,IACtB8J,IAAe,KACbE,GAAsB,IAExB,MAAMtmB,EAAgBt/C,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACVs/C,EAAc7uC,QAChB6uC,EAAc7uC,SAAU,EAExBm1D,IAEK,KACD/I,EAAQpsD,UACVosD,EAAQpsD,UACRosD,EAAQpsD,QAAU,KACpB,IAED,CAACm1D,GAAsB,ECtBfC,GAA6BA,CAAC3yD,EAAQ0oD,EAAO5jC,KACxD,MAAM6kC,EAAU78D,EAAAA,SACVqN,EAAKrN,EAAAA,OAAa,OAADpE,OAAQ6J,KAAKG,MAAsB,IAAhBH,KAAK4wB,YACzCuvC,EAAuB5lE,EAAAA,aAAkB,KAC7C68D,EAAQpsD,QAAUyC,EAAOzC,QAAQurD,oBAAoBJ,EAAOvuD,EAAGoD,QAASunB,EAAS,GAChF,CAAC9kB,EAAQ8kB,EAAU4jC,IACtB8J,IAAe,KACbE,GAAsB,IAExB,MAAMtmB,EAAgBt/C,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACVs/C,EAAc7uC,QAChB6uC,EAAc7uC,SAAU,EAExBm1D,IAEK,KACD/I,EAAQpsD,UACVosD,EAAQpsD,UACRosD,EAAQpsD,QAAU,KACpB,IAED,CAACm1D,GAAsB,ECbfE,GAA0BA,CAAC73D,EAAOhT,EAAOiY,KAAW,IAAA6yD,EAAA5lE,EAAA6lE,EAAAC,EAAAC,EAC/D,MAAMx/C,EAAe4tB,GAAmB,CACtCphC,SACAwhC,gBAAiBz5C,EAAMurB,QACvBmuB,aAAgC,QAApBoxB,EAAE9qE,EAAM05C,oBAAY,IAAAoxB,OAAA,EAAlBA,EAAoBv/C,QAClCU,sBAAwG,QAAnF/mB,EAA6B,QAA7B6lE,EAAE/qE,EAAMisB,6BAAqB,IAAA8+C,EAAAA,EAAsB,QAAtBC,EAAIhrE,EAAM05C,oBAAY,IAAAsxB,GAAS,QAATA,EAAlBA,EAAoBz/C,eAAO,IAAAy/C,OAAA,EAA3BA,EAA6B/+C,6BAAqB,IAAA/mB,EAAAA,EAAI,CAAC,EAC7Gy0C,yBAAyB,IAE3B,OAAOvyC,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBuY,QAASE,EAGTc,cAAkC,QAArB0+C,EAAEj4D,EAAMuZ,qBAAa,IAAA0+C,EAAAA,EAAI5/C,IACtC,EAkRJ,SAAS6/C,GAAkBz/C,GACzB,OAAOzY,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CAClCuY,QAASE,GAEb,CCvSO,MAAM0/C,GAA0BA,CAACn4D,EAAOhT,KAAK,IAAAkF,EAAAkmE,EAAAN,EAAA,OAAK1jE,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CAC3E0X,QAAqD,QAA9CxlB,EAA6B,QAA7BkmE,EAAoB,QAApBN,EAAE9qE,EAAM05C,oBAAY,IAAAoxB,OAAA,EAAlBA,EAAoBpgD,eAAO,IAAA0gD,EAAAA,EAAIprE,EAAM0qB,eAAO,IAAAxlB,EAAAA,EAAI,YACzD,ECNK,MAAMmmE,GAAqBnmE,IAG5B,IAH6B,OACjC+S,EAAM,QACNsN,GACDrgB,EACC,MAAMqmB,EAAUM,GAA8B5T,GAC9C,GAAIsN,EAAQ+lD,OACV,OAAO/lD,EAAQ+lD,OAAOtiD,QAAO,CAACuiD,EAAgBx/C,KAC5C,MAAMI,EAASZ,EAAQ/G,MAAKqJ,GAAOA,EAAI9B,QAAUA,IAIjD,OAHII,GACFo/C,EAAevjD,KAAKmE,GAEfo/C,CAAc,GACpB,IAGL,OADqBhmD,EAAQimD,WAAajgD,EAAUW,GAAqCjU,IACrE5U,QAAO8oB,IAAWA,EAAO2pB,eAAc,EAEhD21B,GAAyBrmE,IAEhC,IAAAwiC,EAAAC,EAAA,IAFiC,OACrC5vB,GACD7S,EACC,MAAMsmE,EAAuBtsB,GAAiCnnC,GACxDimC,EAAU/X,GAAoBluB,GAC9BkrC,EAAelrC,EAAOzC,QAAQ00D,kBAC9ByB,EAAWD,EAAqBroE,QAAO+O,GAA2B,WAArB8rC,EAAQ9rC,GAAInF,OACzD2T,EAAaqmB,GAAuBhvB,GACpC2zD,GAA6B,OAAVhrD,QAAU,IAAVA,GAAe,QAALgnB,EAAVhnB,EAAY5c,WAAG,IAAA4jC,OAAA,EAAfA,EAAiBjkC,KAAIoX,GAAOA,EAAI3I,OAAO,GAC1Dy5D,GAAgC,OAAVjrD,QAAU,IAAVA,GAAkB,QAARinB,EAAVjnB,EAAYtc,cAAM,IAAAujC,OAAA,EAAlBA,EAAoBlkC,KAAIoX,GAAOA,EAAI3I,OAAO,GAGtE,OAFAu5D,EAASznD,WAAW0nD,GACpBD,EAAS3jD,QAAQ6jD,GACb1oB,EAAaj5C,KAAO,EACfyhE,EAAStoE,QAAO+O,GAAM+wC,EAAa7qB,IAAIlmB,KAEzCu5D,CAAQ,E,gBCjCjB,MAAMlsE,GAAY,CAAC,WAAY,WAC7B65B,GAAa,CAAC,WAAY,WAQ5B,SAASwyC,GAAsB9rE,GAC7B,MAAMiY,EAASuW,MACT,SACF8lB,EAAQ,QACR/uB,GACEvlB,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IAC/C,OAAoB+I,EAAAA,GAAAA,KAAKujE,GAAAA,GAAU3kE,EAAAA,EAAAA,GAAS,CAC1CqtC,QAASA,KACPx8B,EAAOzC,QAAQw2D,gBAAgBzmD,GACvB,OAAR+uB,QAAQ,IAARA,GAAAA,GAAY,GAEb7tC,EAAO,CACRZ,SAAUoS,EAAOzC,QAAQ+hB,cAAc,sBAE3C,CAqBA,SAAS00C,GAAwBjsE,GAC/B,MAAMiY,EAASuW,MACT,SACF8lB,EAAQ,QACR/uB,GACEvlB,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOs5B,IAC/C,OAAoB9wB,EAAAA,GAAAA,KAAKujE,GAAAA,GAAU3kE,EAAAA,EAAAA,GAAS,CAC1CqtC,QAASA,KACPx8B,EAAOzC,QAAQ02D,kBAAkB3mD,GACzB,OAAR+uB,QAAQ,IAARA,GAAAA,GAAY,GAEb7tC,EAAO,CACRZ,SAAUoS,EAAOzC,QAAQ+hB,cAAc,wBAE3C,CAqBA,MCnEa40C,GAAmBA,CAACl0D,EAAQjY,KACvC,MAAMw7D,EAASsH,GAAc7qD,EAAQ,oBAC/BsxD,EAA2BvpE,EAAMwpE,iCACjCpD,GAA4D,kBAA7BmD,EAAgE,OAAxBA,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0B6C,UAAY7C,KAA6B,EAC1IY,EAAeplE,EAAAA,aAAkB,WAAkB,IAAAsnE,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAjBlnD,EAAOrR,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjDsnD,EAAOR,MAAM,mBASb,OAAO4L,GAAS,CACdr7C,QATsB8/C,GAAmB,CACzCpzD,SACAsN,YAQAshD,QAN6C,QAA1BwF,EAAG9mD,EAAQmnD,uBAAe,IAAAL,EAAAA,EAAIZ,IACZ,CACrCxzD,WAKA2tD,WAAY,CACVK,UAAW1gD,EAAQ0gD,WAAa,IAChCH,mBAA8C,QAA5BwG,EAAE/mD,EAAQugD,0BAAkB,IAAAwG,GAAAA,EAC9CtF,eAAsC,QAAxBuF,EAAEhnD,EAAQyhD,sBAAc,IAAAuF,GAAAA,EACtCpF,2BAA8D,QAApCqF,EAAEjnD,EAAQ4hD,kCAA0B,IAAAqF,GAAAA,EAC9DzG,eAAsC,QAAxB0G,EAAElnD,EAAQwgD,sBAAc,IAAA0G,GAAAA,GAExCrG,uBACAnuD,UAEJ,GAAG,CAACujD,EAAQvjD,EAAQmuD,IACd4F,EAAkBjnE,EAAAA,aAAkBwgB,IACxCi2C,EAAOR,MAAM,sBACb,MAAM2R,EAAMxC,EAAa5kD,ICnCtB,SAAkBqnD,GAAkE,IAA5DC,EAAS34D,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,MAAO44D,EAAQ54D,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAGk+B,SAAS26B,OAAS,WAC7E,MAAMC,EAAW,GAAHrsE,OAAMmsE,EAAQ,KAAAnsE,OAAIksE,GAIhC,GAAI,aAAcI,kBAAkB16C,UAAW,CAE7C,MAAMxe,EAAMC,IAAIk5D,gBAAgBN,GAG1B31D,EAAIm7B,SAASu2B,cAAc,KAajC,OAZA1xD,EAAEk2D,KAAOp5D,EACTkD,EAAEm2D,SAAWJ,EAKb/1D,EAAEo2D,aAGFt9C,YAAW,KACT/b,IAAIs5D,gBAAgBv5D,EAAI,GAG5B,CACA,MAAM,IAAIF,MAAM,iCAClB,CDaI05D,CAHa,IAAIC,KAAK,CAAQ,OAAPjoD,QAAO,IAAPA,GAAAA,EAASkoD,YAAc,IAAIC,WAAW,CAAC,IAAM,IAAM,MAAS,GAAIf,GAAM,CAC3F1/D,KAAM,aAEO,MAAc,OAAPsY,QAAO,IAAPA,OAAO,EAAPA,EAASooD,SAAS,GACvC,CAACnS,EAAQ2O,IAKZhmB,GAAiBlsC,EAJI,CACnBkyD,eACA6B,mBAEqC,UAKvC,MAAM4B,EAAuB7oE,EAAAA,aAAkB,CAAC8oE,EAActoD,KAAY,IAAAuoD,EACxE,OAAsB,QAAtBA,EAAIvoD,EAAQqgD,kBAAU,IAAAkI,GAAlBA,EAAoBC,qBACfF,EAEF,IAAIA,EAAc,CACvBnoE,WAAwB8C,EAAAA,GAAAA,KAAKsjE,GAAuB,CAClDvmD,QAASA,EAAQqgD,aAEnBhwD,cAAe,aACf,GACD,IACH80D,GAA6BzyD,EAAQ,aAAc21D,EAAqB,EExE3D,SAASI,GAAc5jC,GACpC,OAAOA,GAAQA,EAAK4jC,eAAiB57B,QACvC,CCKO,MAAM67B,GAA4BA,CAACC,EAAiBrV,EAAWsV,KAAwB,IAAAC,EAAAC,EAC5F,IAAIjtB,EAAkB8sB,EAAgB9sB,gBACtC,MAAM/Y,EAAW6lC,EAAgB7lC,SAC3BoY,EAAwC,QAAhC2tB,EAAsB,OAAnBD,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB1tB,gBAAQ,IAAA2tB,EAAAA,EAAIhtB,EAAgBX,SAC5DC,EAAgC,QAA5B2tB,EAAsB,OAAnBF,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBztB,YAAI,IAAA2tB,EAAAA,EAAIjtB,EAAgBV,KACpD4tB,EAAY9tB,GAAanY,EAAUoY,EAAUC,IAC/CytB,IAA2C,OAAnBA,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBztB,QAASU,EAAgBV,OAA2B,OAAnBytB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB1tB,YAAaW,EAAgBX,WAClIW,EAAkB+sB,GAEpB,MAAMI,E5DCoB,SAAC7tB,GAAwB,IAAlB4tB,EAASp6D,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,EAC7C,OAAkB,IAAdo6D,EACK5tB,EAEFl2C,KAAKvE,IAAIuE,KAAKwtB,IAAI0oB,EAAM4tB,EAAY,GAAI,EACjD,C4DNoBE,CAAaptB,EAAgBV,KAAM4tB,GAOrD,OANIC,IAAcntB,EAAgBV,OAChCU,GAAkBh6C,EAAAA,EAAAA,GAAS,CAAC,EAAGg6C,EAAiB,CAC9CV,KAAM6tB,KAGVztB,GAA+BM,EAAgBX,SAAUoY,GAClDzX,CAAe,ECgBjB,MAAMqtB,GAAqBA,CAACx2D,EAAQjY,KACzC,MAAM0uE,EAA6D,OAA1Cz2D,EAAOzC,QAAQsV,eAAetV,QACjDgmD,EAASsH,GAAc7qD,EAAQ,sBAC/B02D,EAAM5pE,EAAAA,OAAa,MACnB6pE,EAAoB7pE,EAAAA,OAAa,MACjC8pE,EAA2B9pE,EAAAA,OAAa,CAAC,GACzC+pE,EAAe/pE,EAAAA,OAAa,IAC5BgqE,EAA8BhqE,EAAAA,SACpCA,EAAAA,WAAgB,KACd4pE,EAAIn5D,QAAUw4D,GAAc/1D,EAAOzC,QAAQsV,eAAetV,QAAQ,GACjE,CAACyC,EAAQy2D,IAIZ,MAAMM,EAA4BjqE,EAAAA,aAAkB,CAACumE,EAAQE,EAAYyD,IAAsB,IAAIC,SAAQC,IACzG,MAAMC,EAAuB/D,GAAmB,CAC9CpzD,SACAsN,QAAS,CACP+lD,SACAE,gBAED7nE,KAAIwoB,GAAUA,EAAOJ,QAClBR,EAAUM,GAA8B5T,GACxCo3D,EAA2B,CAAC,EAClC9jD,EAAQ3e,SAAQuf,IACdkjD,EAAyBljD,EAAOJ,OAASqjD,EAAqBniD,SAASd,EAAOJ,MAAM,IAElFkjD,IACFI,EAAyB9J,GAAgCx5C,QAAS,GAEpE9T,EAAOzC,QAAQ85D,yBAAyBD,GACxCF,GAAS,KACP,CAACl3D,IACCs3D,EAAyBxqE,EAAAA,aAAkB2nE,IAC/C,MAGM8C,EAHkB9C,EAAgB,CACtCz0D,WAE8B+Q,QAAO,CAACgF,EAAK5b,KAC3C,MAAM2I,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAIlC,OAHK2I,EAAIgtB,KACP/Z,EAAIhG,KAAKjN,GAEJiT,CAAG,GACT,IACH/V,EAAOzC,QAAQi6D,QAAQD,EAAQ,GAC9B,CAACv3D,IACEy3D,EAAwB3qE,EAAAA,aAAkB,CAAC4qE,EAAapqD,KAAY,IAAAqqD,EAAAC,EACxE,MAAMC,GAAmB1oE,EAAAA,EAAAA,GAAS,CAChC2oE,YAAY,EACZC,aAAa,EACb5X,YAAY,EACZ6W,mBAAmB,GAClB1pD,GACG0qD,EAAWN,EAAYO,gBAC7B,IAAKD,EACH,OAEF,MAAM1sB,EAAWD,GAAqBrrC,EAAOzC,QAAQxC,OAC/Cm9D,EAAkBl4D,EAAOzC,QAAQsV,eAAetV,QAChD46D,EAAYD,EAAgBE,WAAU,GAG3BD,EAAUtM,cAAc,IAADnjE,OAAKmW,EAAYrT,OAChDG,MAAM2J,SAAW,UAG1B6iE,EAAUxsE,MAAM0sE,QAAU,OAC1B,IAAIC,GAA4F,QAAjEX,EAAAO,EAAgBrM,cAAc,IAADnjE,OAAKmW,EAAY05D,0BAAmB,IAAAZ,OAAA,EAAjEA,EAAmEa,eAAgB,EAC9GC,GAA0F,QAAhEb,EAAAM,EAAgBrM,cAAc,IAADnjE,OAAKmW,EAAY65D,yBAAkB,IAAAd,OAAA,EAAhEA,EAAkEY,eAAgB,EAC9E,IAAAG,EAIDC,EAJ7Bf,EAAiBE,cACwC,QAA3DY,EAAAR,EAAUtM,cAAc,IAADnjE,OAAKmW,EAAY05D,0BAAmB,IAAAI,GAA3DA,EAA6DhnC,SAC7D2mC,EAA2B,GAEzBT,EAAiB1X,aACuC,QAA1DyY,EAAAT,EAAUtM,cAAc,IAADnjE,OAAKmW,EAAY65D,yBAAkB,IAAAE,GAA1DA,EAA4DjnC,SAC5D8mC,EAA0B,GAI5B,MAAMI,EAAsBvtB,EAASqH,uBAAyBhQ,GAAqB3iC,EAAQjY,GAASuwE,EAA2BG,EAI/H,GAHAN,EAAUxsE,MAAMtB,OAAS,GAAH3B,OAAMmwE,EAAmB,MAE/CV,EAAUxsE,MAAMjC,UAAY,eACvBmuE,EAAiB1X,WAAY,CAIhC,MAAM2Y,EAAoBX,EAAUtM,cAAc,IAADnjE,OAAKmW,EAAY65D,kBAClEI,EAAkBntE,MAAMzD,SAAW,WACnC4wE,EAAkBntE,MAAMgH,MAAQ,OAChCmmE,EAAkBntE,MAAMI,IAAM,GAAHrD,OAAMmwE,EAAsBJ,EAAuB,KAChF,CAIA,MAAMM,EAAY5+B,SAASu2B,cAAc,OACzCqI,EAAUlI,YAAYsH,GAEtBH,EAASpH,KAAKjlE,MAAMkL,UAAY,MAChCmhE,EAASpH,KAAKoI,UAAYD,EAAUC,UACpC,MAAMC,EAAyD,oBAA/BpB,EAAiBqB,UAA2BrB,EAAiBqB,YAAcrB,EAAiBqB,UAC5H,GAAgC,kBAArBD,EAA+B,CAExC,MAAME,EAAenB,EAAStH,cAAc,SAC5CyI,EAAatI,YAAYmH,EAASoB,eAAeH,IACjDjB,EAASqB,KAAKxI,YAAYsI,EAC5B,CACItB,EAAiByB,eACnBtB,EAASpH,KAAK2I,UAAUhY,OAAOsW,EAAiByB,cAActtC,MAAM,MAEtE,MAAMwtC,EAAyB,GAC/B,GAAI3B,EAAiBC,WAAY,CAC/B,MAAM2B,EAAgBvB,EAAgBwB,cAEhCC,GAD0C,eAAnCF,EAAc7sD,YAAY/kB,KAAwB4xE,EAAgB/C,EAAIn5D,SACpDq8D,iBAAiB,iCAChD,IAAK,IAAI18D,EAAI,EAAGA,EAAIy8D,EAAkBz9D,OAAQgB,GAAK,EAAG,CACpD,MAAMi1B,EAAOwnC,EAAkBz8D,GAC/B,GAAqB,UAAjBi1B,EAAK0nC,QAAqB,CAC5B,MAAMC,EAAuB9B,EAAStH,cAAcv+B,EAAK0nC,SACnDE,EAAQ5nC,EAAK4nC,MACnB,GAAIA,EAAO,CACT,IAAIC,EAAW,GAEf,IAAK,IAAIznC,EAAI,EAAGA,EAAIwnC,EAAME,SAAS/9D,OAAQq2B,GAAK,EACL,kBAA9BwnC,EAAME,SAAS1nC,GAAG2nC,UAC3BF,GAAY,GAAJtxE,OAAOqxE,EAAME,SAAS1nC,GAAG2nC,QAAO,SAG5CJ,EAAqBjJ,YAAYmH,EAASoB,eAAeY,IACzDhC,EAASqB,KAAKxI,YAAYiJ,EAC5B,CACF,MAAO,GAAI3nC,EAAKgoC,aAAa,QAAS,CAGpC,MAAML,EAAuB9B,EAAStH,cAAcv+B,EAAK0nC,SACzD,IAAK,IAAItnC,EAAI,EAAGA,EAAIJ,EAAKioC,WAAWl+D,OAAQq2B,GAAK,EAAG,CAClD,MAAM8nC,EAAOloC,EAAKioC,WAAW7nC,GACzB8nC,GACFP,EAAqBQ,aAAaD,EAAKE,SAAUF,EAAKG,WAAa,GAEvE,CACAhB,EAAuBzpD,KAAK,IAAIknD,SAAQC,IACtC4C,EAAqBjb,iBAAiB,QAAQ,IAAMqY,KAAU,KAEhEc,EAASqB,KAAKxI,YAAYiJ,EAC5B,CACF,CACF,CAKE7C,QAAQx2B,IAAI+4B,GAAwBiB,MAAK,KACvC/C,EAAYgD,cAAcC,OAAO,GAErC,GACC,CAAC36D,EAAQ02D,EAAK3uE,IACX6yE,EAA8B9tE,EAAAA,aAAkB4qE,IAAe,IAAAmD,EAEnEnE,EAAIn5D,QAAQqzD,KAAKQ,YAAYsG,GAG7B13D,EAAOzC,QAAQu9D,aAAanE,EAAkBp5D,SAAW,CAAC,GAC5B,QAA1Bs9D,EAAClE,EAAkBp5D,eAAO,IAAAs9D,GAAS,QAATA,EAAzBA,EAA2BvnD,eAAO,IAAAunD,GAAlCA,EAAoC7mD,uBAEvChU,EAAOzC,QAAQ85D,yBAAyBT,EAAyBr5D,SAEnEyC,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDywC,eAAgBsrB,EAA4Bv5D,YAE9CyC,EAAOzC,QAAQi6D,QAAQX,EAAat5D,SAGpCo5D,EAAkBp5D,QAAU,KAC5Bq5D,EAAyBr5D,QAAU,CAAC,EACpCs5D,EAAat5D,QAAU,EAAE,GACxB,CAACyC,IACEi0D,EAAoBnnE,EAAAA,aAAkB0uB,UAAiB,IAAA44C,EAE3D,GADA7Q,EAAOR,MAAM,yBACR/iD,EAAOzC,QAAQsV,eAAetV,QACjC,MAAM,IAAI3B,MAAM,0CAMlB,GAJA+6D,EAAkBp5D,QAAUyC,EAAOzC,QAAQw9D,cAE3CnE,EAAyBr5D,QAAUwW,GAAkC/T,GACrE62D,EAAat5D,QAAUyC,EAAOzC,QAAQy9D,gBAAgB5vE,QAAO0X,IAAQA,EAAIgtB,MACrE/nC,EAAMkhD,WAAY,CACpB,MACME,EAAkB,CACtBV,KAAM,EACND,SAHsBZ,GAA6B5nC,IAKrDA,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDkuC,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkuC,WAAY,CACzCE,gBAAiB6sB,GAA0Bj7D,EAAMkuC,WAEjD,cAAeE,QAGrB,CACA2tB,EAA4Bv5D,QAAUyC,EAAOzC,QAAQxC,MAAMywC,eAC3DxrC,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDywC,gBAAgBr8C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMywC,eAAgB,CACjDrN,SAAS,EACTuN,mBAAmB,cAGjBqrB,EAAiC,OAAPzpD,QAAO,IAAPA,OAAO,EAAPA,EAAS+lD,OAAe,OAAP/lD,QAAO,IAAPA,OAAO,EAAPA,EAASimD,WAAmB,OAAPjmD,QAAO,IAAPA,OAAO,EAAPA,EAAS0pD,mBAC/EM,EAA+C,QAAzBlD,EAAQ,OAAP9mD,QAAO,IAAPA,OAAO,EAAPA,EAASmnD,uBAAe,IAAAL,EAAAA,EAAIZ,UArO9C,IAAIyD,SAAQC,IACjB+D,uBAAsB,KACpB/D,GAAS,GACT,IAoOF,MAAMQ,EAjOV,SAA0B5C,GACxB,MAAMoG,EAAW/gC,SAASu2B,cAAc,UAKxC,OAJAwK,EAASvvE,MAAMzD,SAAW,WAC1BgzE,EAASvvE,MAAMgH,MAAQ,MACvBuoE,EAASvvE,MAAMtB,OAAS,MACxB6wE,EAASpG,MAAQA,GAAS36B,SAAS26B,MAC5BoG,CACT,CA0NwBC,CAAwB,OAAP7tD,QAAO,IAAPA,OAAO,EAAPA,EAASooD,UAO5CgC,EAAY0D,OAAS,KACnB3D,EAAsBC,EAAapqD,GACZoqD,EAAYgD,cAAcW,WAAW,SAC7Cxc,iBAAiB,UAAUyc,KACH,IAAhBA,EAAIxzC,SAEvB8yC,EAA4BlD,EAC9B,GACA,EAEJhB,EAAIn5D,QAAQqzD,KAAKC,YAAY6G,EAC/B,GACC,CAAC3vE,EAAOw7D,EAAQvjD,EAAQy3D,EAAuBmD,EAA6B7D,EAA2BO,IAI1GprB,GAAiBlsC,EAHM,CACrBi0D,qBAEuC,UAKzC,MAAM0B,EAAuB7oE,EAAAA,aAAkB,CAAC8oE,EAActoD,KAAY,IAAAiuD,EACxE,OAAwB,QAAxBA,EAAIjuD,EAAQkuD,oBAAY,IAAAD,GAApBA,EAAsBzF,qBACjBF,EAEF,IAAIA,EAAc,CACvBnoE,WAAwB8C,EAAAA,GAAAA,KAAKyjE,GAAyB,CACpD1mD,QAASA,EAAQkuD,eAEnB79D,cAAe,eACf,GACD,IACH80D,GAA6BzyD,EAAQ,aAAc21D,EAAqB,EC9R7D8F,GAAmCA,CAACz7D,EAAQypD,EAAcf,EAAOC,KAC5E,MAAM+J,EAAuB5lE,EAAAA,aAAkB,KAC7CkT,EAAOzC,QAAQisD,0BAA0BC,EAAcf,EAAOC,EAAU,GACvE,CAAC3oD,EAAQ2oD,EAAWD,EAAOe,IAC9B+I,IAAe,KACbE,GAAsB,IAExB,MAAMtmB,EAAgBt/C,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACVs/C,EAAc7uC,QAChB6uC,EAAc7uC,SAAU,EAExBm1D,GACF,GACC,CAACA,GAAsB,ECGfgJ,GAAyBA,CAAC3gE,EAAOhT,EAAOiY,KAAW,IAAA/S,EAAA0uE,EAAA9I,EAC9D,MAAMlvC,EAA0E,QAA/D12B,EAAoB,QAApB0uE,EAAG5zE,EAAM47B,mBAAW,IAAAg4C,EAAAA,EAAsB,QAAtB9I,EAAI9qE,EAAM05C,oBAAY,IAAAoxB,GAAQ,QAARA,EAAlBA,EAAoBznE,cAAM,IAAAynE,OAAA,EAA1BA,EAA4BlvC,mBAAW,IAAA12B,EAAAA,EAAIu1B,KACpF,OAAOrzB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB3P,OAAQ,CACNu4B,YAAaL,GAAoBK,EAAa57B,EAAMw7B,gCAAiCvjB,GACrF2mC,mBAAoB,CAAC,EACrBE,4BAA6B,CAAC,EAC9BC,8BAA+B,CAAC,GAElCC,kBAAmB,CAAC,GACpB,EAEE60B,GAAuB1iD,GAEpBA,EAAOytB,mBAEhB,SAASk1B,GAA0B77D,EAAQjF,GACzC,OAAOiF,EAAOzC,QAAQ+zB,uBAAuB,4BAA6B,CACxEnD,KAAMpzB,EAAMwyB,KAAKY,KACjBwY,mBAAoB5rC,EAAM3P,OAAOu7C,oBAErC,CACA,SAASm1B,KACP,OAAO/wD,EAAW/f,OAAOoe,OAC3B,CAOO,MCrCM2yD,GAAwBhhE,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CAChEohB,MAAO,CACLta,KAAM,KACNM,aAAc,KACdijC,mBAAoB,KACpBC,kBAAmB,MAErB3qC,SAAU,CACRmH,KAAM,KACNM,aAAc,KACdijC,mBAAoB,KACpBC,kBAAmB,QCvBV22B,GAAiC,0BCGvC,SAASC,GAA+BC,EAAM1uE,GACnD,OAAO0uE,EAAKC,QAAQ,IAADzzE,OAAK8E,GAC1B,CAIO,SAAS4uE,GAA+BC,GAC7C,OAAOA,EAAQx8C,QAAQ,SAAU,OACnC,CAIA,SAASy8C,GAA0BniE,GACjC,MAAO,IAAPzR,OAAWmW,EAAYiE,IAAG,cAAApa,OAAa0zE,GAA+Bp9C,OAAO7kB,IAAI,KACnF,CAyBO,SAASoiE,GAAsBnhE,GACpC,OAG0B,IAA1BA,EAAMI,OAAOghE,WAAmBphE,EAAM+2C,cAAc5X,SAASn/B,EAAMI,OAIrE,CA4CO,SAASihE,GAAgBpW,EAAKqW,GACnC,OAAOrW,EAAIxzC,eAAetV,QAAQsuD,cAAc,IAADnjE,OAAKmW,EAAY69D,IAClE,CACA,MAAMC,GAAkBxvE,IAKlB,IALmB,IACvBk5D,EAAG,SACHuW,EAAQ,SACR10E,EAAQ,SACR20E,GACD1vE,EACC,GAAiB,OAAbyvE,EACF,MAAO,GAET,MAAME,EAAQ,GAad,OAZAC,GAAU1W,GAAK1xD,SAAQqoE,IACPA,EAAW7C,aAAa,YAItC6C,EAAWpD,iBAAiB,IAADlxE,OAAKmW,EAAyB,SAAb3W,EAAsB,mBAAqB,uBAAwByM,SAAQkN,IACrH,MAAMo7D,EAAkBC,GAAkBr7D,GAClB,OAApBo7D,GAA4BJ,EAASI,IACvCH,EAAM/sD,KAAKlO,EACb,GACA,IAEGi7D,CAAK,EAoBd,MAAMK,GAAoBj0E,IAKpB,IAAAk0E,EAAA,IALqB,IACzB/W,EAAG,SACHuW,EAAQ,SACR10E,EAAQ,SACR20E,GACD3zE,EACC,GAAkC,QAA9Bk0E,EAAC/W,EAAIxK,iCAAyB,IAAAuhB,IAA7BA,EAA+B7/D,QAClC,MAAO,GAET,GAAiB,OAAbq/D,EACF,MAAO,GAET,MAAMS,EAAW,GAOjB,OANAhX,EAAIxK,0BAA0Bt+C,QAAQq8D,iBAAiB,IAADlxE,OAAKmW,EAAyB,SAAb3W,EAAsB,2BAA6B,+BAAgCyM,SAAQ+2D,IAChK,MAAMuR,EAAkBC,GAAkBxR,GAClB,OAApBuR,GAA4BJ,EAASI,IACvCI,EAASttD,KAAK27C,EAChB,IAEK2R,CAAQ,EA4BjB,SAASN,GAAU1W,GACjB,OAAOA,EAAIhY,mBAAmB9wC,QAAQq8D,iBACtC,yBAAAlxE,OACyBmW,EAAYiE,KACvC,CACA,SAASo6D,GAAkBtnD,GACzB,MAAM0nD,EAAe1nD,EAAIukD,aAAa,iBACtC,OAAKmD,EAGEtuE,OAAOsuE,GAAgB,EAFrB,IAGX,CC/LO,MAAMC,GAAqBtwE,IAK5B,IAL6B,gBACjCgwE,EAAe,cACfO,EAAa,aACbC,EAAY,MACZlpD,GACDtnB,EACC,GAAIsnB,GACF,GAAI0oD,EAAkBQ,EACpB,OAAOR,EAAkB,OAEtB,IAAK1oD,GACN0oD,EAAkBO,EACpB,OAAOP,EAAkB,EAG7B,OAAO,IAAI,EAEAS,GAAsBvwE,IAK7B,IAL8B,gBAClC8vE,EAAe,cACfO,EAAa,aACbC,EAAY,MACZlpD,GACDpnB,EACC,GAAIonB,GACF,GAAI0oD,EAAkBO,EACpB,OAAOP,EAAkB,OAEtB,IAAK1oD,GACN0oD,EAAkBQ,EACpB,OAAOR,EAAkB,EAG7B,OAAO,IAAI,ECVN,MAAMU,GAA4BA,CAAC39D,EAAQjY,KAChD,MAAMw7D,EAASsH,GAAc7qD,EAAQ,6BAC/B49D,EAAyBpzB,GAAmBxqC,EAAQjY,GAAOwlC,KAC3DhZ,GAAQinB,EAAAA,GAAAA,KACR+R,EAAWxlD,EAAM86C,kBACjBg7B,EAAkB/wE,EAAAA,SAAc,ID/BjC,SAAsCkT,EAAQutB,GACnD,MAAM5kB,EAAaqmB,GAAuBhvB,IAAW,CAAC,EACtD,MAAO,IAAK2I,EAAW5c,KAAO,MAAQwhC,KAAU5kB,EAAWtc,QAAU,GACvE,CC4B8CyxE,CAA6B99D,EAAQ49D,IAAyB,CAAC59D,EAAQ49D,IAC7GG,EAA6C,aAApBh2E,EAAM64D,WAA4B74D,EAAMi2E,cASjEC,EAAWnxE,EAAAA,aAAkB,SAAC8vE,EAAU9vC,GAAoE,IAA7DoxC,EAAkBjiE,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,OAAQkiE,EAAoBliE,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,KACvG,MAAMwrC,EAAoBb,GAAqC5mC,GACzDo+D,EAAsBp+D,EAAOzC,QAAQg7C,4BAA4BzrB,EAAO8vC,GAC1EwB,GAAuBA,EAAoB5lB,mBAClB,SAAvB0lB,EACFtB,EAAWwB,EAAoB3lB,qBACC,UAAvBylB,IACTtB,EAAWwB,EAAoBC,wBAGnC,MAAMvqD,EAAQy5B,EAAWP,GAAuBhtC,EAAOzC,QAAQxC,OAAO+Y,MAAQK,GAAgCnU,GAAQ48D,GAChH0B,EDdH,SAA+Bt+D,EAAQ8sB,EAAOhZ,EAAOqqD,GAAsB,IAAAI,EAChF,MAAMC,EAAqB9xB,GAAmC1sC,GAC9D,GAA8B,QAA1Bu+D,EAACC,EAAmB1xC,UAAM,IAAAyxC,IAAzBA,EAA4BzqD,GAC/B,OAAOgZ,EAET,MAAM2mC,EAAuBtsB,GAAiCnnC,GAE9D,IAAIy+D,EAAehL,EAAqB12C,QAAQ+P,IAAmC,SAAzBqxC,EAAkC,GAAK,GACjG,KAAOM,GAAgB,GAAKA,EAAehL,EAAqBv3D,QAAQ,KAAAwiE,EACtE,MAAMC,EAAYlL,EAAqBgL,GACvC,GAAkC,QAA9BC,EAACF,EAAmBG,UAAU,IAAAD,IAA7BA,EAAgC5qD,GACnC,OAAO6qD,EAETF,GAAyC,SAAzBN,EAAkC,GAAK,CACzD,CACA,OAAOrxC,CACT,CCF+B8xC,CAAsB5+D,EAAQ8sB,EAAOhZ,EAAOqqD,GAGjEU,EAA4Bp3B,EAAkB17B,WAAUjJ,GAAOA,EAAI3I,KAAOmkE,IAChF/a,EAAOR,MAAM,0BAADr6D,OAA2Bm2E,EAAyB,UAAAn2E,OAASk0E,IACzE58D,EAAOzC,QAAQuhE,gBAAgB,CAC7BlC,WACAxsB,SAAUyuB,IAEZ7+D,EAAOzC,QAAQwhE,aAAaT,EAAoBxqD,EAClD,GAAG,CAAC9T,EAAQujD,EAAQhW,IACdyxB,EAAalyE,EAAAA,aAAkB,CAAC8vE,EAAUxhE,KAC9CmoD,EAAOR,MAAM,4BAADr6D,OAA6Bk0E,IACzC58D,EAAOzC,QAAQuhE,gBAAgB,CAC7BlC,aAEF,MAAM9oD,EAAQ9T,EAAOzC,QAAQ0hE,oBAAoBrC,GAAU9oD,MAC3D9T,EAAOzC,QAAQ2hE,qBAAqBprD,EAAO1Y,EAAM,GAChD,CAAC4E,EAAQujD,IACN4b,EAAmBryE,EAAAA,aAAkB,CAAC8vE,EAAUxhE,KACpDmoD,EAAOR,MAAM,mCAADr6D,OAAoCk0E,IAChD58D,EAAOzC,QAAQuhE,gBAAgB,CAC7BlC,aAEF,MAAM9oD,EAAQ9T,EAAOzC,QAAQ0hE,oBAAoBrC,GAAU9oD,MAC3D9T,EAAOzC,QAAQ6hE,2BAA2BtrD,EAAO1Y,EAAM,GACtD,CAAC4E,EAAQujD,IACN8b,EAAkBvyE,EAAAA,aAAkB,CAAC8vE,EAAUhuC,EAAOxzB,KAC1DmoD,EAAOR,MAAM,4BAADr6D,OAA6Bk0E,IACzC58D,EAAOzC,QAAQuhE,gBAAgB,CAC7BlC,aAEF,MAAM,MACJ9oD,GACE9T,EAAOzC,QAAQ0hE,oBAAoBrC,GACvC58D,EAAOzC,QAAQ+hE,0BAA0BxrD,EAAO8a,EAAOxzB,EAAM,GAC5D,CAAC4E,EAAQujD,IACNgc,EAAoBzyE,EAAAA,aAAkBsjD,IAAY,IAAAovB,EACtD,OAAgC,QAAhCA,EAAO3B,EAAgBztB,UAAS,IAAAovB,OAAA,EAAzBA,EAA2BrlE,EAAE,GACnC,CAAC0jE,IACE4B,EAA4B3yE,EAAAA,aAAkB,CAACosB,EAAQ9d,KAC3D,MAAMskE,EAAkBtkE,EAAM+2C,cAAc0Z,cAAc,IAADnjE,OAAKmW,EAAYkH,oCAE1E,KAD8B25D,GAAmBA,EAAgBnlC,SAASn/B,EAAMI,SACrD0d,EAAOpF,QAAUw5C,GAAgCx5C,MAG1E,OAEF,MAAM6rD,EAAmB3/D,EAAOzC,QAAQqiE,sBAClCC,EAAiB3mD,EAAOpF,MAAQ9T,EAAOzC,QAAQuiE,eAAe5mD,EAAOpF,OAAS,EAC9EisD,EAAsBlC,EAAgB3hE,OAAS,EAAI,EAAI,KACvD8jE,EAAqBnC,EAAgB3hE,OAAS,EAE9CuhE,EAAexpD,GAAqCjU,GAAQ9D,OAAS,EACrE+jE,EAAsBhhC,GAAuCj/B,GACnE,IAAIkgE,GAAuB,EAC3B,OAAQ9kE,EAAM/P,KACZ,IAAK,YAE2B,OAAxB00E,IACEhC,EACFoB,EAAiBU,EAAgBzkE,GAEjC6iE,EAAS4B,EAAgBN,EAAkBQ,KAG/C,MAEJ,IAAK,aACH,CACE,MAAMI,EAAgBzC,GAAoB,CACxCT,gBAAiB4C,EACjBrC,cApBc,EAqBdC,eACAlpD,UAEoB,OAAlB4rD,GACFnB,EAAWmB,EAAe/kE,GAE5B,KACF,CACF,IAAK,YACH,CACE,MAAMglE,EAAe7C,GAAmB,CACtCN,gBAAiB4C,EACjBrC,cAjCc,EAkCdC,eACAlpD,UAEmB,OAAjB6rD,GACFpB,EAAWoB,EAAchlE,GAE3B,KACF,CACF,IAAK,UAEG6kE,EAAsB,GACxBZ,EAAgBQ,EAAgBI,EAAsB,EAAG7kE,GAE3D,MAEJ,IAAK,WAE2B,OAAxB2kE,GAAuD,OAAvBC,GAClC/B,EAAS4B,EAAgBN,EAAkBhtE,KAAKwtB,IAAIggD,EAAsBJ,EAAkBK,KAE9F,MAEJ,IAAK,OAEDhB,EA1DgB,EA0DU5jE,GAC1B,MAEJ,IAAK,MAED4jE,EAAWvB,EAAcriE,GACzB,MAEJ,IAAK,SAEGA,EAAM20D,SAAW30D,EAAM40D,UACzBhwD,EAAOzC,QAAQ8iE,iBAAiBnnD,EAAOpF,OAEzC,MAEJ,IAAK,IAGD,MAEJ,QAEIosD,GAAuB,EAGzBA,GACF9kE,EAAM2hC,gBACR,GACC,CAAC/8B,EAAQ69D,EAAgB3hE,OAAQ6hE,EAAwBoB,EAAkBlB,EAAUsB,EAAmBhrD,EAAOyqD,EAAYK,IACxHiB,EAA4BxzE,EAAAA,aAAkB,CAACosB,EAAQ9d,KAC3D,MAAMmlE,EAAYniC,GAAqCp+B,KAAYkZ,EAAOpF,MACpE0sD,EAAmBliC,GAAgCt+B,KAAYkZ,EAAOpF,MAC5E,GAAIysD,GAAaC,IAAqBvQ,GAAgB70D,EAAM/P,KAC1D,OAEF,MAAMs0E,EAAmB3/D,EAAOzC,QAAQqiE,sBAClCC,EAAiB3mD,EAAOpF,MAAQ9T,EAAOzC,QAAQuiE,eAAe5mD,EAAOpF,OAAS,EAE9EksD,EAAqBnC,EAAgB3hE,OAAS,EAE9CuhE,EAAexpD,GAAqCjU,GAAQ9D,OAAS,EAC3E,IAAIgkE,GAAuB,EAC3B,OAAQ9kE,EAAM/P,KACZ,IAAK,YACH,CACE,MAAMyhC,EAAQyyC,EARQ,GASuB,MAATzyC,GAClCmxC,EAAS4B,EAAgB/yC,GAE3B,KACF,CACF,IAAK,aACH,CACE,MAAMqzC,EAAgBzC,GAAoB,CACxCT,gBAAiB4C,EACjBrC,cAhBc,EAiBdC,eACAlpD,UAEoB,OAAlB4rD,GACFhB,EAAiBgB,EAAe/kE,GAElC,KACF,CACF,IAAK,YACH,CACE,MAAMglE,EAAe7C,GAAmB,CACtCN,gBAAiB4C,EACjBrC,cA7Bc,EA8BdC,eACAlpD,UAEmB,OAAjB6rD,EACFjB,EAAiBiB,EAAchlE,GAE/B4E,EAAOzC,QAAQ6hE,2BAA2BlmD,EAAOpF,MAAO1Y,GAE1D,KACF,CACF,IAAK,UAED4jE,EAAWa,EAAgBzkE,GAC3B,MAEJ,IAAK,WAE0D,OAAvB4kE,GAClC/B,EAAS4B,EAAgBN,EAAkBhtE,KAAKwtB,IAlD5B,EAkDsD4/C,EAAkBK,KAE9F,MAEJ,IAAK,OAEDb,EAtDgB,EAsDgB/jE,GAChC,MAEJ,IAAK,MAED+jE,EAAiB1B,EAAcriE,GAC/B,MAEJ,IAAK,IAGD,MAEJ,QAEI8kE,GAAuB,EAGzBA,GACF9kE,EAAM2hC,gBACR,GACC,CAAC/8B,EAAQ69D,EAAgB3hE,OAAQijE,EAAkB5qD,EAAOyqD,EAAYf,EAAUsB,IAC7EkB,EAAiC3zE,EAAAA,aAAkB,CAACosB,EAAQ9d,KAChE,MAAMslE,EAAqBv7B,GAAmCnlC,GAC9D,GAA2B,OAAvB0gE,EACF,OAEF,MACE5sD,MAAO6sD,EACP/xC,MAAOgyC,GACLF,GACE,OACJrN,EAAM,MACNzkC,EAAK,SACLuQ,GACEjmB,EACEymD,EAAmB3/D,EAAOzC,QAAQqiE,sBAClC3C,EAAkBj9D,EAAOzC,QAAQuiE,eAAea,GAChDd,EAAiBc,EAAe3gE,EAAOzC,QAAQuiE,eAAea,GAAgB,EAE9EX,EAAqBnC,EAAgB3hE,OAAS,EAE9CuhE,EAAexpD,GAAqCjU,GAAQ9D,OAAS,EAC3E,IAAIgkE,GAAuB,EAC3B,OAAQ9kE,EAAM/P,KACZ,IAAK,YAEGujC,IAAUuQ,EAAW,EACvB6/B,EAAW/B,EAAiB7hE,GAE5BikE,EAAgBpC,EAAiB2D,EAAe,EAAGxlE,GAErD,MAEJ,IAAK,UAEGwzB,EAAQ,GACVywC,EAAgBpC,EAAiB2D,EAAe,EAAGxlE,GAErD,MAEJ,IAAK,aACH,CACE,MAAMylE,EAAwBxN,EAAOn3D,OAASm3D,EAAOt2C,QAAQ4jD,GAAgB,EACzE1D,EAAkB4D,EAAwB,GAAKpD,GACjD4B,EAAgBpC,EAAkB4D,EAAwB,EAAGD,EAAcxlE,GAE7E,KACF,CACF,IAAK,YACH,CACE,MAAM0lE,EAAuBzN,EAAOt2C,QAAQ4jD,GACxC1D,EAAkB6D,EAAuB,GA/B7B,GAgCdzB,EAAgBpC,EAAkB6D,EAAuB,EAAGF,EAAcxlE,GAE5E,KACF,CACF,IAAK,WAE0D,OAAvB4kE,GAClC/B,EAAS4B,EAAgBN,EAAkBhtE,KAAKwtB,IAzC5B,EAyCsD4/C,EAAkBK,KAE9F,MAEJ,IAAK,OAEDX,EA7CgB,EA6CeuB,EAAcxlE,GAC7C,MAEJ,IAAK,MAEDikE,EAAgB5B,EAAcmD,EAAcxlE,GAC5C,MAEJ,IAAK,IAGD,MAEJ,QAEI8kE,GAAuB,EAGzBA,GACF9kE,EAAM2hC,gBACR,GACC,CAAC/8B,EAAQ69D,EAAgB3hE,OAAQ8iE,EAAYK,EAAiBpB,EAAUsB,IACrEwB,EAAoBj0E,EAAAA,aAAkB,CAACosB,EAAQ9d,KAEnD,GAAImhE,GAAsBnhE,GACxB,OAIF,MAAM8yD,EAAaluD,EAAOzC,QAAQ06B,cAAc/e,EAAO/e,GAAI+e,EAAOpF,OAClE,GAAIo6C,EAAWpZ,WAAate,GAAcwqC,OAAS/Q,GAAgB70D,EAAM/P,KACvE,OAMF,IAJuB2U,EAAOzC,QAAQuZ,6BAA6B,kBAAkB,EAAM,CACzF1b,QACAyG,KAAMqsD,IAGN,OAEF,GAA+B,IAA3B2P,EAAgB3hE,OAClB,OAEF,MAAMyjE,EAAmB3/D,EAAOzC,QAAQqiE,sBAClCqB,EAAmB1zB,EAAW,IAAM,EAAIvtC,EAAOzC,QAAQuiE,eACvDD,EAAiB3mD,EAAOpF,MAAQmtD,EAAiB/nD,EAAOpF,OAAS,EACjEotD,EAAiBrD,EAAgB9xD,WAAUjJ,GAAOA,EAAI3I,KAAO+e,EAAO/e,KAEpE6lE,EAAqBnC,EAAgB3hE,OAAS,EAG9CuhE,GADiBlwB,EAAW,CAACP,GAAuBhtC,EAAOzC,QAAQxC,QAAUkZ,GAAqCjU,IACpF9D,OAAS,EAC7C,IAAIgkE,GAAuB,EAC3B,OAAQ9kE,EAAM/P,KACZ,IAAK,YAGG61E,EAAiBlB,GACnB/B,EAAS4B,EAAgBN,EAAkB2B,EAAiB,GAAI3sD,EAAQ,QAAU,OAAQ,QAE5F,MAEJ,IAAK,UAEG2sD,EAjBkB,EAkBpBjD,EAAS4B,EAAgBN,EAAkB2B,EAAiB,IACnDnD,EACToB,EAAiBU,EAAgBzkE,GAEjC4jE,EAAWa,EAAgBzkE,GAE7B,MAEJ,IAAK,aACH,CACE,MAAM+kE,EAAgBzC,GAAoB,CACxCT,gBAAiB4C,EACjBrC,cA5Bc,EA6BdC,eACAlpD,UAEoB,OAAlB4rD,GACFlC,EAASkC,EAAeZ,EAAkB2B,GAAiB3sD,EAAQ,OAAS,SAE9E,KACF,CACF,IAAK,YACH,CACE,MAAM6rD,EAAe7C,GAAmB,CACtCN,gBAAiB4C,EACjBrC,cAzCc,EA0CdC,eACAlpD,UAEmB,OAAjB6rD,GACFnC,EAASmC,EAAcb,EAAkB2B,GAAiB3sD,EAAQ,QAAU,QAE9E,KACF,CACF,IAAK,MAGGnZ,EAAMi1D,UAAYwP,EArDN,EAsDd5B,EAAS4B,EAAiB,EAAGN,EAAkB2B,GAAiB,SACtD9lE,EAAMi1D,UAAYwP,EAAiBpC,GAC7CQ,EAAS4B,EAAiB,EAAGN,EAAkB2B,GAAiB,SAElE,MAEJ,IAAK,IACH,CAEE,GADchoD,EAAOpF,QACPkoD,GACZ,MAEF,MAAMhhD,EAAS9B,EAAO8B,OACtB,GAAIA,GAEa,wBAAjBA,EAAOlH,MACL,OAEG1Y,EAAMi1D,UAAY6Q,EAAiBlB,GACtC/B,EAAS4B,EAAgBN,EAAkBhtE,KAAKwtB,IAAImhD,EAAiBvB,EAAkBK,KAEzF,KACF,CACF,IAAK,WAEGkB,EAAiBlB,GACnB/B,EAAS4B,EAAgBN,EAAkBhtE,KAAKwtB,IAAImhD,EAAiBvB,EAAkBK,KAEzF,MAEJ,IAAK,SACH,CAEE,MAAMvB,EAAelsE,KAAKvE,IAAIkzE,EAAiBvB,EAzFzB,GA0FlBlB,IAAiByC,GAAkBzC,GA1FjB,EA2FpBR,EAAS4B,EAAgBN,EAAkBd,IAE3CO,EAAWa,EAAgBzkE,GAE7B,KACF,CACF,IAAK,OAEGA,EAAM20D,SAAW30D,EAAM40D,SAAW50D,EAAMi1D,SAC1C4N,EAlGc,EAkGUsB,EApGJ,IAsGpBtB,EApGc,EAoGUsB,EAAkB2B,IAE5C,MAEJ,IAAK,MAEG9lE,EAAM20D,SAAW30D,EAAM40D,SAAW50D,EAAMi1D,SAC1C4N,EAASR,EAAc8B,EAAkBS,IAEzC/B,EAASR,EAAc8B,EAAkB2B,IAE3C,MAEJ,QAEIhB,GAAuB,EAGzBA,GACF9kE,EAAM2hC,gBACR,GACC,CAAC/8B,EAAQ69D,EAAiBtpD,EAAO0pD,EAAUsB,EAAmBxB,EAAwBoB,EAAkBH,EAAYzxB,IACjH4zB,EAAyBr0E,EAAAA,aAAkB,CAAC8oE,EAAY3oE,KAExD,IAF0D,MAC9DmO,GACDnO,EACC,MAAkB,MAAdmO,EAAM/P,KAIHuqE,CAAY,GAClB,IACHnD,GAA6BzyD,EAAQ,kBAAmBmhE,GACxD1oD,GAAuBzY,EAAQ,sBAAuBy/D,GACtDhnD,GAAuBzY,EAAQ,sBAAuBsgE,GACtD7nD,GAAuBzY,EAAQ,2BAA4BygE,GAC3DhoD,GAAuBzY,EAAQ,cAAe+gE,EAAkB,EC3gBrDK,GAA6BA,CAACrmE,EAAOhT,KAAU,IAAAs5E,EAAAxO,EAAAyO,EAAAvO,EAAA9lE,EAAAs0E,EAAAC,EAC1D,MAAMr4B,GAAkBh6C,EAAAA,EAAAA,GAAS,CAAC,EAAGw5C,GAA8B5gD,EAAM6gD,cAAoC,QAAvBy4B,EAAEt5E,EAAMohD,uBAAe,IAAAk4B,EAAAA,EAAsB,QAAtBxO,EAAI9qE,EAAM05C,oBAAY,IAAAoxB,GAAY,QAAZA,EAAlBA,EAAoB5pB,kBAAU,IAAA4pB,OAAA,EAA9BA,EAAgC1pB,iBACjJN,GAA+BM,EAAgBX,SAAUzgD,EAAM64D,WAC/D,MAAMxwB,EAAyB,QAAjBkxC,EAAGv5E,EAAMqoC,gBAAQ,IAAAkxC,EAAAA,EAAsB,QAAtBvO,EAAIhrE,EAAM05C,oBAAY,IAAAsxB,GAAY,QAAZA,EAAlBA,EAAoB9pB,kBAAU,IAAA8pB,OAAA,EAA9BA,EAAgC3iC,SAC7DpU,EAAmE,QAA/D/uB,EAAuB,QAAvBs0E,EAAGx5E,EAAM05E,sBAAc,IAAAF,EAAAA,EAAsB,QAAtBC,EAAIz5E,EAAM05C,oBAAY,IAAA+/B,GAAY,QAAZA,EAAlBA,EAAoBv4B,kBAAU,IAAAu4B,OAAA,EAA9BA,EAAgCxlD,YAAI,IAAA/uB,EAAAA,EAAI,CAAC,EAC9E,OAAOkC,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBkuC,WAAY,CACVE,kBACA/Y,WACApU,SAEF,EAOS0lD,GAAoBA,CAAC1hE,EAAQjY,KClBL45E,EAAC3hE,EAAQjY,KAAU,IAAAgrE,EACtD,MAAMxP,EAASsH,GAAc7qD,EAAQ,yBAC/ByhE,EAAiBphE,EAAgBL,EAAQqpC,IAC/CrpC,EAAOzC,QAAQ4pD,qBAAqB,CAClCE,QAAS,iBACTQ,UAAW9/D,EAAM05E,eACjB1Z,aAAchgE,EAAM65E,uBACpBla,cAAere,GACf2e,YAAa,yBAMf,MAAM6Z,EAAoB/0E,EAAAA,aAAkBg1E,IACtCL,IAAmBK,IAGvBve,EAAOR,MAAM,8BAA+B+e,GAC5C9hE,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDkuC,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkuC,WAAY,CACzCjtB,KAAM8lD,QAEP,GACF,CAAC9hE,EAAQujD,EAAQke,IAIpBv1B,GAAiBlsC,EAHS,CACxB6hE,qBAE0C,UAK5C,MAAME,EAA2Bj1E,EAAAA,aAAkB,CAACk1E,EAAW5Y,KAAY,IAAAyJ,EACzE,MAAMoP,EAAyB54B,GAA2BrpC,GAQ1D,OALCopD,EAAQ8Y,uBAEe,MAAxBn6E,EAAM05E,gBAEkC,OAAtB,QAAlB5O,EAAA9qE,EAAM05C,oBAAY,IAAAoxB,GAAY,QAAZA,EAAlBA,EAAoB5pB,kBAAU,IAAA4pB,OAAA,EAA9BA,EAAgC72C,MAEvBgmD,GAEF7yE,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAW,CAC7B/4B,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAU/4B,WAAY,CAC7CjtB,KAAMimD,KAER,GACD,CAACjiE,EAAQjY,EAAM05E,eAAkC,QAApB1O,EAAEhrE,EAAM05C,oBAAY,IAAAsxB,GAAY,QAAZA,EAAlBA,EAAoB9pB,kBAAU,IAAA8pB,OAAA,EAA9BA,EAAgC/2C,OAC5DmmD,EAA4Br1E,EAAAA,aAAkB,CAACosB,EAAQkwC,KAAY,IAAAgZ,EACvE,MAAMC,EAA0D,QAAjCD,EAAAhZ,EAAQkZ,eAAer5B,kBAAU,IAAAm5B,GAAjCA,EAAmCpmD,KAAOotC,EAAQkZ,eAAer5B,WAAWjtB,KAAOqtB,GAA2BrpC,GAM7I,OALAA,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDkuC,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkuC,WAAY,CACzCjtB,KAAMqmD,QAGHnpD,CAAM,GACZ,CAAClZ,IACJyyD,GAA6BzyD,EAAQ,cAAe+hE,GACpDtP,GAA6BzyD,EAAQ,eAAgBmiE,GAKrDr1E,EAAAA,WAAgB,KACV/E,EAAM05E,gBACRzhE,EAAOzC,QAAQskE,kBAAkB95E,EAAM05E,eACzC,GACC,CAACzhE,EAAQjY,EAAM05E,gBAAgB,EDnDlCE,CAAsB3hE,EAAQjY,GTMMw6E,EAACviE,EAAQjY,KAAU,IAAAgrE,EACvD,MAAMxP,EAASsH,GAAc7qD,EAAQ,0BAC/B8iC,EAAgBziC,EAAgBL,EAAQ0S,IACxCghB,EAAYnhC,KAAKywC,MAAMj7C,EAAM2rC,UAAYoP,GAC/C9iC,EAAOzC,QAAQ4pD,qBAAqB,CAClCE,QAAS,kBACTQ,UAAW9/D,EAAMohD,gBACjB4e,aAAchgE,EAAMy6E,wBACpB9a,cAAexe,GACf8e,YAAa,0BAMf,MAAMya,EAAU31E,EAAAA,aAAkB27C,IAChC,MAAMi6B,EAAex5B,GAA4BlpC,GAC7CyoC,IAASi6B,EAAaj6B,OAG1B8a,EAAOR,MAAM,mBAADr6D,OAAoB+/C,IAChCzoC,EAAOzC,QAAQolE,mBAAmB,CAChCl6B,OACAD,SAAUk6B,EAAal6B,WACvB,GACD,CAACxoC,EAAQujD,IACNqf,EAAc91E,EAAAA,aAAkB07C,IACpC,MAAMk6B,EAAex5B,GAA4BlpC,GAC7CwoC,IAAak6B,EAAal6B,WAG9B+a,EAAOR,MAAM,wBAADr6D,OAAyB8/C,IACrCxoC,EAAOzC,QAAQolE,mBAAmB,CAChCn6B,WACAC,KAAMi6B,EAAaj6B,OACnB,GACD,CAACzoC,EAAQujD,IACNof,EAAqB71E,EAAAA,aAAkBq8C,IAC3C,MAAMu5B,EAAex5B,GAA4BlpC,GAC7CmpC,IAAoBu5B,IAGxBnf,EAAOR,MAAM,+BAAgC5Z,GAC7CnpC,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDkuC,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkuC,WAAY,CACzCE,gBAAiB6sB,GAA0Bj7D,EAAMkuC,WAAYlhD,EAAM64D,UAAWzX,SAE/E,GACF,CAACnpC,EAAQujD,EAAQx7D,EAAM64D,YAM1B1U,GAAiBlsC,EALU,CACzByiE,UACAG,cACAD,sBAE2C,UAK7C,MAAMZ,EAA2Bj1E,EAAAA,aAAkB,CAACk1E,EAAW5Y,KAAY,IAAAyJ,EACzE,MAAM1pB,EAAkBD,GAA4BlpC,GAUpD,OAPCopD,EAAQ8Y,uBAEgB,MAAzBn6E,EAAMohD,iBAE6C,OAAjC,QAAlB0pB,EAAA9qE,EAAM05C,oBAAY,IAAAoxB,GAAY,QAAZA,EAAlBA,EAAoB5pB,kBAAU,IAAA4pB,OAAA,EAA9BA,EAAgC1pB,kBAEP,IAAzBA,EAAgBV,MAAcU,EAAgBX,YAA6BzgD,EAAM6gD,a5DjGvB,EAAI,M4DqGvDz5C,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAW,CAC7B/4B,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAU/4B,WAAY,CAC7CE,sBAJK64B,CAMP,GACD,CAAChiE,EAAQjY,EAAMohD,gBAAmC,QAApB4pB,EAAEhrE,EAAM05C,oBAAY,IAAAsxB,GAAY,QAAZA,EAAlBA,EAAoB9pB,kBAAU,IAAA8pB,OAAA,EAA9BA,EAAgC5pB,gBAAiBphD,EAAM6gD,eACpFu5B,EAA4Br1E,EAAAA,aAAkB,CAACosB,EAAQkwC,KAAY,IAAAgZ,EAAAS,EACvE,MAAM15B,EAAmD,QAAjCi5B,EAAAhZ,EAAQkZ,eAAer5B,kBAAU,IAAAm5B,GAAjCA,EAAmCj5B,iBAAkBh6C,EAAAA,EAAAA,GAAS,CAAC,EAAGw5C,GAA8B5gD,EAAM6gD,cAAgD,QAAnCi6B,EAAEzZ,EAAQkZ,eAAer5B,kBAAU,IAAA45B,OAAA,EAAjCA,EAAmC15B,iBAAmBD,GAA4BlpC,GAM/N,OALAA,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDkuC,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkuC,WAAY,CACzCE,gBAAiB6sB,GAA0Bj7D,EAAMkuC,WAAYlhD,EAAM64D,UAAWzX,SAG3EjwB,CAAM,GACZ,CAAClZ,EAAQjY,EAAM6gD,aAAc7gD,EAAM64D,YACtC6R,GAA6BzyD,EAAQ,cAAe+hE,GACpDtP,GAA6BzyD,EAAQ,eAAgBmiE,GAKrD,MAQMW,EAA2Bh2E,EAAAA,aAAkB,KACjD,IAAK/E,EAAM6gD,aACT,OAEF,MAAM5nC,EAAahB,EAAOzC,QAAQmlC,oBAC5BqgC,EAAkCxwE,KAAKywC,MAAMhiC,EAAW2iC,kBAAkBt5C,OAASqpC,GACzF1zB,EAAOzC,QAAQqlE,YAAYG,EAAgC,GAC1D,CAAC/iE,EAAQjY,EAAM6gD,aAAclV,IAC1BsvC,EAAuBl2E,EAAAA,aAAkBm2E,IAC7C,GAAmB,MAAfA,EACF,OAEF,MAAM95B,EAAkBD,GAA4BlpC,GAC9Cq2D,EAAY7sB,GAAsBxpC,GACpCmpC,EAAgBV,KAAO4tB,EAAY,GACrCr2D,EAAOzC,QAAQklE,QAAQlwE,KAAKvE,IAAI,EAAGqoE,EAAY,GACjD,GACC,CAACr2D,IACJyY,GAAuBzY,EAAQ,0BAA2B8iE,GAC1DrqD,GAAuBzY,EAAQ,yBA3BKkjE,KAAM,IAAAC,EACxC,MAAMh6B,EAAkBD,GAA4BlpC,GACf,QAArCmjE,EAAInjE,EAAOzC,QAAQ8wC,0BAAkB,IAAA80B,GAAjCA,EAAmC5lE,SACrCyC,EAAOzC,QAAQuhE,gBAAgB,CAC7B1uB,SAAUjH,EAAgBV,KAAOU,EAAgBX,UAErD,IAsBF/vB,GAAuBzY,EAAQ,iBAAkBgjE,GAKjDl2E,EAAAA,WAAgB,KACdkT,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDkuC,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkuC,WAAY,CACzCE,gBAAiB6sB,GAA0Bj7D,EAAMkuC,WAAYlhD,EAAM64D,UAAW74D,EAAMohD,sBAErF,GACF,CAACnpC,EAAQjY,EAAMohD,gBAAiBphD,EAAMwiD,eAAgBxiD,EAAM64D,YAC/D9zD,EAAAA,UAAgBg2E,EAA0B,CAACA,GAA0B,ES3IrEP,CAAuBviE,EAAQjY,GElBFq7E,EAACpjE,EAAQjY,KAAU,IAAAgrE,EAChD,MAAMxP,EAASsH,GAAc7qD,EAAQ,mBAC/B2pC,EAA0BtpC,EAAgBL,EAAQ6nC,IAClDw7B,EAAgBhjE,EAAgBL,EAAQopC,IACxCq4B,EAAiBphE,EAAgBL,EAAQqpC,IACzCF,EAAkB9oC,EAAgBL,EAAQkpC,IAC1Co6B,EAAmBhkE,GAAW,IAAM4pC,GAA4BlpC,GAAQwoC,WAC9ExoC,EAAOzC,QAAQ4pD,qBAAqB,CAClCE,QAAS,qBACTQ,UAAW9/D,EAAMqoC,SACjB23B,aAAchgE,EAAMw7E,iBACpB7b,cAAete,GACf4e,YAAa,mBAMf,MAAMwb,EAAc12E,EAAAA,aAAkBm2E,IAChCI,IAAkBJ,IAGtB1f,EAAOR,MAAM,wBAAyBkgB,GACtCjjE,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDkuC,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkuC,WAAY,CACzC7Y,SAAU6yC,QAEX,GACF,CAACjjE,EAAQujD,EAAQ8f,IAIpBn3B,GAAiBlsC,EAHa,CAC5BwjE,eAE8C,UAKhD,MAAMzB,EAA2Bj1E,EAAAA,aAAkB,CAACk1E,EAAW5Y,KAAY,IAAAyJ,EACzE,MAAM4Q,EAAmBr6B,GAA+BppC,GAQxD,OALCopD,EAAQ8Y,uBAES,MAAlBn6E,EAAMqoC,UAEsC,OAA1B,QAAlByiC,EAAA9qE,EAAM05C,oBAAY,IAAAoxB,GAAY,QAAZA,EAAlBA,EAAoB5pB,kBAAU,IAAA4pB,OAAA,EAA9BA,EAAgCziC,UAEvB4xC,GAEF7yE,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAW,CAC7B/4B,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAU/4B,WAAY,CAC7C7Y,SAAUqzC,KAEZ,GACD,CAACzjE,EAAQjY,EAAMqoC,SAA4B,QAApB2iC,EAAEhrE,EAAM05C,oBAAY,IAAAsxB,GAAY,QAAZA,EAAlBA,EAAoB9pB,kBAAU,IAAA8pB,OAAA,EAA9BA,EAAgC3iC,WACtD+xC,EAA4Br1E,EAAAA,aAAkB,CAACosB,EAAQkwC,KAAY,IAAAgZ,EACvE,MAAMsB,EAAoD,QAAjCtB,EAAAhZ,EAAQkZ,eAAer5B,kBAAU,IAAAm5B,GAAjCA,EAAmChyC,SAAWg5B,EAAQkZ,eAAer5B,WAAW7Y,SAAWgZ,GAA+BppC,GAMnJ,OALAA,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDkuC,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkuC,WAAY,CACzC7Y,SAAUszC,QAGPxqD,CAAM,GACZ,CAAClZ,IACJyyD,GAA6BzyD,EAAQ,cAAe+hE,GACpDtP,GAA6BzyD,EAAQ,eAAgBmiE,GAKrD,MAAMe,EAA8Bp2E,EAAAA,aAAkB0nB,IACvB,WAAzBzsB,EAAMwiD,gBAAgC+4B,EAAiB/lE,SAGvDiX,EAAMg0B,WAAa86B,EAAiB/lE,UACtC+lE,EAAiB/lE,QAAUiX,EAAMg0B,UACV,IAAnB66B,GAEFrjE,EAAOzC,QAAQklE,QAAQ,GAE3B,GACC,CAAC16E,EAAMwiD,eAAgB+4B,EAAkBD,EAAerjE,IAC3DyY,GAAuBzY,EAAQ,wBAAyBkjE,GAKxDp2E,EAAAA,WAAgB,KACe,WAAzB/E,EAAMwiD,eACRvqC,EAAOzC,QAAQimE,YAAY75B,GACA,MAAlB5hD,EAAMqoC,UACfpwB,EAAOzC,QAAQimE,YAAYz7E,EAAMqoC,SACnC,GACC,CAACpwB,EAAQjY,EAAMwiD,eAAgBZ,EAAyB5hD,EAAMqoC,WACjE,MAAMuzC,GAA4C,IAA/BlC,EAAemC,YAClC92E,EAAAA,WAAgB,KACV62E,IAAiC,IAAnBN,GAChBrjE,EAAOzC,QAAQimE,YAAYr6B,EAAgBX,SAAWW,EAAgBV,KAAOkB,EAC/E,GACC,CAAC3pC,EAAQ2pC,EAAyBg6B,EAAYN,EAAel6B,GAAiB,EFhFjFi6B,CAAgBpjE,EAAQjY,EAAM,EGpBnB87E,GAAkCA,CAAC9oE,EAAOhT,KAAK,IAAA+7E,EAAAjR,EAAA,OAAK1jE,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnFqb,gBAAoD,QAArC0tD,EAAoB,QAApBjR,EAAE9qE,EAAM05C,oBAAY,IAAAoxB,OAAA,EAAlBA,EAAoBz8C,uBAAe,IAAA0tD,EAAAA,EAAI,CACtDxlE,MAAM,IAER,ECPWylE,GAA4BhpE,GAASA,EAAMipE,SCH3CC,GAAsBjpD,IACjC,OAAQA,EAAOhmB,MACb,IAAK,UACH,OAAO,EACT,IAAK,OACL,IAAK,WACL,IAAK,SACH,OACF,IAAK,eACH,OAAO,KAET,QACE,MAAO,GACX,ECVIxN,GAAY,CAAC,KAAM,SACvB65B,GAAa,CAAC,KAAM,SCYtB,IAAI6iD,GAAuC,SAAUA,GAKnD,OAJAA,EAAsC,aAAI,eAC1CA,EAAyC,gBAAI,kBAC7CA,EAA0C,iBAAI,mBAC9CA,EAAuC,cAAI,gBACpCA,CACT,CAN2C,CAMzCA,IAA2B,CAAC,GAI1BC,GAAsC,SAAUA,GAMlD,OALAA,EAAoC,YAAI,cACxCA,EAAsC,cAAI,gBAC1CA,EAAqC,aAAI,eACzCA,EAAmC,WAAI,aACvCA,EAAwC,gBAAI,kBACrCA,CACT,CAP0C,CAOxCA,IAA0B,CAAC,GC9B7B,MAAM38E,GAAY,CAAC,MACjB65B,GAAa,CAAC,MCIH+iD,GAA0BrpE,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CAClEipE,SAAU,CAAC,IAEAK,GAAiBA,CAACrkE,EAAQjY,KHMLu8E,EAACtkE,EAAQjY,KACzC,MAAOw8E,EAAgBC,GAAqB13E,EAAAA,SAAe,CAAC,GACtD23E,EAAoB33E,EAAAA,OAAay3E,GACjCG,EAAqB53E,EAAAA,OAAa,CAAC,IACnC,iBACJ63E,EAAgB,wBAChBC,EACAL,eAAgBM,EAAkB,uBAClCC,GACE/8E,EACEg9E,EAAsBjgD,GAAY,WAClC/8B,EAAMovC,WAAaZ,GAAca,MACnCtS,KAAS7oB,UAEb,EACM+oE,EAAqBl4E,EAAAA,aAAkB,CAACqN,EAAI2Z,KAChD,MAAMoF,EAASlZ,EAAOzC,QAAQ06B,cAAc99B,EAAI2Z,GAChD,IAAK9T,EAAOzC,QAAQ0nE,eAAe/rD,GACjC,MAAM,IAAItd,MAAM,2BAADlT,OAA4ByR,EAAE,eAAAzR,OAAcorB,EAAK,qBAClE,GACC,CAAC9T,IACEklE,EAAmBp4E,EAAAA,aAAkB,CAACqN,EAAI2Z,EAAOhc,KACrD,GAAIkI,EAAOzC,QAAQ4nE,YAAYhrE,EAAI2Z,KAAWhc,EAC5C,MAAM,IAAI8D,MAAM,2BAADlT,OAA4ByR,EAAE,eAAAzR,OAAcorB,EAAK,eAAAprB,OAAcoP,EAAI,UACpF,GACC,CAACkI,IACEolE,EAAwBt4E,EAAAA,aAAkB,CAACosB,EAAQ9d,KACvD,IAAK8d,EAAOmsD,WACV,OAEF,GAAInsD,EAAO47B,WAAate,GAAcwqC,KACpC,OAEF,MAAMsE,GAAYn2E,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CACrC6e,OAAQ1B,GAAyBkvC,kBAEnCvlE,EAAOzC,QAAQ26B,aAAa,gBAAiBotC,EAAWlqE,EAAM,GAC7D,CAAC4E,IACEwlE,EAAqB14E,EAAAA,aAAkB,CAACosB,EAAQ9d,KACpD,GAAI8d,EAAO47B,WAAate,GAAcivC,KACpC,OAEF,GAAIzlE,EAAOzC,QAAQ4nE,YAAYjsD,EAAO/e,GAAI+e,EAAOpF,SAAW0iB,GAAcivC,KACxE,OAEF,MAAMH,GAAYn2E,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CACrC6e,OAAQzB,GAAwB8B,eAElCp4B,EAAOzC,QAAQ26B,aAAa,eAAgBotC,EAAWlqE,EAAM,GAC5D,CAAC4E,IACE+gE,EAAoBj0E,EAAAA,aAAkB,CAACosB,EAAQ9d,KACnD,GAAI8d,EAAO47B,WAAate,GAAcwqC,KAAM,CAG1C,GAAoB,MAAhB5lE,EAAMsqE,MACR,OAEF,IAAI3tC,EASJ,GARkB,WAAd38B,EAAM/P,IACR0sC,EAASzB,GAAwB6B,cACV,UAAd/8B,EAAM/P,IACf0sC,EAASzB,GAAwBqvC,aACV,QAAdvqE,EAAM/P,MACf0sC,EAAS38B,EAAMi1D,SAAW/5B,GAAwBsvC,gBAAkBtvC,GAAwBuvC,WAC5FzqE,EAAM2hC,kBAEJhF,EAAQ,CACV,MAAMutC,GAAYn2E,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CACrC6e,WAEF/3B,EAAOzC,QAAQ26B,aAAa,eAAgBotC,EAAWlqE,EACzD,CACF,MAAO,GAAI8d,EAAOmsD,WAAY,CAC5B,IAAIttC,EAMJ,IALwB/3B,EAAOzC,QAAQuZ,6BAA6B,mBAAmB,EAAM,CAC3F1b,QACA8yD,WAAYh1C,EACZie,SAAU,SAGV,OAWF,GATI24B,GAAe10D,GACjB28B,EAAS1B,GAAyByvC,iBACzB5V,GAAgB90D,GACzB28B,EAAS1B,GAAyB0vC,aACX,UAAd3qE,EAAM/P,IACf0sC,EAAS1B,GAAyBsvC,aACX,cAAdvqE,EAAM/P,KAAqC,WAAd+P,EAAM/P,MAC5C0sC,EAAS1B,GAAyB2vC,eAEhCjuC,EAAQ,CACV,MAAMutC,GAAYn2E,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CACrC6e,SACA1sC,IAAK+P,EAAM/P,MAEb2U,EAAOzC,QAAQ26B,aAAa,gBAAiBotC,EAAWlqE,EAC1D,CACF,IACC,CAAC4E,IACEimE,EAAsBn5E,EAAAA,aAAkBosB,IAC5C,MAAM,GACJ/e,EAAE,MACF2Z,EAAK,OACLikB,GACE7e,EACEgtD,EAA0B,CAC9B/rE,KACA2Z,SAEEikB,IAAW1B,GAAyByvC,kBAAoB/tC,IAAW1B,GAAyB2vC,eAAiBjuC,IAAW1B,GAAyB0vC,eACnJG,EAAwBC,aAAc,GAExCnmE,EAAOzC,QAAQ6oE,kBAAkBF,EAAwB,GACxD,CAAClmE,IACEqmE,EAAqBv5E,EAAAA,aAAkBosB,IAC3C,MAAM,GACJ/e,EAAE,MACF2Z,EAAK,OACLikB,GACE7e,EAEJ,IAAIotD,EADJtmE,EAAOzC,QAAQgpE,gCAAgCpsE,EAAI2Z,GAE/CikB,IAAWzB,GAAwBqvC,aACrCW,EAAmB,QACVvuC,IAAWzB,GAAwBuvC,WAC5CS,EAAmB,QACVvuC,IAAWzB,GAAwBsvC,kBAC5CU,EAAmB,QAErB,MAAME,EAAiC,kBAAXzuC,EAC5B/3B,EAAOzC,QAAQkpE,iBAAiB,CAC9BtsE,KACA2Z,QACA0yD,sBACAF,oBACA,GACD,CAACtmE,IACuB8kB,MAa3BrM,GAAuBzY,EAAQ,kBAAmB+kE,EAAoBK,IACtE3sD,GAAuBzY,EAAQ,eAAgB+kE,EAAoBS,IACnE/sD,GAAuBzY,EAAQ,cAAe+kE,EAAoBhE,IAClEtoD,GAAuBzY,EAAQ,gBAAiB+kE,EAAoBkB,IACpExtD,GAAuBzY,EAAQ,eAAgB+kE,EAAoBsB,IACnExsD,GAAwB7Z,EAAQ,gBAAiBjY,EAAM2+E,iBACvD7sD,GAAwB7Z,EAAQ,gBAnBL8kB,EAmBwC/8B,EAAM4+E,eAnBlCnrD,iBACrC,GAAIsJ,EAAU,KAAA8hD,EACZ,MAAM,GACJzsE,EAAE,MACF2Z,GACD7X,UAAAC,QAAA,OAAAhN,EAAA+M,UAAA,IAE8C,QAA3B2qE,EADE5mE,EAAOzC,QAAQxC,MAAMipE,SACN7pE,GAAI2Z,UAAM,IAAA8yD,OAAA,EAAxBA,EAA0B5yE,QAE/C8wB,KAAS7oB,UAEb,CACF,IAQA,MAAMkpE,EAAcr4E,EAAAA,aAAkB,CAACqN,EAAI2Z,KACzC,MAAM+yD,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OAE9D,OADkB8rE,EAAa1sE,IAAO0sE,EAAa1sE,GAAI2Z,GACpC0iB,GAAcwqC,KAAOxqC,GAAcivC,IAAI,GACzD,CAACzlE,IACE8mE,EAAuBziC,IAAiB0iC,IAC5C,MAAMC,EAA8BD,IAAah/E,EAAMw8E,eACnDO,GAA0BkC,GAC5BlC,EAAuBiC,EAAU,CAC/B1gB,IAAKrmD,EAAOzC,UAGZxV,EAAMw8E,gBAAkByC,IAG5BxC,EAAkBuC,GAClBtC,EAAkBlnE,QAAUwpE,EAC5B/mE,EAAOzC,QAAQ26B,aAAa,uBAAwB6uC,GAAS,IAEzDE,EAA8Bn6E,EAAAA,aAAkB,CAACqN,EAAI2Z,EAAOozD,KAGhE,MAAMH,GAAW53E,EAAAA,EAAAA,GAAS,CAAC,EAAGs1E,EAAkBlnE,SAChD,GAAiB,OAAb2pE,EACFH,EAAS5sE,IAAMhL,EAAAA,EAAAA,GAAS,CAAC,EAAG43E,EAAS5sE,GAAK,CACxC,CAAC2Z,IAAQ3kB,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,SAEnB,CACL,MAAMC,EAAeJ,EAAS5sE,GAC5BitE,GAAc34E,EAAAA,EAAAA,GAA8B04E,EAAc,CAACrzD,GAAOpoB,IAAIu9D,GAAAA,IACxE8d,EAAS5sE,GAAMitE,EAC0B,IAArCp8E,OAAOC,KAAK87E,EAAS5sE,IAAK+B,eACrB6qE,EAAS5sE,EAEpB,CACA2sE,EAAqBC,EAAS,GAC7B,CAACD,IACEO,EAA2Bv6E,EAAAA,aAAkB,CAACqN,EAAI2Z,EAAOozD,KAC7DlnE,EAAOzC,QAAQgD,UAASxF,IACtB,MAAMusE,GAAkBn4E,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMipE,UAW3C,OAViB,OAAbkD,EACFI,EAAgBntE,IAAMhL,EAAAA,EAAAA,GAAS,CAAC,EAAGm4E,EAAgBntE,GAAK,CACtD,CAAC2Z,IAAQ3kB,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,aAGjBI,EAAgBntE,GAAI2Z,GACqB,IAA5C9oB,OAAOC,KAAKq8E,EAAgBntE,IAAK+B,eAC5BorE,EAAgBntE,KAGpBhL,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBipE,SAAUsD,GACV,IAEJtnE,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,IACEomE,EAAoBt5E,EAAAA,aAAkBosB,IAC1C,MAAM,GACF/e,EAAE,MACF2Z,GACEoF,EACJ1qB,GAAQC,EAAAA,EAAAA,GAA8ByqB,EAAQ1xB,IAChDw9E,EAAmB7qE,EAAI2Z,GACvBoxD,EAAiB/qE,EAAI2Z,EAAO0iB,GAAcivC,MAC1CwB,EAA4B9sE,EAAI2Z,GAAO3kB,EAAAA,EAAAA,GAAS,CAC9C2I,KAAM0+B,GAAcwqC,MACnBxyE,GAAO,GACT,CAACw2E,EAAoBE,EAAkB+B,IACpCM,EAAiCljC,IAAiBnrB,IACtD,MAAM,GACJ/e,EAAE,MACF2Z,EAAK,YACLqyD,EAAW,aACXvQ,GACE18C,EACJ,IAAIuC,EAAWzb,EAAOzC,QAAQiqE,aAAartE,EAAI2Z,GAC3CqyD,EACF1qD,EAAWwoD,GAAoBjkE,EAAOzC,QAAQme,UAAU5H,IAC/C8hD,IACTn6C,EAAWm6C,GAObyR,EAAyBltE,EAAI2Z,EALZ,CACf3hB,MAAOspB,EACPznB,OAAO,EACPmnB,mBAAmB,IAGrBnb,EAAOzC,QAAQwhE,aAAa5kE,EAAI2Z,EAAM,IAElC2yD,EAAmB35E,EAAAA,aAAkBosB,IACzC,MAAM,GACF/e,EAAE,MACF2Z,GACEoF,EACJ1qB,GAAQC,EAAAA,EAAAA,GAA8ByqB,EAAQmI,IAChD6jD,EAAiB/qE,EAAI2Z,EAAO0iB,GAAcwqC,MAC1CiG,EAA4B9sE,EAAI2Z,GAAO3kB,EAAAA,EAAAA,GAAS,CAC9C2I,KAAM0+B,GAAcivC,MACnBj3E,GAAO,GACT,CAAC02E,EAAkB+B,IAChBQ,EAAgCpjC,IAAiB7oB,UACrD,MAAM,GACJrhB,EAAE,MACF2Z,EAAK,oBACL0yD,EAAmB,iBACnBF,EAAmB,QACjBptD,EACJgsD,EAAiB/qE,EAAI2Z,EAAO0iB,GAAcwqC,MAC1ChhE,EAAOzC,QAAQgpE,gCAAgCpsE,EAAI2Z,GACnD,MAAM4zD,EAAqBA,KACzBL,EAAyBltE,EAAI2Z,EAAO,MACpCmzD,EAA4B9sE,EAAI2Z,EAAO,MACd,SAArBwyD,GACFtmE,EAAOzC,QAAQoqE,wBAAwBxtE,EAAI2Z,EAAOwyD,EACpD,EAEF,GAAIE,EAEF,YADAkB,IAGF,MAAMb,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,QACxD,MACJ/G,EAAK,kBACLmnB,GACE0rD,EAAa1sE,GAAI2Z,GACrB,GAAI9f,GAASmnB,EAQX,OALAupD,EAAmBnnE,QAAQpD,GAAI2Z,GAAOhc,KAAO0+B,GAAcwqC,UAE3DiG,EAA4B9sE,EAAI2Z,EAAO,CACrChc,KAAM0+B,GAAcwqC,OAIxB,MAAM4G,EAAY5nE,EAAOzC,QAAQsqE,uCAAuC1tE,EAAI2Z,GAC5E,GAAI6wD,EAAkB,CACpB,MAAMmD,EAAcC,IAClBrD,EAAmBnnE,QAAQpD,GAAI2Z,GAAOhc,KAAO0+B,GAAcwqC,KAE3DiG,EAA4B9sE,EAAI2Z,EAAO,CACrChc,KAAM0+B,GAAcwqC,OAElB4D,GACFA,EAAwBmD,EACyB,EAIrD,IACE,MAAMjlE,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAClC88D,QAAQC,QAAQyN,EAAiBiD,EAAW9kE,EAAK,CAC/CgqB,MAAO3yB,KACLsgE,MAAKuN,IACPhoE,EAAOzC,QAAQ0qE,WAAW,CAACD,IAC3BN,GAAoB,IACnBrV,MAAMyV,EACX,CAAE,MAAOC,GACPD,EAAYC,EACd,CACF,MACE/nE,EAAOzC,QAAQ0qE,WAAW,CAACL,IAC3BF,GACF,IAyEIQ,EAAoB,CACxBC,4BAxEkCr7E,EAAAA,aAAkB0uB,UAAgB,IAAA4sD,EACpE,MAAM,GACJjuE,EAAE,MACF2Z,EAAK,MACL3hB,EAAK,WACL+oB,EACAa,yBAA0BssD,GACxBnvD,EACJ8rD,EAAmB7qE,EAAI2Z,GACvBoxD,EAAiB/qE,EAAI2Z,EAAO0iB,GAAcwqC,MAC1C,MAAM9sD,EAASlU,EAAOzC,QAAQme,UAAU5H,GAClChR,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAClC,IAAIwhB,EAAcxpB,EACd+hB,EAAO0H,cAAgBysD,IACzB1sD,EAAczH,EAAO0H,YAAYzpB,EAAO2Q,EAAKoR,EAAQlU,IAEvD,IAAI6mE,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OACxDmsE,GAAW/3E,EAAAA,EAAAA,GAAS,CAAC,EAAG03E,EAAa1sE,GAAI2Z,GAAQ,CACnD3hB,MAAOwpB,EACPO,aAAchB,EAAa,4BAA8B,qBAE3D,GAAIhH,EAAOo0D,wBAAyB,CAClC,MAAMC,EAAap2E,IAAU00E,EAAa1sE,GAAI2Z,GAAO3hB,MACrD+0E,GAAW/3E,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,EAAU,CAChC/rD,mBAAmB,IAErBksD,EAAyBltE,EAAI2Z,EAAOozD,GACpCA,QAAiBjQ,QAAQC,QAAQhjD,EAAOo0D,wBAAwB,CAC9DnuE,KACA2I,MACA/a,MAAOm/E,EACPqB,eAEJ,CAIA,OAAIvoE,EAAOzC,QAAQ4nE,YAAYhrE,EAAI2Z,KAAW0iB,GAAcivC,OAG5DoB,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OACxDmsE,GAAW/3E,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,EAAU,CAChC/rD,mBAAmB,IAKrB+rD,EAAS/0E,MAAQ+hB,EAAOo0D,wBAA0BzB,EAAa1sE,GAAI2Z,GAAO3hB,MAAQwpB,EAClF0rD,EAAyBltE,EAAI2Z,EAAOozD,GACpCL,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,SAChC,QAAjBqtE,EAACvB,EAAa1sE,UAAG,IAAAiuE,GAAS,QAATA,EAAhBA,EAAmBt0D,UAAM,IAAAs0D,GAAzBA,EAA2Bp0E,OAAK,GACvC,CAACgM,EAAQglE,EAAoBE,EAAkBmC,IAsBhDQ,uCArB6C/6E,EAAAA,aAAkB,CAACqN,EAAI2Z,KACpE,MAAMI,EAASlU,EAAOzC,QAAQme,UAAU5H,GAClC+yD,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OACxD+H,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAClC,IAAK0sE,EAAa1sE,KAAQ0sE,EAAa1sE,GAAI2Z,GACzC,OAAO9T,EAAOzC,QAAQse,OAAO1hB,GAE/B,MAAM,MACJhI,GACE00E,EAAa1sE,GAAI2Z,GACrB,OAAOI,EAAOs0D,YAAct0D,EAAOs0D,YAAYr2E,EAAO2Q,EAAKoR,EAAQlU,IAAU7Q,EAAAA,EAAAA,GAAS,CAAC,EAAG2T,EAAK,CAC7F,CAACgR,GAAQ3hB,GACT,GACD,CAAC6N,KAUJksC,GAAiBlsC,EATE,CACjBmlE,cACAiB,oBACAK,oBAMmC,UACrCv6B,GAAiBlsC,EAAQkoE,EAAmB,WAC5Cp7E,EAAAA,WAAgB,KACV+3E,GACFiC,EAAqBjC,EACvB,GACC,CAACA,EAAoBiC,IAGxB5zD,GAAkB,KAChB,MAAMu1D,EAAez6C,GAAoChuB,GAGnD0oE,EAAsBhE,EAAmBnnE,QAC/CmnE,EAAmBnnE,QAAUwjB,GAAUwjD,GAEvCv5E,OAAO6gB,QAAQ04D,GAAgB5vE,SAAQ1H,IAAkB,IAAhBkN,EAAIk5D,GAAOpmE,EAClDjC,OAAO6gB,QAAQwnD,GAAQ1+D,SAAQxH,IAAqB,IAAAw7E,EAAAC,EAAA,IAAnB90D,EAAOoF,GAAO/rB,EAC7C,MAAM07E,GAAkC,QAAvBF,EAAAD,EAAoBvuE,UAAG,IAAAwuE,GAAS,QAATA,EAAvBA,EAA0B70D,UAAM,IAAA60D,OAAA,EAAhCA,EAAkC7wE,OAAQ0+B,GAAcivC,KACnEqD,EAA6B,QAAnBF,EAAGH,EAAatuE,UAAG,IAAAyuE,EAAAA,EAAIzuE,EACnC+e,EAAOphB,OAAS0+B,GAAcwqC,MAAQ6H,IAAaryC,GAAcivC,KACnE8B,GAA+Bp4E,EAAAA,EAAAA,GAAS,CACtCgL,GAAI2uE,EACJh1D,SACCoF,IACMA,EAAOphB,OAAS0+B,GAAcivC,MAAQoD,IAAaryC,GAAcwqC,MAC1EyG,GAA8Bt4E,EAAAA,EAAAA,GAAS,CACrCgL,GAAI2uE,EACJh1D,SACCoF,GACL,GACA,GACF,GACD,CAAClZ,EAAQukE,EAAgBgD,EAAgCE,GAA+B,EGpb3FnD,CAAmBtkE,EAAQjY,GDOIghF,EAAC/oE,EAAQjY,KACxC,MAAOihF,EAAeC,GAAoBn8E,EAAAA,SAAe,CAAC,GACpDo8E,EAAmBp8E,EAAAA,OAAak8E,GAChCG,EAAoBr8E,EAAAA,OAAa,CAAC,GAClCs8E,EAAet8E,EAAAA,SACfu8E,EAAkBv8E,EAAAA,OAAa,OAC/B,iBACJ63E,EAAgB,wBAChBC,EACAoE,cAAeM,EAAiB,sBAChCC,GACExhF,EACEyhF,EAAqB1kD,GAAY,WACjC/8B,EAAMovC,WAAaZ,GAAcyB,KACnClT,KAAS7oB,UAEb,EACM+oE,EAAqBl4E,EAAAA,aAAkB,CAACqN,EAAI2Z,KAChD,MAAMoF,EAASlZ,EAAOzC,QAAQ06B,cAAc99B,EAAI2Z,GAChD,IAAK9T,EAAOzC,QAAQ0nE,eAAe/rD,GACjC,MAAM,IAAItd,MAAM,2BAADlT,OAA4ByR,EAAE,eAAAzR,OAAcorB,EAAK,qBAClE,GACC,CAAC9T,IACEklE,EAAmBp4E,EAAAA,aAAkB,CAACqN,EAAIrC,KAC9C,GAAIkI,EAAOzC,QAAQksE,WAAWtvE,KAAQrC,EACpC,MAAM,IAAI8D,MAAM,0BAADlT,OAA2ByR,EAAE,eAAAzR,OAAcoP,EAAI,UAChE,GACC,CAACkI,IACE0pE,EAAsB58E,EAAAA,aAAkBggC,IAC5C,MAAM+5C,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OAC9D,OAAO/P,OAAOoe,OAAOy9D,EAAa/5C,IAAQ7W,MAAK0zD,GAAcA,EAAW31E,OAAM,GAC7E,CAACgM,IACEolE,EAAwBt4E,EAAAA,aAAkB,CAACosB,EAAQ9d,KACvD,IAAK8d,EAAOmsD,WACV,OAEF,GAAIrlE,EAAOzC,QAAQksE,WAAWvwD,EAAO/e,MAAQs8B,GAAauqC,KACxD,OAEF,MAAM4I,EAAY5pE,EAAOzC,QAAQs+B,aAAa3iB,EAAO/e,IAC/CmrE,GAAYn2E,EAAAA,EAAAA,GAAS,CAAC,EAAGy6E,EAAW,CACxC91D,MAAOoF,EAAOpF,MACdikB,OAAQmsC,GAAwBqB,kBAElCvlE,EAAOzC,QAAQ26B,aAAa,eAAgBotC,EAAWlqE,EAAM,GAC5D,CAAC4E,IACE6pE,EAAoB/8E,EAAAA,aAAkBosB,IAC1CmwD,EAAgB9rE,QAAU2b,CAAM,GAC/B,IACGssD,EAAqB14E,EAAAA,aAAkB,CAACosB,EAAQ9d,KAC/C8d,EAAOmsD,YAGRrlE,EAAOzC,QAAQksE,WAAWvwD,EAAO/e,MAAQs8B,GAAagvC,OAQ1D4D,EAAgB9rE,QAAU,KAC1B6rE,EAAa7rE,QAAUua,YAAW,KAAM,IAAAgyD,EACtC,IAA2B,QAAvBA,EAAAT,EAAgB9rE,eAAO,IAAAusE,OAAA,EAAvBA,EAAyB3vE,MAAO+e,EAAO/e,GAAI,CAE7C,IAAK6F,EAAOzC,QAAQse,OAAO3C,EAAO/e,IAChC,OAIF,GAAI6F,EAAOzC,QAAQksE,WAAWvwD,EAAO/e,MAAQs8B,GAAagvC,KACxD,OAEF,GAAIiE,EAAoBxwD,EAAO/e,IAC7B,OAEF,MAAMyvE,EAAY5pE,EAAOzC,QAAQs+B,aAAa3iB,EAAO/e,IAC/CmrE,GAAYn2E,EAAAA,EAAAA,GAAS,CAAC,EAAGy6E,EAAW,CACxC91D,MAAOoF,EAAOpF,MACdikB,OAAQosC,GAAuB4F,cAEjC/pE,EAAOzC,QAAQ26B,aAAa,cAAeotC,EAAWlqE,EACxD,KACA,GACD,CAAC4E,EAAQ0pE,IACZ58E,EAAAA,WAAgB,IACP,KACLorB,aAAakxD,EAAa7rE,QAAQ,GAEnC,IACH,MAAMwjE,EAAoBj0E,EAAAA,aAAkB,CAACosB,EAAQ9d,KACnD,GAAI8d,EAAO47B,WAAare,GAAauqC,KAAM,CAGzC,GAAoB,MAAhB5lE,EAAMsqE,MACR,OAEF,IAAI3tC,EACJ,GAAkB,WAAd38B,EAAM/P,IACR0sC,EAASosC,GAAuBhsC,mBAC3B,GAAkB,UAAd/8B,EAAM/P,IACf0sC,EAASosC,GAAuBwB,kBAC3B,GAAkB,QAAdvqE,EAAM/P,IAAe,CAC9B,MAAM26B,EAAe7R,GAAgCnU,GAAQ5U,QAAO0oB,GACnD9T,EAAOzC,QAAQme,UAAU5H,GAC7B9e,OAASyoC,IAGbz9B,EAAOzC,QAAQ0nE,eAAejlE,EAAOzC,QAAQ06B,cAAc/e,EAAO/e,GAAI2Z,MAe/E,GAbI1Y,EAAMi1D,SACJn3C,EAAOpF,QAAUkS,EAAa,KAEhC+R,EAASosC,GAAuByB,iBAEzB1sD,EAAOpF,QAAUkS,EAAaA,EAAa9pB,OAAS,KAE7D67B,EAASosC,GAAuB0B,YAKlCzqE,EAAM2hC,kBACDhF,EAAQ,CACX,MAAM9mB,EAAQ+U,EAAaja,WAAU+H,GAASA,IAAUoF,EAAOpF,QACzDk2D,EAAmBhkD,EAAa5qB,EAAMi1D,SAAWp/C,EAAQ,EAAIA,EAAQ,GAC3EjR,EAAOzC,QAAQwhE,aAAa7lD,EAAO/e,GAAI6vE,EACzC,CACF,CACA,GAAIjyC,EAAQ,CACV,GAAIA,IAAWosC,GAAuBhsC,eAAiBuxC,EAAoBxwD,EAAO/e,IAChF,OAEF,MAAMmrE,GAAYn2E,EAAAA,EAAAA,GAAS,CAAC,EAAG6Q,EAAOzC,QAAQs+B,aAAa3iB,EAAO/e,IAAK,CACrE49B,SACAjkB,MAAOoF,EAAOpF,QAEhB9T,EAAOzC,QAAQ26B,aAAa,cAAeotC,EAAWlqE,EACxD,CACF,MAAO,GAAI8d,EAAOmsD,WAAY,CAC5B,IAAIttC,EAMJ,IALwB/3B,EAAOzC,QAAQuZ,6BAA6B,mBAAmB,EAAM,CAC3F1b,QACA8yD,WAAYh1C,EACZie,SAAU,QAGV,OAWF,GATI24B,GAAe10D,IAER80D,GAAgB90D,GADzB28B,EAASmsC,GAAwB4B,iBAGV,UAAd1qE,EAAM/P,IACf0sC,EAASmsC,GAAwByB,aACV,cAAdvqE,EAAM/P,KAAqC,WAAd+P,EAAM/P,MAC5C0sC,EAASmsC,GAAwB8B,eAE/BjuC,EAAQ,CACV,MAAM6xC,EAAY5pE,EAAOzC,QAAQs+B,aAAa3iB,EAAO/e,IAC/CmrE,GAAYn2E,EAAAA,EAAAA,GAAS,CAAC,EAAGy6E,EAAW,CACxC91D,MAAOoF,EAAOpF,MACdikB,WAEF/3B,EAAOzC,QAAQ26B,aAAa,eAAgBotC,EAAWlqE,EACzD,CACF,IACC,CAAC4E,EAAQ0pE,IACNO,EAAqBn9E,EAAAA,aAAkBosB,IAC3C,MAAM,GACJ/e,EAAE,MACF2Z,EAAK,OACLikB,GACE7e,EACEgxD,EAAyB,CAC7B/vE,KACAgwE,aAAcr2D,GAEZikB,IAAWmsC,GAAwB4B,kBAAoB/tC,IAAWmsC,GAAwB8B,gBAC5FkE,EAAuB/D,cAAgBryD,GAEzC9T,EAAOzC,QAAQ6sE,iBAAiBF,EAAuB,GACtD,CAAClqE,IACEqqE,EAAoBv9E,EAAAA,aAAkBosB,IAC1C,MAAM,GACJ/e,EAAE,OACF49B,EAAM,MACNjkB,GACEoF,EAEJ,IAAIotD,EADJtmE,EAAOzC,QAAQgpE,gCAAgCpsE,GAE3C49B,IAAWosC,GAAuBwB,aACpCW,EAAmB,QACVvuC,IAAWosC,GAAuB0B,WAC3CS,EAAmB,QACVvuC,IAAWosC,GAAuByB,kBAC3CU,EAAmB,QAErB,MAAME,EAAiC,kBAAXzuC,EAC5B/3B,EAAOzC,QAAQ+sE,gBAAgB,CAC7BnwE,KACAqsE,sBACA1yD,QACAwyD,oBACA,GACD,CAACtmE,IACJyY,GAAuBzY,EAAQ,kBAAmBwpE,EAAmBpE,IACrE3sD,GAAuBzY,EAAQ,cAAewpE,EAAmBK,IACjEpxD,GAAuBzY,EAAQ,eAAgBwpE,EAAmBhE,IAClE/sD,GAAuBzY,EAAQ,cAAewpE,EAAmBzI,IACjEtoD,GAAuBzY,EAAQ,eAAgBwpE,EAAmBS,IAClExxD,GAAuBzY,EAAQ,cAAewpE,EAAmBa,IACjExwD,GAAwB7Z,EAAQ,eAAgBjY,EAAMwiF,gBACtD1wD,GAAwB7Z,EAAQ,cAAejY,EAAMyiF,eACrD,MAAMf,EAAa38E,EAAAA,aAAkBqN,IACnC,GAAIpS,EAAMovC,WAAaZ,GAAca,KACnC,OAAOX,GAAagvC,KAEtB,MAAMoB,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OAE9D,OADkB8rE,EAAa1sE,IAAOnP,OAAOC,KAAK47E,EAAa1sE,IAAK+B,OAAS,EAC1Du6B,GAAauqC,KAAOvqC,GAAagvC,IAAI,GACvD,CAACzlE,EAAQjY,EAAMovC,WACZszC,EAAsBpmC,IAAiB0iC,IAC3C,MAAMC,EAA8BD,IAAah/E,EAAMihF,cACnDO,GAAyBvC,GAC3BuC,EAAsBxC,EAAU,CAC9B1gB,IAAKrmD,EAAOzC,UAGZxV,EAAMihF,eAAiBhC,IAG3BiC,EAAiBlC,GACjBmC,EAAiB3rE,QAAUwpE,EAC3B/mE,EAAOzC,QAAQ26B,aAAa,sBAAuB6uC,GAAS,IAExD2D,EAA2B59E,EAAAA,aAAkB,CAACqN,EAAI+sE,KACtD,MAAMH,GAAW53E,EAAAA,EAAAA,GAAS,CAAC,EAAG+5E,EAAiB3rE,SAC9B,OAAb2pE,EACFH,EAAS5sE,IAAMhL,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,UAErBH,EAAS5sE,GAElBswE,EAAoB1D,EAAS,GAC5B,CAAC0D,IACEE,EAAyB79E,EAAAA,aAAkB,CAACqN,EAAI+sE,KACpDlnE,EAAOzC,QAAQgD,UAASxF,IACtB,MAAMusE,GAAkBn4E,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMipE,UAM3C,OALiB,OAAbkD,EACFI,EAAgBntE,GAAM+sE,SAEfI,EAAgBntE,IAElBhL,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBipE,SAAUsD,GACV,IAEJtnE,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,IACEqnE,EAA2Bv6E,EAAAA,aAAkB,CAACqN,EAAI2Z,EAAOozD,KAC7DlnE,EAAOzC,QAAQgD,UAASxF,IACtB,MAAMusE,GAAkBn4E,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMipE,UAW3C,OAViB,OAAbkD,EACFI,EAAgBntE,IAAMhL,EAAAA,EAAAA,GAAS,CAAC,EAAGm4E,EAAgBntE,GAAK,CACtD,CAAC2Z,IAAQ3kB,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,aAGjBI,EAAgBntE,GAAI2Z,GACqB,IAA5C9oB,OAAOC,KAAKq8E,EAAgBntE,IAAK+B,eAC5BorE,EAAgBntE,KAGpBhL,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBipE,SAAUsD,GACV,IAEJtnE,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,IACEoqE,EAAmBt9E,EAAAA,aAAkBosB,IACzC,MAAM,GACF/e,GACE+e,EACJ1qB,GAAQC,EAAAA,EAAAA,GAA8ByqB,EAAQ1xB,IAChD09E,EAAiB/qE,EAAIs8B,GAAagvC,MAClCiF,EAAyBvwE,GAAIhL,EAAAA,EAAAA,GAAS,CACpC2I,KAAM2+B,GAAauqC,MAClBxyE,GAAO,GACT,CAAC02E,EAAkBwF,IAChBE,EAAgCvmC,IAAiBnrB,IACrD,MAAM,GACJ/e,EAAE,aACFgwE,EAAY,YACZhE,EAAW,aACXvQ,GACE18C,EAEEguD,EADe3zD,GAAyBvT,GAChB+Q,QAAO,CAACgF,EAAKjC,KAEzC,IADmB9T,EAAOzC,QAAQ06B,cAAc99B,EAAI2Z,GACpCuxD,WACd,OAAOtvD,EAET,IAAI0F,EAAWzb,EAAOzC,QAAQiqE,aAAartE,EAAI2Z,GAa/C,OAZIq2D,IAAiBr2D,IAAUqyD,GAAevQ,KACxCuQ,EACF1qD,EAAWwoD,GAAoBjkE,EAAOzC,QAAQme,UAAU5H,IAC/C8hD,IACTn6C,EAAWm6C,IAGf7/C,EAAIjC,GAAS,CACX3hB,MAAOspB,EACPznB,OAAO,EACPmnB,mBAAmB,GAEdpF,CAAG,GACT,CAAC,GACJ40D,EAAuBxwE,EAAI+sE,GACvBiD,GACFnqE,EAAOzC,QAAQwhE,aAAa5kE,EAAIgwE,EAClC,IAEIG,EAAkBx9E,EAAAA,aAAkBosB,IACxC,MAAM,GACF/e,GACE+e,EACJ1qB,GAAQC,EAAAA,EAAAA,GAA8ByqB,EAAQmI,IAChD6jD,EAAiB/qE,EAAIs8B,GAAauqC,MAClC0J,EAAyBvwE,GAAIhL,EAAAA,EAAAA,GAAS,CACpC2I,KAAM2+B,GAAagvC,MAClBj3E,GAAO,GACT,CAAC02E,EAAkBwF,IAChBG,EAA+BxmC,IAAiBnrB,IACpD,MAAM,GACJ/e,EAAE,oBACFqsE,EACA1yD,MAAOg3D,EAAY,iBACnBxE,EAAmB,QACjBptD,EACJlZ,EAAOzC,QAAQgpE,gCAAgCpsE,GAC/C,MAAM4wE,EAAoBA,KACC,SAArBzE,GAA+BwE,GACjC9qE,EAAOzC,QAAQoqE,wBAAwBxtE,EAAI2wE,EAAcxE,GAE3DqE,EAAuBxwE,EAAI,MAC3BuwE,EAAyBvwE,EAAI,KAAK,EAEpC,GAAIqsE,EAEF,YADAuE,IAGF,MAAMlE,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OACxD+H,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAElC,GADmCnP,OAAOoe,OAAOy9D,EAAa1sE,IAAK8b,MAAK0zD,GAAcA,EAAWxuD,oBAG/F,YADAguD,EAAkB5rE,QAAQpD,GAAIrC,KAAO2+B,GAAauqC,MAGpD,GAAI0I,EAAoBvvE,GAMtB,OALAgvE,EAAkB5rE,QAAQpD,GAAIrC,KAAO2+B,GAAauqC,UAElD0J,EAAyBvwE,EAAI,CAC3BrC,KAAM2+B,GAAauqC,OAIvB,MAAM4G,EAAY5nE,EAAOzC,QAAQytE,sCAAsC7wE,GACvE,GAAIwqE,EAAkB,CACpB,MAAMmD,EAAcC,IAClBoB,EAAkB5rE,QAAQpD,GAAIrC,KAAO2+B,GAAauqC,KAElD0J,EAAyBvwE,EAAI,CAC3BrC,KAAM2+B,GAAauqC,OAEjB4D,GACFA,EAAwBmD,EACyB,EAIrD,IACE9Q,QAAQC,QAAQyN,EAAiBiD,EAAW9kE,EAAK,CAC/CgqB,MAAO3yB,KACLsgE,MAAKuN,IACPhoE,EAAOzC,QAAQ0qE,WAAW,CAACD,IAC3B+C,GAAmB,IAClB1Y,MAAMyV,EACX,CAAE,MAAOC,GACPD,EAAYC,EACd,CACF,MACE/nE,EAAOzC,QAAQ0qE,WAAW,CAACL,IAC3BmD,GACF,IA+HI7C,EAAoB,CACxB+C,2BA9HiCn+E,EAAAA,aAAkBosB,IACnD,MAAM,GACJ/e,EAAE,MACF2Z,EAAK,MACL3hB,EAAK,WACL+oB,EACAa,yBAA0BssD,GACxBnvD,EACJ8rD,EAAmB7qE,EAAI2Z,GACvB,MAAMI,EAASlU,EAAOzC,QAAQme,UAAU5H,GAClChR,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAClC,IAAIwhB,EAAcxpB,EACd+hB,EAAO0H,cAAgBysD,IACzB1sD,EAAczH,EAAO0H,YAAYzpB,EAAO2Q,EAAKoR,EAAQlU,IAEvD,IAAI6mE,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OACxDmsE,GAAW/3E,EAAAA,EAAAA,GAAS,CAAC,EAAG03E,EAAa1sE,GAAI2Z,GAAQ,CACnD3hB,MAAOwpB,EACPO,aAAchB,EAAa,4BAA8B,qBAK3D,OAHKhH,EAAOo0D,yBACVjB,EAAyBltE,EAAI2Z,EAAOozD,GAE/B,IAAIjQ,SAAQC,IACjB,MAAMgU,EAAW,GACjB,GAAIh3D,EAAOo0D,wBAAyB,CAClC,MAAMC,EAAarB,EAAS/0E,QAAU00E,EAAa1sE,GAAI2Z,GAAO3hB,MAC9D+0E,GAAW/3E,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,EAAU,CAChC/rD,mBAAmB,IAErBksD,EAAyBltE,EAAI2Z,EAAOozD,GACpC,MAAMkB,EAAmBvB,EAAa1sE,GACpCgxE,GAAmB18E,EAAAA,EAAAA,GAA8B25E,EAAkB,CAACt0D,GAAOpoB,IAAIu9D,GAAAA,IAC3EmiB,EAAUnU,QAAQC,QAAQhjD,EAAOo0D,wBAAwB,CAC7DnuE,KACA2I,MACA/a,MAAOm/E,EACPqB,aACA4C,sBACE1Q,MAAK4Q,IAGHrrE,EAAOzC,QAAQksE,WAAWtvE,KAAQs8B,GAAagvC,MAInDoB,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,QACxDswE,GAAiBl8E,EAAAA,EAAAA,GAAS,CAAC,EAAGk8E,EAAgB,CAC5ClwD,mBAAmB,KAKNhpB,MAAQ+hB,EAAOo0D,wBAA0BzB,EAAa1sE,GAAI2Z,GAAO3hB,MAAQwpB,EACxF0rD,EAAyBltE,EAAI2Z,EAAOu3D,IAXlCnU,GAAQ,EAWyC,IAErDgU,EAASn7D,KAAKq7D,EAChB,CACApgF,OAAO6gB,QAAQg7D,EAAa1sE,IAAKxF,SAAQ1H,IAA6B,IAA3Bq+E,EAAW3B,GAAW18E,EAC/D,GAAIq+E,IAAcx3D,EAChB,OAEF,MAAMy3D,EAAcvrE,EAAOzC,QAAQme,UAAU4vD,GAC7C,IAAKC,EAAYjD,wBACf,OAEFqB,GAAax6E,EAAAA,EAAAA,GAAS,CAAC,EAAGw6E,EAAY,CACpCxuD,mBAAmB,IAErBksD,EAAyBltE,EAAImxE,EAAW3B,GACxC9C,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OACxD,MAAMywE,EAAoB3E,EAAa1sE,GACrCgxE,GAAmB18E,EAAAA,EAAAA,GAA8B+8E,EAAmB,CAACF,GAAW5/E,IAAIu9D,GAAAA,IAChFmiB,EAAUnU,QAAQC,QAAQqU,EAAYjD,wBAAwB,CAClEnuE,KACA2I,MACA/a,MAAO4hF,EACPpB,YAAY,EACZ4C,sBACE1Q,MAAK4Q,IAGHrrE,EAAOzC,QAAQksE,WAAWtvE,KAAQs8B,GAAagvC,MAInD4F,GAAiBl8E,EAAAA,EAAAA,GAAS,CAAC,EAAGk8E,EAAgB,CAC5ClwD,mBAAmB,IAErBksD,EAAyBltE,EAAImxE,EAAWD,IANtCnU,GAAQ,EAM6C,IAEzDgU,EAASn7D,KAAKq7D,EAAQ,IAExBnU,QAAQx2B,IAAIyqC,GAAUzQ,MAAK,KACrBz6D,EAAOzC,QAAQksE,WAAWtvE,KAAQs8B,GAAauqC,MACjD6F,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OACxDm8D,GAAS2P,EAAa1sE,GAAI2Z,GAAO9f,QAEjCkjE,GAAQ,EACV,GACA,GACF,GACD,CAACl3D,EAAQglE,EAAoBqC,IAyB9B2D,sCAxB4Cl+E,EAAAA,aAAkBqN,IAC9D,MAAM0sE,EAAe9C,GAA0B/jE,EAAOzC,QAAQxC,OACxD+H,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAClC,IAAK0sE,EAAa1sE,GAChB,OAAO6F,EAAOzC,QAAQse,OAAO1hB,GAE/B,IAAIytE,GAAYz4E,EAAAA,EAAAA,GAAS,CAAC,EAAG2T,GAS7B,OARA9X,OAAO6gB,QAAQg7D,EAAa1sE,IAAKxF,SAAQxH,IAAyB,IAAvB2mB,EAAO61D,GAAWx8E,EAC3D,MAAM+mB,EAASlU,EAAOzC,QAAQme,UAAU5H,GACpCI,EAAOs0D,YACTZ,EAAY1zD,EAAOs0D,YAAYmB,EAAWx3E,MAAOy1E,EAAW1zD,EAAQlU,GAEpE4nE,EAAU9zD,GAAS61D,EAAWx3E,KAChC,IAEKy1E,CAAS,GACf,CAAC5nE,KAUJksC,GAAiBlsC,EATE,CACjBypE,aACAW,mBACAE,mBAMmC,UACrCp+B,GAAiBlsC,EAAQkoE,EAAmB,WAC5Cp7E,EAAAA,WAAgB,KACVw8E,GACFmB,EAAoBnB,EACtB,GACC,CAACA,EAAmBmB,IAGvBv3D,GAAkB,KAChB,MAAMu1D,EAAez6C,GAAoChuB,GAGnDyrE,EAA0BtC,EAAkB5rE,QAClD4rE,EAAkB5rE,QAAUwjB,GAAUioD,GAEtC,MAAM0C,EAAM,IAAInrD,IAAI,IAAIv1B,OAAOC,KAAK+9E,MAAmBh+E,OAAOC,KAAKwgF,KACnErvE,MAAM6jB,KAAKyrD,GAAK/2E,SAAQwF,IAAM,IAAAwxE,EAAAC,EAAAhD,EAC5B,MAAM1vD,EAA0B,QAApByyD,EAAG3C,EAAc7uE,UAAG,IAAAwxE,EAAAA,EAAI,CAClC7zE,KAAM2+B,GAAagvC,MAEfoD,GAAsC,QAA3B+C,EAAAH,EAAwBtxE,UAAG,IAAAyxE,OAAA,EAA3BA,EAA6B9zE,OAAQ2+B,GAAagvC,KAC7DqD,EAA6B,QAAnBF,EAAGH,EAAatuE,UAAG,IAAAyuE,EAAAA,EAAIzuE,EACnC+e,EAAOphB,OAAS2+B,GAAauqC,MAAQ6H,IAAapyC,GAAagvC,KACjEmF,GAA8Bz7E,EAAAA,EAAAA,GAAS,CACrCgL,GAAI2uE,GACH5vD,IACMA,EAAOphB,OAAS2+B,GAAagvC,MAAQoD,IAAapyC,GAAauqC,MACxE6J,GAA6B17E,EAAAA,EAAAA,GAAS,CACpCgL,GAAI2uE,GACH5vD,GACL,GACA,GACD,CAAClZ,EAAQgpE,EAAe4B,EAA+BC,GAA8B,ECljBxF9B,CAAkB/oE,EAAQjY,GAC1B,MAAM8jF,EAAc/+E,EAAAA,OAAa,CAAC,IAEhCm4E,eAAgB6G,GACd/jF,EACEk9E,EAAiBn4E,EAAAA,aAAkBosB,IACnC2Y,GAAuB3Y,EAAO4Y,aAG7B5Y,EAAO8B,OAAO+N,aAGd7P,EAAO8B,OAAOsO,kBAGfwiD,GACKA,EAAmB5yD,OAG3B,CAAC4yD,IA2BJh/E,EAAAA,WAAgB,KACd,MAAMi/E,EAAYF,EAAYtuE,QAC9B,MAAO,KACLvS,OAAO6gB,QAAQkgE,GAAWp3E,SAAQ1H,IAAkB,IAAhBkN,EAAIk5D,GAAOpmE,EAC7CjC,OAAOC,KAAKooE,GAAQ1+D,SAAQmf,IAC1B,MAAO0D,GAAWu0D,EAAU5xE,GAAI2Z,GAChCoE,aAAaV,UACNu0D,EAAU5xE,GAAI2Z,EAAM,GAC3B,GACF,CACH,GACA,IACH,MAAMyyD,EAAkCz5E,EAAAA,aAAkB,CAACqN,EAAI2Z,KAC7D,GAAK+3D,EAAYtuE,QAAQpD,GAGzB,GAAK2Z,GAKE,GAAI+3D,EAAYtuE,QAAQpD,GAAI2Z,GAAQ,CACzC,MAAO,CAAEk4D,GAAeH,EAAYtuE,QAAQpD,GAAI2Z,GAChDk4D,GACF,OAPEhhF,OAAOC,KAAK4gF,EAAYtuE,QAAQpD,IAAKxF,SAAQs3E,IAC3C,MAAO,CAAED,GAAeH,EAAYtuE,QAAQpD,GAAI8xE,GAChDD,GAAa,GAKjB,GACC,IACGlwD,EAAmBhvB,EAAAA,aAAkBosB,IACzC,MAAM,GACJ/e,EAAE,MACF2Z,EAAK,WACLoH,GACEhC,EACJ,OAAO,IAAI+9C,SAAQC,IA1DCgV,EAAC/xE,EAAI2Z,EAAOoH,EAAY4J,KAC5C,IAAK5J,EAEH,YADA4J,IAMF,GAHK+mD,EAAYtuE,QAAQpD,KACvB0xE,EAAYtuE,QAAQpD,GAAM,CAAC,GAEzB0xE,EAAYtuE,QAAQpD,GAAI2Z,GAAQ,CAClC,MAAO0D,GAAWq0D,EAAYtuE,QAAQpD,GAAI2Z,GAC1CoE,aAAaV,EACf,CAGA,MAMMA,EAAUM,YAAW,KACzBgN,WACO+mD,EAAYtuE,QAAQpD,GAAI2Z,EAAM,GACpCoH,GACH2wD,EAAYtuE,QAAQpD,GAAI2Z,GAAS,CAAC0D,EAVX20D,KACrB,MAAO30D,GAAWq0D,EAAYtuE,QAAQpD,GAAI2Z,GAC1CoE,aAAaV,GACbsN,WACO+mD,EAAYtuE,QAAQpD,GAAI2Z,EAAM,EAMmB,EAmCxDo4D,CAAc/xE,EAAI2Z,EAAOoH,GAAYM,UACnC,MAAM4wD,EAAyBrkF,EAAMovC,WAAaZ,GAAcyB,IAAMh4B,EAAOzC,QAAQ0tE,2BAA6BjrE,EAAOzC,QAAQ4qE,4BAIjI,GAAInoE,EAAOzC,QAAQ4nE,YAAYhrE,EAAI2Z,KAAW0iB,GAAcwqC,KAAM,CAChE,MAAMriE,QAAeytE,EAAuBlzD,GAC5Cg+C,EAAQv4D,EACV,IACA,GACF,GACD,CAACqB,EAAQjY,EAAMovC,WACZk1C,EAA0Bv/E,EAAAA,aAAkB,CAACqN,EAAI2Z,IAC9C/rB,EAAMovC,WAAaZ,GAAca,KAAOp3B,EAAOzC,QAAQsqE,uCAAuC1tE,EAAI2Z,GAAS9T,EAAOzC,QAAQytE,sCAAsC7wE,IACtK,CAAC6F,EAAQjY,EAAMovC,WACZm1C,EAAkBx/E,EAAAA,aAAkB,CAACqN,EAAI2Z,KAAU,IAAAy4D,EAAAnE,EAEvD,OAAgC,QAAhCmE,EAAuB,QAAvBnE,EADqBrE,GAA0B/jE,EAAOzC,QAAQxC,OAC1CZ,UAAG,IAAAiuE,OAAA,EAAhBA,EAAmBt0D,UAAM,IAAAy4D,EAAAA,EAAI,IAAI,GACvC,CAACvsE,IAOEwsE,EAA0B,CAC9BjG,mCAEFr6B,GAAiBlsC,EATQ,CACvBilE,iBACAnpD,mBACAuwD,0BACApwD,yBAA0BqwD,GAKe,UAC3CpgC,GAAiBlsC,EAAQwsE,EAAyB,UAAU,EC5GjDC,GAAuBA,CAAC1xE,EAAOhT,EAAOiY,KACjD,MAAM0sE,IAA0B3kF,EAAM4kF,oBAOtC,OANA3sE,EAAOzC,QAAQ2zB,OAAO3D,KAAO4C,GAAwB,CACnD5C,KAAMm/C,EAAwB,GAAK3kF,EAAMwlC,KACzCN,SAAUllC,EAAMklC,SAChBU,QAAS5lC,EAAM4lC,QACfyC,SAAUroC,EAAMqoC,YAEXjhC,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBwyB,KAAMsD,GAAsB,CAC1B7wB,SACA0wB,aAAc3oC,EAAMqoC,SACpBU,cAAa47C,GAA+B3kF,EAAM4lC,QAClDoD,aAAc,KACdC,mBAAoB,QAEtB,ECwCE47C,GAA4B1zD,GACJ,SAAxBA,EAAOmX,QAAQr7B,KAnEKu4B,KACxB,MAAMY,EAAO,CACX,CAAC0B,KAAqB1gC,EAAAA,EAAAA,GAAS,CAAC,E5GAN,CAC5B6F,KAAM,QACNmF,GAAI01B,GACJjB,OAAQ,EACRi+C,cAAe,KACfC,YAAa,KACb/6C,iBAAiB,EACjBnkC,SAAU,GACVm/E,iBAAkB,CAAC,EACnBC,kBAAkB,EAClBprB,OAAQ,M4GV+C,CACnDh0D,SAAU2/B,KAGd,IAAK,IAAIrwB,EAAI,EAAGA,EAAIqwB,EAAKrxB,OAAQgB,GAAK,EAAG,CACvC,MAAM4vB,EAAQS,EAAKrwB,GACnBixB,EAAKrB,GAAS,CACZ3yB,GAAI2yB,EACJ8B,MAAO,EACPgzB,OAAQ/xB,GACR76B,KAAM,OACN83E,YAAa,KAEjB,CACA,MAAO,CACLv+C,aAAc+3B,GACdn4B,OACAM,WAAY,CACV,EAAGlB,EAAKrxB,QAEV6yB,WAAYxB,EACb,EA6CQ0/C,CAAkB/zD,EAAOmX,QAAQ9C,MA3ClBtgC,KAGpB,IAHqB,aACzB8jC,EAAY,QACZS,GACDvkC,EACC,MAAMkhC,GAAOh/B,EAAAA,EAAAA,GAAS,CAAC,EAAG4hC,GACpBm8C,EAA2B,CAAC,EAClC,IAAK,IAAIhwE,EAAI,EAAGA,EAAIs0B,EAAQG,OAAOz1B,OAAQgB,GAAK,EAAG,CACjD,MAAMiwE,EAAa37C,EAAQG,OAAOz0B,GAClCgwE,EAAyBC,IAAc,SAChCh/C,EAAKg/C,EACd,CACA,IAAK,IAAIjwE,EAAI,EAAGA,EAAIs0B,EAAQC,OAAOv1B,OAAQgB,GAAK,EAAG,CACjD,MAAMkwE,EAAa57C,EAAQC,OAAOv0B,GAClCixB,EAAKi/C,GAAc,CACjBjzE,GAAIizE,EACJx+C,MAAO,EACPgzB,OAAQ/xB,GACR76B,KAAM,OACN83E,YAAa,KAEjB,CAIA,MAAMO,EAAYl/C,EAAK0B,IACvB,IAAIy9C,EAAoB,IAAID,EAAUz/E,YAAa4jC,EAAQC,QAO3D,OANIzmC,OAAOoe,OAAO8jE,GAA0BhxE,SAC1CoxE,EAAoBA,EAAkBliF,QAAO+O,IAAO+yE,EAAyB/yE,MAE/Eg0B,EAAK0B,KAAsB1gC,EAAAA,EAAAA,GAAS,CAAC,EAAGk+E,EAAW,CACjDz/E,SAAU0/E,IAEL,CACL/+C,aAAc+3B,GACdn4B,OACAM,WAAY,CACV,EAAG6+C,EAAkBpxE,QAEvB6yB,WAAYu+C,EACb,EAMMC,CAAkB,CACvBx8C,aAAc7X,EAAO6X,aACrBS,QAAStY,EAAOmX,QAAQmB,UCtErB,MAAMg8C,WAA0B5xE,OAUhC,SAAS6xE,GAAiBztE,EAAQjY,GACvC,MAAM2lF,EAAwB5gF,EAAAA,aAAkBgnB,IAAS,CACvDA,QACAkH,OAAQhb,EAAOzC,QAAQme,UAAU5H,MAC/B,CAAC9T,IACC67B,EAAe/uC,EAAAA,aAAkBqN,IACrC,MAAM2I,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAClC,IAAK2I,EACH,MAAM,IAAI0qE,GAAkB,mBAAD9kF,OAAoByR,EAAE,WAOnD,MALe,CACbA,KACAmZ,QAAStT,EAAOzC,QAAQowE,gBACxB7qE,MAEW,GACZ,CAAC9C,IACEi4B,EAAgBnrC,EAAAA,aAAkB,CAACqN,EAAI2Z,KAC3C,MAAMkH,EAASjzB,EAAM86C,kBAAoBmK,GAAuBhtC,EAAOzC,QAAQxC,OAASiF,EAAOzC,QAAQme,UAAU5H,GAC3GhR,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAC5B23B,EAAU9xB,EAAOzC,QAAQs2B,WAAW15B,GAC1C,IAAK2I,IAAQgvB,EACX,MAAM,IAAI07C,GAAkB,mBAAD9kF,OAAoByR,EAAE,WAEnD,MAAMyzE,EAAW9qE,EAAIgR,GACf3hB,EAAc,OAAN6oB,QAAM,IAANA,GAAAA,EAAQwyC,YAAcxyC,EAAOwyC,YAAYogB,EAAU9qE,EAAKkY,EAAQhb,GAAU4tE,EAClF//B,EAAY7I,GAAsBhlC,GAClC8tC,EAAevI,GAAyBvlC,GACxCkZ,EAAS,CACb/e,KACA2Z,QACAhR,MACAgvB,UACA9W,SACA85B,SAAU90C,EAAOzC,QAAQ4nE,YAAYhrE,EAAI2Z,GACzCmH,SAAwB,OAAd4yB,GAAsBA,EAAU/5B,QAAUA,GAAS+5B,EAAU1zC,KAAOA,EAC9EO,SAAUozC,GAAgBA,EAAah6B,QAAUA,GAASg6B,EAAa3zC,KAAOA,EAAK,GAAK,EACxFhI,QACAm8D,eAAgBn8D,EAChBkzE,YAAY,EACZhf,IAAK,CAAC,GAMR,OAJIrrC,GAAUA,EAAO4O,iBACnB1Q,EAAOo1C,eAAiBtzC,EAAO4O,eAAez3B,EAAO2Q,EAAKkY,EAAQhb,IAEpEkZ,EAAOmsD,WAAarqD,GAAUhb,EAAOzC,QAAQ0nE,eAAe/rD,GACrDA,CAAM,GACZ,CAAClZ,EAAQjY,EAAM86C,oBACZ2kC,EAAe16E,EAAAA,aAAkB,CAACqN,EAAI2Z,KAC1C,MAAMkH,EAAShb,EAAOzC,QAAQme,UAAU5H,GAClChR,EAAM9C,EAAOzC,QAAQse,OAAO1hB,GAClC,IAAK2I,EACH,MAAM,IAAI0qE,GAAkB,mBAAD9kF,OAAoByR,EAAE,WAEnD,OAAK6gB,GAAWA,EAAOwyC,YAGhBxyC,EAAOwyC,YAAY1qD,EAAIkY,EAAOlH,OAAQhR,EAAKkY,EAAQhb,GAFjD8C,EAAIgR,EAEoD,GAChE,CAAC9T,IACEykB,EAAc33B,EAAAA,aAAkB,CAACgW,EAAKkY,KAC1C,MAAMlH,EAAQkH,EAAOlH,MACrB,IAAKkH,IAAWA,EAAOwyC,YACrB,OAAO1qD,EAAIgR,GAEb,MAAM3hB,EAAQ2Q,EAAIkY,EAAOlH,OACzB,OAAOkH,EAAOwyC,YAAYr7D,EAAO2Q,EAAKkY,EAAQhb,EAAO,GACpD,CAACA,IACEwpB,EAAuB18B,EAAAA,aAAkB,CAACgW,EAAKkY,KACnD,MAAM7oB,EAAQsyB,EAAY3hB,EAAKkY,GAC/B,OAAKA,GAAWA,EAAO4O,eAGhB5O,EAAO4O,eAAez3B,EAAO2Q,EAAKkY,EAAQhb,GAFxC7N,CAE+C,GACvD,CAAC6N,EAAQykB,IACN0oC,EAAyBrgE,EAAAA,aAAkBgnB,GAC1C9T,EAAOzC,QAAQsV,eAAetV,Qf7EhC,SAAoCtV,EAAM6rB,GAC/C,OAAO7rB,EAAK4jE,cAAc,qCAADnjE,OAAsC0zE,GAA+BtoD,GAAM,MACtG,Ce8EW+5D,CAA2B7tE,EAAOzC,QAAQsV,eAAetV,QAASuW,GAFhE,MAGR,CAAC9T,IACE8tE,EAAgBhhF,EAAAA,aAAkBqN,GACjC6F,EAAOzC,QAAQsV,eAAetV,Qf7EhC,SAA2BtV,EAAMkS,GACtC,OAAOlS,EAAK4jE,cAAcyQ,GAA0BniE,GACtD,Ce8EW4zE,CAAkB/tE,EAAOzC,QAAQsV,eAAetV,QAASpD,GAFvD,MAGR,CAAC6F,IACE2rD,EAAiB7+D,EAAAA,aAAkB,CAACqN,EAAI2Z,IACvC9T,EAAOzC,QAAQsV,eAAetV,QfhFhC,SAA4BtV,EAAIgF,GAGpC,IAHsC,GACvCkN,EAAE,MACF2Z,GACD7mB,EACC,MAAM+gF,EAAc1R,GAA0BniE,GACxC8zE,EAAe,IAAHvlF,OAAOmW,EAAYgD,KAAI,iBAAAnZ,OAAgB0zE,GAA+BtoD,GAAM,MACxFjU,EAAW,GAAHnX,OAAMslF,EAAW,KAAAtlF,OAAIulF,GACnC,OAAOhmF,EAAK4jE,cAAchsD,EAC5B,Ce2EWquE,CAAmBluE,EAAOzC,QAAQsV,eAAetV,QAAS,CAC/DpD,KACA2Z,UAJO,MAMR,CAAC9T,IAYJksC,GAAiBlsC,EAXC,CAChBwnE,eACAvvC,gBACA0zB,iBACAlnC,cACA+E,uBACAqS,eACAiyC,gBACAJ,wBACAvgB,0BAEkC,SACtC,CCvGA,MAAMghB,GAA6BA,CAACC,EAAoBC,IAC5B,MAAtBD,GAGAhyE,MAAM8N,QAAQkkE,GAFTA,EAKLC,GAAsBA,EAAmB,KAAOD,EAC3CC,EAEF,CAACD,GAEGE,GAA+BA,CAACvzE,EAAOhT,KAAK,IAAAwmF,EAAA,OAAKp/E,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CAChF+vC,aAAc/iD,EAAM+iD,cAAkE,QAAtDyjC,EAAGJ,GAA2BpmF,EAAMymF,0BAAkB,IAAAD,EAAAA,EAAS,IAC/F,ECfWE,GAAmCA,CAACzuE,EAAQjY,KACvD,MAGMqH,EAhBkB7G,KACxB,MAAM,QACJ6G,GACE7G,EACJ,OAAOuE,EAAAA,SAAc,IAKZuC,EAJO,CACZ2S,aAAc,CAAC,gBACfK,qBAAsB,CAAC,yBAEIzD,EAAyBxP,IACrD,CAACA,GAAS,EAMGE,CAHG,CACjBF,QAASrH,EAAMqH,UAGXs/E,EAAwB5hF,EAAAA,aAAkB0mB,IAC9C,MAAMm7D,GAAkBx/E,EAAAA,EAAAA,GAAS,CAAC,EAAGm+D,GAAiC,CACpEshB,cAAex/E,EAAQ4S,aACvB6sE,gBAAiBz/E,EAAQiT,qBACzBs7B,WAAY39B,EAAOzC,QAAQ+hB,cAAc,iCAErCwvD,EAA4B/mF,EAAM84D,kBAClCkuB,EAA4E,MAAtDv7D,EAAaG,OAAO05C,IAUhD,OATIyhB,IAA8BC,GAChCv7D,EAAaG,OAAO05C,IAAiCshB,EACrDn7D,EAAaC,cAAgB,CAAC45C,MAAkC75C,EAAaC,iBACnEq7D,GAA6BC,UAChCv7D,EAAaG,OAAO05C,IAC3B75C,EAAaC,cAAgBD,EAAaC,cAAcroB,QAAO0oB,GAASA,IAAUu5C,MACzEyhB,GAA6BC,IACtCv7D,EAAaG,OAAO05C,KAAiCl+D,EAAAA,EAAAA,GAAS,CAAC,EAAGw/E,EAAiBn7D,EAAaG,OAAO05C,MAElG75C,CAAY,GAClB,CAACxT,EAAQ5Q,EAASrH,EAAM84D,oBAC3B4R,GAA6BzyD,EAAQ,iBAAkB0uE,EAAsB,EC5BlEM,GAA0BA,CAACj0E,EAAOhT,KAAU,IAAAkF,EAAAgiF,EAAApc,EACvD,MAAMn2C,EAAqE,QAA5DzvB,EAAkB,QAAlBgiF,EAAGlnF,EAAM20B,iBAAS,IAAAuyD,EAAAA,EAAsB,QAAtBpc,EAAI9qE,EAAM05C,oBAAY,IAAAoxB,GAAS,QAATA,EAAlBA,EAAoBl2C,eAAO,IAAAk2C,OAAA,EAA3BA,EAA6Bn2C,iBAAS,IAAAzvB,EAAAA,EAAI,GAC/E,OAAOkC,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB4hB,QAAS,CACPD,UAAWH,GAAkBG,EAAW30B,EAAMy0B,+BAC9CqpB,WAAY,KAEd,ECNJ,SAASqpC,GAAeluE,GACtB,MAAM,cACJmuE,EAAa,eACb3rC,EAAc,YACd4rC,EAAW,cACXC,GACEruE,EACEsuE,EAAaD,EAAgBD,EAGnC,OAAIA,EAAcD,EACTE,EAELC,EAAaH,EAAgB3rC,EACxB8rC,EAAaH,EAElBE,EAAgB7rC,EACX6rC,OADT,CAIF,CC/BO,MAAME,GAAiC,CAC5C7tE,YAAY,EACZknC,cAAc,EACd4mC,iBAAiB,EACjB3uB,mBAAmB,EACnBoM,8BAA8B,EAC9BwE,2BAA4B,KAC5B5hB,eAAgB,IAChB5M,mBAAoB,GACpBwsC,iBAAiB,EACjBC,qBAAqB,EACrB9xC,mBAAmB,EACnB+xC,sBAAsB,EACtBC,qBAAqB,EACrBC,uBAAuB,EACvBC,sBAAsB,EACtBC,wBAAwB,EACxBnrD,aAAa,EACbrB,iCAAiC,EACjC/G,+BAA+B,EAC/BskC,6BAA6B,EAC7BkvB,4BAA4B,EAC5BzjC,uBAAuB,EACvBpV,SAAUZ,GAAca,KACxBnY,iBAAkB,IAClBgxD,WAAY,SACZ9vB,YAAY,EACZ+vB,sBAAsB,EACtBC,oBAAoB,EACpBC,4BAA4B,EAC5BjsD,kBAAkB,EAClBotC,kCAAkC,EAElC/E,4BAA6B,WAC7B6jB,oCAAoC,EACpCC,6BAA6B,EAC7B3iD,SAAS,EACT41B,OAAQF,QACRF,SAAkD,QAClDotB,gBAAiB,CAAC,GAAI,GAAI,KAC1BtnC,YAAY,EACZsB,eAAgB,SAChBimC,iBAAkB,GAClB5gC,YAAa,IACblc,UAAW,GACX+8C,uBAAwB,IACxBljD,KAAM,GACNud,cAAc,EACd4lC,eAAgB,SAChB59D,wBAAwB,EACxB69D,0BAA0B,EAC1BC,YAAa,SACb/zD,aAAc,CAAC,MAAO,OAAQ,MAC9Bg0D,eAAgB,EAChBC,sBAAsB,GCzClBC,GAAa,CACjBp+E,MAAO,EACPtI,OAAQ,GAEJ2mF,GAAmB,CACvBpgC,SAAS,EACT3oD,KAAM8oF,GACN3wC,kBAAmB2wC,GACnBptC,kBAAmBotC,GACnBpiC,YAAaoiC,GACbxzB,YAAawzB,GACb1qE,YAAY,EACZC,YAAY,EACZC,cAAe,EACf09B,aAAc,EACdgtC,kBAAmB,EACnB/tC,mBAAoB,EACpBguC,SAAU,EACVx9C,UAAW,EACX6P,kBAAmB,EACnBW,gBAAiB,EACjBC,iBAAkB,EAClBgtC,mBAAoB,EACpB52B,mBAAoB,EACpBC,sBAAuB,GAEZ42B,GAA6Br2E,IACxC,MAAMiG,EAAagwE,GACnB,OAAO7hF,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBiG,cACA,EAEG,SAASqwE,GAAkBrxE,EAAQjY,GAAO,IAAAupF,EAAA1uC,EAC/C,MAAM2gB,EAASsH,GAAc7qD,EAAQ,sBAC/BuxE,EAAazkF,EAAAA,QAAa,GAC1B0kF,EAAoB1kF,EAAAA,OAAaikF,IACjCU,EAAkBpxE,EAAgBL,EAAQe,GAC1CuqC,EAAWjrC,EAAgBL,EAAQqrC,IACnC/2B,EAAgBjU,EAAgBL,EAAQqU,IACxCyuB,EAAgBziC,EAAgBL,EAAQ0S,IACxCg/D,EAAiB5kF,EAAAA,SAAc,IAAMmnC,GAAkBlsC,EAAM2rC,UAAW67C,GAA+B77C,YAA8B,CAAC3rC,EAAM2rC,YAC5IA,EAAYnhC,KAAKywC,MAAM0uC,EAAiB5uC,GACxCmB,EAAe1xC,KAAKywC,MAAMj7C,EAAMk7C,mBAAqBH,GACrDmuC,EAAoB1+E,KAAKywC,OAAoC,QAA9BsuC,EAACvpF,EAAM4pF,+BAAuB,IAAAL,EAAAA,EAAIvpF,EAAMk7C,oBAAsBH,GAC7FI,EAAqB3wC,KAAKywC,OAA+B,QAAzBJ,EAAC76C,EAAMm7C,0BAAkB,IAAAN,EAAAA,EAAI76C,EAAMk7C,oBAAsBH,GACzFS,GAgOsBpxC,EAhOmBsjB,GAA8BzV,GAgO1C4xE,EAhOmD,EAiO/Er/E,KAAKG,MAAMP,EAAQ,IAAMy/E,GAAY,IAAMA,GADpD,IAA8Bz/E,EAAOy/E,EA/NnC,MAAMT,EAAqBxuC,GAAqB3iC,EAAQjY,GAClDm8C,EAAkB5vB,EAAc/nB,KAAKwkB,QAAO,CAAC8gE,EAAGj8D,IAAQi8D,EAAIj8D,EAAIJ,eAAe,GAC/E2uB,EAAmB7vB,EAActoB,MAAM+kB,QAAO,CAAC8gE,EAAGj8D,IAAQi8D,EAAIj8D,EAAIJ,eAAe,IAChFs8D,EAAWC,GAAgBjlF,EAAAA,WAC5BklF,EAAwBllF,EAAAA,SAAc,ICnEvC,SAAkB+c,GAAkB,IACrC2N,EACAy6D,EAFyBC,EAAIj2E,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,IAGpC,MAAMk2E,EAAQA,KACZ36D,OAAUtoB,EACV2a,KAAQooE,EAAS,EAEnB,SAASG,IAAmB,QAAAp2E,EAAAC,UAAAC,OAANC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GACxB41E,EAAW91E,OACKjN,IAAZsoB,IACFA,EAAUM,WAAWq6D,EAAOD,GAEhC,CAKA,OAJAE,EAAUzmE,MAAQ,KAChBuM,aAAaV,GACbA,OAAUtoB,CAAS,EAEdkjF,CACT,CDiDoDC,CAASN,EAAchqF,EAAMyoF,mBAAmB,CAACzoF,EAAMyoF,mBACnG8B,EAAexlF,EAAAA,SAEfylF,EAAgBluC,IAAiBrjC,IACrChB,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDiG,gBACC,IAECquC,EAASviD,EAAAA,aAAkB,KAC/B,MAAM4+D,EAAU1rD,EAAOzC,QAAQ4wC,eAAe5wC,QAC9C,IAAKmuD,EACH,OAEF,MAAM8mB,GE/E0BrgD,EF+EEu5B,EE9ExBqK,GAAc5jC,GACfsgD,aAAeh1E,QF6EmBi1E,iBAAiBhnB,GE/EjD,IAAqBv5B,EFgFhC,MAAMwgD,EAAU,CACdhgF,MAAOigF,WAAWJ,EAAc7/E,QAAU,EAC1CtI,OAAQuoF,WAAWJ,EAAcnoF,SAAW,GAEzCioF,EAAa/0E,SAAYs1E,GAAqBP,EAAa/0E,QAASo1E,KACvE3yE,EAAOzC,QAAQ26B,aAAa,SAAUy6C,GACtCL,EAAa/0E,QAAUo1E,EACzB,GACC,CAAC3yE,IACE4/D,EAAsB9yE,EAAAA,aAAkB,KAC5C,MAAMkU,EAAaD,EAAuBf,EAAOzC,QAAQxC,OACzD,IAAKiG,EAAW4vC,QACd,OAAO,EAET,MAAM5C,EAAc1D,GAAetqC,EAAQ,CACzCipC,WAAYlhD,EAAMkhD,WAClBsB,eAAgBxiD,EAAMwiD,iBAKxB,GAAIxiD,EAAM+qF,aAAc,CACtB,MAAMhnC,EAAgBD,GAA0B7rC,GAC1C2/D,EAAmB7zB,EAAc/B,aAAe+B,EAAchC,cACpE,OAAOv3C,KAAKwtB,IAAI4/C,EAAmB,EAAG3xB,EAAYzgB,KAAKrxB,OACzD,CACA,MAAM6mE,EAAkCxwE,KAAKywC,MAAMhiC,EAAW2iC,kBAAkBt5C,OAASqpC,GACzF,OAAOnhC,KAAKwtB,IAAIgjD,EAAiC/0B,EAAYzgB,KAAKrxB,OAAO,GACxE,CAAC8D,EAAQjY,EAAMkhD,WAAYlhD,EAAMwiD,eAAgBxiD,EAAM+qF,aAAcp/C,IAClEq/C,EAAmBjmF,EAAAA,aAAkB,KAAM,IAAAkmF,EAAAzxC,EAC/C,MAAM0xC,EAAcjzE,EAAOzC,QAAQsV,eAAetV,QAC5C21E,EnHgKH,SAAmClzE,GAAQ,IAAA2vB,EAAAC,EAChD,MAAMjnB,EAAaqmB,GAAuBhvB,GAS1C,MAAO,CACLjU,KAToC,OAAV4c,QAAU,IAAVA,GAAe,QAALgnB,EAAVhnB,EAAY5c,WAAG,IAAA4jC,OAAA,EAAfA,EAAiB5e,QAAO,CAACgF,EAAK5jB,IACxD4jB,EAAO/V,EAAOzC,QAAQ+2C,sBAAsBniD,EAAMgI,KAEjD,KAAM,EAOP9N,QANuC,OAAVsc,QAAU,IAAVA,GAAkB,QAARinB,EAAVjnB,EAAYtc,cAAM,IAAAujC,OAAA,EAAlBA,EAAoB7e,QAAO,CAACgF,EAAK5jB,IAC9D4jB,EAAO/V,EAAOzC,QAAQ+2C,sBAAsBniD,EAAMgI,KAEjD,KAAM,EAKX,CmH9K6Bg5E,CAA0BnzE,GAC7CuG,EAuJV,SAA8B0sE,EAAa1vC,EAAmBh9B,GAC5D,QAAsBrX,IAAlBqX,EACF,OAAOA,EAET,GAAoB,OAAhB0sE,GAA8C,IAAtB1vC,EAC1B,OAAO,EAET,MAAMmzB,EAAMX,GAAckd,GACpBG,EAAY1c,EAAIhG,cAAc,OACpC0iB,EAAUznF,MAAMgH,MAAQ,OACxBygF,EAAUznF,MAAMtB,OAAS,OACzB+oF,EAAUznF,MAAMzD,SAAW,WAC3BkrF,EAAUznF,MAAM2J,SAAW,SAC3B89E,EAAU5lF,UAAY,YACtBylF,EAAYpiB,YAAYuiB,GACxB,MAAMnhF,EAAOmhF,EAAUC,YAAcD,EAAUE,YAE/C,OADAL,EAAY7hB,YAAYgiB,GACjBnhF,CACT,CAzK0BshF,CAAqBN,EAAa1vC,EAAmBx7C,EAAMwe,eAC3Eg0C,EAAqB42B,EAAqB+B,EAAiBnnF,IAC3DyuD,EAAwB04B,EAAiB7mF,OAEzCsiD,EAAc,CAClBh8C,MAFiC4wC,EAAoBW,EAAkBC,EAGvE95C,OAAQihD,EAASqH,wBAEnB,IAAIvS,EACAuD,EACAt9B,GAAa,EACbC,GAAa,EACjB,GAAIve,EAAM2Z,WACR4E,GAAa,EACbD,EAAa9T,KAAKG,MAAM6wC,GAAqBhxC,KAAKG,MAAM8+E,EAAkBj0E,QAAQ5K,OAClFytC,EAAoB,CAClBztC,MAAO6+E,EAAkBj0E,QAAQ5K,MACjCtI,OAAQkwD,EAAqBC,EAAwB7L,EAAYtkD,QAEnEs5C,EAAoB,CAClBhxC,MAAOJ,KAAKvE,IAAI,EAAGoyC,EAAkBztC,OAAS2T,EAAaC,EAAgB,IAC3Elc,OAAQkI,KAAKvE,IAAI,EAAGoyC,EAAkB/1C,QAAUgc,EAAaE,EAAgB,SAE1E,CACL65B,EAAoB,CAClBztC,MAAO6+E,EAAkBj0E,QAAQ5K,MACjCtI,OAAQmnF,EAAkBj0E,QAAQlT,QAEpCs5C,EAAoB,CAClBhxC,MAAOJ,KAAKvE,IAAI,EAAGoyC,EAAkBztC,MAAQuxC,EAAkBC,GAC/D95C,OAAQkI,KAAKvE,IAAI,EAAGoyC,EAAkB/1C,OAASkwD,EAAqBC,IAEtE,MAAM4D,EAAUzP,EACVoqB,EAAYp1B,EACZ6vC,EAA2Bp1B,EAAQzrD,MAAQomE,EAAUpmE,MACrD8gF,EAA2Br1B,EAAQ/zD,OAAS0uE,EAAU1uE,QACxDmpF,GAA4BC,KAC9BntE,EAAamtE,EACbptE,EAAa+3C,EAAQzrD,OAAS2T,EAAaC,EAAgB,GAAKwyD,EAAUpmE,MAGtE0T,IACFC,EAAa83C,EAAQ/zD,OAASkc,EAAgBwyD,EAAU1uE,SAGxDic,IACFq9B,EAAkBhxC,OAAS4T,GAEzBF,IACFs9B,EAAkBt5C,QAAUkc,EAEhC,CACA,MAAM2qE,EAAW3+E,KAAKvE,IAAIoyC,EAAkBztC,MAAO4wC,GAAqBj9B,EAAaC,EAAgB,IAC/Fg3C,EAAc,CAClB5qD,MAAO4wC,EACPl5C,OAAQkwD,EAAqB5L,EAAYtkD,OAASmwD,GAE9Ck5B,EAAgB,CACpB9iC,SAAS,EACT3oD,KAAMupF,EAAkBj0E,QACxB6iC,oBACAuD,oBACAgL,cACA4O,cACAl3C,aACAC,aACAC,gBACA09B,eACAgtC,oBACA/tC,qBACAguC,WACAx9C,YACA6P,oBACAW,kBACAC,mBACAgtC,qBACA52B,qBACAC,yBAEIm5B,EAAiB3zE,EAAOzC,QAAQxC,MAAMiG,WAC5CuxE,EAAcmB,GACTb,GAAqBa,EAAc/vC,kBAAmBgwC,EAAehwC,oBACxE3jC,EAAOzC,QAAQ26B,aAAa,0BAA2Bw7C,EAAc/vC,mBAErC,QAAlCqvC,GAAAzxC,EAAAvhC,EAAOzC,SAAQ+yC,2BAAmB,IAAA0iC,GAAlCA,EAAAzkE,KAAAgzB,EAAsC,GACrC,CAACvhC,EAAQuyE,EAAexqF,EAAMwe,cAAexe,EAAM2Z,WAAY4pC,EAASqH,uBAAwBjf,EAAWuQ,EAAcgtC,EAAmB/tC,EAAoBK,EAAmB4tC,EAAoBjtC,EAAiBC,IAKrNyvC,EAAa,CACjBb,mBACAnT,uBAEF1zB,GAAiBlsC,EARC,CAChBqvC,SACA3M,kBApIwBA,IAAM1iC,EAAOzC,QAAQxC,MAAMiG,YA0IjB,UACpCkrC,GAAiBlsC,EAAQ4zE,EAAY,WACrC1gE,GAAkB,KACZ4+D,IACFiB,IACA/yE,EAAOzC,QAAQ26B,aAAa,kBAAmBs5C,EAAkBj0E,SACnE,GACC,CAACyC,EAAQ8xE,EAAWiB,IACvB,MAAM9qF,EAAO+X,EAAOzC,QAAQsV,eAAetV,QAC3C2V,GAAkB,KAChB,IAAKjrB,EACH,OAEF,MAAM6lB,EAAMA,CAAC+lE,EAAG1mE,IAAMllB,EAAK0D,MAAMqzD,YAAY60B,EAAG1mE,GAChDW,EAAI,mBAAoB,GAAFplB,OAAK+oF,EAAgBrxC,kBAAkBztC,MAAK,OAClEmb,EAAI,wBAAyB,GAAFplB,OAAKsG,OAAOyiF,EAAgBprE,cACvDyH,EAAI,wBAAyB,GAAFplB,OAAKsG,OAAOyiF,EAAgBnrE,cACvDwH,EAAI,2BAA4B,GAAFplB,OAAK+oF,EAAgBlrE,cAAa,OAChEuH,EAAI,sBAAuB,GAAFplB,OAAK+oF,EAAgBP,SAAQ,OACtDpjE,EAAI,+BAAgC,GAAFplB,OAAK+oF,EAAgBluC,kBAAiB,OACxEz1B,EAAI,6BAA8B,GAAFplB,OAAK+oF,EAAgBvtC,gBAAe,OACpEp2B,EAAI,8BAA+B,GAAFplB,OAAK+oF,EAAgBttC,iBAAgB,OACtEr2B,EAAI,0BAA2B,GAAFplB,OAAK+oF,EAAgBxtC,aAAY,OAC9Dn2B,EAAI,gCAAiC,GAAFplB,OAAK+oF,EAAgBN,mBAAkB,OAC1ErjE,EAAI,gCAAiC,GAAFplB,OAAK+oF,EAAgBl3B,mBAAkB,OAC1EzsC,EAAI,mCAAoC,GAAFplB,OAAK+oF,EAAgBj3B,sBAAqB,OAChF1sC,EAAI,WAAY,GAAFplB,OAAK+oF,EAAgB/9C,UAAS,MAAK,GAChD,CAACzrC,EAAMwpF,IACV,MAAMqC,EAAgBhnF,EAAAA,QAAa,GAC7BinF,EAAejnF,EAAAA,aAAkBmF,IACrCu/E,EAAkBj0E,QAAUtL,EAG5B,MAAMo7C,EAAU,QAAQtlB,KAAKtqB,OAAOktC,UAAUC,WAS9C,GARoB,IAAhB34C,EAAK5H,QAAiBknF,EAAWh0E,SAAYxV,EAAM2Z,YAAe2rC,IACpEkW,EAAOvvD,MAAM,CAAC,+DAAgE,8DAA+D,0CAA2C,GAAI,8DAA8D8M,KAAK,OAC/PywE,EAAWh0E,SAAU,GAEJ,IAAftL,EAAKU,OAAgB4+E,EAAWh0E,SAAY8vC,IAC9CkW,EAAOvvD,MAAM,CAAC,8DAA+D,6DAA8D,yCAA0C,GAAI,8DAA8D8M,KAAK,OAC5PywE,EAAWh0E,SAAU,GAEnBu2E,EAAcv2E,QAIhB,OAFAw0E,EAAa9/E,QACb6hF,EAAcv2E,SAAU,GAG1By0E,EAAsB//E,EAAK,GAC1B,CAAClK,EAAM2Z,WAAYswE,EAAuBzuB,IAC7CrwC,EAAkB6/D,EAAkB,CAACA,IACrCl5D,GAAwB7Z,EAAQ,gBAAiB+yE,GACjDl5D,GAAwB7Z,EAAQ,wBAAyB+yE,GACzDl5D,GAAwB7Z,EAAQ,gBAAiB+yE,GACjDt6D,GAAuBzY,EAAQ,SAAU+zE,GACzCl6D,GAAwB7Z,EAAQ,kBAAmBjY,EAAMisF,SAC3D,CA0BA,SAASnB,GAAqB7zE,EAAGC,GAC/B,OAAOD,EAAErM,QAAUsM,EAAEtM,OAASqM,EAAE3U,SAAW4U,EAAE5U,MAC/C,CG9RO,MAAMykD,GAAsD,qBAA9BmlC,WAAWnlC,eAAiCmlC,WAAWnlC,eAAiB,MAC3GG,OAAAA,GAAW,CACXilC,SAAAA,GAAa,CACb/kC,UAAAA,GAAc,GCUHglC,GAA2BA,CAACp5E,EAAOhT,EAAOiY,KACrDA,EAAOzC,QAAQ2zB,OAAOoa,SAAW,CAC/B8oC,QAAS,IAAIpmE,MAER7e,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBuwC,SAAU,CACRqH,uBAAwB,EACxBr9B,UAAW,OCwBjB,SAAS++D,GAAqBn7D,GAC5B,MAAM,OACJlZ,EAAM,OACN2T,EAAM,YACN08B,EAAW,MACXvjB,EAAK,oBACLwnD,EAAmB,mBACnBC,EAAkB,QAClBjhE,GACE4F,EACEs7D,EAAgBlhE,EAAQpX,OACxBgY,EAASZ,EAAQ+8B,GACjBvtC,EAAM9C,EAAOzC,QAAQse,OAAOiR,GAC5B36B,EAAQ6N,EAAOzC,QAAQknB,YAAY3hB,EAAKoR,GACxCgC,EAAoC,oBAAnBhC,EAAOgC,QAAyBhC,EAAOgC,QAAQ/jB,EAAO2Q,EAAKoR,EAAQlU,GAAUkU,EAAOgC,QAC3G,IAAKA,GAAuB,IAAZA,EAQd,OAPAu+D,GAAmB9gE,EAAQmZ,EAAOujB,EAAa,CAC7CmI,kBAAkB,EAClBk8B,UAAW,CACTx+D,QAAS,EACTvjB,MAAOuhB,EAAOsB,iBAGX,CACLU,QAAS,GAGb,IAAIvjB,EAAQuhB,EAAOsB,cACnB,IAAK,IAAI+c,EAAI,EAAGA,EAAIrc,EAASqc,GAAK,EAAG,CACnC,MAAMoiD,EAAkBtkC,EAAc9d,EAEtC,GAAIoiD,GAAmBL,GAAuBK,EAAkBJ,EAAoB,CAElF5hF,GADmB2gB,EAAQqhE,GACPn/D,cACpBi/D,GAAmB9gE,EAAQmZ,EAAOujB,EAAc9d,EAAG,CACjDimB,kBAAkB,EAClB6lB,sBAAuB9rE,KAAKwtB,IAAIswB,EAAcn6B,EAASs+D,EAAgB,GACvE/7B,qBAAsBpI,GAE1B,CACAokC,GAAmB9gE,EAAQmZ,EAAOujB,EAAa,CAC7CmI,kBAAkB,EAClBk8B,UAAW,CACTx+D,UACAvjB,UAGN,CACA,MAAO,CACLujB,UAEJ,CACA,SAASu+D,GAAmB9gE,EAAQmZ,EAAOujB,EAAaiI,GACjD3kC,EAAOmZ,KACVnZ,EAAOmZ,GAAS,CAAC,GAEnBnZ,EAAOmZ,GAAOujB,GAAeiI,CAC/B,CC1GO,SAASs8B,GAAOziD,GACrB,YAAsBjjC,IAAfijC,EAAKre,KACd,CCCA,MAAM+gE,GAAqCA,CAACC,EAAiB3yB,EAAS4yB,KACpE,GAAIH,GAAOE,GAAkB,CAC3B,QAAgE5lF,IAA5D6lF,EAAiCD,EAAgBhhE,OACnD,MAAM,IAAIlY,MAAM,CAAC,uDAAD,gBAAAlT,OAAyEosF,EAAgBhhE,MAAK,iDAAAprB,OAAiDqsF,EAAiCD,EAAgBhhE,OAAOhT,KAAK,QAAM,KAAApY,OAASy5D,EAAQrhD,KAAK,SAAUA,KAAK,OAGzQ,YADAi0E,EAAiCD,EAAgBhhE,OAASquC,EAE5D,CACA,MAAM,QACJ7B,EAAO,SACP1yD,GACEknF,EACJlnF,EAAS+G,SAAQ09B,IACfwiD,GAAmCxiD,EAAO,IAAI8vB,EAAS7B,GAAUy0B,EAAiC,GAClG,EASSC,GAA4BC,IACvC,IAAKA,EACH,MAAO,CAAC,EAEV,MAAMC,EAAmB,CAAC,EAI1B,OAHAD,EAAoBtgF,SAAQmgF,IAC1BD,GAAmCC,EAAiB,GAAII,EAAiB,IAEpEA,CAAgB,EAEZC,GAAiCA,CAACC,EAAgBz2C,EAAwB02C,KACrF,MAAMC,EAAaxhE,IAAK,IAAAyhE,EAAA,OAAiC,QAAjCA,EAAI52C,EAAuB7qB,UAAM,IAAAyhE,EAAAA,EAAI,EAAE,EACzDC,EAA0B,GAC1Br2C,EAAW5sC,KAAKvE,OAAOonF,EAAe1pF,KAAIooB,GAASwhE,EAAWxhE,GAAO5X,UACrEu5E,EAAkBA,CAACC,EAAQC,EAAQ/mD,IAAUzO,GAAYm1D,EAAWI,GAAQ94E,MAAM,EAAGgyB,EAAQ,GAAI0mD,EAAWK,GAAQ/4E,MAAM,EAAGgyB,EAAQ,IAU3I,IAAK,IAAIA,EAAQ,EAAGA,EAAQuQ,EAAUvQ,GAAS,EAAG,CAChD,MAAMgnD,EAAiBR,EAAerkE,QAAO,CAAC8kE,EAAWC,KAAa,IAAAC,EACpE,MAAMz1B,EAAqC,QAA9By1B,EAAGT,EAAWQ,GAAUlnD,UAAM,IAAAmnD,EAAAA,EAAI,KAC/C,GAAyB,IAArBF,EAAU35E,OACZ,MAAO,CAAC,CACN8pB,aAAc,CAAC8vD,GACfx1B,YAGJ,MAAM01B,EAAYH,EAAUA,EAAU35E,OAAS,GACzC+5E,EAAYD,EAAUhwD,aAAagwD,EAAUhwD,aAAa9pB,OAAS,GAEzE,OADoB85E,EAAU11B,UACVA,IAAYm1B,EAAgBQ,EAAWH,EAAUlnD,KArBxC8mD,EAuBLO,EAvBaN,EAuBFG,EAtBrB,OAAZT,QAAY,IAAZA,GAAAA,EAAc9oF,MAAQ8oF,EAAa9oF,KAAKyoB,SAAS0gE,KAAYL,EAAa9oF,KAAKyoB,SAAS2gE,IAG5E,OAAZN,QAAY,IAAZA,GAAAA,EAAcrpF,QAAUqpF,EAAarpF,MAAMgpB,SAAS0gE,IAAWL,EAAarpF,MAAMgpB,SAAS2gE,IAqBpF,IAAIE,EAAW,CACpB7vD,aAAc,CAAC8vD,GACfx1B,YAKG,IAAIu1B,EAAUj5E,MAAM,EAAGi5E,EAAU35E,OAAS,GAAI,CACnD8pB,aAAc,IAAIgwD,EAAUhwD,aAAc8vD,GAC1Cx1B,YAlC0B41B,IAACR,EAAQC,CAmCnC,GACD,IACHH,EAAwBzlE,KAAK6lE,EAC/B,CACA,OAAOJ,CAAuB,EC9E1BhuF,GAAY,CAAC,UAAW,YAQxB2uF,GAAoBlB,IACxB,IAAImB,EAAc,CAAC,EA6BnB,OA5BAnB,EAAoBtgF,SAAQw9B,IAC1B,GAAIyiD,GAAOziD,GACT,OAEF,MAAM,QACFmuB,EAAO,SACP1yD,GACEukC,EACJ3jC,GAAQC,EAAAA,EAAAA,GAA8B0jC,EAAM3qC,IAC9C,IAAK84D,EACH,MAAM,IAAI1kD,MAAM,2FAOlB,MAAMy6E,GAAalnF,EAAAA,EAAAA,GAAS,CAAC,EAAGX,EAAO,CACrC8xD,YAEIg2B,EAAgBH,GAAkBvoF,GACxC,QAA+BsB,IAA3BonF,EAAch2B,SAAmDpxD,IAAzBknF,EAAY91B,GACtD,MAAM,IAAI1kD,MAAM,sBAADlT,OAAuB43D,EAAO,wDAE/C81B,GAAcjnF,EAAAA,EAAAA,GAAS,CAAC,EAAGinF,EAAaE,EAAe,CACrD,CAACh2B,GAAU+1B,GACX,KAEGlnF,EAAAA,EAAAA,GAAS,CAAC,EAAGinF,EAAY,EAErBG,GAA+BA,CAACx7E,EAAOhT,EAAOiY,KAAW,IAAAw2E,EAAAC,EAAAC,EACpE,IAAK3uF,EAAMktF,oBACT,OAAOl6E,EAET,MAAMirB,EAAezS,GAAyBvT,GACxCyU,EAAsBN,GAAgCnU,GACtDo2E,EAAcD,GAA2C,QAA1BK,EAACzuF,EAAMktF,2BAAmB,IAAAuB,EAAAA,EAAI,IAC7D73C,EAAyBq2C,GAAmD,QAA1ByB,EAAC1uF,EAAMktF,2BAAmB,IAAAwB,EAAAA,EAAI,IAChF/6B,EAA8By5B,GAA+BnvD,EAAc2Y,EAA0D,QAApC+3C,EAAE12E,EAAOzC,QAAQxC,MAAMuZ,qBAAa,IAAAoiE,EAAAA,EAAI,CAAC,GAC1Iv3C,EAA0C,IAA/B1qB,EAAoBvY,OAAe,EAAI3J,KAAKvE,OAAOymB,EAAoB/oB,KAAIooB,IAAK,IAAAyhE,EAAAoB,EAAA,OAAyC,QAAzCpB,EAAiC,QAAjCoB,EAAIh4C,EAAuB7qB,UAAM,IAAA6iE,OAAA,EAA7BA,EAA+Bz6E,cAAM,IAAAq5E,EAAAA,EAAI,CAAC,KAC/I,OAAOpmF,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzByjC,eAAgB,CACd7qB,OAAQyiE,EACRz3C,yBACAK,gBAAiB0c,EACjBvc,aAEF,EC3DSy3C,GAAgC,CAC3C7nB,gBAAgB,EAChB8nB,iBAAiB,EACjBC,eAAgB,IAChBC,QAAQ,GCWV,SAASC,GAAY57E,EAAO67E,GAC1B,QAAuB/nF,IAAnB+nF,GAAgC77E,EAAM87E,eAAgB,CACxD,IAAK,IAAIh6E,EAAI,EAAGA,EAAI9B,EAAM87E,eAAeh7E,OAAQgB,GAAK,EAAG,CACvD,MAAMi6E,EAAQ/7E,EAAM87E,eAAeh6E,GACnC,GAAIi6E,EAAMC,aAAeH,EACvB,MAAO,CACLz1E,EAAG21E,EAAM5yC,QACT8yC,EAAGF,EAAMG,QAGf,CACA,OAAO,CACT,CACA,MAAO,CACL91E,EAAGpG,EAAMmpC,QACT8yC,EAAGj8E,EAAMk8E,QAEb,CACA,SAASC,GAAgBC,EAA0BC,EAAQC,EAAcC,GACvE,IAAIC,EAAWJ,EAMf,OAJEI,GADsB,UAApBD,EACUF,EAASC,EAAanrF,KAEtBmrF,EAAa1rF,MAAQyrF,EAE5BG,CACT,CAqBA,SAASC,GAAaz8E,GACpBA,EAAM2hC,iBACN3hC,EAAM08E,0BACR,CAMA,SAASC,GAAgC/3E,GACvC,MAAMorE,EAAUt+E,EAAAA,SACV+S,EAAWA,IAAM4rC,GAAwCzrC,GACzD7N,EAAQkO,EAAgBL,EAAQH,GACtC/S,EAAAA,WAAgB,KACVs+E,EAAQ7tE,UAAqB,IAAVpL,IACrBi5E,EAAQ7tE,QAAQ25D,UAChBkU,EAAQ7tE,aAAUrO,EACpB,IAWF,MATmB8oF,KACjB,IAAK5M,EAAQ7tE,QAAS,CACpB,IAAmB,IAAfsC,IACF,OAAOo3D,QAAQC,UAEjBkU,EAAQ7tE,QCtFP,WACL,IAAI25D,EACA+gB,EACJ,MAAM7M,EAAU,IAAInU,SAAQ,CAACihB,EAAUC,KACrCjhB,EAAUghB,EACVD,EAASE,CAAO,IAIlB,OAFA/M,EAAQlU,QAAUA,EAClBkU,EAAQ6M,OAASA,EACV7M,CACT,CD4EwBgN,EACpB,CACA,OAAOhN,EAAQ7tE,OAAO,CAG1B,CAwBA,SAAS86E,GAAoBr4E,EAAQsN,EAASgG,GAC5C,MAAMglE,EAAe,CAAC,EAChBrwF,EAAO+X,EAAOzC,QAAQsV,eAAetV,QA+B3C,OA9BAtV,EAAKsxE,UAAUhY,IAAI1iD,EAAYiD,YAC/BwR,EAAQ3e,SAAQuf,IACd,MAAM4oD,E/B+DH,SAAuBzW,EAAKvyC,GACjC,MAAMilD,EAAY1S,EAAIhY,mBAAmB9wC,QACzC,OAAOnB,MAAM6jB,KAAK84C,EAAUa,iBAAiB,2CAADlxE,OAA4C0zE,GAA+BtoD,GAAM,wBAC/H,C+BlEkBykE,CAAcv4E,EAAOzC,QAAS2W,EAAOJ,OAC7C0kE,EAAS1b,EAAMpxE,KAAImW,IAAQ,IAAA42E,EAC/B,OAAyC,QAAzCA,EAAO52E,EAAK2iC,wBAAwB7xC,aAAK,IAAA8lF,EAAAA,EAAI,CAAC,IAE1CC,EAAiBprE,EAAQupE,gBAAkB2B,EA3BrD,SAAyBG,EAAaC,GACpC,GAAID,EAAYz8E,OAAS,EACvB,OAAOy8E,EAET,MAAMvvE,EAASuvE,EAAY/7E,QAC3BwM,EAAOylB,MAAK,CAAC7vB,EAAGC,IAAMD,EAAIC,IAC1B,MAAM45E,EAAKzvE,EAAO7W,KAAKywC,MAAsB,IAAhB55B,EAAOlN,SAC9B48E,EAAK1vE,EAAO7W,KAAKywC,MAAsB,IAAhB55B,EAAOlN,QAAiB,GAC/C68E,EAAMD,EAAKD,EAOXG,EAAYD,EAAM,EAAI,EAAIA,EAAMH,EACtC,OAAOxvE,EAAOhe,QAAO+hB,GAAKA,EAAI0rE,EAAKG,GAAa7rE,EAAI2rE,EAAKE,GAC3D,CAU8DC,CAAgBT,EAAQlrE,EAAQwpE,gBAC1F,GAAIxpE,EAAQyhD,eAAgB,CAC1B,MAAMmqB,G/BqDmB7yB,E+BrDKrmD,EAAOzC,Q/BqDPuW,E+BrDgBI,EAAOJ,M/BsDzCuyC,EAAIxK,0BAA0Bt+C,QAC/BsuD,cAAc,+BAADnjE,OAAgC0zE,GAA+BtoD,GAAM,6B+BtD7F,GAAIolE,EAAQ,KAAAC,EAAAC,EACV,MAAMtkB,EAAQokB,EAAOrtB,cAAc,IAADnjE,OAAKmW,EAAYw6E,oBAC7Cj7B,EAAU86B,EAAOrtB,cAAc,IAADnjE,OAAKmW,EAAYkH,oCAC/CuzE,EAAgBJ,EAAOrtB,cAAc,IAADnjE,OAAKmW,EAAYsC,sBACrDo4E,EAAgBL,EAAOrtB,cAAc,IAADnjE,OAAKmW,EAAYwC,WACrDqqD,EAAe,OAALoJ,QAAK,IAALA,EAAAA,EAAS1W,EACnBzyD,EAAQ8R,OAAOi1E,iBAAiBwG,EAAQ,MACxCM,EAAeC,SAAS9tF,EAAMoL,YAAa,IAAM0iF,SAAS9tF,EAAM+tF,aAAc,IAE9E/mF,EADe+4D,EAAQiuB,YAAc,EACdH,GAA0C,QAA9BL,EAAiB,OAAbG,QAAa,IAAbA,OAAa,EAAbA,EAAehG,mBAAW,IAAA6F,EAAAA,EAAI,IAAgC,QAA9BC,EAAiB,OAAbG,QAAa,IAAbA,OAAa,EAAbA,EAAejG,mBAAW,IAAA8F,EAAAA,EAAI,GAC/GV,EAAe3oE,KAAKpd,EACtB,CACF,C/BwCG,IAAwB0zD,EAAKvyC,E+BvChC,MAAM8lE,EAAe1lE,EAAOjqB,YAAcu+B,UAAgCt5B,IAApBglB,EAAOjqB,SACvD4vF,EAAe3lE,EAAOjO,WAAauiB,UAAgCt5B,IAApBglB,EAAOjO,SACtD8Z,EAAM65D,EAAe1lE,EAAOjqB,SAAW,EACvC+D,EAAM6rF,EAAe3lE,EAAOjO,SAAWuiB,IACvCsxD,EAAuC,IAA1BpB,EAAex8E,OAAe,EAAI3J,KAAKvE,OAAO0qF,GACjEJ,EAAapkE,EAAOJ,OAASgM,GAAMg6D,EAAY/5D,EAAK/xB,EAAI,IAE1D/F,EAAKsxE,UAAU5nC,OAAO9yB,EAAYiD,YAC3Bw2E,CACT,CACO,MAAMyB,GAA+Bh/E,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACvEi/E,aAAc,CACZC,oBAAqB,MAGzB,SAASC,KACP,MAAO,CACLl/D,YAAQ9rB,EACRirF,gBAAiB,EACjBC,kBAAmB,EACnBC,6BAAyBnrF,EACzBorF,yBAAqBprF,EACrBqrF,yBAAqBrrF,EACrBsrF,oBAAqB,GACrBC,aAAc,GACdC,qBAAsB,GACtBC,uBAAwB,GACxBC,gBAAY1rF,EACZ2rF,iBAAa3rF,EACb4rF,uBAAwB,GACxBC,yBAA0B,GAE9B,CAMO,MAAMC,GAAsBA,CAACh7E,EAAQjY,KAC1C,MAAMwsB,GAAQinB,EAAAA,GAAAA,KACR+nB,EAASsH,GAAc7qD,EAAQ,uBAC/B5C,EAAOkC,EAAW46E,IAAkB38E,QAKpCi6E,EAA2B1qF,EAAAA,SAC3B6qF,EAAkB7qF,EAAAA,SAClBmuF,EAAyB/gE,KACzBghE,EAAUpuF,EAAAA,SACVquF,EAAcvD,IAAY,IAAAwD,EAC9B73B,EAAOR,MAAM,qBAADr6D,OAAsBkvF,EAAQ,aAAAlvF,OAAY0U,EAAK4d,OAAOlH,QAClE,MAAMunE,EAAYj+E,EAAKk9E,oBAAoBjH,YACrCiI,EAAY1D,EAAWyD,EACvBE,EAAkB3D,EAAWx6E,EAAK+8E,gBAClCqB,EAAgBp+E,EAAKg9E,kBAAoBmB,EAClB,QAA7BH,EAAAp7E,EAAOzC,QAAQsV,sBAAc,IAAAuoE,GAAS,QAATA,EAA7BA,EAA+B79E,eAAO,IAAA69E,GAAtCA,EAAwCzvF,MAAMqzD,YAAY,sBAAuB,GAAFt2D,OAAK8yF,EAAa,OACjGp+E,EAAK4d,OAAOxF,cAAgBoiE,EAC5Bx6E,EAAK4d,OAAOroB,MAAQilF,EACpBx6E,EAAK4d,OAAOpkB,KAAO,EACnBwG,EAAKk9E,oBAAoB3uF,MAAMgH,MAAQ,GAAHjK,OAAMkvF,EAAQ,MAClD,MAAM2C,EAAsBn9E,EAAKm9E,oBAC7BA,IACFA,EAAoB5uF,MAAMgH,MAAQ,GAAHjK,OAAMkvF,EAAQ,OAE/Cx6E,EAAKo9E,oBAAoB7lF,SAAQ+2D,IAC/B,MAAM+vB,EAAM/vB,EACZ,IAAIgwB,EAEFA,EADuC,MAArCD,EAAIthB,aAAa,gBACN,GAAHzxE,OAAMkvF,EAAQ,MAIX,GAAHlvF,OAAM+yF,EAAIpI,YAAciI,EAAS,MAE7CG,EAAI9vF,MAAMgH,MAAQ+oF,CAAU,IAE9Bt+E,EAAKq9E,aAAa9lF,SAAQ+2D,IACxB,MAAM+vB,EAAM/vB,EACZ,IAAIgwB,EAEFA,EADuC,MAArCD,EAAIthB,aAAa,gBACN,GAAHzxE,OAAMkvF,EAAQ,MAIX,GAAHlvF,OAAM+yF,EAAIpI,YAAciI,EAAS,MAE7CG,EAAI9vF,MAAMqzD,YAAY,UAAW08B,EAAW,IAE9C,MAAMC,EAAiB37E,EAAOzC,QAAQuZ,6BAA6B,kBAAkB,EAAO1Z,EAAK4d,OAAOlH,OACpG6nE,IAAmBxoE,GAAyBq+B,OAC9CoqC,GAAex+E,EAAKw9E,WAAY,QAASU,GACzCl+E,EAAKs9E,qBAAqB/lF,SAAQkN,IAChC+5E,GAAe/5E,EAAM,OAAQy5E,EAAU,IAEzCl+E,EAAK09E,uBAAuBnmF,SAAQukF,IAClC0C,GAAe1C,EAAQ,OAAQoC,EAAU,KAGzCK,IAAmBxoE,GAAyBo+B,QAC9CqqC,GAAex+E,EAAKy9E,YAAa,QAASS,GAC1Cl+E,EAAKu9E,uBAAuBhmF,SAAQkN,IAClC+5E,GAAe/5E,EAAM,QAASy5E,EAAU,IAE1Cl+E,EAAK29E,yBAAyBpmF,SAAQukF,IACpC0C,GAAe1C,EAAQ,QAASoC,EAAU,IAE9C,EAEIO,EAAexgF,IAKnB,GAHAygF,IAGI1+E,EAAKi9E,wBAAyB,CAChC,MAAM0B,EAAY3+E,EAAKi9E,wBACjB2B,EAAgBD,EAAUE,UAC1BC,EAAcH,EAAUx3C,QACxB43C,EAAcJ,EAAUzE,QAG9B,GAAIj8E,EAAY4gF,UAAYD,EAAgB,KAAO3gF,EAAYkpC,UAAY23C,GAAe7gF,EAAYi8E,UAAY6E,EAGhH,OAFA/+E,EAAKi9E,6BAA0BnrF,OAC/B8Q,EAAOzC,QAAQ26B,aAAa,mBAAoB,KAAM78B,EAG1D,CACA,GAAI+B,EAAK4d,OAAQ,CACfhb,EAAOzC,QAAQ6+E,eAAeh/E,EAAK4d,OAAOlH,MAAO1W,EAAK4d,OAAOroB,OAC7D4wD,EAAOR,MAAM,gBAADr6D,OAAiB0U,EAAK4d,OAAOlH,MAAK,qBAAAprB,OAAoB0U,EAAK4d,OAAOroB,QAK9E,MAAM6gB,EAAeH,GAAyBrT,EAAOzC,QAAQxC,OAC7DqC,EAAKo9E,oBAAoB7lF,SAAQ+2D,IAE/B,MAAM+vB,EAAM/vB,EACNksB,EAFsClsB,E/BzNjCyO,aAAa,eAAev9D,MAAM,GAAI,GAAGovB,MAAM,O+B2NlCjb,QAAO,CAACgF,EAAKjC,KACe,IAA9CN,EAAaQ,sBAAsBF,GAC9BiC,EAAMvC,EAAaG,OAAOG,GAAO0B,cAEnCO,GACN,GACG2lE,EAAa,GAAHhzF,OAAMkvF,EAAQ,MAC9B6D,EAAI9vF,MAAMgH,MAAQ+oF,CAAU,GAEhC,CACAT,EAAuBh+E,MAAM,GAAG,KAC9B+C,EAAOzC,QAAQ26B,aAAa,mBAAoB,KAAM78B,EAAY,GAClE,EAEEghF,EAAkBA,CAACrhE,EAAQshE,EAAWC,KAAW,IAAAC,EACrD,MAAMv0F,EAAO+X,EAAOzC,QAAQsV,eAAetV,Q/B9OxC,IAAoC2+D,EAAMpoD,E+B+O7C1W,EAAK+8E,gBAAkBn/D,EAAOxF,cAC9BpY,EAAKg9E,kBAAoBp6E,EAAOzC,QAAQmlC,oBAAoBwuC,SAC5D9zE,EAAK4d,OAASA,EACd5d,EAAKk9E,qB/BlPkCpe,E+BkPel8D,EAAOzC,QAAQs+C,0BAA0Bt+C,Q/BlPlDuW,E+BkP2DkH,EAAOlH,M/BjP1GooD,EAAKrQ,cAAc,gBAADnjE,OAAiB0zE,GAA+BtoD,GAAM,Q+BkP7E,MAAMymE,EAAsBtyF,EAAK4jE,cAAc,IAADnjE,OAAKmW,EAAYuD,gBAAe,kBAAA1Z,OAAiB0zE,GAA+BphD,EAAOlH,OAAM,OACvIymE,IACFn9E,EAAKm9E,oBAAsBA,GAE7Bn9E,EAAKo9E,oB/BjPF,SAA0Cte,EAAMpoD,GAAO,IAAA2oE,EAC5D,OAAOrgF,MAAM6jB,KAA2F,QAAvFw8D,EAACvgB,EAAKtC,iBAAiB,oBAADlxE,OAAqB0zE,GAA+BtoD,GAAM,gBAAO,IAAA2oE,EAAAA,EAAI,GAC9G,C+B+O+BC,CAAyE,QAAzCF,EAACx8E,EAAOzC,QAAQs+C,iCAAyB,IAAA2gC,OAAA,EAAxCA,EAA0Cj/E,QAASyd,EAAOlH,OACtH1W,EAAKq9E,a/B/OF,SAAqC7kE,EAAKywC,GAAK,IAAAs2B,EAEpD,IADa1gB,GAA+BrmD,EAAK/W,EAAY5W,MAE3D,MAAM,IAAI2T,MAAM,yCAElB,MAAM0hE,EAAe1nD,EAAIukD,aAAa,iBACtC,IAAKmD,EACH,MAAO,GAET,MAAMV,EAAW5tE,OAAOsuE,GAAgB,EAClCR,EAAQ,GACd,OAA2B,QAAvB6f,EAACt2B,EAAIhY,0BAAkB,IAAAsuC,GAAtBA,EAAwBp/E,SAG7Bw/D,GAAU1W,GAAK1xD,SAAQqoE,IACrB,MAAMlwC,EAAQkwC,EAAW7C,aAAa,WACtC,IAAKrtC,EACH,OAEF,IAAIujB,EAAcusB,EAClB,MAAMtkB,EAAkB+N,EAAI9N,4BAA4BzrB,EAAO8vC,GAC3DtkB,GAAmBA,EAAgBE,mBACrCnI,EAAciI,EAAgBG,sBAEhC,MAAM52C,EAAOm7D,EAAWnR,cAAc,mBAADnjE,OAAoB2nD,EAAW,OAChExuC,GACFi7D,EAAM/sD,KAAKlO,EACb,IAEKi7D,GAjBE,EAkBX,C+BiNwB8f,CAA4Bx/E,EAAKk9E,oBAAqBt6E,EAAOzC,SACjFH,EAAKw9E,WAAane,GAAgBz8D,EAAOzC,QAASgX,EAAQ,sBAAwB,sBAClFnX,EAAKy9E,YAAcpe,GAAgBz8D,EAAOzC,QAASgX,EAAQ,qBAAuB,uBAClF,MAAMonE,EAAiB37E,EAAOzC,QAAQuZ,6BAA6B,kBAAkB,EAAO1Z,EAAK4d,OAAOlH,OACxG1W,EAAKs9E,qBAAuBiB,IAAmBxoE,GAAyBq+B,KAAO,G/BzL5E,SAAqC6U,EAAKzwC,EAAKrB,GACpD,MAAMqoD,EAAWM,GAAkBtnD,GACnC,OAAO+mD,GAAgB,CACrBtW,MACAuW,WACA10E,SAAUqsB,EAAQ,QAAU,OAC5BsoD,SAAU5rD,GAASsD,EAAQtD,EAAQ2rD,EAAW3rD,EAAQ2rD,GAE1D,C+BiLwFigB,CAA4B78E,EAAOzC,QAASH,EAAKk9E,oBAAqB/lE,GAC1JnX,EAAKu9E,uBAAyBgB,IAAmBxoE,GAAyBo+B,MAAQ,G/BjL/E,SAAuC8U,EAAKzwC,EAAKrB,GACtD,MAAMqoD,EAAWM,GAAkBtnD,GACnC,OAAO+mD,GAAgB,CACrBtW,MACAuW,WACA10E,SAAUqsB,EAAQ,OAAS,QAC3BsoD,SAAU5rD,GAASsD,EAAQtD,EAAQ2rD,EAAW3rD,EAAQ2rD,GAE1D,C+ByK2FkgB,CAA8B98E,EAAOzC,QAASH,EAAKk9E,oBAAqB/lE,GAC/JnX,EAAK09E,uBAAyBa,IAAmBxoE,GAAyBq+B,KAAO,G/BpJ9E,SAAuC6U,EAAKzwC,EAAKrB,GACtD,MAAMqoD,EAAWM,GAAkBtnD,GACnC,OAAOunD,GAAkB,CACvB9W,MACAn+D,SAAUqsB,EAAQ,QAAU,OAC5BqoD,WACAC,SAAU5rD,GAASsD,EAAQtD,EAAQ2rD,EAAW3rD,EAAQ2rD,GAE1D,C+B4I0FmgB,CAA8B/8E,EAAOzC,QAASH,EAAKk9E,oBAAqB/lE,GAC9JnX,EAAK29E,yBAA2BY,IAAmBxoE,GAAyBo+B,MAAQ,G/B5IjF,SAAyC8U,EAAKzwC,EAAKrB,GACxD,MAAMqoD,EAAWM,GAAkBtnD,GACnC,OAAOunD,GAAkB,CACvB9W,MACAn+D,SAAUqsB,EAAQ,OAAS,QAC3BqoD,WACAC,SAAU5rD,GAASsD,EAAQtD,EAAQ2rD,EAAW3rD,EAAQ2rD,GAE1D,C+BoI6FogB,CAAgCh9E,EAAOzC,QAASH,EAAKk9E,oBAAqB/lE,GACnKojE,EAAgBp6E,QAjQpB,SAA4B++E,EAAW/nE,GACrC,MAAM0oE,EAAOX,EAAU/iB,UAAUh/B,SAAS17B,EAAY,+BAAiC,QAAU,OACjG,OAAI0V,EARN,SAA6B0oE,GAC3B,MAAa,UAATA,EACK,OAEF,OACT,CAKWC,CAAoBD,GAEtBA,CACT,CA0P8BE,CAAmBb,EAAW/nE,GACxDijE,EAAyBj6E,QA9Q7B,SAAkCk6E,EAAQC,EAAcC,GACtD,MAAwB,SAApBA,EACKF,EAASC,EAAanrF,KAExBmrF,EAAa1rF,MAAQyrF,CAC9B,CAyQuC2F,CAAyBb,EAAQn/E,EAAKk9E,oBAAoB91C,wBAAyBmzC,EAAgBp6E,QAAQ,EAE1I8/E,EAAsBh5C,GAAiBw3C,GACvCyB,EAAwBj5C,IAAiBhpC,IAE7C,GAA4B,IAAxBA,EAAYkiF,QAEd,YADAF,EAAoBhiF,GAGtB,IAAIu8E,EAAWL,GAAgBC,EAAyBj6E,QAASlC,EAAYkpC,QAASnnC,EAAKk9E,oBAAoB91C,wBAAyBmzC,EAAgBp6E,SACxJq6E,EAAW93D,GAAM83D,EAAUx6E,EAAK4d,OAAO/wB,SAAUmT,EAAK4d,OAAO/U,UAC7Dk1E,EAAYvD,GACZ,MAAM1+D,EAAS,CACbwyC,QAAStuD,EAAKk9E,oBACdt/D,OAAQ5d,EAAK4d,OACbroB,MAAOilF,GAET53E,EAAOzC,QAAQ26B,aAAa,eAAgBhf,EAAQ7d,EAAY,IAE5DmiF,EAAiBn5C,IAAiBhpC,IACvB27E,GAAY37E,EAAa6/E,EAAQ39E,UAIhDs+E,EAAaxgF,EAAY,IAErBg3C,EAAkBhO,IAAiBhpC,IACvC,MAAMoiF,EAASzG,GAAY37E,EAAa6/E,EAAQ39E,SAChD,IAAKkgF,EACH,OAIF,GAAyB,cAArBpiF,EAAYrG,MAAgD,IAAxBqG,EAAYkiF,QAElD,YADAC,EAAeniF,GAGjB,IAAIu8E,EAAWL,GAAgBC,EAAyBj6E,QAASkgF,EAAOj8E,EAAGpE,EAAKk9E,oBAAoB91C,wBAAyBmzC,EAAgBp6E,SAC7Iq6E,EAAW93D,GAAM83D,EAAUx6E,EAAK4d,OAAO/wB,SAAUmT,EAAK4d,OAAO/U,UAC7Dk1E,EAAYvD,GACZ,MAAM1+D,EAAS,CACbwyC,QAAStuD,EAAKk9E,oBACdt/D,OAAQ5d,EAAK4d,OACbroB,MAAOilF,GAET53E,EAAOzC,QAAQ26B,aAAa,eAAgBhf,EAAQ7d,EAAY,IAE5DqiF,EAAmBr5C,IAAiBjpC,IACxC,MAAMuiF,EAAgB1hB,GAA+B7gE,EAAMI,OAAQqD,EAAY,+BAE/E,IAAK8+E,EACH,OAEF,MAAMxG,EAAQ/7E,EAAM87E,eAAe,GACtB,MAATC,IAEF+D,EAAQ39E,QAAU45E,EAAMC,YAE1B,MAAMkD,EAAsBre,GAA+B7gE,EAAMI,OAAQqD,EAAYsD,cAC/E2R,EAA+BwmE,E/B9TtBngB,aAAa,c+B+T5B,MAAMn/C,EAAShb,EAAOzC,QAAQme,UAAU5H,GACxCyvC,EAAOR,MAAM,uBAADr6D,OAAwBsyB,EAAOlH,QAC3C9T,EAAOzC,QAAQ26B,aAAa,oBAAqB,CAC/CpkB,SACC1Y,GACHihF,EAAgBrhE,EAAQ2iE,EAAexG,EAAM5yC,SAC7C,MAAMmyB,EAAMX,GAAc36D,EAAM+2C,eAChCukB,EAAI7X,iBAAiB,YAAaxM,GAClCqkB,EAAI7X,iBAAiB,WAAY2+B,EAAe,IAE5C1B,EAAgBhvF,EAAAA,aAAkB,KACtC,MAAM4pE,EAAMX,GAAc/1D,EAAOzC,QAAQsV,eAAetV,SACxDm5D,EAAI9F,KAAKjlE,MAAMiyF,eAAe,UAC9BlnB,EAAI3X,oBAAoB,YAAau+B,GACrC5mB,EAAI3X,oBAAoB,UAAWs+B,GACnC3mB,EAAI3X,oBAAoB,YAAa1M,GACrCqkB,EAAI3X,oBAAoB,WAAYy+B,GAGpC1lE,YAAW,KACT4+C,EAAI3X,oBAAoB,QAAS84B,IAAc,EAAK,GACnD,KACCz6E,EAAKk9E,sBACPl9E,EAAKk9E,oBAAoB3uF,MAAMqb,cAAgB,QACjD,GACC,CAAChH,EAAQ5C,EAAMkgF,EAAuBD,EAAqBhrC,EAAiBmrC,IACzEK,EAAoB/wF,EAAAA,aAAkBG,IAEtC,IAFuC,MAC3C6mB,GACD7mB,EACC+S,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDi/E,cAAc7qF,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMi/E,aAAc,CAC7CC,oBAAqBnmE,QAGzB9T,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,IACE89E,EAAmBhxF,EAAAA,aAAkB,KACzCkT,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDi/E,cAAc7qF,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMi/E,aAAc,CAC7CC,oBAAqB,SAGzBj6E,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,IACE+9E,EAA8B15C,IAAiB,CAAAl3C,EAElDiO,KAAU,IAFyC,OACpD4f,GACD7tB,EAEC,GAAqB,IAAjBiO,EAAM6hC,OACR,OAIF,IAAK7hC,EAAM+2C,cAAconB,UAAUh/B,SAAS17B,EAAY,+BACtD,OAIFzD,EAAM2hC,iBACNwmB,EAAOR,MAAM,uBAADr6D,OAAwBsyB,EAAOlH,QAC3C9T,EAAOzC,QAAQ26B,aAAa,oBAAqB,CAC/CpkB,MAAOkH,EAAOlH,OACb1Y,GACHihF,EAAgBrhE,EAAQ5f,EAAM+2C,cAAe/2C,EAAMmpC,SACnD,MAAMmyB,EAAMX,GAAc/1D,EAAOzC,QAAQsV,eAAetV,SACxDm5D,EAAI9F,KAAKjlE,MAAM6H,OAAS,aACxB4J,EAAKi9E,wBAA0Bj/E,EAAMC,YACrCq7D,EAAI7X,iBAAiB,YAAay+B,GAClC5mB,EAAI7X,iBAAiB,UAAWw+B,GAIhC3mB,EAAI7X,iBAAiB,QAASg5B,IAAc,EAAK,IAE7CmG,EAAmC35C,IAAiB,CAACnrB,EAAQ9d,KACjE,GAAIrT,EAAM0nF,gBACR,OAIF,GAAqB,IAAjBr0E,EAAM6hC,OACR,OAEF,MAAM/oB,EAASlU,EAAOzC,QAAQxC,MAAMuY,QAAQK,OAAOuF,EAAOpF,QACjC,IAArBI,EAAOyU,WAGX3oB,EAAOzC,QAAQ0gF,iBAAgB9uF,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAMm2F,gBAAiB,CACjE5qE,QAAS,CAACY,EAAOJ,SAChB,IAOCqqE,EAA+BpG,GAAgC/3E,GAC/Do+E,EAAkBtxF,EAAAA,QAAa,GAC/BmxF,EAAkBnxF,EAAAA,aAAkB0uB,UAAqB,IAAA6iE,EAAAC,EAE7D,KAD0C,QAAhCD,EAAGr+E,EAAOzC,QAAQsV,sBAAc,IAAAwrE,OAAA,EAA7BA,EAA+B9gF,SAE1C,OAEF,GAAI6gF,EAAgB7gF,QAClB,OAEF6gF,EAAgB7gF,SAAU,EAC1B,MAAMxC,EAAQsY,GAAyBrT,EAAOzC,QAAQxC,OAChDuS,GAAUne,EAAAA,EAAAA,GAAS,CAAC,EAAGynF,GAA+B2H,EAAa,CACvEjrE,QAA6B,QAAtBgrE,EAAa,OAAXC,QAAW,IAAXA,OAAW,EAAXA,EAAajrE,eAAO,IAAAgrE,EAAAA,EAAIvjF,EAAM0Y,gBAEzCnG,EAAQgG,QAAUhG,EAAQgG,QAAQloB,QAAO8V,IAAwC,IAAnCnG,EAAMiZ,sBAAsB9S,KAC1E,MAAMoS,EAAUhG,EAAQgG,QAAQ5nB,KAAIwV,GAAKlB,EAAOzC,QAAQxC,MAAMuY,QAAQK,OAAOzS,KAC7E,IACElB,EAAOzC,QAAQihF,kCAAiC,SAC1CL,IACN,MAAM7F,EAAeD,GAAoBr4E,EAAQsN,EAASgG,GACpDmrE,EAAanrE,EAAQ5nB,KAAIwoB,IAAU/kB,EAAAA,EAAAA,GAAS,CAAC,EAAG+kB,EAAQ,CAC5DvhB,MAAO2lF,EAAapkE,EAAOJ,OAC3B0B,cAAe8iE,EAAapkE,EAAOJ,WAErC,GAAIxG,EAAQypE,OAAQ,CAClB,MACM2H,EADiB3jF,EAAM0Y,cAAc/nB,KAAIooB,GAAS/Y,EAAM4Y,OAAOG,KAAQ1oB,QAAO8V,IAA8C,IAAzCnG,EAAMiZ,sBAAsB9S,EAAE4S,SACrF/C,QAAO,CAAC4tE,EAAOzqE,KAAM,IAAAhrB,EAAA01F,EAAA,OAAKD,GAA2D,QAAtDz1F,EAA8B,QAA9B01F,EAAItG,EAAapkE,EAAOJ,cAAM,IAAA8qE,EAAAA,EAAI1qE,EAAOsB,qBAAa,IAAAtsB,EAAAA,EAAIgrB,EAAOvhB,MAAM,GAAE,GAEpIksF,EADiB7+E,EAAOzC,QAAQmlC,oBAAoBiB,kBAAkBhxC,MACpC+rF,EACxC,GAAIG,EAAiB,EAAG,CACtB,MAAMC,EAAiBD,GAAkBJ,EAAWviF,QAAU,GAC9DuiF,EAAW9pF,SAAQuf,IACjBA,EAAOvhB,OAASmsF,EAChB5qE,EAAOsB,eAAiBspE,CAAc,GAE1C,CACF,CACA9+E,EAAOzC,QAAQwhF,cAAcN,GAC7BA,EAAW9pF,SAAQ,CAACotC,EAAW9wB,KAC7B,GAAI8wB,EAAUpvC,QAAU2gB,EAAQrC,GAAOte,MAAO,CAC5C,MAAMA,EAAQovC,EAAUpvC,MACxBqN,EAAOzC,QAAQ26B,aAAa,oBAAqB,CAC/CwzB,QAAS1rD,EAAOzC,QAAQ4vD,uBAAuBprB,EAAUjuB,OACzDkH,OAAQ+mB,EACRpvC,SAEJ,IAEJ,CAAE,QACAqN,EAAOzC,QAAQihF,kCAAiC,GAChDJ,EAAgB7gF,SAAU,CAC5B,IACC,CAACyC,EAAQm+E,IAMZrxF,EAAAA,WAAgB,IAAMgvF,GAAe,CAACA,IACtCp8E,GAAW,KACL3X,EAAMynF,iBACRvY,QAAQC,UAAUuD,MAAK,KACrBz6D,EAAOzC,QAAQ0gF,gBAAgBl2F,EAAMm2F,gBAAgB,GAEzD,IAEFnzB,GAA2B/qD,GAAQ,SAAAg/E,EAAA,OAA8C,QAA9CA,EAAMh/E,EAAOzC,QAAQs+C,iCAAyB,IAAAmjC,OAAA,EAAxCA,EAA0CzhF,OAAO,GAAE,aAAcmgF,EAAkB,CAC1HuB,SAAS,IAEX/yC,GAAiBlsC,EAAQ,CACvBi+E,mBACC,UACHxlE,GAAuBzY,EAAQ,mBAAoB89E,GACnDrlE,GAAuBzY,EAAQ,oBAAqB69E,GACpDplE,GAAuBzY,EAAQ,2BAA4B+9E,GAC3DtlE,GAAuBzY,EAAQ,6BAA8Bg+E,GAC7DnkE,GAAwB7Z,EAAQ,eAAgBjY,EAAMm3F,gBACtDrlE,GAAwB7Z,EAAQ,oBAAqBjY,EAAMo3F,oBAAoB,EAEjF,SAASvD,GAAelwB,EAAS0zB,EAAUC,GACpC3zB,IAGLA,EAAQ//D,MAAMyzF,GAAY,GAAH12F,OAAM+wF,SAAS/tB,EAAQ//D,MAAMyzF,GAAW,IAAMC,EAAK,MAC5E,CE7gBO,SAASC,GAAkBC,EAAQC,GACxC,OAAOD,EAAOz1C,gBAAkB01C,EAAO11C,eAAiBy1C,EAAOx1C,eAAiBy1C,EAAOz1C,YACzF,CACO,MAAMy9B,GAAeA,CAAC1kE,EAAKkY,EAAQhb,KAAW,IAAAy/E,EACnD,IAAK38E,EACH,OAAO,KAET,IAAI48E,EAAY58E,EAAIkY,EAAOlH,OAC3B,MAAM05C,EAAuC,QAA5BiyB,EAAGzkE,EAAO2kE,0BAAkB,IAAAF,EAAAA,EAAIzkE,EAAOwyC,YAIxD,OAHIA,IACFkyB,EAAYlyB,EAAYkyB,EAAW58E,EAAKkY,EAAQhb,IAE3C0/E,CAAS,EChCZE,GAAc,CAClB/yC,aAAc,CAAC,EACfF,YAAa,CAAC,EACdI,oBAAqB,CAAC,GAElB8yC,GAAc,CAClB/1C,cAAe,EACfC,aAAc,GAEV+1C,GAAgB,IAAIv/D,IAAI,CAAC,YAAa,cAAe,4BAOrDw/D,GAA0BA,CAAC//E,EAAQggF,EAAS5nC,EAAap4B,EAAOigE,EAAgBC,EAAYC,KAChG,MAAMtzC,EAAeqzC,EAAa,CAAC,GAAI/wF,EAAAA,EAAAA,GAAS,CAAC,EAAG6Q,EAAOzC,QAAQxC,MAAM0xC,YAAYI,cAC/EF,EAAcuzC,EAAa,CAAC,GAAI/wF,EAAAA,EAAAA,GAAS,CAAC,EAAG6Q,EAAOzC,QAAQxC,MAAM0xC,YAAYE,aAC9EI,EAAsBmzC,EAAa,CAAC,GAAI/wF,EAAAA,EAAAA,GAAS,CAAC,EAAG6Q,EAAOzC,QAAQxC,MAAM0xC,YAAYM,qBAwF5F,OAvFImzC,IACFC,EAAiBN,IAEnBG,EAAQrrF,SAAQqmB,IACd,IAAI8kE,GAAcz/D,IAAIrF,EAAOlH,OAA7B,CAGA,IAAK,IAAI7C,EAAQgvE,EAAen2C,cAAe74B,GAASgvE,EAAel2C,aAAc94B,GAAS,EAAG,KAAAmvE,EAC/F,MAAMt9E,EAAMs1C,EAAYnnC,GACxB,GAAuB,QAAvBmvE,EAAIzzC,EAAY7pC,EAAI3I,WAAG,IAAAimF,GAAnBA,EAAsBplE,EAAOlH,OAC/B,SAEF,MAAM4rE,EAAYlY,GAAa1kE,EAAI0R,MAAOwG,EAAQhb,GAClD,GAAiB,MAAb0/E,EACF,SAEF,IAAIW,EAAev9E,EAAI3I,GACnBmmF,EAAkBrvE,EAClBsvE,EAAU,EAGd,MAAMC,EAAuB,GAC7B,GAAIvvE,IAAUgvE,EAAen2C,cAAe,CAC1C,IAAI22C,EAAYxvE,EAAQ,EACxB,MAAMyvE,EAAetoC,EAAYqoC,GACjC,KAAOA,GAAazgE,EAAM8pB,eAAiB09B,GAAakZ,EAAalsE,MAAOwG,EAAQhb,KAAY0/E,GAAW,CACzG,MAAMiB,EAAavoC,EAAYqoC,EAAY,GACvC9zC,EAAYg0C,EAAWxmF,IACzBwyC,EAAYg0C,EAAWxmF,IAAI6gB,EAAOlH,QAAS,EAE3C64B,EAAYg0C,EAAWxmF,IAAM,CAC3B,CAAC6gB,EAAOlH,QAAQ,GAGpB0sE,EAAqBzwE,KAAKkB,GAC1BsvE,GAAW,EACXF,EAAeK,EAAavmF,GAC5BmmF,EAAkBG,EAClBA,GAAa,CACf,CACF,CACAD,EAAqB7rF,SAAQisF,IACvB7zC,EAAoB6zC,GACtB7zC,EAAoB6zC,GAAiB5lE,EAAOlH,OAASwsE,EAErDvzC,EAAoB6zC,GAAmB,CACrC,CAAC5lE,EAAOlH,OAAQwsE,EAEpB,IAIF,IAAIO,EAAgB5vE,EAAQ,EAC5B,KAAO4vE,GAAiB7gE,EAAM+pB,cAAgBqO,EAAYyoC,IAAkBrZ,GAAapvB,EAAYyoC,GAAersE,MAAOwG,EAAQhb,KAAY0/E,GAAW,CACxJ,MAAMiB,EAAavoC,EAAYyoC,GAC3Bl0C,EAAYg0C,EAAWxmF,IACzBwyC,EAAYg0C,EAAWxmF,IAAI6gB,EAAOlH,QAAS,EAE3C64B,EAAYg0C,EAAWxmF,IAAM,CAC3B,CAAC6gB,EAAOlH,QAAQ,GAGhBi5B,EAAoB8zC,GACtB9zC,EAAoB8zC,GAAe7lE,EAAOlH,OAASwsE,EAEnDvzC,EAAoB8zC,GAAiB,CACnC,CAAC7lE,EAAOlH,OAAQwsE,GAGpBO,GAAiB,EACjBN,GAAW,CACb,CACIA,EAAU,IACR1zC,EAAawzC,GACfxzC,EAAawzC,GAAcrlE,EAAOlH,OAASysE,EAAU,EAErD1zC,EAAawzC,GAAgB,CAC3B,CAACrlE,EAAOlH,OAAQysE,EAAU,GAIlC,CACAJ,EAAiB,CACfr2C,cAAev3C,KAAKwtB,IAAIogE,EAAer2C,cAAem2C,EAAen2C,eACrEC,aAAcx3C,KAAKvE,IAAImyF,EAAep2C,aAAck2C,EAAel2C,cA9ErE,CA+EC,IAEI,CACL8C,eACAF,cACAI,sBACAozC,iBACD,EAQUW,GAA8BA,CAAC/lF,EAAOhT,EAAOiY,KACxD,GAAIjY,EAAM+oF,qBAAsB,KAAAiQ,EAC9B,MAAMnyB,EAAS7zD,EAAMwyB,KAAKwB,YAAc,GAClCtb,EAAgB1Y,EAAMuY,QAAQG,eAAiB,GAC/Csa,EAAyBhzB,EAAMwyB,KAAKQ,uBACpC8R,EAAgB9kC,EAAMuY,QAAQK,OAC9BqtE,EAAqBlmF,QAAQC,EAAM3P,OAAOu4B,YAAYlB,MAAMvmB,SAAWpB,QAAkD,QAA3CimF,EAAChmF,EAAM3P,OAAOu4B,YAAYf,yBAAiB,IAAAm+D,OAAA,EAA1CA,EAA4C7kF,QACjI,IAAK0yD,EAAO1yD,SAAWuX,EAAcvX,SAAW6xB,IAA2B8R,GAAiBmhD,EAC1F,OAAO7xF,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB0xC,YAAamzC,KAGjB,MAAMK,EAAiB,CACrBn2C,cAAe,EACfC,aAAcx3C,KAAKwtB,IAAIkhE,GAA6B1uF,KAAKvE,IAAI4gE,EAAO1yD,OAAS,EAAG,KAE5EqxB,EAAOqhC,EAAOljE,KAAIyO,IAAM,CAC5BA,KACAqa,MAAOuZ,EAAuB5zB,OAE1B6lF,EAAUvsE,EAAc/nB,KAAIooB,GAAS+rB,EAAc/rB,MACnD,aACJ+4B,EAAY,YACZF,EAAW,oBACXI,GACEgzC,GAAwB//E,EAAQggF,EAASzyD,EAAM0yD,EAAgBA,GAAgB,EAAMJ,IACzF,OAAO1wF,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB0xC,YAAa,CACXI,eACAF,cACAI,wBAGN,CACA,OAAO59C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB0xC,YAAamzC,IACb,EChKSsB,GAA2BA,CAACnmF,EAAOhT,EAAOiY,KAAW7Q,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACpFkyC,gBAAgB99C,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAMo5F,oBAAqB,CACtD3rE,cAAe4rE,GAAmBphF,OA6CtC,SAASohF,GAAmBphF,GAC1B,OAAOe,EAAuBf,EAAOzC,QAAQxC,OAAO4oC,kBAAkBhxC,KACxE,CCtBO,MAAM0uF,GAAuBA,CAACl8B,EAAap9D,KAChD,MAAMiY,EAAS2mD,GAAsBxB,EAAap9D,GAwDlD,OAnDA0mF,GAAiCzuE,EAAQjY,GtByCHiY,KACtCy7D,GAAiCz7D,EAAQsmD,GAAuB,kBAAmBsmB,GAA0B,EsBzC7G0U,CAAyBthF,GAKzB0qD,GAAuB0mB,GAA4BpxE,EAAQjY,GAC3D2iE,GAAuB4jB,GAA8BtuE,EAAQjY,GAC7D2iE,GAAuBkI,GAAyB5yD,EAAQjY,GACxD2iE,GAAuB+hB,GAAsBzsE,EAAQjY,GACrD2iE,GAAuB0Z,GAAyBpkE,EAAQjY,GACxD2iE,GAAuBqR,GAAuB/7D,EAAQjY,GACtD2iE,GAAuBskB,GAAyBhvE,EAAQjY,GACxD2iE,GAAuBmZ,GAAiC7jE,EAAQjY,GAChE2iE,GAAuBgR,GAAwB17D,EAAQjY,GACvD2iE,GAAuBo2B,GAA6B9gF,EAAQjY,GAC5D2iE,GAAuBwI,GAAyBlzD,EAAQjY,GACxD2iE,GAAuBqvB,GAA8B/5E,EAAQjY,GAC7D2iE,GAAuB0W,GAA4BphE,EAAQjY,GAC3D2iE,GAAuBypB,GAA0Bn0E,EAAQjY,GACzD2iE,GAAuB6H,GAA4BvyD,EAAQjY,GAC3D2iE,GAAuB6rB,GAA8Bv2E,EAAQjY,GAC7D2iE,GAAuBpe,GAAgCtsC,EAAQjY,GAC/D2iE,GAAuBw2B,GAA0BlhF,EAAQjY,GACzD41E,GAA0B39D,EAAQjY,GpBpBDw5F,EAACvhF,EAAQjY,KAAU,IAAAy5F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACpD,MAAMv+B,EAASsH,GAAc7qD,EAAQ,oBAC/B+hF,EAA6Bj1F,EAAAA,aAAkBg4B,GAAY,WAC3D/8B,EAAM+iD,cACRhmB,KAAS7oB,UAEb,GAAG,CAAClU,EAAM+iD,eACJk3C,EAAqBj6F,EAAM64D,YAActoC,GAAcywB,YAA0C,QAA7By4C,EAAAz5F,EAAMkkE,+BAAuB,IAAAu1B,OAAA,EAA7BA,EAA+Br/B,WAAwC,QAAjCs/B,EAAI15F,EAAMkkE,+BAAuB,IAAAw1B,OAAA,EAA7BA,EAA+BhhC,cAC7IwhC,EAAwBn1F,EAAAA,SAAc,IACnCqhF,GAA2BpmF,EAAMymF,kBAAmB3jC,GAA8B7qC,EAAOzC,QAAQxC,SACvG,CAACiF,EAAQjY,EAAMymF,oBACZ0T,EAAiBp1F,EAAAA,OAAa,MACpCkT,EAAOzC,QAAQ4pD,qBAAqB,CAClCE,QAAS,eACTQ,UAAWo6B,EACXl6B,aAAchgE,EAAMo6F,0BACpBz6B,cAAe7c,GACfmd,YAAa,uBAEf,MAAM,kBACJnH,EAAiB,2BACjBmvB,EACAx7B,gBAAiB4tC,GACfr6F,EACEs6F,EAA2B1hC,GAA8B54D,GACzDqwD,EAAc5N,GAAmBxqC,EAAQjY,GACzComC,EAAO9tB,EAAgBL,EAAQkuB,IAC/Bo0D,EAAejiF,EAAgBL,EAAQ0uB,IAAmC,EAC1E6zD,EAA+Bz1F,EAAAA,aAAkBqN,IAAM,IAAAqoF,EAC3D,IAAIC,EAAQtoF,EACZ,MAAMuoF,EAAgC,QAAzBF,EAAGN,EAAe3kF,eAAO,IAAAilF,EAAAA,EAAIroF,EACpCo6C,EAAav0C,EAAOzC,QAAQolF,cAAcxoF,GAChD,GAAIo6C,EAAY,CACd,MAAMsY,EAAgB7lB,GAAiChnC,GACjD4iF,EAAa/1B,EAAc9gD,WAAU+gB,GAASA,IAAU41D,IACxDG,EAAWh2B,EAAc9gD,WAAU+gB,GAASA,IAAU21D,IAC5D,GAAIG,IAAeC,EACjB,OAGAJ,EADEG,EAAaC,EACPh2B,EAAcg2B,EAAW,GAEzBh2B,EAAcg2B,EAAW,EAErC,CACAX,EAAe3kF,QAAUpD,EACzB6F,EAAOzC,QAAQulF,eAAe,CAC5BJ,UACAD,UACEluC,EAAW,GACd,CAACv0C,IAKE+iF,EAAuBj2F,EAAAA,aAAkB0nB,IAC7C,GAAIzsB,EAAM64D,YAActoC,GAAcywB,WAAas5C,GAA4BjmF,MAAM8N,QAAQsK,IAAUA,EAAMtY,OAAS,EACpH,MAAM,IAAIN,MAAM,CAAC,kEAAmE,iGAAiGkF,KAAK,OAEvK+pC,GAA8B7qC,EAAOzC,QAAQxC,SAC7CyZ,IACnB+uC,EAAOR,MAAM,2BACb/iD,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnD+vC,aAAc/iD,EAAM+iD,aAAet2B,EAAQ,OAE7CxU,EAAOzC,QAAQ4qD,cACjB,GACC,CAACnoD,EAAQujD,EAAQx7D,EAAM+iD,aAAc/iD,EAAM64D,UAAWyhC,IACnDM,EAAgB71F,EAAAA,aAAkBqN,GAAM0wC,GAA8B7qC,EAAOzC,QAAQxC,OAAOia,SAAS7a,IAAK,CAAC6F,IAC3Gw0C,EAAkB1nD,EAAAA,aAAkBqN,IACxC,IAA2B,IAAvBpS,EAAM+iD,aACR,OAAO,EAET,GAAIs3C,IAAwBA,EAAoBpiF,EAAOzC,QAAQs+B,aAAa1hC,IAC1E,OAAO,EAET,MAAM23B,EAAU9xB,EAAOzC,QAAQs2B,WAAW15B,GAC1C,MAAsB,YAAX,OAAP23B,QAAO,IAAPA,OAAO,EAAPA,EAAS98B,OAAuC,eAAX,OAAP88B,QAAO,IAAPA,OAAO,EAAPA,EAAS98B,KAGhC,GACV,CAACgL,EAAQjY,EAAM+iD,aAAcs3C,IAC1BnwB,EAAkBnlE,EAAAA,aAAkB,IAAMm+C,GAAyBjrC,IAAS,CAACA,IAC7EgjF,EAAYl2F,EAAAA,aAAkB,SAACqN,GAAkD,IAA9Co6C,IAAUt4C,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,KAAAA,UAAA,GAASgnF,EAAchnF,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,IAAAA,UAAA,GACxE,GAAK+D,EAAOzC,QAAQi3C,gBAAgBr6C,GAIpC,GADA+nF,EAAe3kF,QAAUpD,EACrB8oF,EAAgB,CAClB1/B,EAAOR,MAAM,6BAADr6D,OAA8ByR,IAC1C,MAAM+oF,EAAe,GACf/hC,EAASr0B,IACbo2D,EAAanzE,KAAK+c,EAAM,EAIA,IAAAq2D,EAAAC,EAAAC,EAAAC,EAFtB/uC,IACF4M,EAAOhnD,GACH6nF,GACFjhC,GAAiB/gD,EAAQmuB,EAAMh0B,EAA8C,QAA5CgpF,EAA+B,QAA/BC,EAAEr7F,EAAMkkE,+BAAuB,IAAAm3B,OAAA,EAA7BA,EAA+B3iC,mBAAW,IAAA0iC,GAAAA,EAAiD,QAAxCE,EAA+B,QAA/BC,EAAEv7F,EAAMkkE,+BAAuB,IAAAq3B,OAAA,EAA7BA,EAA+BnhC,eAAO,IAAAkhC,GAAAA,EAAWliC,IAG7InhD,EAAOzC,QAAQwlF,qBAAqBG,EACtC,KAAO,CACL3/B,EAAOR,MAAM,8BAADr6D,OAA+ByR,IAC3C,MAAM6wC,EAAYH,GAA8B7qC,EAAOzC,QAAQxC,OACzDmoF,EAAe,IAAI3iE,IAAIyqB,GAC7Bk4C,EAAanrE,OAAO5d,GACpB,MAAMgnD,EAASr0B,IACbo2D,EAAa3hC,IAAIz0B,EAAM,EAEnBk1B,EAAYl1B,IAChBo2D,EAAanrE,OAAO+U,EAAM,EAIF,IAAAy2D,EAAAC,EAAAC,EAAAC,EAF1B,GAAInvC,EACF4M,EAAOhnD,GACH6nF,GACFjhC,GAAiB/gD,EAAQmuB,EAAMh0B,EAA8C,QAA5CopF,EAA+B,QAA/BC,EAAEz7F,EAAMkkE,+BAAuB,IAAAu3B,OAAA,EAA7BA,EAA+B/iC,mBAAW,IAAA8iC,GAAAA,EAAiD,QAAxCE,EAA+B,QAA/BC,EAAE37F,EAAMkkE,+BAAuB,IAAAy3B,OAAA,EAA7BA,EAA+BvhC,eAAO,IAAAshC,GAAAA,EAAWtiC,QAEtI,GAAI6gC,EAAoB,KAAA2B,EAAAC,EAAAC,EAAAC,EAC7BhiC,GAAmB9hD,EAAQmuB,EAAMh0B,EAA8C,QAA5CwpF,EAA+B,QAA/BC,EAAE77F,EAAMkkE,+BAAuB,IAAA23B,OAAA,EAA7BA,EAA+BnjC,mBAAW,IAAAkjC,GAAAA,EAAiD,QAAxCE,EAA+B,QAA/BC,EAAE/7F,EAAMkkE,+BAAuB,IAAA63B,OAAA,EAA7BA,EAA+B3hC,eAAO,IAAA0hC,GAAAA,EAAW7hC,EAC7I,EACyBkhC,EAAajxF,KAAO,GAAKowF,IAEhDriF,EAAOzC,QAAQwlF,qBAAqB3mF,MAAM6jB,KAAKijE,GAEnD,CACF,GAAG,CAACljF,EAAQujD,EAAQy+B,EAAoB7zD,EAAmC,QAA/BuzD,EAAE35F,EAAMkkE,+BAAuB,IAAAy1B,OAAA,EAA7BA,EAA+BjhC,YAA0C,QAA/BkhC,EAAE55F,EAAMkkE,+BAAuB,IAAA01B,OAAA,EAA7BA,EAA+Bx/B,QAASkgC,IAC5H0B,EAAaj3F,EAAAA,aAAkB,SAAC4+E,GAAmD,IAA9Cn3B,IAAUt4C,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,KAAAA,UAAA,GAASgnF,EAAchnF,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,IAAAA,UAAA,GAC1EsnD,EAAOR,MAAM,sCACb,MAAMihC,EAAgBtY,EAAItgF,QAAO+O,GAAM6F,EAAOzC,QAAQi3C,gBAAgBr6C,KACtE,IAAI+oF,EACJ,GAAID,EACF,GAAI1uC,GAEF,GADA2uC,EAAec,EACXhC,EAAoB,CACtB,MAAM7gC,EAASr0B,IACbo2D,EAAanzE,KAAK+c,EAAM,EAE1Bk3D,EAAcrvF,SAAQwF,IAAM,IAAA8pF,EAAAC,EAAAC,EAAAC,EAC1BrjC,GAAiB/gD,EAAQmuB,EAAMh0B,EAA8C,QAA5C8pF,EAA+B,QAA/BC,EAAEn8F,EAAMkkE,+BAAuB,IAAAi4B,OAAA,EAA7BA,EAA+BzjC,mBAAW,IAAAwjC,GAAAA,EAAiD,QAAxCE,EAA+B,QAA/BC,EAAEr8F,EAAMkkE,+BAAuB,IAAAm4B,OAAA,EAA7BA,EAA+BjiC,eAAO,IAAAgiC,GAAAA,EAAWhjC,EAAO,GAEpJ,OAEA+hC,EAAe,OAEZ,CAEL,MAAMmB,GAAkBl1F,EAAAA,EAAAA,GAAS,CAAC,EAAGi8C,GAA0BprC,IACzDmhD,EAASr0B,IACbu3D,EAAgBv3D,GAASA,CAAK,EAE1Bk1B,EAAYl1B,WACTu3D,EAAgBv3D,EAAM,EAE/Bk3D,EAAcrvF,SAAQwF,IAGM,IAAAmqF,EAAAC,EAAAC,EAAAC,EAKAC,EAAAC,EAAAC,EAAAC,EAPtBtwC,GACF8vC,EAAgBlqF,GAAMA,EAClB6nF,GACFjhC,GAAiB/gD,EAAQmuB,EAAMh0B,EAA8C,QAA5CmqF,EAA+B,QAA/BC,EAAEx8F,EAAMkkE,+BAAuB,IAAAs4B,OAAA,EAA7BA,EAA+B9jC,mBAAW,IAAA6jC,GAAAA,EAAiD,QAAxCE,EAA+B,QAA/BC,EAAE18F,EAAMkkE,+BAAuB,IAAAw4B,OAAA,EAA7BA,EAA+BtiC,eAAO,IAAAqiC,GAAAA,EAAWrjC,KAG3Ia,EAAU7nD,GACN6nF,GACFlgC,GAAmB9hD,EAAQmuB,EAAMh0B,EAA8C,QAA5CuqF,EAA+B,QAA/BC,EAAE58F,EAAMkkE,+BAAuB,IAAA04B,OAAA,EAA7BA,EAA+BlkC,mBAAW,IAAAikC,GAAAA,EAAiD,QAAxCE,EAA+B,QAA/BC,EAAE98F,EAAMkkE,+BAAuB,IAAA44B,OAAA,EAA7BA,EAA+B1iC,eAAO,IAAAyiC,GAAAA,EAAW5iC,GAE/I,IAEFkhC,EAAel4F,OAAOoe,OAAOi7E,EAC/B,EACyBnB,EAAahnF,OAAS,GAAKmmF,IAElDriF,EAAOzC,QAAQwlF,qBAAqBG,EAExC,GAAG,CAAC3/B,EAAQy+B,EAAoBK,EAA0BriF,EAAQmuB,EAAmC,QAA/ByzD,EAAE75F,EAAMkkE,+BAAuB,IAAA21B,OAAA,EAA7BA,EAA+BnhC,YAA0C,QAA/BohC,EAAE95F,EAAMkkE,+BAAuB,IAAA41B,OAAA,EAA7BA,EAA+B1/B,UAC7I2gC,EAAiBh2F,EAAAA,aAAkB,SAAAG,GAGQ,IAHP,QACxCy1F,EAAO,MACPD,GACDx1F,EAAEsnD,IAAUt4C,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,KAAAA,UAAA,GAASgnF,EAAchnF,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,IAAAA,UAAA,GAClC,IAAK+D,EAAOzC,QAAQse,OAAO6mE,KAAa1iF,EAAOzC,QAAQse,OAAO4mE,GAC5D,OAEFl/B,EAAOR,MAAM,gCAADr6D,OAAiCg6F,EAAO,YAAAh6F,OAAW+5F,IAG/D,MAAMqC,EAAiB99C,GAAiChnC,GAClD4iF,EAAakC,EAAe/nE,QAAQ2lE,GACpCG,EAAWiC,EAAe/nE,QAAQ0lE,IACjCxlF,EAAO8nF,GAAOnC,EAAaC,EAAW,CAACA,EAAUD,GAAc,CAACA,EAAYC,GAC7EmC,EAAyBF,EAAeloF,MAAMK,EAAO8nF,EAAM,GACjE/kF,EAAOzC,QAAQwmF,WAAWiB,EAAwBzwC,EAAY0uC,EAChE,GAAG,CAACjjF,EAAQujD,IAQN0hC,EAAsB,CAC1BlB,aACAjB,kBAEF52C,GAAiBlsC,EAXU,CACzBgjF,YACAD,uBACA9wB,kBACA0wB,gBACAnuC,mBAM2C,UAC7CtI,GAAiBlsC,EAAQilF,EAAqBl9F,EAAM64D,YAActoC,GAAcywB,SAAW,UAAY,UAKvG,MAAMqD,EAAgBt/C,EAAAA,QAAa,GAC7Bo4F,EAA0Bp4F,EAAAA,aAAkB,WAA8B,IAA7Bq4F,EAAgBlpF,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,IAAAA,UAAA,GACjE,GAAImwC,EAAc7uC,QAChB,OAEF,MAAM6nF,EAAmBv6C,GAA8B7qC,EAAOzC,QAAQxC,OAChE4rC,EAAqBD,GAA+B1mC,GAGpDqkF,GAAkBl1F,EAAAA,EAAAA,GAAS,CAAC,EAAGi8C,GAA0BprC,IAC/D,IAAIuoE,GAAa,EA4BjB,GA3BA6c,EAAiBzwF,SAAQwF,IAAM,IAAAkrF,EAC7B,IAA+B,IAA3B1+C,EAAmBxsC,GAAc,CACnC,GAAIpS,EAAMuoF,4BACR,OAIF,cAFO+T,EAAgBlqF,QACvBouE,GAAa,EAEf,CACA,GAAkC,QAA9B8c,EAACt9F,EAAMkkE,+BAAuB,IAAAo5B,IAA7BA,EAA+BljC,QAClC,OAEF,MAAMhwB,EAAOhE,EAAKh0B,GAClB,GAAkB,UAAdg4B,EAAKn9B,KAAkB,CAEzB,GADwBm9B,EAAKJ,gBAI3B,cAFOsyD,EAAgBlqF,QACvBouE,GAAa,GAIVp2C,EAAKvkC,SAASyP,OAAMwkD,IAA2C,IAAhClb,EAAmBkb,cAC9CwiC,EAAgBlqF,GACvBouE,GAAa,EAEjB,KAEEA,GAAc+Z,IAAiB6C,EAAkB,CACnD,MAAMjC,EAAel4F,OAAOoe,OAAOi7E,GAC/B/B,EACFtiF,EAAOzC,QAAQwmF,WAAWb,GAAc,GAAM,GAE9CljF,EAAOzC,QAAQwlF,qBAAqBG,EAExC,CACF,GAAG,CAACljF,EAAQsiF,EAA2C,QAA/BR,EAAE/5F,EAAMkkE,+BAAuB,IAAA61B,OAAA,EAA7BA,EAA+B3/B,QAASp6D,EAAMuoF,4BAA6BniD,IAC/Fm3D,EAA2Bx4F,EAAAA,aAAkB,CAACqN,EAAIiB,KACtD,MAAMmqF,EAAanqF,EAAM40D,SAAW50D,EAAM20D,QAOpCy1B,GAA+B3kC,IAAsB0kC,InC7RhCnqF,MAAWA,EAAM/P,ImC6R8BusC,CAAgBx8B,GACpF6nF,GAAkBZ,GAA4BmD,EAC9CjxC,EAAav0C,EAAOzC,QAAQolF,cAAcxoF,GAC5C8oF,EACFjjF,EAAOzC,QAAQylF,UAAU7oF,IAAKqrF,IAA+BjxC,GAAmB,GAEhFv0C,EAAOzC,QAAQylF,UAAU7oF,GAAKo6C,GAAY,EAC5C,GACC,CAACv0C,EAAQqiF,EAA0BxhC,IAChC4kC,EAAiB34F,EAAAA,aAAkB,CAACosB,EAAQ9d,KAAU,IAAAsqF,EAC1D,GAAI1V,EACF,OAEF,MAAMl8D,EAAoD,QAA/C4xE,EAAGtqF,EAAMI,OAAO2gE,QAAQ,IAADzzE,OAAKmW,EAAYgD,cAAO,IAAA6jF,OAAA,EAA5CA,EAA8CvrB,aAAa,cACzE,GAAIrmD,IAAUw5C,GAAgCx5C,OAI1CA,IAAUkoD,GAAd,CAIA,GAAIloD,EAAO,CACT,MAAMI,EAASlU,EAAOzC,QAAQme,UAAU5H,GACxC,IAAU,OAANI,QAAM,IAANA,OAAM,EAANA,EAAQlf,QAASyoC,GACnB,MAEJ,CAEqB,cADLz9B,EAAOzC,QAAQs2B,WAAW3a,EAAO/e,IACrCnF,OAGRoG,EAAMi1D,UAAYgyB,EACpBE,EAA6BrpE,EAAO/e,IAEpCmrF,EAAyBpsE,EAAO/e,GAAIiB,GAdtC,CAeA,GACC,CAAC40E,EAA4BqS,EAA0BriF,EAAQuiF,EAA8B+C,IAC1FK,EAA0B74F,EAAAA,aAAkB,CAACosB,EAAQ9d,KACT,IAAAw2D,EAA5CywB,GAA4BjnF,EAAMi1D,WACf,QAArBuB,EAAAn0D,OAAOuzD,sBAAc,IAAAY,GAArBA,EAAuBX,kBACzB,GACC,CAACoxB,IACEuD,EAAmC94F,EAAAA,aAAkB,CAACosB,EAAQ9d,KAC9DinF,GAA4BjnF,EAAMC,YAAYg1D,SAChDkyB,EAA6BrpE,EAAO/e,IAEpC6F,EAAOzC,QAAQylF,UAAU9pE,EAAO/e,GAAI+e,EAAO/mB,OAAQkwF,EACrD,GACC,CAACriF,EAAQuiF,EAA8BF,IACpCwD,EAAsC/4F,EAAAA,aAAkBosB,IAC5D,MAAM4sE,EAAmB/9F,EAAMkhD,YAAclhD,EAAMklE,8BAAyD,WAAzBllE,EAAMwiD,eAA8BF,GAA6CrqC,GAAUgnC,GAAiChnC,GAC/MA,EAAOzC,QAAQwmF,WAAW+B,EAAkB5sE,EAAO/mB,MAAM,GACxD,CAAC6N,EAAQjY,EAAMklE,6BAA8BllE,EAAMkhD,WAAYlhD,EAAMwiD,iBAClEw2B,EAAoBj0E,EAAAA,aAAkB,CAACosB,EAAQ9d,KAEnD,GAAI4E,EAAOzC,QAAQ4nE,YAAYjsD,EAAO/e,GAAI+e,EAAOpF,SAAW0iB,GAAcwqC,OAMtEzE,GAAsBnhE,GAA1B,CAGA,GAAI60D,GAAgB70D,EAAM/P,MAAQ+P,EAAMi1D,SAAU,CAEhD,MAAM01B,EAAY/gD,GAAsBhlC,GACxC,GAAI+lF,GAAaA,EAAU5rF,KAAO+e,EAAO/e,GAAI,CAC3CiB,EAAM2hC,iBACN,MAAMipD,EAAoBhmF,EAAOzC,QAAQolF,cAAcoD,EAAU5rF,IACjE,IAAKkoF,EAEH,YADAriF,EAAOzC,QAAQylF,UAAU+C,EAAU5rF,IAAK6rF,GAAmB,GAG7D,MAAMC,EAAcjmF,EAAOzC,QAAQ2oF,iCAAiCH,EAAU5rF,IACxEgsF,EAAmBnmF,EAAOzC,QAAQ2oF,iCAAiChtE,EAAO/e,IAChF,IAAI8C,EACA8nF,EACAkB,EAAcE,EACZH,GAEF/oF,EAAQkpF,EACRpB,EAAMkB,EAAc,IAGpBhpF,EAAQkpF,EACRpB,EAAMkB,GAIJD,GAEF/oF,EAAQgpF,EAAc,EACtBlB,EAAMoB,IAGNlpF,EAAQgpF,EACRlB,EAAMoB,GAGV,MAAMnB,EAAyB5sC,EAAY7qB,KAAK3wB,MAAMK,EAAO8nF,EAAM,GAAGr5F,KAAIoX,GAAOA,EAAI3I,KAErF,YADA6F,EAAOzC,QAAQwmF,WAAWiB,GAAyBgB,EAErD,CACF,CACA,GAAkB,MAAd5qF,EAAM/P,KAAe+P,EAAMi1D,SAG7B,OAFAj1D,EAAM2hC,sBACNuoD,EAAyBpsE,EAAO/e,GAAIiB,GAGK,MAAvC4jB,OAAOmxC,aAAa/0D,EAAMg1D,WAAqBh1D,EAAM20D,SAAW30D,EAAM40D,WACxE50D,EAAM2hC,iBACNgnD,EAAW/jF,EAAOzC,QAAQ6oF,gBAAgB,GAjD5C,CAkDA,GACC,CAACpmF,EAAQslF,EAA0BvB,EAAY3rC,EAAY7qB,KAAM80D,IACpE5pE,GAAuBzY,EAAQ,gBAAiB+hF,GAA2B,IAAMmD,GAAwB,MACzGzsE,GAAuBzY,EAAQ,kBAAmB+hF,EAA2BmD,IAC7EzsE,GAAuBzY,EAAQ,WAAY+hF,EAA2B0D,IACtEhtE,GAAuBzY,EAAQ,6BAA8B+hF,EAA2B6D,IACxFntE,GAAuBzY,EAAQ,gCAAiC6lF,GAChEptE,GAAuBzY,EAAQ,gBAAiB+hF,EAA2B4D,IAC3EltE,GAAuBzY,EAAQ,cAAe+hF,EAA2BhhB,IAKzEj0E,EAAAA,WAAgB,UACgBoC,IAA1B+yF,GACFjiF,EAAOzC,QAAQwlF,qBAAqBd,EACtC,GACC,CAACjiF,EAAQiiF,EAAuBl6F,EAAM+iD,eACzCh+C,EAAAA,WAAgB,KACT/E,EAAM+iD,cACT9qC,EAAOzC,QAAQwlF,qBAAqB,GACtC,GACC,CAAC/iF,EAAQjY,EAAM+iD,eAClB,MAAMu7C,EAA6C,MAAzBpE,EAC1Bn1F,EAAAA,WAAgB,KACd,GAAIu5F,IAAsBt+F,EAAM+iD,aAC9B,OAIF,MAAMs6C,EAAmBv6C,GAA8B7qC,EAAOzC,QAAQxC,OACtE,GAAIy5C,EAAiB,CACnB,MAAM0uC,EAAekC,EAAiBh6F,QAAO+O,GAAMq6C,EAAgBr6C,KAC/D+oF,EAAahnF,OAASkpF,EAAiBlpF,QACzC8D,EAAOzC,QAAQwlF,qBAAqBG,EAExC,IACC,CAACljF,EAAQw0C,EAAiB6xC,EAAmBt+F,EAAM+iD,eACtDh+C,EAAAA,WAAgB,KACd,IAAK/E,EAAM+iD,cAAgBu7C,EACzB,OAEF,MAAMjB,EAAmBv6C,GAA8B7qC,EAAOzC,QAAQxC,QACjEsnF,GAA4B+C,EAAiBlpF,OAAS,GAEzD8D,EAAOzC,QAAQwlF,qBAAqB,GACtC,GACC,CAAC/iF,EAAQqiF,EAA0BxhC,EAAmBwlC,EAAmBt+F,EAAM+iD,eAClFh+C,EAAAA,WAAgB,KACdi1F,EAA2BmD,EAAwB,GAClD,CAACA,EAAyBnD,IAC7Bj1F,EAAAA,WAAgB,KACVs/C,EAAc7uC,UAChB6uC,EAAc7uC,SAAU,EAC1B,GACC,GAAG,EoB1ZNgkF,CAAoBvhF,EAAQjY,GjD9BvB,SAAwBiY,EAAQjY,GAAO,IAAAu+F,EAAAC,EAC5C,MAAMhjC,EAASsH,GAAc7qD,EAAQ,kBAC/BwmF,EAAsB15F,EAAAA,OAAa/E,EAAMurB,SAC/CtT,EAAOzC,QAAQ4pD,qBAAqB,CAClCE,QAAS,iBACTQ,UAAW9/D,EAAMisB,sBACjB+zC,aAAchgE,EAAM0+F,8BACpB/+B,cAAe3zC,GACfi0C,YAAa,gCAEf,MAAM0+B,EAAsB55F,EAAAA,aAAkB0mB,IAAgB,IAAAw/D,EAAAzxC,EAC5DgiB,EAAOR,MAAM,2BACb/iD,EAAOzC,QAAQgD,SAAS0yD,GAAkBz/C,IAC1CxT,EAAOzC,QAAQ26B,aAAa,gBAAiB1kB,EAAaC,eACxB,QAAlCu/D,GAAAzxC,EAAAvhC,EAAOzC,SAAQ+yC,2BAAmB,IAAA0iC,GAAlCA,EAAAzkE,KAAAgzB,GACAvhC,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAAC5E,EAAQvjD,IAKN0b,EAAY5uB,EAAAA,aAAkBgnB,GAASJ,GAAyB1T,GAAQ8T,IAAQ,CAAC9T,IACjF2tE,EAAgB7gF,EAAAA,aAAkB,IAAM8mB,GAA8B5T,IAAS,CAACA,IAChFi/D,EAAoBnyE,EAAAA,aAAkB,IAAMmnB,GAAqCjU,IAAS,CAACA,IAC3F8/D,EAAiBhzE,EAAAA,aAAkB,SAACgnB,GAExC,OAFgE7X,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,KAAAA,UAAA,GACmB2X,GAA8B5T,GAA7EiU,GAAqCjU,IAC1D+L,WAAU6J,GAAOA,EAAI9B,QAAUA,GAChD,GAAG,CAAC9T,IACE2mF,EAAoB75F,EAAAA,aAAkBgnB,IAC1C,MAAM7C,EAAQ6uD,EAAehsD,GAC7B,OAAOuB,GAA4BrV,GAAQiR,EAAM,GAChD,CAACjR,EAAQ8/D,IACNzI,EAA2BvqE,EAAAA,aAAkB0nB,IAErB,IAAAoyE,EAAAC,EADP9yE,GAAkC/T,KAClCwU,IACnBxU,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDuY,QAAS8tB,GAAmB,CAC1BphC,SACAwhC,gBAAiB,GACjBC,kBAAcvyC,EACd8kB,sBAAuBQ,EACvBktB,yBAAyB,QAGK,QAAlCklD,GAAAC,EAAA7mF,EAAOzC,SAAQ+yC,2BAAmB,IAAAs2C,GAAlCA,EAAAr4E,KAAAs4E,GACA7mF,EAAOzC,QAAQ4qD,cACjB,GACC,CAACnoD,IACE++E,EAAgBjyF,EAAAA,aAAkBwmB,IACtC,MAAME,EAAe4tB,GAAmB,CACtCphC,SACAwhC,gBAAiBluB,EACjBmuB,kBAAcvyC,EACdwyC,yBAAyB,IAE3BglD,EAAoBlzE,EAAa,GAChC,CAACxT,EAAQ0mF,IACNI,EAAsBh6F,EAAAA,aAAkB,CAACgnB,EAAOizE,KAAc,IAAAC,EAClE,MAAMhzE,EAAwBD,GAAkC/T,GAEhE,GAAI+mF,KADmD,QAA/BC,EAAGhzE,EAAsBF,UAAM,IAAAkzE,GAAAA,GACjB,CACpC,MAAMjgB,GAAW53E,EAAAA,EAAAA,GAAS,CAAC,EAAG6kB,EAAuB,CACnD,CAACF,GAAQizE,IAEX/mF,EAAOzC,QAAQ85D,yBAAyB0P,EAC1C,IACC,CAAC/mE,IACEinF,EAAyCn6F,EAAAA,aAAkBgnB,GAC5CP,GAAyBvT,GAC1B+L,WAAU6J,GAAOA,IAAQ9B,KAC1C,CAAC9T,IACEknF,EAAiBp6F,EAAAA,aAAkB,CAACgnB,EAAOqzE,KAC/C,MAAM5zB,EAAahgD,GAAyBvT,GACtConF,EAAmBH,EAAuCnzE,GAChE,GAAIszE,IAAqBD,EACvB,OAEF5jC,EAAOR,MAAM,iBAADr6D,OAAkBorB,EAAK,cAAAprB,OAAay+F,IAChD,MAAME,EAAiB,IAAI9zB,GACrB+zB,EAAeD,EAAer7E,OAAOo7E,EAAkB,GAAG,GAChEC,EAAer7E,OAAOm7E,EAAqB,EAAGG,GAC9CZ,GAAoBv3F,EAAAA,EAAAA,GAAS,CAAC,EAAGkkB,GAAyBrT,EAAOzC,QAAQxC,OAAQ,CAC/E0Y,cAAe4zE,KAEjB,MAAMnuE,EAAS,CACbhF,OAAQlU,EAAOzC,QAAQme,UAAU5H,GACjCyzE,YAAavnF,EAAOzC,QAAQ0pF,uCAAuCnzE,GACnE0zE,SAAUJ,GAEZpnF,EAAOzC,QAAQ26B,aAAa,oBAAqBhf,EAAO,GACvD,CAAClZ,EAAQujD,EAAQmjC,EAAqBO,IACnC7K,EAAiBtvF,EAAAA,aAAkB,CAACgnB,EAAOnhB,KAC/C4wD,EAAOR,MAAM,mBAADr6D,OAAoBorB,EAAK,cAAAprB,OAAaiK,IAClD,MAAM6gB,EAAeH,GAAyBrT,EAAOzC,QAAQxC,OACvDmZ,EAASV,EAAaG,OAAOG,GAC7BiuB,GAAY5yC,EAAAA,EAAAA,GAAS,CAAC,EAAG+kB,EAAQ,CACrCvhB,QACAsvC,gBAAgB,IAElBykD,EAAoB/mD,IAAoBxwC,EAAAA,EAAAA,GAAS,CAAC,EAAGqkB,EAAc,CACjEG,QAAQxkB,EAAAA,EAAAA,GAAS,CAAC,EAAGqkB,EAAaG,OAAQ,CACxC,CAACG,GAAQiuB,MAET/hC,EAAOzC,QAAQmlC,sBACnB1iC,EAAOzC,QAAQ26B,aAAa,oBAAqB,CAC/CwzB,QAAS1rD,EAAOzC,QAAQ4vD,uBAAuBr5C,GAC/CkH,OAAQ+mB,EACRpvC,SACA,GACD,CAACqN,EAAQujD,EAAQmjC,IAade,EAAmB,CACvBP,kBAEFh7C,GAAiBlsC,EAfC,CAChB0b,YACAiyD,gBACA7N,iBACA6mB,oBACA1nB,oBACAgoB,yCACAlI,gBACA1nB,2BACAyvB,sBACA1K,kBAKkC,UACpClwC,GAAiBlsC,EAAQynF,EAAkB1/F,EAAM64D,YAActoC,GAAcywB,SAAW,UAAY,UAKpG,MAAMg5B,EAA2Bj1E,EAAAA,aAAkB,CAACk1E,EAAW5Y,KAAY,IAAAs+B,EAAAlmB,EACzE,MAAMmmB,EAAuB,CAAC,EACxBC,EAAgC7zE,GAAkC/T,KAGvEopD,EAAQ8Y,uBAEsB,MAA/Bn6E,EAAMisB,uBAGNhpB,OAAOC,KAAuD,QAAnDy8F,EAAmB,QAAnBlmB,EAACz5E,EAAM05C,oBAAY,IAAA+/B,GAAS,QAATA,EAAlBA,EAAoBluD,eAAO,IAAAkuD,OAAA,EAA3BA,EAA6BxtD,6BAAqB,IAAA0zE,EAAAA,EAAI,CAAC,GAAGxrF,OAAS,GAE/ElR,OAAOC,KAAK28F,GAA+B1rF,OAAS,KAElDyrF,EAAqB3zE,sBAAwB4zE,GAE/CD,EAAqBl0E,cAAgBF,GAAyBvT,GAC9D,MAAMsT,EAAUM,GAA8B5T,GACxCgB,EAAa,CAAC,EAiBpB,OAhBAsS,EAAQ3e,SAAQqmB,IACd,GAAIA,EAAOinB,eAAgB,CACzB,MAAM4lD,EAAmB,CAAC,EAC1BzoD,GAA6BzqC,SAAQmzF,IACnC,IAAIC,EAAgB/sE,EAAO8sE,GACvBC,IAAkBv/D,MACpBu/D,GAAiB,GAEnBF,EAAiBC,GAAgBC,CAAa,IAEhD/mF,EAAWga,EAAOlH,OAAS+zE,CAC7B,KAEE78F,OAAOC,KAAK+V,GAAY9E,OAAS,IACnCyrF,EAAqB3mF,WAAaA,IAE7B7R,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAW,CAC7B1uD,QAASq0E,GACT,GACD,CAAC3nF,EAAQjY,EAAMisB,sBAAyC,QAApBsyE,EAAEv+F,EAAM05C,oBAAY,IAAA6kD,OAAA,EAAlBA,EAAoBhzE,UACvD6uD,EAA4Br1E,EAAAA,aAAkB,CAACosB,EAAQkwC,KAAY,IAAAgZ,EACvE,MAAM4lB,EAA8D,QAAjC5lB,EAAGhZ,EAAQkZ,eAAehvD,eAAO,IAAA8uD,OAAA,EAA9BA,EAAgCpuD,sBAChEytB,EAAe2nB,EAAQkZ,eAAehvD,QAC5C,GAAqC,MAAjC00E,GAAyD,MAAhBvmD,EAC3C,OAAOvoB,EAET,MAAM1F,EAAe4tB,GAAmB,CACtCphC,SACAwhC,gBAAiB,GACjBC,eACAztB,sBAAuBg0E,EACvBtmD,yBAAyB,IAM3B,OAJA1hC,EAAOzC,QAAQgD,SAAS0yD,GAAkBz/C,IACtB,MAAhBiuB,GACFzhC,EAAOzC,QAAQ26B,aAAa,gBAAiB1kB,EAAaC,eAErDyF,CAAM,GACZ,CAAClZ,IACEioF,EAA+Bn7F,EAAAA,aAAkB,CAAC8oE,EAAczjE,KACpE,GAAIA,IAAUkkB,GAA0B/C,QAAS,KAAA40E,EAC/C,MAAMC,EAAepgG,EAAMqG,MAAMg6F,aACjC,OAAoB73F,EAAAA,GAAAA,KAAK43F,GAAch5F,EAAAA,EAAAA,GAAS,CAAC,EAAkB,QAAjB+4F,EAAEngG,EAAMsG,iBAAS,IAAA65F,OAAA,EAAfA,EAAiBE,cACvE,CACA,OAAOxyB,CAAY,GAClB,CAAC7tE,EAAMqG,MAAMg6F,aAA6B,QAAjB7B,EAAEx+F,EAAMsG,iBAAS,IAAAk4F,OAAA,EAAfA,EAAiB6B,eACzCC,EAAqBv7F,EAAAA,aAAkBw7F,GACvCvgG,EAAM8nF,sBACDyY,EAEF,IAAIA,EAAiB,0BAC3B,CAACvgG,EAAM8nF,wBACVpd,GAA6BzyD,EAAQ,aAAcqoF,GACnD51B,GAA6BzyD,EAAQ,cAAe+hE,GACpDtP,GAA6BzyD,EAAQ,eAAgBmiE,GACrD1P,GAA6BzyD,EAAQ,kBAAmBioF,GAMxD,MAAMM,EAAiBz7F,EAAAA,OAAa,MAOpC2rB,GAAuBzY,EAAQ,2BANF2jC,IACvB4kD,EAAehrF,UAAYomC,EAAkBhxC,QAC/C41F,EAAehrF,QAAUomC,EAAkBhxC,MAC3C+zF,EAAoB/mD,GAAoBtsB,GAAyBrT,EAAOzC,QAAQxC,OAAQiF,EAAOzC,QAAQmlC,sBACzG,IAOF,MAAM8lD,EAAiB17F,EAAAA,aAAkB,KACvCy2D,EAAOztD,KAAK,kEACZ,MAAM0d,EAAe4tB,GAAmB,CACtCphC,SACAwhC,gBAAiB,GACjBC,kBAAcvyC,EACdwyC,yBAAyB,IAE3BglD,EAAoBlzE,EAAa,GAChC,CAACxT,EAAQujD,EAAQmjC,IACpB/zB,GAA2B3yD,EAAQ,iBAAkBwoF,GAOrD,MAAMp8C,EAAgBt/C,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACd,GAAIs/C,EAAc7uC,QAEhB,YADA6uC,EAAc7uC,SAAU,GAI1B,GADAgmD,EAAOztD,KAAK,wCAADpN,OAAyCX,EAAMurB,QAAQpX,SAC9DsqF,EAAoBjpF,UAAYxV,EAAMurB,QACxC,OAEF,MAAME,EAAe4tB,GAAmB,CACtCphC,SACAyhC,kBAAcvyC,EAEdsyC,gBAAiBz5C,EAAMurB,QACvBouB,yBAAyB,IAE3B8kD,EAAoBjpF,QAAUxV,EAAMurB,QACpCozE,EAAoBlzE,EAAa,GAChC,CAAC+vC,EAAQvjD,EAAQ0mF,EAAqB3+F,EAAMurB,UAC/CxmB,EAAAA,WAAgB,UACsBoC,IAAhCnH,EAAMisB,uBACRhU,EAAOzC,QAAQ85D,yBAAyBtvE,EAAMisB,sBAChD,GACC,CAAChU,EAAQujD,EAAQx7D,EAAMisB,uBAC5B,CiD1OEy0E,CAAezoF,EAAQjY,GvBhCE2gG,EAAC1oF,EAAQjY,KASlC,MAAMw7D,EAASsH,GAAc7qD,EAAQ,eAC/BguC,EAAcxD,GAAmBxqC,EAAQjY,GACzC4gG,EAAe77F,EAAAA,OAAas9B,KAAKw+D,OACjCC,EAAe/7F,EAAAA,OAAa/E,EAAMqoC,UAClC5Y,EAAU0C,KACV2B,EAAS/uB,EAAAA,aAAkBqN,IAC/B,MAAMqa,EAAQsZ,GAAuB9tB,GAAQ7F,GAC7C,GAAIqa,EACF,OAAOA,EAET,MAAM2d,EAAOnyB,EAAOzC,QAAQs2B,WAAW15B,GACvC,OAAIg4B,GAAQN,GAAuBM,GAC1B,CACL,CAACrC,IAAwB31B,GAGtB,IAAI,GACV,CAAC6F,IACE8oF,EAAe/gG,EAAMklC,SACrBA,EAAWngC,EAAAA,aAAkBgW,GAC7BgtB,MAAyBhtB,EACpBA,EAAIgtB,IAETg5D,EACKA,EAAahmF,GAEfA,EAAI3I,IACV,CAAC2uF,IACEn1E,EAAS7mB,EAAAA,SAAc,IAAMkhD,EAAYzgB,KAAKxc,QAAO,CAACgF,EAAG9oB,EAE5DgkB,KAAU,IAFoD,GAC/D9W,GACDlN,EAEC,OADA8oB,EAAI5b,GAAM8W,EACH8E,CAAG,GACT,CAAC,IAAI,CAACi4B,EAAYzgB,OACfw7D,EAAsBj8F,EAAAA,aAAkBK,IAGxC,IAHyC,MAC7Cme,EAAK,SACL+mE,GACDllF,EACC,MAAM67F,EAAMA,KACVL,EAAaprF,QAAU6sB,KAAKw+D,MAC5B5oF,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDwyB,KAAMsD,GAAsB,CAC1B7wB,SACA0wB,aAAc3oC,EAAMqoC,SACpBU,YAAa/oC,EAAM4lC,QACnBoD,aAAc7C,GAAoBluB,GAClCgxB,mBAAoBxC,GAA0BxuB,GAC9CixB,sBAAuB7C,GAA6BpuB,SAGxDA,EAAOzC,QAAQ26B,aAAa,WAC5Bl4B,EAAOzC,QAAQ4qD,aAAa,EAI9B,GAFA3wC,EAAQ7L,QACR3L,EAAOzC,QAAQ2zB,OAAO3D,KAAOjiB,GACxB+mE,EAEH,YADA2W,IAGF,MAAMC,EAA0BlhG,EAAM8oF,gBAAkBzmD,KAAKw+D,MAAQD,EAAaprF,SAC9E0rF,EAA0B,EAC5BzxE,EAAQva,MAAMgsF,EAAyBD,GAGzCA,GAAK,GACJ,CAACjhG,EAAM8oF,eAAgB9oF,EAAMqoC,SAAUroC,EAAM4lC,QAAS3tB,EAAQwX,IAK3DggD,EAAU1qE,EAAAA,aAAkBygC,IAChCg2B,EAAOR,MAAM,iCAADr6D,OAAkC6kC,EAAKrxB,SACnD,MAAMoP,EAAQ6kB,GAAwB,CACpC5C,OACAN,SAAUllC,EAAMklC,SAChBU,QAAS5lC,EAAM4lC,QACfyC,SAAUroC,EAAMqoC,WAEZ84D,EAAYlpF,EAAOzC,QAAQ2zB,OAAO3D,KACxCjiB,EAAMglB,yBAA2B44D,EAAU54D,yBAC3Cy4D,EAAoB,CAClBz9E,QACA+mE,UAAU,GACV,GACD,CAAC9uB,EAAQx7D,EAAMklC,SAAUllC,EAAM4lC,QAAS5lC,EAAMqoC,SAAU24D,EAAqB/oF,IAC1EioE,EAAan7E,EAAAA,aAAkBujC,IACnC,GAAItoC,EAAM64D,YAActoC,GAAcywB,UAAY1Y,EAAQn0B,OAAS,EACjE,MAAM,IAAIN,MAAM,CAAC,gGAAiG,2FAA2FkF,KAAK,OAEpN,MAAM8yB,EAAuBD,GAAmB3zB,EAAQqwB,EAAStoC,EAAMklC,UACjE3hB,EAAQknB,GAAuB,CACnCnC,QAASuD,EACT3G,SAAUllC,EAAMklC,SAChB2F,cAAe5yB,EAAOzC,QAAQ2zB,OAAO3D,OAEvCw7D,EAAoB,CAClBz9E,QACA+mE,UAAU,GACV,GACD,CAACtqF,EAAM64D,UAAW74D,EAAMklC,SAAU87D,EAAqB/oF,IACpDmpF,EAAmBr8F,EAAAA,aAAkB,CAACujC,EAASwC,KACnD,MAAMe,EAAuBD,GAAmB3zB,EAAQqwB,EAAStoC,EAAMklC,UACjE3hB,EAAQknB,GAAuB,CACnCnC,QAASuD,EACT3G,SAAUllC,EAAMklC,SAChB2F,cAAe5yB,EAAOzC,QAAQ2zB,OAAO3D,KACrCsF,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAa,KAE1Bk2D,EAAoB,CAClBz9E,QACA+mE,UAAU,GACV,GACD,CAACtqF,EAAMklC,SAAU87D,EAAqB/oF,IACnCopF,EAAat8F,EAAAA,aAAkB6gC,IAC/BA,IAAY5lC,EAAM4lC,UAGtB41B,EAAOR,MAAM,sBAADr6D,OAAuBilC,IACnC3tB,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDwyB,MAAMp+B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAM,CAC7BI,gBAGJ3tB,EAAOzC,QAAQ2zB,OAAO3D,KAAKgD,gCAAkC5C,EAAO,GACnE,CAAC5lC,EAAM4lC,QAAS3tB,EAAQujD,IACrB8lC,EAAev8F,EAAAA,aAAkB,KACrC,MAAMw8F,EAAWx6D,GAAuB9uB,GAClCgmC,EAAelY,GAAuB9tB,GAC5C,OAAO,IAAIgO,IAAIs7E,EAAS59F,KAAIyO,IAAE,IAAAovF,EAAA,MAAI,CAACpvF,EAAoB,QAAlBovF,EAAEvjD,EAAa7rC,UAAG,IAAAovF,EAAAA,EAAI,CAAC,EAAE,IAAE,GAC/D,CAACvpF,IACEwpF,EAAe18F,EAAAA,aAAkB,IAAM0gC,GAAqBxtB,IAAS,CAACA,IACtEomF,EAAet5F,EAAAA,aAAkB,IAAMgiC,GAAuB9uB,IAAS,CAACA,IACxEkmF,EAAmCp5F,EAAAA,aAAkBqN,GAAMwZ,EAAOxZ,IAAK,CAACwZ,IACxE81E,EAA0B38F,EAAAA,aAAkB,CAACqN,EAAIuvF,KACrD,MAAMC,EAAc3pF,EAAOzC,QAAQs2B,WAAW15B,GAC9C,IAAKwvF,EACH,MAAM,IAAI/tF,MAAM,0BAADlT,OAA2ByR,EAAE,YAE9C,GAAyB,UAArBwvF,EAAY30F,KACd,MAAM,IAAI4G,MAAM,yDAElB,MAAMguF,GAAUz6F,EAAAA,EAAAA,GAAS,CAAC,EAAGw6F,EAAa,CACxC3c,iBAAkB0c,IAEpB1pF,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBwyB,MAAMp+B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAM,CAC7BY,MAAMh/B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAKY,KAAM,CAClC,CAACh0B,GAAKyvF,UAKd5pF,EAAOzC,QAAQ4qD,cACfnoD,EAAOzC,QAAQ26B,aAAa,qBAAsB0xD,EAAQ,GACzD,CAAC5pF,IACE6zB,EAAa/mC,EAAAA,aAAkBqN,IAAE,IAAA0vF,EAAA,OAAmC,QAAnCA,EAAI37D,GAAoBluB,GAAQ7F,UAAG,IAAA0vF,EAAAA,EAAI,IAAI,GAAE,CAAC7pF,IAC/E8pF,EAAsBh9F,EAAAA,aAAkB5D,IAKxC,IALyC,sBAC7CgpC,GAAwB,EAAI,QAC5BouB,EAAO,aACPypC,EAAY,eACZC,GACD9gG,EACC,MAAMilC,EAAOD,GAAoBluB,GACjC,IAAIpS,EACJ,GAAIm8F,EAAc,CAChB,MAAMvpC,EAAYryB,EAAKmyB,GACvB,IAAKE,EACH,MAAO,GAET,MAAMD,EAAe5a,GAAyB3lC,GAC9CpS,EAAW,GAEX,IAAK,IAAIqjB,EADUsvC,EAAax0C,WAAU5R,GAAMA,IAAOmmD,IAAW,EACrCrvC,EAAQsvC,EAAarkD,QAAUiyB,EAAKoyB,EAAatvC,IAAQ2d,MAAQ4xB,EAAU5xB,MAAO3d,GAAS,EAAG,CACzH,MAAM9W,EAAKomD,EAAatvC,GACnBihB,GAA0BL,GAAuB1D,EAAKh0B,KACzDvM,EAASmiB,KAAK5V,EAElB,CACF,MACEvM,EAAWokC,GAAuB7D,EAAMmyB,EAASpuB,GAEnD,GAAI83D,EAAgB,CAClB,MAAMrjD,EAAqBD,GAA+B1mC,GAC1DpS,EAAWA,EAASxC,QAAOy2D,IAA2C,IAAhClb,EAAmBkb,IAC3D,CACA,OAAOj0D,CAAQ,GACd,CAACoS,IACEiqF,EAAcn9F,EAAAA,aAAkB,CAACggC,EAAOy6D,KAC5C,MAAMp1D,EAAOnyB,EAAOzC,QAAQs2B,WAAW/G,GACvC,IAAKqF,EACH,MAAM,IAAIv2B,MAAM,0BAADlT,OAA2BokC,EAAK,YAEjD,GAAIqF,EAAKyvB,SAAW/xB,GAClB,MAAM,IAAIj0B,MAAM,4EAElB,GAAkB,SAAdu2B,EAAKn9B,KACP,MAAM,IAAI4G,MAAM,mFAElBoE,EAAOzC,QAAQgD,UAASxF,IACtB,MAAM2tD,EAAQx6B,GAAoBnzB,EAAOiF,EAAOzC,QAAQkU,YAAYoe,IAC9Dq6D,EAAUxhC,EAAM96D,SAChB45F,EAAW0C,EAAQn+E,WAAUjJ,GAAOA,IAAQgqB,IAClD,IAAkB,IAAd06D,GAAmBA,IAAaD,EAClC,OAAOxsF,EAETwoD,EAAOR,MAAM,cAADr6D,OAAeokC,EAAK,cAAApkC,OAAa6+F,IAC7C,MAAM4C,EAAc,IAAID,GAExB,OADAC,EAAYn+E,OAAOu7E,EAAa,EAAG4C,EAAYn+E,OAAOw7E,EAAU,GAAG,KAC5Dr4F,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBwyB,MAAMp+B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAM,CAC7BY,MAAMh/B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAKY,KAAM,CAClC,CAAC0B,KAAqB1gC,EAAAA,EAAAA,GAAS,CAAC,EAAGu5D,EAAO,CACxC96D,SAAUu8F,SAIhB,IAEJnqF,EAAOzC,QAAQ26B,aAAa,UAAU,GACrC,CAACl4B,EAAQujD,IAyDN6mC,EAAS,CACbvuE,SACAutE,aACAn8D,WACAo8D,eACAG,eACApD,eACA5uB,UACAyQ,aACAp0C,aACAqyD,mCACAmE,qBAnEkBv9F,EAAAA,aAAkB,CAAC2mD,EAAkB8jB,KACvD,GAAIxvE,EAAM64D,YAActoC,GAAcywB,UAAYwuB,EAAQr7D,OAAS,EACjE,MAAM,IAAIN,MAAM,CAAC,8FAA+F,2FAA2FkF,KAAK,OAElN,GAAuB,IAAnBy2D,EAAQr7D,OACV,OAGF,GADkBwyB,GAAgC1uB,GAClC,EACd,MAAM,IAAIpE,MAAM,2FAElB,MAAMuyB,GAAOh/B,EAAAA,EAAAA,GAAS,CAAC,EAAG++B,GAAoBluB,IACxC+tB,GAAyB5+B,EAAAA,EAAAA,GAAS,CAAC,EAAG2+B,GAAuB9tB,IAC7DiuB,GAAsB9+B,EAAAA,EAAAA,GAAS,CAAC,EAAG6+B,GAAoChuB,IACvEqtE,EAAYl/C,EAAK0B,IACjBy9C,EAAoB,IAAID,EAAUz/E,UAClC08F,EAAU,IAAI/pE,IACpB,IAAK,IAAIrjB,EAAI,EAAGA,EAAIq6D,EAAQr7D,OAAQgB,GAAK,EAAG,CAC1C,MAAM8yB,EAAWunC,EAAQr6D,GACnB4vB,EAAQiD,GAAqBC,EAAUjoC,EAAMklC,SAAU,8DACtDs9D,GAAgBjd,EAAkBthE,OAAOynC,EAAmBv2C,EAAG,EAAG4vB,GACpEw9D,EAAQjqE,IAAIkqE,YACRx8D,EAAuBw8D,UACvBt8D,EAAoBs8D,UACpBp8D,EAAKo8D,IAEd,MAAMC,EAAoB,CACxBrwF,GAAI2yB,EACJ8B,MAAO,EACPgzB,OAAQ/xB,GACR76B,KAAM,OACN83E,YAAa,MAEf/+C,EAAuBjB,GAASkD,EAChC/B,EAAoBnB,GAASA,EAC7BqB,EAAKrB,GAAS09D,EACdF,EAAQ/oC,IAAIz0B,EACd,CACAqB,EAAK0B,KAAsB1gC,EAAAA,EAAAA,GAAS,CAAC,EAAGk+E,EAAW,CACjDz/E,SAAU0/E,IAIZ,MAAMv+C,EAAau+C,EAAkBliF,QAAOy2D,IAAO,IAAA4oC,EAAA,MAA4B,UAAX,QAAbA,EAAAt8D,EAAK0zB,UAAQ,IAAA4oC,OAAA,EAAbA,EAAez1F,KAAe,IACrFgL,EAAOzC,QAAQ2zB,OAAO3D,KAAKQ,uBAAyBA,EACpD/tB,EAAOzC,QAAQ2zB,OAAO3D,KAAKU,oBAAsBA,EACjDjuB,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDwyB,MAAMp+B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAM,CAC7BQ,yBACAE,sBACAc,aACAZ,aAGJnuB,EAAOzC,QAAQ26B,aAAa,UAAU,GACrC,CAACl4B,EAAQjY,EAAM64D,UAAW74D,EAAMklC,YAc7By9D,EAAY,CAChBT,cACAR,0BACAK,uBAEIa,EAAmB,CACvBxB,oBAMIyB,EAAY99F,EAAAA,aAAkB,KAElC,IAAIwe,EADJi4C,EAAOztD,KAAK,uEAKVwV,EAHEtL,EAAOzC,QAAQ2zB,OAAO3D,KAAK+C,2BAA6BvoC,EAAMwlC,MAGxDp+B,EAAAA,EAAAA,GAAS,CAAC,EAAG6Q,EAAOzC,QAAQ2zB,OAAO3D,KAAM,CAC/C8C,QAAS,CACPr7B,KAAM,OACNu4B,KAAMuB,GAAuB9uB,MAOzBmwB,GAAwB,CAC9B5C,KAAMxlC,EAAMwlC,KACZN,SAAUllC,EAAMklC,SAChBU,QAAS5lC,EAAM4lC,QACfyC,SAAUroC,EAAMqoC,WAGpB24D,EAAoB,CAClBz9E,QACA+mE,UAAU,GACV,GACD,CAAC9uB,EAAQvjD,EAAQjY,EAAMwlC,KAAMxlC,EAAMklC,SAAUllC,EAAM4lC,QAAS5lC,EAAMqoC,SAAU24D,IACzE8B,EAAqBvrF,GAAW,IAAMvX,EAAM4kF,sBAC5Cme,EAAgCh+F,EAAAA,aAAkB24D,IAClD19D,EAAM4kF,qBAAuB5kF,EAAM4kF,sBAAwBke,EAAmBttF,QAChFstF,EAAmBttF,QAAUxV,EAAM4kF,oBAGlB,oBAAflnB,GACFmlC,GACF,GACC,CAACA,EAAWC,EAAoB9iG,EAAM4kF,sBACnCoe,EAA+Bj+F,EAAAA,aAAkB,KAGjDkT,EAAOzC,QAAQwsD,kBAAkB,aAAez7B,GAA4BtuB,IAC9E4qF,GACF,GACC,CAAC5qF,EAAQ4qF,IACZnyE,GAAuBzY,EAAQ,gCAAiC8qF,GAChEryE,GAAuBzY,EAAQ,6BAA8B+qF,GAK7D,MAAMC,EAA4Bl+F,EAAAA,aAAkB,KAClDkT,EAAOzC,QAAQgD,UAASxF,IACtB,MAAM0vC,EAAWzqC,EAAOzC,QAAQuZ,6BAA6B,cAAe,CAC1EqX,KAAMD,GAAoBnzB,EAAOiF,EAAOzC,QAAQkU,YAChDgd,WAAYD,GAA0BzzB,EAAOiF,EAAOzC,QAAQkU,YAC5Dsd,WAAYD,GAAuB/zB,EAAOiF,EAAOzC,QAAQkU,YACzDsc,uBAAwBD,GAAuB/yB,EAAOiF,EAAOzC,QAAQkU,YACrEwc,oBAAqBD,GAAoCjzB,EAAOiF,EAAOzC,QAAQkU,cAEjF,OAAOtiB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBwyB,MAAMp+B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAMkd,EAAU,CACvC5c,sBAAuB4C,GAAoB,CACzCtC,KAAMsc,EAAStc,KACfuC,aAAc3oC,EAAMqoC,cAGxB,IAEJpwB,EAAOzC,QAAQ26B,aAAa,WAC5Bl4B,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,EAAQjY,EAAMqoC,WAClBuiC,GAA2B3yD,EAAQ,cAAegrF,GAClD9+C,GAAiBlsC,EAAQoqF,EAAQ,UACjCl+C,GAAiBlsC,EAAQ0qF,EAAW3iG,EAAM64D,YAActoC,GAAcywB,SAAW,UAAY,UAC7FmD,GAAiBlsC,EAAQ2qF,EAAkB,WAI3C,MAAMv+C,EAAgBt/C,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KAAM,IAAAm+F,EACpB,GAAI7+C,EAAc7uC,QAEhB,YADA6uC,EAAc7uC,SAAU,GAG1B,IAAI2tF,GAAwB,EACxBnjG,EAAMqoC,WAAay4D,EAAatrF,UAClC2tF,GAAwB,EACxBrC,EAAatrF,QAAUxV,EAAMqoC,UAE/B,MAAM+6D,EAA2BnrF,EAAOzC,QAAQ2zB,OAAO3D,KAAK+C,2BAA6BvoC,EAAMwlC,KACzF69D,EAA6BprF,EAAOzC,QAAQ2zB,OAAO3D,KAAKgD,kCAAoCxoC,EAAM4lC,QAClG09D,EAA8BrrF,EAAOzC,QAAQ2zB,OAAO3D,KAAKiD,mCAAqCzoC,EAAMqoC,SAGtG+6D,IAEGC,IACHprF,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDwyB,MAAMp+B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAM,CAC7BI,QAAS5lC,EAAM4lC,cAGnB3tB,EAAOzC,QAAQ2zB,OAAO3D,KAAKgD,gCAAkCxoC,EAAM4lC,QACnE3tB,EAAOzC,QAAQ4qD,eAEZkjC,IACHrrF,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDwyB,MAAMp+B,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMwyB,KAAM,CAC7BE,cAAel7B,KAAKvE,IAAIjG,EAAMqoC,UAAY,EAAGr1B,EAAMwyB,KAAKE,eACxDI,sBAAuBt7B,KAAKvE,IAAIjG,EAAMqoC,UAAY,EAAGr1B,EAAMwyB,KAAKM,6BAGpE7tB,EAAOzC,QAAQ2zB,OAAO3D,KAAKiD,iCAAmCzoC,EAAMqoC,SACpEpwB,EAAOzC,QAAQ4qD,gBAEZ+iC,KAIP3nC,EAAOR,MAAM,iCAADr6D,OAA4C,QAA5CuiG,EAAkCljG,EAAMwlC,YAAI,IAAA09D,OAAA,EAAVA,EAAY/uF,SAC1D6sF,EAAoB,CAClBz9E,MAAO6kB,GAAwB,CAC7B5C,KAAMxlC,EAAMwlC,KACZN,SAAUllC,EAAMklC,SAChBU,QAAS5lC,EAAM4lC,QACfyC,SAAUroC,EAAMqoC,WAElBiiD,UAAU,IACV,GACD,CAACtqF,EAAMwlC,KAAMxlC,EAAMqoC,SAAUroC,EAAMklC,SAAUllC,EAAM4lC,QAAS41B,EAAQwlC,EAAqB/oF,GAAQ,EuBxZpG0oF,CAAY1oF,EAAQjY,GFsGYujG,EAACtrF,EAAQjY,KACzC,MAAM,MACJi4B,EACAuN,KAAM6qB,GACJ5N,GAAmBxqC,EAAQjY,GACzB+jD,EAAgBzrC,EAAgBL,EAAQ6rC,IACxCm0C,EAAU3/E,EAAgBL,EAAQiU,IAClCksE,EAAiB7gF,GAAW,IACzBtU,OAAOC,KAAK+U,EAAOzC,QAAQxC,MAAM0xC,YAAYI,cAAc3wC,OAAS,EAAI,CAC7E4tC,cAAe,EACfC,aAAcx3C,KAAKwtB,IAAIkhE,GAA6B1uF,KAAKvE,IAAIgS,EAAOzC,QAAQxC,MAAMwyB,KAAKwB,WAAW7yB,OAAS,EAAG,KAC5G2jF,KAEA0L,EAAYz+F,EAAAA,OAAa+yF,IACzB2L,EAAyB1+F,EAAAA,aAO/B,WAAuB,IAAtBozF,IAAUjkF,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,KAAAA,UAAA,GACT,IAAKlU,EAAM+oF,qBAMT,YALI9wE,EAAOzC,QAAQxC,MAAM0xC,cAAgBmzC,IACvC5/E,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnD0xC,YAAamzC,QAKnB,GAAc,OAAV5/D,ID3KD,SAAiC8rB,GACtC,OAAuC,IAAhCA,EAAchC,eAAsD,IAA/BgC,EAAc/B,YAC5D,CCyK2B0hD,CAAwB3/C,GAC7C,OAEEo0C,IACFC,EAAe5iF,QAAUsiF,IAE3B,MAAMI,ED1MH,SAA6ByL,EAAWvL,GAC7C,OAAIuL,EAAU5hD,eAAiBq2C,EAAer2C,eAAiB4hD,EAAU3hD,cAAgBo2C,EAAep2C,aAC/F,KAKL2hD,EAAU5hD,eAAiBq2C,EAAer2C,eAAiB4hD,EAAU3hD,aAAeo2C,EAAep2C,aAC9F,CACLD,cAAeq2C,EAAep2C,aAC9BA,aAAc2hD,EAAU3hD,cAMxB2hD,EAAU5hD,cAAgBq2C,EAAer2C,eAAiB4hD,EAAU3hD,cAAgBo2C,EAAep2C,aAC9F,CACLD,cAAe4hD,EAAU5hD,cACzBC,aAAco2C,EAAer2C,cAAgB,GAI1C4hD,CACT,CCkL2BC,CAAoB,CACzC7hD,cAAegC,EAAchC,cAC7BC,aAAcx3C,KAAKwtB,IAAI+rB,EAAc/B,aAAe,EAAG/pB,EAAM+pB,eAC5Do2C,EAAe5iF,SAClB,GAAuB,OAAnB0iF,EACF,OAEF,MAAM,aACJpzC,EAAY,YACZF,EAAW,oBACXI,EACAozC,eAAgByL,GACd7L,GAAwB//E,EAAQggF,EAAS5nC,EAAap4B,EAAOigE,EAAgBC,EAAYC,EAAe5iF,SAC5G4iF,EAAe5iF,QAAUquF,EACzB,MAAMC,EAAuB7gG,OAAOC,KAAK4hD,GAAc3wC,OACjD4vF,EAAsB9gG,OAAOC,KAAK0hD,GAAazwC,OAC/C6vF,EAA2B/gG,OAAOC,KAAK+U,EAAOzC,QAAQxC,MAAM0xC,YAAYI,cAAc3wC,OACtF8vF,EAA0BhhG,OAAOC,KAAK+U,EAAOzC,QAAQxC,MAAM0xC,YAAYE,aAAazwC,QAChEgkF,GAAc2L,IAAyBE,GAA4BD,IAAwBE,IAIrHhsF,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB0xC,YAAa,CACXI,eACAF,cACAI,0BAIR,GAAG,CAAC/sC,EAAQjY,EAAM+oF,qBAAsB9wD,EAAO8rB,EAAesM,EAAa4nC,EAASG,IAC9E8L,EAAoBn/F,EAAAA,OAAag/C,GACjCM,EAAgBt/C,EAAAA,QAAa,GAC7Bo/F,EAAmBp/F,EAAAA,QAAa,GACtCA,EAAAA,WAAgB,KACd,MAAMq/F,EAAc//C,EAAc7uC,QAQlC,GAPI6uC,EAAc7uC,UAChB6uC,EAAc7uC,SAAU,GAEtByiB,GAASurE,EAAUhuF,SAAW+hF,GAAkBt/D,EAAOurE,EAAUhuF,WACnEguF,EAAUhuF,QAAUyiB,EACpBksE,EAAiB3uF,SAAU,IAExB4uF,GAAeF,EAAkB1uF,UAAYuuC,EAMhD,OALIwzC,GAAkB2M,EAAkB1uF,QAASuuC,KAC/C0/C,EAAuBU,EAAiB3uF,SACxC2uF,EAAiB3uF,SAAU,QAE7B0uF,EAAkB1uF,QAAUuuC,GAG9B0/C,GAAwB,GACvB,CAACA,EAAwB1/C,EAAe9rB,EAAOurE,GAAW,EE9L7DD,CAAmBtrF,EAAQjY,GAC3B0lF,GAAiBztE,EAAQjY,GV3DUiY,KACnC,MAAM2T,EAAS7mB,EAAAA,OAAa,CAAC,GAIvBs/F,EAAeA,KACnBz4E,EAAOpW,QAAU,CAAC,CAAC,EA4Bf8uF,EAA2B,CAC/BD,eACAj4C,iBA1BuBrnD,EAAAA,aAAkBG,IAKrC,IALsC,MAC1C6/B,EAAK,eACLmnB,EAAc,cACdC,EAAa,QACb5gC,GACDrmB,EACC,IAAK,IAAIiQ,EAAI+2C,EAAgB/2C,EAAIg3C,EAAeh3C,GAAK,EAAG,CACtD,MAAMw3E,EAAYL,GAAqB,CACrCr0E,SACA2T,OAAQA,EAAOpW,QACf8yC,YAAanzC,EACb4vB,QACAwnD,oBAAqBrgC,EACrBsgC,mBAAoBrgC,EACpB5gC,YAEEohE,EAAUx+D,QAAU,IACtBhZ,GAAKw3E,EAAUx+D,QAAU,EAE7B,IACC,CAAClW,KAQJksC,GAAiBlsC,EAPe,CAC9Bu4C,4BA9ByB+zC,CAACx/D,EAAOujB,KAAgB,IAAAk8C,EACjD,OAA4B,QAA5BA,EAAO54E,EAAOpW,QAAQuvB,UAAM,IAAAy/D,OAAA,EAArBA,EAAwBl8C,EAAY,GAmCK,UAClDnE,GAAiBlsC,EAAQqsF,EAA0B,WACnD5zE,GAAuBzY,EAAQ,oBAAqBosF,EAAa,EUoBjEI,CAAsBxsF,GPDaysF,EAACzsF,EAAQjY,KAI5C,MAAMynE,EAAqB1iE,EAAAA,aAAkBgnB,IAAS,IAAA44E,EAEpD,OAAoC,QAApCA,EAD+BjuD,GAAuCz+B,GACxC8T,UAAM,IAAA44E,EAAAA,EAAI,EAAE,GACzC,CAAC1sF,IACEovD,EAAqBtiE,EAAAA,aAAkB,IACjB8xC,GAA+B5+B,IAExD,CAACA,IAKJksC,GAAiBlsC,EAJS,CACxBwvD,qBACAJ,sBAE0C,UAC5C,MAAMu9B,EAA0B7/F,EAAAA,aAAkB,KAAM,IAAA8/F,EACtD,MAAMjuD,EAAyBq2C,GAAmD,QAA1B4X,EAAC7kG,EAAMktF,2BAAmB,IAAA2X,EAAAA,EAAI,IACtF5sF,EAAOzC,QAAQgD,UAASxF,IAAS,IAAA8xF,EAAAC,EAAA95B,EAC/B,MAAMv/C,EAA4C,QAA/Bo5E,EAAgB,QAAhBC,EAAG/xF,EAAMuY,eAAO,IAAAw5E,OAAA,EAAbA,EAAer5E,qBAAa,IAAAo5E,EAAAA,EAAI,GAChDv4E,EAAmC,QAAtB0+C,EAAGj4D,EAAMuZ,qBAAa,IAAA0+C,EAAAA,EAAI,CAAC,EACxCtX,EAA8By5B,GAA+B1hE,EAAekrB,EAAwBrqB,GAC1G,OAAOnlB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzByjC,gBAAgBrvC,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMyjC,eAAgB,CACjDQ,gBAAiB0c,KAEnB,GACF,GACD,CAAC17C,EAAQjY,EAAMktF,sBACZ8X,EAA4BjgG,EAAAA,aAAkBmoF,IAAuB,IAAA+X,EAAAC,EAAA1rD,EAEzE,MAAMjtB,EAAmD,QAAtC04E,EAAkC,QAAlCC,GAAG1rD,EAAAvhC,EAAOzC,SAAQ2vF,wBAAgB,IAAAD,OAAA,EAA/BA,EAAA1+E,KAAAgzB,UAAmC,IAAAyrD,EAAAA,EAAI,CAAC,EACxDhnE,EAAezS,GAAyBvT,GACxCyU,EAAsBN,GAAgCnU,GACtDo2E,EAAcD,GAAqC,OAAnBlB,QAAmB,IAAnBA,EAAAA,EAAuB,IACvDt2C,EAAyBq2C,GAA6C,OAAnBC,QAAmB,IAAnBA,EAAAA,EAAuB,IAC1Ev5B,EAA8By5B,GAA+BnvD,EAAc2Y,EAAwBrqB,GACnG6qB,EAA0C,IAA/B1qB,EAAoBvY,OAAe,EAAI3J,KAAKvE,OAAOymB,EAAoB/oB,KAAIooB,IAAK,IAAAq5E,EAAAC,EAAA,OAAyC,QAAzCD,EAAiC,QAAjCC,EAAIzuD,EAAuB7qB,UAAM,IAAAs5E,OAAA,EAA7BA,EAA+BlxF,cAAM,IAAAixF,EAAAA,EAAI,CAAC,KAC/IntF,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzByjC,eAAgB,CACd7qB,OAAQyiE,EACRz3C,yBACAK,gBAAiB0c,EACjBvc,eAGJ,GACD,CAACn/B,IACJyY,GAAuBzY,EAAQ,oBAAqB2sF,GACpDl0E,GAAuBzY,EAAQ,iBAAiB,KAC9C+sF,EAA0BhlG,EAAMktF,oBAAoB,IAEtDx8D,GAAuBzY,EAAQ,+BAA+B,KAC5D+sF,EAA0BhlG,EAAMktF,oBAAoB,IAMtDnoF,EAAAA,WAAgB,KACdigG,EAA0BhlG,EAAMktF,oBAAoB,GACnD,CAAC8X,EAA2BhlG,EAAMktF,qBAAqB,EO7D1DwX,CAAsBzsF,EAAQjY,GAC9Bs8E,GAAerkE,EAAQjY,GtCpCGslG,EAACrtF,EAAQjY,KACnC,MAAMw7D,EAASsH,GAAc7qD,EAAQ,gBAC/BstF,EAAkBxgG,EAAAA,OAAa,MAC/B2pE,EAA6D,OAA1Cz2D,EAAOzC,QAAQsV,eAAetV,QACjDgwF,EAAsBzgG,EAAAA,aAAkB,CAAC+U,EAAMzG,KAC/CyG,GAEE7B,EAAOzC,QAAQse,OAAOha,EAAK1H,KAC7B6F,EAAOzC,QAAQ26B,aAAa,eAAgBl4B,EAAOzC,QAAQ06B,cAAcp2B,EAAK1H,GAAI0H,EAAKiS,OAAQ1Y,EAEnG,GACC,CAAC4E,IACE++D,EAAejyE,EAAAA,aAAkB,CAACqN,EAAI2Z,KAC1C,MAAMq8B,EAAcnL,GAAsBhlC,IAC3B,OAAXmwC,QAAW,IAAXA,OAAW,EAAXA,EAAah2C,MAAOA,IAAiB,OAAXg2C,QAAW,IAAXA,OAAW,EAAXA,EAAar8B,SAAUA,IAGrD9T,EAAOzC,QAAQgD,UAASxF,IACtBwoD,EAAOR,MAAM,4BAADr6D,OAA6ByR,EAAE,eAAAzR,OAAcorB,KAClD3kB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBL,SAAU,CACRmH,KAAM,CACJ1H,KACA2Z,SAEF3R,aAAc,KACdijC,mBAAoB,KACpBC,kBAAmB,MAErBlpB,MAAO,CACLta,KAAM,CACJ1H,KACA2Z,SAEF3R,aAAc,KACdijC,mBAAoB,KACpBC,kBAAmB,WAIzBrlC,EAAOzC,QAAQ4qD,cAGVnoD,EAAOzC,QAAQse,OAAO1hB,KAGvBg2C,GAGFo9C,EAAoBp9C,EAAa,CAAC,GAEpCnwC,EAAOzC,QAAQ26B,aAAa,cAAel4B,EAAOzC,QAAQ06B,cAAc99B,EAAI2Z,KAAO,GAClF,CAAC9T,EAAQujD,EAAQgqC,IACdruB,EAAuBpyE,EAAAA,aAAkB,SAACgnB,GAAsB,IAAf1Y,EAAKa,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9D,MAAM4F,EAAOmjC,GAAsBhlC,GACnCutF,EAAoB1rF,EAAMzG,GAC1B4E,EAAOzC,QAAQgD,UAASxF,IACtBwoD,EAAOR,MAAM,2CAADr6D,OAA4CorB,KACjD3kB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBL,SAAU,CACRyH,aAAc,CACZ2R,SAEFsxB,mBAAoB,KACpBvjC,KAAM,KACNwjC,kBAAmB,MAErBlpB,MAAO,CACLha,aAAc,CACZ2R,SAEFsxB,mBAAoB,KACpBvjC,KAAM,KACNwjC,kBAAmB,WAIzBrlC,EAAOzC,QAAQ4qD,aACjB,GAAG,CAACnoD,EAAQujD,EAAQgqC,IACdnuB,EAA6BtyE,EAAAA,aAAkB,SAACgnB,GAAsB,IAAf1Y,EAAKa,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpE,MAAM4F,EAAOmjC,GAAsBhlC,GACnCutF,EAAoB1rF,EAAMzG,GAC1B4E,EAAOzC,QAAQgD,UAASxF,IACtBwoD,EAAOR,MAAM,kDAADr6D,OAAmDorB,KACxD3kB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBL,SAAU,CACRyH,aAAc,KACdijC,mBAAoB,CAClBtxB,SAEFjS,KAAM,KACNwjC,kBAAmB,MAErBlpB,MAAO,CACLha,aAAc,KACdijC,mBAAoB,CAClBtxB,SAEFjS,KAAM,KACNwjC,kBAAmB,WAIzBrlC,EAAOzC,QAAQ4qD,aACjB,GAAG,CAACnoD,EAAQujD,EAAQgqC,IACdjuB,EAA4BxyE,EAAAA,aAAkB,SAACgnB,EAAO8a,GAAsB,IAAfxzB,EAAKa,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAM4F,EAAOmjC,GAAsBhlC,GAC/B6B,GACF7B,EAAOzC,QAAQ26B,aAAa,eAAgBl4B,EAAOzC,QAAQ06B,cAAcp2B,EAAK1H,GAAI0H,EAAKiS,OAAQ1Y,GAEjG4E,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBL,SAAU,CACR2qC,kBAAmB,CACjBvxB,QACA8a,SAEFzsB,aAAc,KACdijC,mBAAoB,KACpBvjC,KAAM,MAERsa,MAAO,CACLkpB,kBAAmB,CACjBvxB,QACA8a,SAEFzsB,aAAc,KACdijC,mBAAoB,KACpBvjC,KAAM,UAIZ7B,EAAOzC,QAAQ4qD,aACjB,GAAG,CAACnoD,IACEwtF,EAA4B1gG,EAAAA,aAAkB,IAAMq4C,GAAmCnlC,IAAS,CAACA,IACjG2nE,EAA0B76E,EAAAA,aAAkB,CAACqN,EAAI2Z,EAAO6oB,KAC5D,IAAI8wD,EAAqBztF,EAAOzC,QAAQuiE,eAAehsD,GACvD,MAAMM,EAAiBH,GAAqCjU,GACtDguC,EAAc1D,GAAetqC,EAAQ,CACzCipC,WAAYlhD,EAAMkhD,WAClBsB,eAAgBxiD,EAAMwiD,iBAElB5hC,EAAaqmB,GAAuBhvB,GAGpC69D,EAAkB,GAAGn1E,OAAOigB,EAAW5c,KAAO,GAAIiiD,EAAYzgB,KAAM5kB,EAAWtc,QAAU,IAC/F,IAAIqhG,EAAkB7vB,EAAgB9xD,WAAUjJ,GAAOA,EAAI3I,KAAOA,IAChD,UAAdwiC,EACF8wD,GAAsB,EACC,SAAd9wD,EACT8wD,GAAsB,EAEtBC,GAAmB,EAEjBD,GAAsBr5E,EAAelY,QAEvCwxF,GAAmB,EACfA,EAAkB7vB,EAAgB3hE,SAEpCuxF,EAAqB,IAEdA,EAAqB,IAE9BC,GAAmB,EACfA,GAAmB,IAErBD,EAAqBr5E,EAAelY,OAAS,IAGjDwxF,EAAkB5tE,GAAM4tE,EAAiB,EAAG7vB,EAAgB3hE,OAAS,GACrE,MAAMyxF,EAAa9vB,EAAgB6vB,GACnC,IAAKC,EACH,OAEF,MAAMC,EAAc5tF,EAAOzC,QAAQg7C,4BAA4Bo1C,EAAWxzF,GAAIszF,GAC1EG,GAAeA,EAAYp1C,mBACX,SAAd7b,GAAsC,UAAdA,EAC1B8wD,EAAqBG,EAAYn1C,qBACV,UAAd9b,IACT8wD,EAAqBG,EAAYvvB,wBAGrCovB,EAAqB3tE,GAAM2tE,EAAoB,EAAGr5E,EAAelY,OAAS,GAC1E,MAAM2xF,EAAgBz5E,EAAeq5E,GACrCztF,EAAOzC,QAAQwhE,aAAa4uB,EAAWxzF,GAAI0zF,EAAc/5E,MAAM,GAC9D,CAAC9T,EAAQjY,EAAMkhD,WAAYlhD,EAAMwiD,iBAC9B66B,EAAwBt4E,EAAAA,aAAkBG,IAG1C,IAH2C,GAC/CkN,EAAE,MACF2Z,GACD7mB,EACC+S,EAAOzC,QAAQwhE,aAAa5kE,EAAI2Z,EAAM,GACrC,CAAC9T,IACE+gE,EAAoBj0E,EAAAA,aAAkB,CAACosB,EAAQ9d,KAEjC,UAAdA,EAAM/P,KAAiC,QAAd+P,EAAM/P,KAA+B,UAAd+P,EAAM/P,KAAmB4kE,GAAgB70D,EAAM/P,MAGnG2U,EAAOzC,QAAQwhE,aAAa7lD,EAAO/e,GAAI+e,EAAOpF,MAAM,GACnD,CAAC9T,IACE8tF,EAA0BhhG,EAAAA,aAAkB,CAAAK,EAE/CiO,KAAU,IAFsC,MACjD0Y,GACD3mB,EACKiO,EAAMI,SAAWJ,EAAM+2C,eAG3BnyC,EAAOzC,QAAQ2hE,qBAAqBprD,EAAO1Y,EAAM,GAChD,CAAC4E,IACE+tF,EAA+BjhG,EAAAA,aAAkB,CAAA5D,EAGpDkS,KAAU,IAH2C,OACtDi4D,EAAM,MACNzkC,GACD1lC,EACC,GAAIkS,EAAMI,SAAWJ,EAAM+2C,cACzB,OAEF,MAAMuuB,EAAqBv7B,GAAmCnlC,GACnC,OAAvB0gE,GAA+BA,EAAmB9xC,QAAUA,GAASykC,EAAOr+C,SAAS0rD,EAAmB5sD,QAI5G9T,EAAOzC,QAAQ+hE,0BAA0BjM,EAAO,GAAIzkC,EAAOxzB,EAAM,GAChE,CAAC4E,IACEguF,EAAalhG,EAAAA,aAAkB,CAACsS,EAAGhE,KAAU,IAAA6yF,EAC1B,QAAvBA,EAAI7yF,EAAM8yF,qBAAa,IAAAD,GAAuB,QAAvBA,EAAnBA,EAAqB9zB,aAAa,gBAAQ,IAAA8zB,GAA1CA,EAA4Cj5E,SAASnW,EAAYsD,gBAGrEohD,EAAOR,MAAM,kBACb/iD,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDohB,MAAO,CACLta,KAAM,KACNM,aAAc,KACdijC,mBAAoB,KACpBC,kBAAmB,UAEpB,GACF,CAACke,EAAQvjD,IACNmuF,EAAsBrhG,EAAAA,aAAkBosB,IAC5Co0E,EAAgB/vF,QAAU2b,CAAM,GAC/B,IACGk1E,EAAsBthG,EAAAA,aAAkBsO,IAC5C,MAAM8yD,EAAao/B,EAAgB/vF,QACnC+vF,EAAgB/vF,QAAU,KAC1B,MAAM4yC,EAAcnL,GAAsBhlC,GAK1C,IAJuBA,EAAOzC,QAAQuZ,6BAA6B,kBAAkB,EAAM,CACzF1b,QACAyG,KAAMqsD,IAGN,OAEF,IAAK/d,EAIH,YAHI+d,GACFluD,EAAOzC,QAAQwhE,aAAa7Q,EAAW/zD,GAAI+zD,EAAWp6C,QAI1D,IAAc,OAAVo6C,QAAU,IAAVA,OAAU,EAAVA,EAAY/zD,MAAOg2C,EAAYh2C,KAAgB,OAAV+zD,QAAU,IAAVA,OAAU,EAAVA,EAAYp6C,SAAUq8B,EAAYr8B,MACzE,OAEF,MAAMu6E,EAAcruF,EAAOzC,QAAQouD,eAAexb,EAAYh2C,GAAIg2C,EAAYr8B,OAC/D,OAAXu6E,QAAW,IAAXA,GAAAA,EAAa9zD,SAASn/B,EAAMI,UAG5B0yD,EACFluD,EAAOzC,QAAQwhE,aAAa7Q,EAAW/zD,GAAI+zD,EAAWp6C,QAEtD9T,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDohB,MAAO,CACLta,KAAM,KACNM,aAAc,KACdijC,mBAAoB,KACpBC,kBAAmB,UAGvBrlC,EAAOzC,QAAQ4qD,cAIfolC,EAAoBp9C,EAAa/0C,IACnC,GACC,CAAC4E,EAAQutF,IACNe,EAAuBxhG,EAAAA,aAAkBosB,IAC7C,GAAwB,SAApBA,EAAO47B,SACT,OAEF,MAAMjzC,EAAOmjC,GAAsBhlC,IAC3B,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAM1H,MAAO+e,EAAO/e,KAAU,OAAJ0H,QAAI,IAAJA,OAAI,EAAJA,EAAMiS,SAAUoF,EAAOpF,OACnD9T,EAAOzC,QAAQwhE,aAAa7lD,EAAO/e,GAAI+e,EAAOpF,MAChD,GACC,CAAC9T,IACEuuF,EAAezhG,EAAAA,aAAkB,KACrC,MAAM+U,EAAOmjC,GAAsBhlC,GAInC,GAAI6B,IAAS7B,EAAOzC,QAAQse,OAAOha,EAAK1H,IAAK,KAAAq0F,EAC3C,MAAMC,EAAgD,QAAhCD,EAAGxpD,GAAsBhlC,UAAO,IAAAwuF,OAAA,EAA7BA,EAA+Br0F,GACxD,IAAIwkE,EAAY,KAChB,GAAgC,qBAArB8vB,EAAkC,KAAAC,EAC3C,MAAMC,EAAsB3uF,EAAOzC,QAAQ2oF,iCAAiCuI,GACtEzgD,EAAc1D,GAAetqC,EAAQ,CACzCipC,WAAYlhD,EAAMkhD,WAClBsB,eAAgBxiD,EAAMwiD,iBAElBqkD,EAAU5gD,EAAYzgB,KAAKzN,GAAM6uE,EAAqB,EAAG3gD,EAAYzgB,KAAKrxB,OAAS,IACzFyiE,EAAsB,QAAb+vB,EAAGE,EAAQz0F,UAAE,IAAAu0F,EAAAA,EAAI,IAC5B,CACA1uF,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDohB,MAAO,CACLta,KAAoB,OAAd88D,EAAqB,KAAO,CAChCxkE,GAAIwkE,EACJ7qD,MAAOjS,EAAKiS,OAEd3R,aAAc,KACdijC,mBAAoB,KACpBC,kBAAmB,SAGzB,IACC,CAACrlC,EAAQjY,EAAMkhD,WAAYlhD,EAAMwiD,iBAC9B24B,EAA8B2rB,IAAiB,KACnD,MAAMC,EAAqB9pD,GAAsBhlC,GACjD,IAAK8uF,EACH,OAEF,MAAM9gD,EAAc1D,GAAetqC,EAAQ,CACzCipC,WAAYlhD,EAAMkhD,WAClBsB,eAAgBxiD,EAAMwiD,iBAGxB,GAD2ByD,EAAYzgB,KAAKhhB,MAAKzJ,GAAOA,EAAI3I,KAAO20F,EAAmB30F,KAEpF,OAEF,MAAMia,EAAiBH,GAAqCjU,GAC5DA,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBL,SAAU,CACRmH,KAAM,CACJ1H,GAAI6zC,EAAYzgB,KAAK,GAAGpzB,GACxB2Z,MAAOM,EAAe,GAAGN,OAE3BuxB,kBAAmB,KACnBljC,aAAc,KACdijC,mBAAoB,SAGxB,IAOE2pD,EAAkB,CACtBpnB,0BACArI,4BACAkuB,6BAEFthD,GAAiBlsC,EAVA,CACf++D,eACAG,uBACAE,8BAOiC,UACnClzB,GAAiBlsC,EAAQ+uF,EAAiB,WAC1CjiG,EAAAA,WAAgB,KACd,MAAM4pE,EAAMX,GAAc/1D,EAAOzC,QAAQsV,eAAetV,SAExD,OADAm5D,EAAI7X,iBAAiB,UAAWuvC,GACzB,KACL13B,EAAI3X,oBAAoB,UAAWqvC,EAAoB,CACxD,GACA,CAACpuF,EAAQy2D,EAAkB23B,IAC9B31E,GAAuBzY,EAAQ,mBAAoBguF,GACnDv1E,GAAuBzY,EAAQ,kBAAmBolE,GAClD3sD,GAAuBzY,EAAQ,gBAAiBmuF,GAChD11E,GAAuBzY,EAAQ,cAAe+gE,GAC9CtoD,GAAuBzY,EAAQ,iBAAkBsuF,GACjD71E,GAAuBzY,EAAQ,oBAAqB8tF,GACpDr1E,GAAuBzY,EAAQ,yBAA0B+tF,GACzDt1E,GAAuBzY,EAAQ,UAAWuuF,GAC1C91E,GAAuBzY,EAAQ,wBAAyBkjE,EAA4B,EsCjVpFmqB,CAAartF,EAAQjY,G9BvDgBinG,EAAChvF,EAAQjY,KAAU,IAAAy5E,EACxD,MAAMje,EAASsH,GAAc7qD,EAAQ,2BAC/BivF,EAAcniG,EAAAA,SACdoiG,EAAmBpiG,EAAAA,SAKnBqiG,EAAkBriG,EAAAA,aAAkB,KACxCy2D,EAAOR,MAAM,4BACb,MAAMnsC,EAAuBT,GAAiCnW,EAAOzC,QAAQxC,OACzE6b,EAAqBG,kBACvB/W,EAAOzC,QAAQ26B,aAAa,uBAAwB,CAClDnhB,iBAAkBH,EAAqBG,mBAG3C/W,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDqb,gBAAiB,CACf9X,MAAM,OAGV0B,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,EAAQujD,IAIN6rC,EAAiBtiG,EAAAA,aAAkB,KACvCoiG,EAAiB3xF,QAAUua,YAAW,IAAMI,aAAa+2E,EAAY1xF,UAAU,EAAE,GAChF,IAIG8xF,EAAyBviG,EAAAA,aAAkB,KAC/CmiG,EAAY1xF,QAAUua,WAAWq3E,EAAiB,IAAI,GACrD,CAACA,IACEG,EAAkBxiG,EAAAA,aAAkB,CAAC2uB,EAAUtE,EAASC,KAC5DmsC,EAAOR,MAAM,6BACbqsC,IACApvF,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDqb,iBAAiBjnB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMqb,gBAAiB,CACnD9X,MAAM,EACNyY,iBAAkB0E,EAClBtE,UACAC,gBAGJpX,EAAOzC,QAAQ26B,aAAa,sBAAuB,CACjDnhB,iBAAkB0E,IAEpBzb,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAAC5E,EAAQ6rC,EAAgBpvF,IAC5BksC,GAAiBlsC,EAAQ,CACvBsvF,kBACAH,gBAAiBE,GAChB,UAKH,MAAMttB,EAA2Bj1E,EAAAA,aAAkB,CAACk1E,EAAW5Y,KAAY,IAAA2J,EACzE,MAAMw8B,EAA0Bp5E,GAAiCnW,EAAOzC,QAAQxC,OAQhF,OALCquD,EAAQ8Y,uBAE8B,OAArB,QAAlBnP,EAAAhrE,EAAM05C,oBAAY,IAAAsxB,OAAA,EAAlBA,EAAoB38C,kBAEpBm5E,EAAwBjxF,MAIjBnP,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAW,CAC7B5rD,gBAAiBm5E,IAHVvtB,CAIP,GACD,CAAChiE,EAA0B,QAApBwhE,EAAEz5E,EAAM05C,oBAAY,IAAA+/B,OAAA,EAAlBA,EAAoBprD,kBAC1B+rD,EAA4Br1E,EAAAA,aAAkB,CAACosB,EAAQkwC,KAC3D,MAAMhzC,EAAkBgzC,EAAQkZ,eAAelsD,gBAM/C,OALuB,MAAnBA,GACFpW,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDqb,sBAGG8C,CAAM,GACZ,CAAClZ,IACJyyD,GAA6BzyD,EAAQ,cAAe+hE,GACpDtP,GAA6BzyD,EAAQ,eAAgBmiE,GAKrDr1E,EAAAA,WAAgB,IACP,KACLorB,aAAa+2E,EAAY1xF,SACzB2a,aAAag3E,EAAiB3xF,QAAQ,GAEvC,GAAG,E8BvCNyxF,CAAwBhvF,EAAQjY,GvCrBLynG,EAACxvF,EAAQjY,KAAU,IAAAy5E,EAAA+kB,EAC9C,MAAMhjC,EAASsH,GAAc7qD,EAAQ,iBACrCA,EAAOzC,QAAQ4pD,qBAAqB,CAClCE,QAAS,SACTQ,UAAW9/D,EAAM47B,YACjBokC,aAAchgE,EAAM0nG,oBACpB/nC,cAAelhB,GACfwhB,YAAa,sBAEf,MAAM0nC,EAAqB5iG,EAAAA,aAAkB,KAC3CkT,EAAOzC,QAAQgD,UAASxF,IACtB,MAAM4oB,EAAc6iB,GAAwBzrC,EAAOiF,EAAOzC,QAAQkU,YAC5Dg1B,EAAczmC,EAAOzC,QAAQoyF,eAAehsE,GAC5CjjB,GAAWvR,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnC3P,QAAQ+D,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAM3P,OAAQq7C,KAE/BmpD,EAAyB/zB,GAA0B77D,EAAQU,GACjE,OAAOvR,EAAAA,EAAAA,GAAS,CAAC,EAAGuR,EAAU,CAC5BqmC,kBAAmB6oD,GACnB,IAEJ5vF,EAAOzC,QAAQ26B,aAAa,kBAAkB,GAC7C,CAACl4B,IACE6vF,EAAoB/iG,EAAAA,aAAkB,CAACw7F,EAAiBttE,IAC9C,MAAVA,IAAwC,IAAtBA,EAAOnF,YAAwB9tB,EAAM2nF,oBAClD4Y,EAEF,IAAIA,EAAiB,yBAC3B,CAACvgG,EAAM2nF,sBAKJogB,EAAehjG,EAAAA,aAAkB,KACrC4iG,IACA1vF,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,EAAQ0vF,IACNK,EAAmBjjG,EAAAA,aAAkBmd,IACzC,MAAM0Z,EAAc6iB,GAAwBxmC,GACtCyiB,EAAQ,IAAIkB,EAAYlB,OACxButE,EAAYvtE,EAAM1W,WAAUiY,GAAcA,EAAW7pB,KAAO8P,EAAK9P,MACpD,IAAf61F,EACFvtE,EAAM1S,KAAK9F,GAEXwY,EAAMutE,GAAa/lF,EAErBjK,EAAOzC,QAAQ0yF,gBAAe9gG,EAAAA,EAAAA,GAAS,CAAC,EAAGw0B,EAAa,CACtDlB,UACE,mBAAmB,GACtB,CAACziB,IACEkwF,EAAoBpjG,EAAAA,aAAkB21B,IAC1C,MAAMkB,EAAc6iB,GAAwBxmC,GACtCmwF,EAAgB,IAAIxsE,EAAYlB,OACtCA,EAAM9tB,SAAQsV,IACZ,MAAM+lF,EAAYG,EAAcpkF,WAAUiY,GAAcA,EAAW7pB,KAAO8P,EAAK9P,MAC5D,IAAf61F,EACFG,EAAcpgF,KAAK9F,GAEnBkmF,EAAcH,GAAa/lF,CAC7B,IAEFjK,EAAOzC,QAAQ0yF,gBAAe9gG,EAAAA,EAAAA,GAAS,CAAC,EAAGw0B,EAAa,CACtDlB,MAAO0tE,IACL,oBAAoB,GACvB,CAACnwF,IACEowF,EAAmBtjG,EAAAA,aAAkBujG,IACzC,MAAM1sE,EAAc6iB,GAAwBxmC,GACtCyiB,EAAQkB,EAAYlB,MAAMr3B,QAAO6e,GAAQA,EAAK9P,KAAOk2F,EAAal2F,KACpEsoB,EAAMvmB,SAAWynB,EAAYlB,MAAMvmB,QAGvC8D,EAAOzC,QAAQ0yF,gBAAe9gG,EAAAA,EAAAA,GAAS,CAAC,EAAGw0B,EAAa,CACtDlB,UACE,mBAAmB,GACtB,CAACziB,IACEswF,EAAkBxjG,EAAAA,aAAkB,CAACyjG,EAAmBp5E,EAASC,KAErE,GADAmsC,EAAOR,MAAM,2BACTwtC,EAAmB,CACrB,MAAM5sE,EAAc6iB,GAAwBxmC,GACtCwwF,EAAuB7sE,EAAYlB,MAAMr3B,QAAO6e,IAAQ,IAAAm+B,EAC5D,QAAmBl5C,IAAf+a,EAAK9X,MAGP,OAAIiK,MAAM8N,QAAQD,EAAK9X,QAAgC,IAAtB8X,EAAK9X,MAAM+J,OAK9C,MACMmoB,EAAuC,QAAzB+jB,EADLpoC,EAAOzC,QAAQme,UAAUzR,EAAK6J,OACfuP,uBAAe,IAAA+kB,OAAA,EAAtBA,EAAwB77B,MAAK6W,GAAYA,EAASjxB,QAAU8X,EAAKmZ,WAMxF,QAL2E,qBAA1B,OAAdiB,QAAc,IAAdA,OAAc,EAAdA,EAAgB8E,uBAA2D,OAAd9E,QAAc,IAAdA,OAAc,EAAdA,EAAgB8E,qBAQrG,IAEb,IAAIsnE,EACJ,MAAMC,EAAqBF,EAAqBjkF,MAAKtC,GAAQA,EAAK6J,QAAUy8E,IACtEI,EAAe3wF,EAAOzC,QAAQme,UAAU60E,GAE5CE,EADEC,EACeF,EACRzoG,EAAMw7B,gCACE,CAACN,GAAgB,CAChCnP,MAAOy8E,EACPntE,SAAUutE,EAAattE,gBAAgB,GAAGlxB,OACzC6N,IAEc,IAAIwwF,EAAsBvtE,GAAgB,CACzDnP,MAAOy8E,EACPntE,SAAUutE,EAAattE,gBAAgB,GAAGlxB,OACzC6N,IAELA,EAAOzC,QAAQ0yF,gBAAe9gG,EAAAA,EAAAA,GAAS,CAAC,EAAGw0B,EAAa,CACtDlB,MAAOguE,IAEX,CACAzwF,EAAOzC,QAAQ+xF,gBAAgBj5E,GAA0BW,QAASG,EAASC,EAAQ,GAClF,CAACpX,EAAQujD,EAAQx7D,EAAMw7B,kCACpBqtE,EAAkB9jG,EAAAA,aAAkB,KACxCy2D,EAAOR,MAAM,uBACb/iD,EAAOzC,QAAQ4xF,iBAAiB,GAC/B,CAACnvF,EAAQujD,IACNstC,EAAyB/jG,EAAAA,aAAkB41B,IAC/C,MAAMiB,EAAc6iB,GAAwBxmC,GACxC2jB,EAAYjB,gBAAkBA,GAGlC1iB,EAAOzC,QAAQ0yF,gBAAe9gG,EAAAA,EAAAA,GAAS,CAAC,EAAGw0B,EAAa,CACtDjB,kBACE,sBAAsB,GACzB,CAAC1iB,IACE8wF,EAAuBhkG,EAAAA,aAAkBsc,IAC7C,MAAMua,EAAc6iB,GAAwBxmC,GACxCmgB,GAAYwD,EAAYf,kBAAmBxZ,IAG/CpJ,EAAOzC,QAAQ0yF,gBAAe9gG,EAAAA,EAAAA,GAAS,CAAC,EAAGw0B,EAAa,CACtDf,kBAAmB,IAAIxZ,KACtB,GACF,CAACpJ,IACEiwF,EAAiBnjG,EAAAA,aAAkB,CAAC0nB,EAAOujB,KAC1ByO,GAAwBxmC,KACxBwU,IACnB+uC,EAAOR,MAAM,wBACb/iD,EAAOzC,QAAQ0qD,mBAAmB,SAAUvkC,GAA0BlP,EAAOzsB,EAAMw7B,gCAAiCvjB,GAAS+3B,GAC7H/3B,EAAOzC,QAAQwzF,wBACjB,GACC,CAAC/wF,EAAQujD,EAAQx7D,EAAMw7B,kCACpBosE,EAAiB7iG,EAAAA,aAAkBkkG,IACvC,MAAMrtE,EAAcL,GAAoB0tE,EAAkBjpG,EAAMw7B,gCAAiCvjB,GAC3FixF,EAA4C,WAArBlpG,EAAMkoF,WAA0BvqD,GAA6B/B,EAAa3jB,EAAQjY,EAAM68B,aAAe,KAC9HssE,EAAelxF,EAAOzC,QAAQ+zB,uBAAuB,YAAa,CACtE2/D,uBACAttE,YAAwB,OAAXA,QAAW,IAAXA,EAAAA,EAAenB,OAE9B,OAAOrzB,EAAAA,EAAAA,GAAS,CAAC,EAAG+hG,EAAc,CAChCvtE,eACA,GACD,CAAC57B,EAAMw7B,gCAAiCx7B,EAAMkoF,WAAYloF,EAAM68B,YAAa5kB,IAC1EmxF,EAAY,CAChBN,yBACAE,sBAAuBjB,EACvBM,mBACAL,mBACAG,oBACAD,iBACAK,kBACAM,kBACAE,uBACA3sE,iBAAkBp8B,EAAMo8B,iBACxBwrE,kBAEFzjD,GAAiBlsC,EAAQmxF,EAAW,UAKpC,MAAMpvB,EAA2Bj1E,EAAAA,aAAkB,CAACk1E,EAAW5Y,KAAY,IAAA2J,EACzE,MAAMq+B,EAAsB5qD,GAAwBxmC,GAUpD,OAPCopD,EAAQ8Y,uBAEY,MAArBn6E,EAAM47B,aAEqC,OAAzB,QAAlBovC,EAAAhrE,EAAM05C,oBAAY,IAAAsxB,GAAQ,QAARA,EAAlBA,EAAoB3nE,cAAM,IAAA2nE,OAAA,EAA1BA,EAA4BpvC,cAE3BxD,GAAYixE,EAAqB5uE,MAEzBw/C,GAEF7yE,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAW,CAC7B52E,OAAQ,CACNu4B,YAAaytE,IAEf,GACD,CAACpxF,EAAQjY,EAAM47B,YAA+B,QAApB69C,EAAEz5E,EAAM05C,oBAAY,IAAA+/B,GAAQ,QAARA,EAAlBA,EAAoBp2E,cAAM,IAAAo2E,OAAA,EAA1BA,EAA4B79C,cACrDw+C,EAA4Br1E,EAAAA,aAAkB,CAACosB,EAAQkwC,KAAY,IAAAgZ,EACvE,MAAMz+C,EAA2C,QAAhCy+C,EAAGhZ,EAAQkZ,eAAel3E,cAAM,IAAAg3E,OAAA,EAA7BA,EAA+Bz+C,YACnD,OAAmB,MAAfA,EACKzK,GAETlZ,EAAOzC,QAAQ0qD,mBAAmB,SAAUvkC,GAA0BC,EAAa57B,EAAMw7B,gCAAiCvjB,GAAS,iBAC5H7Q,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CAC1Bm4E,UAAW,IAAIn4E,EAAOm4E,UAAWrxF,EAAOzC,QAAQwzF,yBAChD,GACD,CAAC/wF,EAAQjY,EAAMw7B,kCACZ0kE,EAA+Bn7F,EAAAA,aAAkB,CAAC8oE,EAAczjE,KACpE,GAAIA,IAAUkkB,GAA0BW,QAAS,KAAAkxE,EAC/C,MAAMoJ,EAAcvpG,EAAMqG,MAAMmjG,YAChC,OAAoBhhG,EAAAA,GAAAA,KAAK+gG,GAAaniG,EAAAA,EAAAA,GAAS,CAAC,EAAkB,QAAjB+4F,EAAEngG,EAAMsG,iBAAS,IAAA65F,OAAA,EAAfA,EAAiBqJ,aACtE,CACA,OAAO37B,CAAY,GAClB,CAAC7tE,EAAMqG,MAAMmjG,YAA4B,QAAjBhL,EAAEx+F,EAAMsG,iBAAS,IAAAk4F,OAAA,EAAfA,EAAiBgL,eACxC,SACJtkE,GACEllC,EACEypG,EAAalyF,EAAWw8D,IACxB21B,EAAsB3kG,EAAAA,aAAkBosB,IAC5C,GAAyB,WAArBnxB,EAAMkoF,aAA4B/2D,EAAO+3E,qBAC3C,MAAO,CACLtqD,mBAAoB,CAAC,EACrBE,4BAA6B,CAAC,EAC9BC,8BAA+B,CAAC,GAGpC,MAAM/Y,EAAyBD,GAAuB9tB,GAChD2mC,EAAqB,CAAC,GACtB,qBACJsqD,GACE/3E,EACEw4E,EAAc,CAAC,EACf/yF,EAAS,CACb6nB,mBAAoB,KACpBC,yBAA0B,MAEtB8G,EAAOikE,EAAWj0F,QAAQyC,EAAOzC,QAAQxC,MAAMwyB,KAAKQ,wBAC1D,IAAK,IAAI7wB,EAAI,EAAGA,EAAIqwB,EAAKrxB,OAAQgB,GAAK,EAAG,CACvC,MAAM4F,EAAMyqB,EAAKrwB,GACX/C,EAAK8yB,EAAWA,EAASnqB,GAAOA,EAAI3I,GAC1C82F,EAAqBnuF,OAAK5T,EAAWyP,GACrC,MAAMgzF,EAAehrE,GAAgB,CAAChoB,EAAO6nB,oBAAqB,CAAC7nB,EAAO8nB,0BAA2BvN,EAAOyK,YAAa3jB,EAAQ0xF,GACjI/qD,EAAmBxsC,GAAMw3F,CAC3B,CACA,MAAM/gE,EAAW,mCAKjB,OAJe7C,EAAuB6C,KAEpC+V,EAAmB/V,IAAY,GAE1B,CACL+V,qBACAE,4BAA6B,CAAC,EAC9BC,8BAA+B,CAAC,EACjC,GACA,CAAC9mC,EAAQjY,EAAMkoF,WAAYhjD,EAAUukE,IACxC/+B,GAA6BzyD,EAAQ,aAAc6vF,GACnDp9B,GAA6BzyD,EAAQ,cAAe+hE,GACpDtP,GAA6BzyD,EAAQ,eAAgBmiE,GACrD1P,GAA6BzyD,EAAQ,kBAAmBioF,GACxDxsB,GAAiCz7D,EAAQsmD,GAAuB,YAAamrC,GAC7Eh2B,GAAiCz7D,EAAQsmD,GAAuB,4BAA6BsV,IAK7F,MAAMg2B,EAAsB9kG,EAAAA,aAAkB,KAC5Cy2D,EAAOR,MAAM,wDACb,MAAMp/B,EAAc6iB,GAAwBxmC,GACtC6/B,EAAgBnsB,GAAyB1T,GACzCywF,EAAiB9sE,EAAYlB,MAAMr3B,QAAO6e,GAAQA,EAAK6J,OAAS+rB,EAAc51B,EAAK6J,SACrF28E,EAAev0F,OAASynB,EAAYlB,MAAMvmB,QAC5C8D,EAAOzC,QAAQ0yF,gBAAe9gG,EAAAA,EAAAA,GAAS,CAAC,EAAGw0B,EAAa,CACtDlB,MAAOguE,IAEX,GACC,CAACzwF,EAAQujD,IACNunC,EAAgCh+F,EAAAA,aAAkB24D,IACnC,cAAfA,GACFzlD,EAAOzC,QAAQwzF,uBACjB,GACC,CAAC/wF,IACE6xF,EAA+B/kG,EAAAA,aAAkB,KACrDkT,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBgsC,kBAAmB80B,GAA0B77D,EAAQjF,OAGzDiF,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,IAIJyY,GAAuBzY,EAAQ,UAAW0vF,GAC1Cj3E,GAAuBzY,EAAQ,gBAAiB4xF,GAChDn5E,GAAuBzY,EAAQ,gCAAiC8qF,GAChEryE,GAAuBzY,EAAQ,qBAAsB6xF,GACrDp5E,GAAuBzY,EAAQ,+BAA+B,KAC5D,MAAM2jB,EAAc6iB,GAAwBxmC,GACxC2jB,EAAYf,mBAAqB2C,GAAsC5B,IAEzE3jB,EAAOzC,QAAQwzF,uBACjB,IAMFv+B,IAAe,KACbxyD,EAAOzC,QAAQwzF,uBAAuB,IAMxC79E,GAAkB,UACUhkB,IAAtBnH,EAAM47B,aACR3jB,EAAOzC,QAAQ0yF,eAAeloG,EAAM47B,YACtC,GACC,CAAC3jB,EAAQujD,EAAQx7D,EAAM47B,aAAa,EuC5SvC6rE,CAAcxvF,EAAQjY,GlB5CM+pG,EAAC9xF,EAAQjY,KAAU,IAAAy5E,EAC/C,MAAMje,EAASsH,GAAc7qD,EAAQ,kBACrCA,EAAOzC,QAAQ4pD,qBAAqB,CAClCE,QAAS,YACTQ,UAAW9/D,EAAM20B,UACjBqrC,aAAchgE,EAAMgqG,kBACpBrqC,cAAexhB,GACf8hB,YAAa,oBAEf,MAAMgqC,EAAkBllG,EAAAA,aAAkB,CAACgnB,EAAOuyB,KAChD,MAAM3pB,EAAYwpB,GAAsBlmC,GAClCiyF,EAAcv1E,EAAU3Q,WAAU7K,GAAKA,EAAE4S,QAAUA,IACzD,IAAIo+E,EAAe,IAAIx1E,GAUvB,OATIu1E,GAAe,EACK,OAAV,OAAR5rD,QAAQ,IAARA,OAAQ,EAARA,EAAUxX,MACZqjE,EAAalmF,OAAOimF,EAAa,GAEjCC,EAAalmF,OAAOimF,EAAa,EAAG5rD,GAGtC6rD,EAAe,IAAIx1E,EAAW2pB,GAEzB6rD,CAAY,GAClB,CAAClyF,IACEmyF,EAAiBrlG,EAAAA,aAAkB,CAAC8oB,EAAKw8E,KAAsB,IAAAC,EACnE,MACMC,EADYpsD,GAAsBlmC,GACbuM,MAAKrL,GAAKA,EAAE4S,QAAU8B,EAAI9B,QACrD,GAAIw+E,EAAU,KAAAC,EACZ,MAAMC,OAAiCtjG,IAAtBkjG,EAAkCx1E,GAAyC,QAAjB21E,EAAC38E,EAAIiH,oBAAY,IAAA01E,EAAAA,EAAIxqG,EAAM80B,aAAcy1E,EAASzjE,MAAQujE,EACrI,YAAoBljG,IAAbsjG,OAAyBtjG,GAAYC,EAAAA,EAAAA,GAAS,CAAC,EAAGmjG,EAAU,CACjEzjE,KAAM2jE,GAEV,CACA,MAAO,CACL1+E,MAAO8B,EAAI9B,MACX+a,UAA4B3/B,IAAtBkjG,EAAkCx1E,GAAyC,QAAjBy1E,EAACz8E,EAAIiH,oBAAY,IAAAw1E,EAAAA,EAAItqG,EAAM80B,cAAgBu1E,EAC5G,GACA,CAACpyF,EAAQjY,EAAM80B,eACZgzE,EAAoB/iG,EAAAA,aAAkB,CAACw7F,EAAiBttE,IAC9C,MAAVA,IAAsC,IAApBA,EAAO0N,UAAsB3gC,EAAM+nF,qBAChDwY,GAEYttE,EAAO6B,cAAgB90B,EAAM80B,cACjC5G,MAAKhM,KAAUA,IACvB,IAAIq+E,EAAiB,sBAEvBA,GACN,CAACvgG,EAAM80B,aAAc90B,EAAM+nF,uBAKxBia,EAAej9F,EAAAA,aAAkB,KACrCkT,EAAOzC,QAAQgD,UAASxF,IACtB,GAA0B,WAAtBhT,EAAM6oF,YAER,OADArtB,EAAOR,MAAM,kDACN5zD,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB4hB,SAASxtB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAM4hB,QAAS,CACnCkpB,WAAY7T,GAAuB9D,GAAoBluB,GAAS6vB,IAAoB,OAI1F,MACM4iE,ElIdiCC,EAACh2E,EAAW1c,KACvD,MAAM2yF,EAAiBj2E,EAAUhxB,KAAIue,GAtDjB2oF,EAACvsD,EAAUrmC,KAC/B,MAAMkU,EAASlU,EAAOzC,QAAQme,UAAU2qB,EAASvyB,OACjD,IAAKI,GAA4B,OAAlBmyB,EAASxX,KACtB,OAAO,KAET,IAAIzjB,EAMJ,OAJEA,EADE8I,EAAO2+E,kBACI3+E,EAAO2+E,kBAAkBxsD,EAASxX,MAfT,SAiBlBwX,EAASxX,KAAQ,kBAAc,EAAI3a,EAAO8U,kBAAe/sB,UAAQ,EAAGiY,EAAO8U,eAE5F5d,EAUE,CACL0nF,kBARwB34F,IAAM,CAC9BA,KACA2Z,MAAOI,EAAOJ,MACdge,QAAS9xB,EAAOzC,QAAQs2B,WAAW15B,GACnChI,MAAO6N,EAAOzC,QAAQiqE,aAAartE,EAAI+Z,EAAOJ,OAC9CuyC,IAAKrmD,EAAOzC,UAIZ6N,cAXO,IAYR,EA8B4CwnF,CAAc3oF,EAAMjK,KAAS5U,QAAOggB,KAAgBA,IACjG,OAA8B,IAA1BunF,EAAez2F,OACV,KAEF62F,GAAWA,EAAQrnG,KAAIymC,IAAQ,CACpCA,OACAjZ,OAAQy5E,EAAejnG,KAAIo8D,GAAMA,EAAGgrC,kBAAkB3gE,EAAKh4B,UACzD00B,MAAK,CAAC7vB,EAAGC,KAAM+zF,OA3BiBC,EA2BWj0F,EA3BLk0F,EA2BQj0F,EAAnB0zF,EA1BR5hF,QAAO,CAACq1B,EAAKn8B,EAAMgH,KACxC,GAAY,IAARm1B,EAEF,OAAOA,EAET,MAAM+sD,EAAkBF,EAAK/5E,OAAOjI,GAC9BmiF,EAAkBF,EAAKh6E,OAAOjI,GAEpC,OADMhH,EAAKmB,WAAW+nF,EAAgBhhG,MAAOihG,EAAgBjhG,MAAOghG,EAAiBC,EAC3E,GACT,GAVeJ,IAAkBC,EAAMC,CA2BU,IAAExnG,KAAIoX,GAAOA,EAAIqvB,KAAKh4B,IAAG,EkIMrDu4F,CADFxsD,GAAsBnrC,EAAOiF,EAAOzC,QAAQkU,YACDzR,GACvD6lC,EAAa7lC,EAAOzC,QAAQ+zB,uBAAuB,UAAW,CAClEmhE,gBAEF,OAAOtjG,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB4hB,SAASxtB,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAM4hB,QAAS,CACnCkpB,gBAEF,IAEJ7lC,EAAOzC,QAAQ26B,aAAa,iBAC5Bl4B,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,EAAQujD,EAAQx7D,EAAM6oF,cACpByiB,EAAevmG,EAAAA,aAAkB0nB,IAChB0xB,GAAsBlmC,KACtBwU,IACnB+uC,EAAOR,MAAM,sBACb/iD,EAAOzC,QAAQgD,SAASkc,GAAwBjI,EAAOzsB,EAAMy0B,gCAC7Dxc,EAAOzC,QAAQ4qD,cACfnoD,EAAOzC,QAAQwsF,eACjB,GACC,CAAC/pF,EAAQujD,EAAQx7D,EAAMy0B,gCACpB82E,EAAaxmG,EAAAA,aAAkB,CAACgnB,EAAO6oB,EAAW42D,KACtD,MAAMr/E,EAASlU,EAAOzC,QAAQme,UAAU5H,GAClCuyB,EAAW8rD,EAAej+E,EAAQyoB,GACxC,IAAIjgB,EAEFA,GADG62E,GAAwBxrG,EAAMy0B,8BACH,OAAV,OAAR6pB,QAAQ,IAARA,OAAQ,EAARA,EAAUxX,MAAe,GAAK,CAACwX,GAE/B2rD,EAAgB99E,EAAOJ,MAAOuyB,GAE5CrmC,EAAOzC,QAAQ81F,aAAa32E,EAAU,GACrC,CAAC1c,EAAQgyF,EAAiBG,EAAgBpqG,EAAMy0B,gCAC7Cg3E,EAAe1mG,EAAAA,aAAkB,IAAMo5C,GAAsBlmC,IAAS,CAACA,IACvEg7D,EAAgBluE,EAAAA,aAAkB,IACnBg5C,GAA6B9lC,GAC9BtU,KAAIoX,GAAOA,EAAI0R,SAChC,CAACxU,IACEyzF,EAAkB3mG,EAAAA,aAAkB,IAAM64C,GAAyB3lC,IAAS,CAACA,IAC7E0zF,EAAuB5mG,EAAAA,aAAkBmkB,GAASjR,EAAOzC,QAAQk2F,kBAAkBxiF,IAAQ,CAACjR,IAUlGksC,GAAiBlsC,EATD,CACdwzF,eACAx4B,gBACAy4B,kBACAC,uBACAL,eACAC,aACAvJ,gBAEgC,UAKlC,MAAMhoB,EAA2Bj1E,EAAAA,aAAkB,CAACk1E,EAAW5Y,KAAY,IAAA2J,EACzE,MAAM4gC,EAAoBztD,GAAsBlmC,GAUhD,OAPCopD,EAAQ8Y,uBAEU,MAAnBn6E,EAAM20B,WAEoC,OAAxB,QAAlBq2C,EAAAhrE,EAAM05C,oBAAY,IAAAsxB,GAAS,QAATA,EAAlBA,EAAoBp2C,eAAO,IAAAo2C,OAAA,EAA3BA,EAA6Br2C,YAE7Bi3E,EAAkBz3F,OAAS,GAIpB/M,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAW,CAC7BrlD,QAAS,CACPD,UAAWi3E,KAJN3xB,CAMP,GACD,CAAChiE,EAAQjY,EAAM20B,UAA6B,QAApB8kD,EAAEz5E,EAAM05C,oBAAY,IAAA+/B,GAAS,QAATA,EAAlBA,EAAoB7kD,eAAO,IAAA6kD,OAAA,EAA3BA,EAA6B9kD,YACpDylD,EAA4Br1E,EAAAA,aAAkB,CAACosB,EAAQkwC,KAAY,IAAAgZ,EACvE,MAAM1lD,EAA0C,QAAjC0lD,EAAGhZ,EAAQkZ,eAAe3lD,eAAO,IAAAylD,OAAA,EAA9BA,EAAgC1lD,UAClD,OAAiB,MAAbA,EACKxD,GAETlZ,EAAOzC,QAAQgD,SAASkc,GAAwBC,EAAW30B,EAAMy0B,iCAC1DrtB,EAAAA,EAAAA,GAAS,CAAC,EAAG+pB,EAAQ,CAC1Bm4E,UAAW,IAAIn4E,EAAOm4E,UAAWrxF,EAAOzC,QAAQwsF,gBAChD,GACD,CAAC/pF,EAAQjY,EAAMy0B,gCACZo3E,EAAoB9mG,EAAAA,aAAkBosB,IAC1C,MAAM+sB,EAAU/X,GAAoBluB,GAC9B2wB,EAAgBsV,EAAQpW,IACxBgkE,EAAiB36E,EAAOu5E,YAAcv5E,EAAOu5E,YAAY9hE,EAAc/iC,SAASlC,KAAIm2D,GAAW5b,EAAQ4b,MAAa,IAAIlxB,EAAc/iC,UAI5I,OAH8B,MAA1B+iC,EAAcC,UAChBijE,EAAe9jF,KAAK4gB,EAAcC,UAE7BijE,CAAc,GACpB,CAAC7zF,IACJyyD,GAA6BzyD,EAAQ,cAAe+hE,GACpDtP,GAA6BzyD,EAAQ,eAAgBmiE,GACrD1G,GAAiCz7D,EAAQsmD,GAAuB,UAAWstC,GAK3E,MAAME,EAA0BhnG,EAAAA,aAAkB,CAAAK,EAG/CiO,KAAU,IAHsC,MACjD0Y,EAAK,OACLkH,GACD7tB,EACC,IAAK6tB,EAAO0N,UAAY3gC,EAAM+nF,qBAC5B,OAEF,MAAMyjB,EAAuBn4F,EAAMi1D,UAAYj1D,EAAM40D,SAAW50D,EAAM20D,QACtEujC,EAAWx/E,OAAO5kB,EAAWqkG,EAAqB,GACjD,CAACD,EAAYvrG,EAAM+nF,uBAChBrQ,EAA4B3yE,EAAAA,aAAkB,CAAA5D,EAGjDkS,KAAU,IAHwC,MACnD0Y,EAAK,OACLkH,GACD9xB,EACM8xB,EAAO0N,WAAY3gC,EAAM+nF,uBAIZ,UAAd10E,EAAM/P,KAAoB+P,EAAM20D,SAAY30D,EAAM40D,SACpDsjC,EAAWx/E,OAAO5kB,EAAWkM,EAAMi1D,UACrC,GACC,CAACijC,EAAYvrG,EAAM+nF,uBAChB8hB,EAAsB9kG,EAAAA,aAAkB,KAE5C,MAAM4vB,EAAYwpB,GAAsBlmC,GAClC+zF,EAAgBrgF,GAAyB1T,GAC/C,GAAI0c,EAAUxgB,OAAS,EAAG,CACxB,MAAM6qE,EAAWrqD,EAAUtxB,QAAOi7C,GAAY0tD,EAAc1tD,EAASvyB,SACjEizD,EAAS7qE,OAASwgB,EAAUxgB,QAC9B8D,EAAOzC,QAAQ81F,aAAatsB,EAEhC,IACC,CAAC/mE,IACE8qF,EAAgCh+F,EAAAA,aAAkB24D,IACnC,YAAfA,GACFzlD,EAAOzC,QAAQwsF,cACjB,GACC,CAAC/pF,IACJyyD,GAA6BzyD,EAAQ,aAAc6vF,GACnDp3E,GAAuBzY,EAAQ,oBAAqB8zF,GACpDr7E,GAAuBzY,EAAQ,sBAAuBy/D,GACtDhnD,GAAuBzY,EAAQ,UAAWA,EAAOzC,QAAQwsF,cACzDtxE,GAAuBzY,EAAQ,gBAAiB4xF,GAChDn5E,GAAuBzY,EAAQ,gCAAiC8qF,GAKhEt4B,IAAe,KACbxyD,EAAOzC,QAAQwsF,cAAc,IAM/B72E,GAAkB,UACQhkB,IAApBnH,EAAM20B,WACR1c,EAAOzC,QAAQ81F,aAAatrG,EAAM20B,UACpC,GACC,CAAC1c,EAAQjY,EAAM20B,WAAW,EkBjL7Bo1E,CAAe9xF,EAAQjY,GhD/DKisG,EAACh0F,EAAQjY,KAAU,IAAAy5E,EAC/C,MAAMje,EAASsH,GAAc7qD,EAAQ,cACrCA,EAAOzC,QAAQ4pD,qBAAqB,CAClCE,QAAS,UACTQ,UAAW9/D,EAAM0qB,QACjBs1C,aAAchgE,EAAMksG,gBACpBvsC,cAAel1C,GACfw1C,YAAa,kBAEf,MAAMksC,EAAa7vD,IAAiB8vD,IACX3hF,GAAoBxS,EAAOzC,QAAQxC,SACnCo5F,IAGvB5wC,EAAOR,MAAM,uBAADr6D,OAAwByrG,IACpCn0F,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnD0X,QAAS0hF,MACR,IAKLjoD,GAAiBlsC,EAHE,CACjBk0F,cAEmC,UACrC,MAAMnyB,EAA2Bj1E,EAAAA,aAAkB,CAACk1E,EAAW5Y,KAAY,IAAA2J,EACzE,MAAMqhC,EAAkB5hF,GAAoBxS,EAAOzC,QAAQxC,OAQ3D,OALCquD,EAAQ8Y,uBAEQ,MAAjBn6E,EAAM0qB,SAEyB,OAAb,QAAlBsgD,EAAAhrE,EAAM05C,oBAAY,IAAAsxB,OAAA,EAAlBA,EAAoBtgD,SAEXuvD,GAEF7yE,EAAAA,EAAAA,GAAS,CAAC,EAAG6yE,EAAW,CAC7BvvD,QAAS2hF,GACT,GACD,CAACp0F,EAAQjY,EAAM0qB,QAA2B,QAApB+uD,EAAEz5E,EAAM05C,oBAAY,IAAA+/B,OAAA,EAAlBA,EAAoB/uD,UACzC0vD,EAA4Br1E,EAAAA,aAAkB,CAACosB,EAAQkwC,KAAY,IAAAgZ,EACvE,MAAMiyB,EAAwC,QAAtBjyB,EAAAhZ,EAAQkZ,sBAAc,IAAAF,GAAtBA,EAAwB3vD,QAAU22C,EAAQkZ,eAAe7vD,QAAUD,GAAoBxS,EAAOzC,QAAQxC,OAI9H,OAHAiF,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnD0X,QAAS4hF,MAEJn7E,CAAM,GACZ,CAAClZ,IACJyyD,GAA6BzyD,EAAQ,cAAe+hE,GACpDtP,GAA6BzyD,EAAQ,eAAgBmiE,GACrDr1E,EAAAA,WAAgB,KACV/E,EAAM0qB,SACRzS,EAAOzC,QAAQ22F,WAAWnsG,EAAM0qB,QAClC,GACC,CAACzS,EAAQjY,EAAM0qB,SAAS,EgDY3BuhF,CAAeh0F,EAAQjY,GACvBizF,GAAoBh7E,EAAQjY,GAC5B25E,GAAkB1hE,EAAQjY,GX1CGusG,EAACt0F,EAAQjY,KACtC,MACE+qF,aAAcyhB,EAAgB,cAC9BC,EAAa,sBACbC,GACE1sG,EACE2sG,EAAc10F,EAAOzC,QAAQ2zB,OAAOoa,SAAS8oC,QAC7CugB,EAAuB7nG,EAAAA,QAAc,GACrCoqD,EAAuBpqD,EAAAA,QAAa,GACpC8nG,EAAoB9nG,EAAAA,QAAa,GACjCg2C,EAAgBziC,EAAgBL,EAAQ0S,IACxCiR,EAActjB,EAAgBL,EAAQwmC,IACtCyvB,EAAkB51D,EAAgBL,EAAQgpC,IAC1CtsB,EAAYrc,EAAgBL,EAAQkmC,IACpC8H,EAAcxD,GAAmBxqC,EAAQjY,GACzC4gB,EAAatI,EAAgBL,EAAQgvB,IACrC0E,EAAYrzB,EAAgBL,GAAQ,IAAMe,EAAuBf,EAAOzC,QAAQxC,OAAO24B,YAgBvFmhE,EAAqB/nG,EAAAA,aAAkBgW,IAG3C,MAAMsxC,EAAgBrzC,EAAuBf,EAAOzC,QAAQxC,OAAO24B,UAE7DnoB,EAAQvL,EAAOzC,QAAQu3F,kBAAkBhyF,EAAI3I,IACnD,GAAKo6F,EAGE,CACL,MAAMQ,EAAoBR,GAAiBplG,EAAAA,EAAAA,GAAS,CAAC,EAAG2T,EAAK,CAC3DggC,mBAEF,GAA0B,SAAtBiyD,EAA8B,CAChC,GAAIxpF,EAAMypF,sBAAuB,CAC/B,MAAMC,EAAqBR,EAAwBA,GAAsBtlG,EAAAA,EAAAA,GAAS,CAAC,EAAG2T,EAAK,CACzFggC,mBACIsR,EAGN7oC,EAAM6yC,QAA4B,OAAlB62C,QAAkB,IAAlBA,EAAAA,EAAsB7gD,CACxC,CACA8C,EAAqB35C,SAAU,EAC/BgO,EAAM7J,YAAa,CACrB,MAEE6J,EAAM6yC,QAAUnqB,GAAkB8gE,EAAmB3gD,GACrD7oC,EAAMypF,uBAAwB,EAC9BzpF,EAAM7J,YAAa,CAEvB,MAvBE6J,EAAM6yC,QAAUhK,EAChB7oC,EAAMypF,uBAAwB,EAuBhC,GAAIR,EAAe,KAAAU,EAAAC,EACjB,MAAMC,EAA6Bp1F,EAAOzC,QAAQ2oF,iCAAiCpjF,EAAI3I,IACjFuM,EAAU8tF,GAAcrlG,EAAAA,EAAAA,GAAS,CAAC,EAAG2T,EAAK,CAC9C2xC,eAA+C,IAA/B2gD,EAChB1gD,cAAe0gD,IAA+BpnD,EAAYzgB,KAAKrxB,OAAS,EACxEk5F,gCAEF7pF,EAAM8pF,WAAwB,QAAdH,EAAGxuF,EAAQ3a,WAAG,IAAAmpG,EAAAA,EAAI,EAClC3pF,EAAM+pF,cAA8B,QAAjBH,EAAGzuF,EAAQra,cAAM,IAAA8oG,EAAAA,EAAI,CAC1C,MACE5pF,EAAM8pF,WAAa,EACnB9pF,EAAM+pF,cAAgB,EAGxB,OADAt1F,EAAOzC,QAAQuZ,6BAA6B,YAAavL,EAAOzI,GACzDyI,CAAK,GACX,CAACvL,EAAQguC,EAAYzgB,KAAKrxB,OAAQq4F,EAAkBE,EAAuB/gE,EAAW8gE,EAAe1xD,IAClGyyD,EAAkBzoG,EAAAA,aAAkB,KACxCoqD,EAAqB35C,SAAU,EAC/BoL,EAAW5c,IAAI4I,QAAQkgG,GACvBlsF,EAAWtc,OAAOsI,QAAQkgG,GAC1B,MAAMv/E,EAAY,GACZq9B,EAAyB3E,EAAYzgB,KAAKxc,QAAO,CAACgF,EAAKjT,KAC3DwS,EAAUvF,KAAKgG,GACf,MAAMxK,EAAQspF,EAAmB/xF,GAEjC,OAAOiT,GADOxK,EAAM6yC,QAAU7yC,EAAM8pF,WAAa9pF,EAAM+pF,cAAgB/pF,EAAMiqF,OAC3D,GACjB,GACEt+C,EAAqB35C,UAExBo3F,EAAqBp3F,QAAUirB,KAEjCxoB,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBuwC,SAAU,CACRqH,yBACAr9B,iBAINs/E,EAAkBr3F,SAAU,CAAI,GAC/B,CAACyC,EAAQ2I,EAAYqlC,EAAYzgB,KAAMsnE,IA0BpCY,EAAiBn2F,GAAW,IAAM,IAAIwvC,IAAejjC,IACzD,IAAK,IAAI3O,EAAI,EAAGA,EAAI2O,EAAQ3P,OAAQgB,GAAK,EAAG,CAC1C,MAAMqO,EAAQM,EAAQ3O,GAChB7S,EAASkhB,EAAMmqF,eAAiBnqF,EAAMmqF,cAAcx5F,OAAS,EAAIqP,EAAMmqF,cAAc,GAAGC,UAAYpqF,EAAMqqF,YAAYvrG,OACtHyiC,EAAQvhB,EAAM/P,OAAOq6F,SAC3B71F,EAAOzC,QAAQu4F,mCAAmChpE,EAAOziC,EAC3D,CACKuqG,EAAkBr3F,SACrByC,EAAOzC,QAAQ2rD,iCAAiC,YAClD,MACE3rD,QAMJo1D,GAA2B3yD,EAAQ,YAAau1F,GAIhDzoG,EAAAA,WAAgB,KACdyoG,GAAiB,GAChB,CAAC5xE,EAAasyC,EAAiBv5C,EAAW64E,IAC7C,MAAMQ,EAAc,CAClBzhD,sBAjDmBxnB,IAAS,IAAAkpE,EAAAC,EAC5B,OAAsC,QAAtCD,EAA6B,QAA7BC,EAAOvB,EAAYlpF,IAAIshB,UAAM,IAAAmpE,OAAA,EAAtBA,EAAwB73C,eAAO,IAAA43C,EAAAA,EAAItiE,CAAS,EAiDnDwiE,iCAlC8BjlF,IAC1BimC,EAAqB35C,SAAW0T,EAAQ0jF,EAAqBp3F,UAC/Do3F,EAAqBp3F,QAAU0T,EACjC,EAgCA6kF,mCAhDgCK,CAACh8F,EAAI9P,KACrC,MAAMkhB,EAAQvL,EAAOzC,QAAQu3F,kBAAkB36F,GACzCi8F,EAAY7qF,EAAM6yC,UAAY/zD,EACpCkhB,EAAMypF,uBAAwB,EAC9BzpF,EAAM6yC,QAAU/zD,EAChBuqG,EAAkBr3F,UAAlBq3F,EAAkBr3F,SAAa64F,EAAS,EA4CxCC,gBA/BsBA,KACtB3B,EAAY/oF,QACZ4pF,GAAiB,GA+Bbe,EAAqB,CACzBf,kBACAgB,iBApBuBA,CAAC7qC,EAAS5+B,KACjC4+B,EAAQmqC,SAAW/oE,EACnB2oE,EAAexmD,QAAQyc,GAChB,IAAM+pC,EAAevhB,UAAUxoB,IAkBtCrX,iBA/CuBl6C,IAAM,IAAAq8F,EAAAC,EAC7B,OAAsC,QAAtCD,EAA0B,QAA1BC,EAAO/B,EAAYlpF,IAAIrR,UAAG,IAAAs8F,OAAA,EAAnBA,EAAqB/0F,kBAAU,IAAA80F,GAAAA,CAAS,EA+C/C1B,kBAjJwBhoE,IACxB,IAAIvhB,EAAQmpF,EAAYlpF,IAAIshB,GAY5B,YAXc59B,IAAVqc,IACFA,EAAQ,CACN6yC,QAAS1qB,EACT2hE,WAAY,EACZC,cAAe,EACfE,OAAQ,EACR9zF,YAAY,EACZszF,uBAAuB,GAEzBN,EAAY5mF,IAAIgf,EAAOvhB,IAElBA,CAAK,EAqIZwtC,wBA9C8BA,IACvB47C,EAAqBp3F,SA+C9B2uC,GAAiBlsC,EAAQ+1F,EAAa,UACtC7pD,GAAiBlsC,EAAQs2F,EAAoB,UAAU,EW3HvDhC,CAAgBt0F,EAAQjY,GjBhCG2uG,EAAC12F,EAAQjY,KACpC,MAAMwsB,GAAQinB,EAAAA,GAAAA,KACR+nB,EAASsH,GAAc7qD,EAAQ,iBAC/B22F,EAAS32F,EAAOzC,QAAQs+C,0BACxBxN,EAAqBruC,EAAOzC,QAAQ8wC,mBACpCI,EAAgCzuC,EAAOzC,QAAQkxC,8BAC/CF,EAA8BvuC,EAAOzC,QAAQgxC,4BAC7C9G,EAAoBpnC,EAAgBL,EAAQ4mC,IAC5Ck4B,EAAkBhyE,EAAAA,aAAkBosB,IACxC,MAAMlY,EAAaD,EAAuBf,EAAOzC,QAAQxC,OACnD0yB,EAAgBD,GAAqBxtB,GACrCoU,EAAiBrsB,EAAM86C,kBAAoB,CAACmK,GAAuBhtC,EAAOzC,QAAQxC,QAAUkZ,GAAqCjU,GAEvI,GAD0C,MAAnBkZ,EAAOk3B,UACW,IAAlB3iB,GAAiD,IAA1BrZ,EAAelY,OAC3D,OAAO,EAETqnD,EAAOR,MAAM,4BAADr6D,OAA6BwwB,EAAOk3B,SAAQ,WAAA1nD,OAAUwwB,EAAO0jD,SAAQ,MACjF,IAAIg6B,EAAoB,CAAC,EACzB,QAAwB1nG,IAApBgqB,EAAO0jD,SAAwB,CACjC,MAAM9oB,EAAkBz+B,GAA4BrV,GACpD,IAAI62F,EACJ,GAA+B,qBAApB39E,EAAOk3B,SAA0B,KAAA0mD,EAC1C,MAAMhqE,EAA0C,QAArCgqE,EAAGrvD,EAAkBvuB,EAAOk3B,iBAAS,IAAA0mD,OAAA,EAAlCA,EAAoC38F,GAC5Cm+C,EAAkBt4C,EAAOzC,QAAQg7C,4BAA4BzrB,EAAO5T,EAAO0jD,UAC7EtkB,IAAoBA,EAAgBE,mBACtCq+C,EAAYv+C,EAAgBo8B,UAAU/hF,MAE1C,CACyB,qBAAdkkG,IACTA,EAAYziF,EAAe8E,EAAO0jD,UAAUpnD,eAG9CohF,EAAkBrqG,KAAO2iF,GAAe,CACtCC,cAAenuE,EAAWo/B,kBAAkBztC,MAC5C6wC,eAAgBjxC,KAAK6+C,IAAI/C,EAAmB9wC,QAAQyzC,YACpDo+B,YAAaynB,EACbxnB,cAAev7B,EAAgB56B,EAAO0jD,WAE1C,CACA,QAAwB1tE,IAApBgqB,EAAOk3B,SAAwB,CACjC,MAAM9E,EAAWD,GAAqBrrC,EAAOzC,QAAQxC,OAC/C0tC,EAAOa,GAAiBtpC,GACxBwoC,EAAWe,GAAqBvpC,GAChC+2F,EAAgBhvG,EAAMkhD,WAA+B/vB,EAAOk3B,SAAW3H,EAAOD,EAA3CtvB,EAAOk3B,SAC1C4mD,EAAqB1rD,EAASh2B,UAAUyhF,EAAe,GAAKzrD,EAASh2B,UAAUyhF,EAAe,GAAKzrD,EAASh2B,UAAUyhF,GAAgBzrD,EAASqH,uBAAyBrH,EAASh2B,UAAUyhF,GACjMH,EAAkB7qG,IAAMmjF,GAAe,CACrCC,cAAenuE,EAAW2iC,kBAAkBt5C,OAC5Cm5C,eAAgB6K,EAAmB9wC,QAAQwzC,UAC3Cq+B,YAAa4nB,EACb3nB,cAAe/jC,EAASh2B,UAAUyhF,IAEtC,CAEA,OADAH,EAAoB52F,EAAOzC,QAAQuZ,6BAA6B,kBAAmB8/E,EAAmB19E,SAChEhqB,WAA3B0nG,EAAkBrqG,WAAuD2C,WAA1B0nG,EAAkB7qG,OAC1EiU,EAAOzC,QAAQknC,OAAOmyD,IACf,EAEG,GACX,CAACrzC,EAAQvjD,EAAQquC,EAAoBtmD,EAAMkhD,WAAYxB,EAAmB1/C,EAAM86C,oBAC7E4B,EAAS33C,EAAAA,aAAkBosB,IAC/B,GAAIm1B,EAAmB9wC,SAAWkxC,EAA8BlxC,cAA2BrO,IAAhBgqB,EAAO3sB,MAAsBoqG,EAAOp5F,QAAS,CACtH,MAAMo/B,EAAYpoB,GAAS,EAAI,EAC/BoiF,EAAOp5F,QAAQyzC,WAAa93B,EAAO3sB,KACnC8hD,EAAmB9wC,QAAQyzC,WAAarU,EAAYzjB,EAAO3sB,KAC3DkiD,EAA8BlxC,QAAQyzC,WAAarU,EAAYzjB,EAAO3sB,KACtEg3D,EAAOR,MAAM,mBAADr6D,OAAoBwwB,EAAO3sB,MACzC,CACI8hD,EAAmB9wC,SAAWgxC,EAA4BhxC,cAA0BrO,IAAfgqB,EAAOntB,MAC9EsiD,EAAmB9wC,QAAQwzC,UAAY73B,EAAOntB,IAC9CwiD,EAA4BhxC,QAAQwzC,UAAY73B,EAAOntB,IACvDw3D,EAAOR,MAAM,kBAADr6D,OAAmBwwB,EAAOntB,OAExCw3D,EAAOR,MAAM,8CAA8C,GAC1D,CAAC1U,EAAoBI,EAA+BF,EAA6Bh6B,EAAOoiF,EAAQpzC,IAC7F0zC,EAAoBnqG,EAAAA,aAAkB,IACnB,OAAlBuhD,QAAkB,IAAlBA,GAAAA,EAAoB9wC,QAMlB,CACLxR,IAAKsiD,EAAmB9wC,QAAQwzC,UAChCxkD,KAAM8hD,EAAmB9wC,QAAQyzC,YAP1B,CACLjlD,IAAK,EACLQ,KAAM,IAOT,CAAC8hD,IAMJnC,GAAiBlsC,EALC,CAChBykC,SACAq6B,kBACAm4B,qBAEkC,SAAS,EiB1D7CP,CAAc12F,EAAQjY,GrD/DSiY,KAC/B,MAAMujD,EAASsH,GAAc7qD,EAAQ,qBAK/Bk3F,EAAiBpqG,EAAAA,aAAkBgnB,IACvC,MAAM0nC,EAAkBX,GAAuB76C,EAAOzC,QAAQxC,OACxD2F,EAEJoT,IADM,IAG+B0nC,EAAgBl9C,MAAQoC,IAAmB86C,EAAgB1nC,SAEhG9T,EAAOzC,QAAQgD,UAASxF,GAClBA,EAAM+/C,WAAWx8C,MAAQvD,EAAM+/C,WAAWhnC,QAAUA,EAC/C/Y,GAETwoD,EAAOR,MAAM,wBACN5zD,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB+/C,WAAY,CACVx8C,MAAM,EACNwV,cAIN9T,EAAOzC,QAAQ4xF,kBACfnvF,EAAOzC,QAAQ4qD,cACjB,GACC,CAACnoD,EAAQujD,IACN4zC,EAAiBrqG,EAAAA,aAAkB,KACvC,MAAM0uD,EAAkBX,GAAuB76C,EAAOzC,QAAQxC,OAC9D,GAAIygD,EAAgB1nC,MAAO,CACzB,MAAMo0B,EAAex0B,GAAyB1T,GACxCgU,EAAwBD,GAAkC/T,GAC1DyT,EAAgBF,GAAyBvT,GAC/C,IAAImqE,EAAe3uB,EAAgB1nC,MAQnC,GALKo0B,EAAaiiC,KAChBA,EAAe12D,EAAc,KAIa,IAAxCO,EAAsBm2D,GAAyB,CAEjD,MAAMitB,EAAuB3jF,EAAcroB,QAAO0oB,GAC5CA,IAAUq2D,IAG0B,IAAjCn2D,EAAsBF,KAEzBujF,EAAaD,EAAqBr6E,QAAQotD,GAChDA,EAAeitB,EAAqBC,EAAa,IAAMD,EAAqBC,EAAa,EAC3F,CACAr3F,EAAOzC,QAAQ2hE,qBAAqBiL,EACtC,CACA,MAAMzpE,EAAW,CACfpC,MAAM,EACNwV,WAAO5kB,IAEYwR,EAASpC,OAASk9C,EAAgBl9C,MAAQoC,EAASoT,QAAU0nC,EAAgB1nC,SAEhG9T,EAAOzC,QAAQgD,UAASxF,IACtBwoD,EAAOR,MAAM,uBACN5zD,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzB+/C,WAAYp6C,OAGhBV,EAAOzC,QAAQ4qD,cACjB,GACC,CAACnoD,EAAQujD,IACN8c,EAAmBvzE,EAAAA,aAAkBgnB,IACzCyvC,EAAOR,MAAM,sBACb,MAAMjI,EAAaD,GAAuB76C,EAAOzC,QAAQxC,OACpD+/C,EAAWx8C,MAAQw8C,EAAWhnC,QAAUA,EAG3CqjF,IAFAD,EAAepjF,EAGjB,GACC,CAAC9T,EAAQujD,EAAQ2zC,EAAgBC,IAMpCjrD,GAAiBlsC,EALK,CACpBk3F,iBACAC,iBACA92B,oBAEsC,UACxC5nD,GAAuBzY,EAAQ,oBAAqBm3F,GACpD1+E,GAAuBzY,EAAQ,uBAAwBA,EAAOzC,QAAQ45F,gBACtE1+E,GAAuBzY,EAAQ,2BAA4BA,EAAOzC,QAAQ45F,eAAe,EqDzBzFG,CAAkBt3F,GAClBk0D,GAAiBl0D,EAAQjY,GACzByuE,GAAmBx2D,EAAQjY,GAC3BspE,GAAiBrxD,EAAQjY,GACzBspF,GAAkBrxE,EAAQjY,GC9ErB,SAAuBiY,EAAQjY,GACpC8xB,GAAwB7Z,EAAQ,oBAAqBjY,EAAMwvG,qBAC3D19E,GAAwB7Z,EAAQ,0BAA2BjY,EAAMyvG,2BACjE39E,GAAwB7Z,EAAQ,0BAA2BjY,EAAM0vG,2BACjE59E,GAAwB7Z,EAAQ,mBAAoBjY,EAAM2vG,oBAC1D79E,GAAwB7Z,EAAQ,kBAAmBjY,EAAM4vG,mBACzD99E,GAAwB7Z,EAAQ,oBAAqBjY,EAAM6vG,qBAC3D/9E,GAAwB7Z,EAAQ,oBAAqBjY,EAAM8vG,qBAC3Dh+E,GAAwB7Z,EAAQ,YAAajY,EAAM+vG,aACnDj+E,GAAwB7Z,EAAQ,kBAAmBjY,EAAMgwG,mBACzDl+E,GAAwB7Z,EAAQ,cAAejY,EAAMiwG,eACrDn+E,GAAwB7Z,EAAQ,uBAAwBjY,EAAMkwG,wBAC9Dp+E,GAAwB7Z,EAAQ,sBAAuBjY,EAAMmwG,uBAC7Dr+E,GAAwB7Z,EAAQ,WAAYjY,EAAMowG,YAClDt+E,GAAwB7Z,EAAQ,YAAajY,EAAMqwG,aACnDv+E,GAAwB7Z,EAAQ,iBAAkBjY,EAAMswG,kBACxDx+E,GAAwB7Z,EAAQ,WAAYjY,EAAMuwG,YAClDz+E,GAAwB7Z,EAAQ,cAAejY,EAAMwwG,cACvD,CD6DEC,CAAcx4F,EAAQjY,GElFeiY,KACrC,MAAM+6D,EAAcjuE,EAAAA,aAAkB,WAAiB,IAAhBosB,EAAMjd,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE/C,OADsB+D,EAAOzC,QAAQuZ,6BAA6B,cAAe,CAAC,EAAGoC,EAEvF,GAAG,CAAClZ,IACE86D,EAAehuE,EAAAA,aAAkBw1E,IACpBtiE,EAAOzC,QAAQuZ,6BAA6B,eAAgB,CAC3Eu6E,UAAW,IACV,CACD/uB,mBAEO+uB,UAAU18F,SAAQmwB,IACzBA,GAAU,IAEZ9kB,EAAOzC,QAAQ4qD,aAAa,GAC3B,CAACnoD,IAKJksC,GAAiBlsC,EAJW,CAC1B+6D,cACAD,gBAE4C,SAAS,EF+DvD29B,CAAwBz4F,G9F7DnB,SAA+BA,EAAQjY,GAK5C,MAAM2wG,EAAoBv6D,IACxBn+B,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDywC,gBAAgBr8C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMywC,eAAgB,CACjDrN,UACAuN,kBAAmBvN,EACnByN,eAAgBzN,IAAYp2C,EAAM2Z,gBAEnC,EASC2kD,EAAM,CACVsyC,2BAA4BD,EAC5Bla,iCAT8BrgD,IAC9Bn+B,EAAOzC,QAAQgD,UAASxF,IAAS5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACnDywC,gBAAgBr8C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMywC,eAAgB,CACjDE,kBAAmBvN,OAEpB,GAML+N,GAAiBlsC,EAAQqmD,EAAK,UAO9Bv5D,EAAAA,WAAgB,KACd4rG,GAAmB3wG,EAAMwkD,sBAAsB,GAC9C,CAACxkD,EAAMwkD,sBAAuBxkD,EAAM2Z,YAEzC,C8F0BEk3F,CAAsB54F,EAAQjY,GD7EzB,SAAyBiY,EAAQjY,GAItC,MAAM8wG,EAAwBA,KAC5B74F,EAAOzC,QAAQgD,UAASxF,GACjBA,EAAMkyC,gBAGJ99C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBkyC,gBAAgB99C,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAMkyC,eAAgB,CACjDz3B,cAAe4rE,GAAmBphF,OAJ7BjF,GAOT,EAEEwtF,EAAiBz7F,EAAAA,OAAa,MAOpC2rB,GAAuBzY,EAAQ,2BANF2jC,IACvB4kD,EAAehrF,UAAYomC,EAAkBhxC,QAC/C41F,EAAehrF,QAAUomC,EAAkBhxC,MAC3CkmG,IACF,IAGFpgF,GAAuBzY,EAAQ,8BAA+B64F,GAK9D/rG,EAAAA,WAAgB,KACd,MAAMgsG,EAAa/wG,EAAMo5F,oBACrB2X,GACF94F,EAAOzC,QAAQgD,UAASxF,IACf5L,EAAAA,EAAAA,GAAS,CAAC,EAAG4L,EAAO,CACzBkyC,gBAAgB99C,EAAAA,EAAAA,GAAS,CAAC,EAAG2pG,EAAY,CACvCtjF,cAAe4rE,GAAmBphF,QAI1C,GACC,CAACA,EAAQjY,EAAMo5F,qBACpB,CCqCE4X,CAAgB/4F,EAAQjY,GACjBiY,CAAM,E,gBGxFR,MAAMg5F,GAA2B,CAEtCC,YAAa,UACbC,sBAAuB,oBAEvBC,eAAgB,UAChBC,oBAAqB,UACrBC,sBAAuB,UACvBC,uBAAwB,WACxBC,0BAA2B,cAE3BC,eAAgB,UAChBC,oBAAqB,iBAErBC,eAAgB,UAChBC,oBAAqB,eACrBC,0BAA2B,eAC3BC,0BAA2B,eAC3BC,4BAA6BC,GAAuB,GAAHrxG,OAAMqxG,EAAP,IAAVA,EAAsB,kBAA4B,kBAExFC,8BAA+B,eAC/BC,wBAAyB,SACzBC,kCAAmC,QAEnCC,cAAe,SACfC,mBAAoB,SACpBC,iBAAkB,kBAClBC,mBAAoB,QACpBC,mBAAoB,oBAEpBC,6BAA8B,SAC9BC,2BAA4B,aAC5BC,iCAAkC,gBAClCC,uBAAwB,QAExBC,qBAAsB,aACtBC,qBAAsB,aACtBC,2BAA4B,SAC5BC,yBAA0B,iBAC1BC,oBAAqB,WACrBC,uBAAwB,MACxBC,sBAAuB,KACvBC,mBAAoB,UACpBC,sBAAuB,QACvBC,4BAA6B,eAE7BC,uBAAwB,WACxBC,6BAA8B,mBAC9BC,qBAAsB,SACtBC,2BAA4B,iBAC5BC,yBAA0B,cAC1BC,uBAAwB,YACxBC,iBAAkB,KAClBC,kBAAmB,SACnBC,oBAAqB,WACrBC,wBAAyB,iBACzBC,qBAAsB,YACtBC,yBAA0B,kBAC1BC,sBAAuB,WACvBC,yBAA0B,eAC1BC,sBAAuB,YACvB,kBAAmB,IACnB,mBAAoB,KACpB,kBAAmB,IACnB,mBAAoB,KACpB,kBAAmB,IACnB,mBAAoB,KAEpBC,6BAA8B,WAC9BC,mCAAoC,mBACpCC,2BAA4B,SAC5BC,iCAAkC,iBAClCC,+BAAgC,cAChCC,6BAA8B,YAC9BC,uBAAwB,KACxBC,wBAAyB,SACzBC,0BAA2B,WAC3BC,8BAA+B,iBAC/BC,2BAA4B,YAC5BC,+BAAgC,kBAChCC,4BAA6B,WAC7BC,+BAAgC,eAChCC,4BAA6B,YAC7B,wBAAyB,SACzB,yBAA0B,aAC1B,wBAAyB,eACzB,yBAA0B,2BAC1B,wBAAyB,YACzB,yBAA0B,wBAE1BC,eAAgB,MAChBC,gBAAiB,OACjBC,iBAAkB,QAElBC,gBAAiB,OACjBC,sBAAuB,eACvBC,wBAAyB,iBACzBC,iBAAkB,SAClBC,qBAAsB,cACtBC,iBAAkB,SAClBC,kBAAmB,cACnBC,mBAAoB,eAEpBC,iCAAkChE,GAAuB,GAAHrxG,OAAMqxG,EAAP,IAAVA,EAAsB,kBAA4B,kBAC7FiE,yBAA0B,eAC1BC,0BAA2B,OAE3BC,kBAAmBnE,GAAuB,GAAHrxG,OAAMqxG,EAAMhwE,iBAAb,IAAVgwE,EAAuC,iBAA4C,iBAE/GoE,gBAAiB,cAEjBC,uBAAwBA,CAACC,EAAcC,IAAe,GAAL51G,OAAQ21G,EAAat0E,iBAAgB,QAAArhC,OAAO41G,EAAWv0E,kBAExGw0E,4BAA6B,qBAC7BC,+BAAgC,kBAChCC,iCAAkC,oBAClCC,2BAA4B,aAC5BC,6BAA8B,eAE9BC,qBAAsB,MACtBC,sBAAuB,KAEvBC,gBAAiB,OAEjBC,UAAW,cACXC,WAAY,eACZC,MAAO,QAEPC,2BAA4B,QAC5BC,eAAgB,eAChBC,iBAAkB,gBAElBC,yBAA0B,QAC1BC,YAAaz3G,GAAQ,YAAJa,OAAgBb,GACjC03G,cAAe13G,GAAQ,oBAAJa,OAAwBb,GAE3C23G,kBAAmB,sBACnBC,kBAAmB,SACnBC,oBAAqB,WAErBC,mBAAoB,CAAC,EAErBC,wBAAyB,iBAEzBC,0BAA2B,cAC3BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,6BAA8B,Q,gBCnJhC,MAAM14G,GAAY,CAAC,QAAS,OAAQ,QAAS,QAAS,SAAU,QAAS,QAAS,aAW5E24G,GAAwB,QAExBC,GAA8B,CAAC,GAAI,IACnCC,GAA8B,CAClC/gE,OAAQ,CAAC,GAAI,IACb3jC,OAAQ,CAAC,GAAI,IACbivB,KAAM,CAAC,GAAI,IACX2U,SAAU,CAAC,GAAI,IACfE,aAAc,CAAC,GAAI,KAaf6gE,GrJoJC,SAAqCC,GAC1C,MAAMp9E,GAnBYnkB,EAmBQuhG,EAlBnB,KAEL,IAAI38F,EAAI5E,GAAK,WAGb,OAFA4E,EAAIrR,KAAKiuG,KAAK58F,EAAIA,IAAM,GAAQ,EAAJA,GAC5BA,GAAKA,EAAIrR,KAAKiuG,KAAK58F,EAAIA,IAAM,EAAO,GAAJA,KACvBA,EAAIA,IAAM,MAAQ,GAAK,UAAU,GAN9C,IAAoB5E,EAoBlB,MAAO,CAAC+gB,EAAK/xB,IAAQ+xB,GAAO/xB,EAAM+xB,GAAOoD,GAC3C,CqJvJ8Bs9E,CAA4B,OAqE1D,MAAMpjD,GAAW/lC,IApEjB,SAA0BvvB,GACxB,MAAM,MACF+rB,EAAK,KACL9e,EAAI,MACJwC,EAAK,MACL7E,EAAK,OACLtI,EAAM,MACNq2G,GAAQ,EAAK,MACb/0G,EAAK,UACL6B,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IAOzC4H,EA9BkB7G,KACxB,MAAM,MACJiP,EAAK,QACLpI,EAAO,MACPsxG,GACEn4G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,OAAQ,eAAgB,aAAFS,OAAe8O,EAAQ7O,EAAW6O,GAAS,QAAUkpG,GAAS,cAEhE9hG,EAAyBxP,EAAQ,EAqB9CE,CALG,CACjBF,QAFgBoa,IAEGpa,QACnBoI,QACAkpG,UAKIC,EAAgB7zG,EAAAA,SAAc,KAAM,IAAA8zG,EAExC,GADmC,YAAT5rG,GAA+B,YAATA,EAE9C,MAAO,CACLvM,QAAS,WACTkK,MAAOwtG,GACP91G,OAAQ81G,IAMZ,MAAOpgF,EAAK/xB,GAAOgH,GAAwC,QAApC4rG,EAAGP,GAA4BrrG,UAAK,IAAA4rG,EAAAA,EAAkCR,GAC7F,MAAO,CACL33G,QAAS,OACTkK,MAAO,GAAFjK,OAAK6J,KAAKG,MAAM4tG,GAAsBvgF,EAAK/xB,IAAK,KACrD3D,OA1DiB,QA2DlB,GACA,CAAC2K,IACJ,OAAoBzE,EAAAA,GAAAA,KAAK,OAAOpB,EAAAA,EAAAA,GAAS,CACvC,aAAc2kB,EACdtmB,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9B7B,OAAOwD,EAAAA,EAAAA,GAAS,CACd9E,SACA4b,SAAUtT,EACV1I,SAAU0I,GACThH,IACF6C,EAAO,CACRZ,UAAW8yG,IAAsBnwG,EAAAA,GAAAA,KAAKswG,GAAAA,GAAU1xG,EAAAA,EAAAA,GAAS,CAAC,EAAGwxG,MAEjE,ICpFMn5G,GAAY,CAAC,aAiBbs5G,IAA8Bl5G,EAAAA,GAAAA,GAAO,MAAO,CAChDC,KAAM,cACNR,KAAM,sBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOmZ,qBAHXvZ,EAIjC,KAAM,CACPO,QAAS,OACTiZ,WAAY,SACZzO,MAAO,MAEIouG,GAAuCj0G,EAAAA,YAAiB,SAAiC/E,EAAOiF,GAC3G,MAAM,UACFQ,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IACZpa,EAxBkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,wBAEoB2W,EAAyBxP,EAAQ,EAiB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKuwG,IAA6B3xG,EAAAA,EAAAA,GAAS,CAC7DnC,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,GACXrB,GACL,ICtCA,MAAMhH,GAAY,CAAC,YAAa,QAAS,eAAgB,YAkCzD,SAASw5G,GAA4Bj5G,GAAO,IAAA2uB,EAC1C,MAAM,UACFimB,EAAS,MACT1rB,EAAK,aACL4L,EAAY,SACZjpB,GACE7L,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACT1mB,EAAY2Z,IAIZpa,EAtCkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZ6K,KAAM,CAAC,aAEoB0E,EAAyBxP,EAAQ,EA+B9CE,EAHGH,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCqH,QAASS,EAAUT,WAGf6xG,EA9BR,SAAiBC,EAAOvkE,EAAWnvC,EAAWqvB,GAC5C,IAAI1mB,EACJ,MAAMgrG,EAAY,CAAC,EASnB,MARkB,QAAdxkE,EACFxmC,EAAO+qG,EAAME,0BACU,SAAdzkE,EACTxmC,EAAO+qG,EAAMG,4BAEblrG,EAAO+qG,EAAMI,mBACbH,EAAUtkF,aAAeA,GAEpB1mB,GAAoB5F,EAAAA,GAAAA,KAAK4F,GAAMhH,EAAAA,EAAAA,GAAS,CAC7CpF,SAAU,QACVyD,UAAWA,GACV2zG,IAAc,IACnB,CAesBI,CAAQ1xG,EAAUzB,MAAOuuC,EAAWvtC,EAAQ8K,KAAM2iB,GACtE,IAAKokF,EACH,OAAO,KAET,MAAMO,GAA0BjxG,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+uC,gBAAgBhuC,EAAAA,EAAAA,GAAS,CAC5EuL,UAAW,EACX,aAAcsF,EAAOzC,QAAQ+hB,cAAc,6BAC3Cw1C,MAAO90D,EAAOzC,QAAQ+hB,cAAc,6BACpCrtB,KAAM,QACN2B,SAAUA,GACU,QAArB8iB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBymB,eAAgB3uC,EAAO,CAC7CZ,SAAUqzG,KAEZ,OAAoB3wG,EAAAA,GAAAA,MAAMywG,GAAyB,CACjDnzG,SAAU,CAAU,MAATqjB,IAA8B1gB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMqzG,UAAW,CACvEvzG,aAAc+iB,EACdjoB,MAAO,UACPD,QAAS,WACT6E,SAAU4zG,IACC,MAATvwF,GAAiBuwF,IAEzB,CACA,MAAME,GAAwC50G,EAAAA,KAAWk0G,ICtEnDx5G,GAAY,CAAC,YAAa,oBAmB1Bm6G,IAA2B/5G,EAAAA,GAAAA,GAAO,MAAO,CAC7CC,KAAM,cACNR,KAAM,mBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO45G,kBAHdh6G,EAI9BqF,IAAA,IAAC,MACF9D,GACD8D,EAAA,MAAM,CACLxD,WAAY,SACZtB,QAAS,OACTwR,OAAQxQ,EAAMud,QAAQ,EAAG,GACzBtF,WAAY,SACZzO,MAAO,EACPtI,OAAQ,EACR,CAAClB,EAAM04G,YAAYC,GAAG,OAAQ,CAC5B1gG,WAAY,UACZzO,MAAO,OACPtI,OAAQ,QAEX,IACK03G,GAAoCj1G,EAAAA,YAAiB,SAA8B/E,EAAOiF,GAC9F,MAAM,UACFQ,EAAS,iBACTo0G,GACE75G,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACThuB,EAAaihB,IACbpa,EApCkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,qBAEoB2W,EAAyBxP,EAAQ,EA6B9CE,CAAkB/G,GAC5By5G,EAAkBhiG,EAAOzC,QAAQ+hB,cAAc,oBAA7Btf,CAAkD4hG,GAC1E,OAAoBrxG,EAAAA,GAAAA,KAAKoxG,IAA0BxyG,EAAAA,EAAAA,GAAS,CAC1DnC,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYA,GACXiG,EAAO,CACRZ,SAAUo0G,IAEd,ICvDMx6G,GAAY,CAAC,aAkBby6G,IAA0Br6G,EAAAA,GAAAA,GAAO,MAAO,CAC5CC,KAAM,cACNR,KAAM,kBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO0wE,iBAHf9wE,CAI7B,CACDO,QAAS,OACToB,eAAgB,gBAChBE,WAAY,SACZkc,UAAW,GACX2B,UAAW,cAEP46F,GAAmCp1G,EAAAA,YAAiB,SAA6B/E,EAAOiF,GAC5F,MAAM,UACFQ,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IACZpa,EA1BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,kBAAmB,oBAEC2W,EAAyBxP,EAAQ,EAmB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAK0xG,IAAyB9yG,EAAAA,EAAAA,GAAS,CACzDnC,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,GACXrB,GACL,IC/BM2zG,GAA0Br1G,EAAAA,YAAiB,SAAoB/E,EAAOiF,GAAK,IAAA0pB,EAAAC,EAC/E,MAAM3W,EAASuW,KACT1mB,EAAY2Z,IACZqkB,EAAwBxtB,EAAgBL,EAAQ4tB,IAChDg0E,EAAmBvhG,EAAgBL,EAAQ+qC,IAC3CpB,EAA0BtpC,EAAgBL,EAAQ6nC,IAClDu6D,GAA2BvyG,EAAUugF,4BAA8BwxB,EAAmB,GAAiBrxG,EAAAA,GAAAA,KAAKwxG,GAAsB,CACtIH,iBAAkBA,KACFrxG,EAAAA,GAAAA,KAAK,MAAO,CAAC,GACzB8xG,EAAmBxyG,EAAUsgF,oBAAuBtgF,EAAUo5C,WAG9D,MAHwF14C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMk0G,gBAAgBnzG,EAAAA,EAAAA,GAAS,CAAC,EAAsB,QAArBunB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB4rF,eAAgB,CACnLlyE,SAAUvC,EACV0xB,gBAAiB5V,KAEb44D,EAAoB1yG,EAAUo5C,aAAep5C,EAAUqgF,sBAAwBrgF,EAAUzB,MAAM66C,aAA2B14C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM66C,YAAY95C,EAAAA,EAAAA,GAAS,CAAC,EAAsB,QAArBwnB,EAAE9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqBsyB,aACnM,OAAoB34C,EAAAA,GAAAA,MAAM4xG,IAAqB/yG,EAAAA,EAAAA,GAAS,CACtDnC,IAAKA,GACJjF,EAAO,CACR6F,SAAU,CAACw0G,EAAyBC,EAAiBE,KAEzD,IC7BM/6G,GAAY,CAAC,YAAa,WAAY,mBAmBtCg7G,IAAmB56G,EAAAA,GAAAA,GAAO,MAAO,CACrCC,KAAM,cACNR,KAAM,WACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOooC,UAHtBxoC,EAItBqF,IAAA,IAAC,MACF9D,GACD8D,EAAA,MAAM,CACLxD,WAAY,SACZtB,QAAS,OACTwR,OAAQxQ,EAAMud,QAAQ,EAAG,GAC1B,IACK+7F,GAA4B31G,EAAAA,YAAiB,SAAsB/E,EAAOiF,GAC9E,MAAM,UACFQ,EAAS,SACT4iC,EAAQ,gBACRmvB,GACEx3D,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACThuB,EAAaihB,IACbpa,EA7BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,aAEoB2W,EAAyBxP,EAAQ,EAsB9CE,CAAkB/G,GAClC,GAAiB,IAAb6nC,EACF,OAAO,KAET,MAAMv8B,EAAO0rD,EAAkBnvB,EAAWpwB,EAAOzC,QAAQ+hB,cAAc,yBAA7Btf,CAAuDu/C,EAAiBnvB,GAAYA,EAASrG,iBACvI,OAAoBz5B,EAAAA,GAAAA,MAAMkyG,IAAkBrzG,EAAAA,EAAAA,GAAS,CACnDnC,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYA,GACXiG,EAAO,CACRZ,SAAU,CAACoS,EAAOzC,QAAQ+hB,cAAc,mBAAoB,IAAKzrB,KAErE,I,4BCnDA,MAAMrM,GAAY,CAAC,aAkBbk7G,IAAkB96G,EAAAA,GAAAA,GAAO,MAAO,CACpCC,KAAM,cACNR,KAAM,UACNS,kBAAmBA,CAACsX,EAAGpX,IAAWA,EAAO6gB,SAHnBjhB,CAIrB,CACD+K,MAAO,OACPtI,OAAQ,OACRlC,QAAS,OACTsgB,UAAW,SACXhf,WAAY,SACZF,eAAgB,SAChBqC,gBAAiB,+CAEb+2G,GAA2B71G,EAAAA,YAAiB,SAAqB/E,EAAOiF,GAC5E,MAAM,UACFQ,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IACZpa,EA5BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,YAEoB2W,EAAyBxP,EAAQ,EAqB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKmyG,IAAiBvzG,EAAAA,EAAAA,GAAS,CACjDnC,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,GACXrB,GACL,IC5Cao0G,GAAsBA,CAACjnB,EAAgBnmE,EAAe66B,EAAayD,EAAiB9yC,KAC/F,MAAMm+C,EAAiBn+C,EAAWsF,WAAatF,EAAWuF,cAAgB,EAC1E,IAAIs8F,EACJ,OAAQlnB,GACN,KAAKxoE,GAAyBq+B,KAC5BqxD,EAAe/uD,EAAgBzD,GAC/B,MACF,KAAKl9B,GAAyBo+B,MAC5BsxD,EAAe7hG,EAAWuiC,kBAAoBuQ,EAAgBzD,GAAe76B,EAAgB2pC,EAC7F,MACF,QACE0jD,EAAe,EAGnB,OAAOA,CAAY,ECdRC,GAA4BA,CAACnnB,EAAgBonB,EAAgBC,EAAeC,EAAgCC,KACvH,MAAMC,EAAoBJ,IAAmBC,EAAgB,EAC7D,QAAIrnB,IAAmBxoE,GAAyBq+B,OAAQ2xD,MAGpDF,IACEtnB,IAAmBxoE,GAAyBq+B,OAG5CmqC,IAAmBxoE,GAAyBo+B,OACtC4xD,GAGFA,GAAqBD,GAEnB,EAEDE,GAA2BA,CAACznB,EAAgBonB,IAChDpnB,IAAmBxoE,GAAyBo+B,OAA4B,IAAnBwxD,ECfxD3zG,GAAU,CACdnH,KAAM4W,EAAYsI,gBAClB+xE,OAAQr6E,EAAY,2BACpByI,UAAWzI,EAAY,8BACvBlH,aAAckH,EAAY,iCAC1BwkG,YAAaxkG,EAAY,iCAE3B,SAASykG,GAAuBr2G,GAK7B,IAL8B,OAC/BisF,EAAM,UACN5xE,GAAY,EAAI,aAChB3P,EAAY,YACZ0rG,GACDp2G,EACC,OAAoBsD,EAAAA,GAAAA,KAAK,MAAO,CAC9BqC,KAAM,eACNpF,WAAW4C,EAAAA,EAAAA,GAAKhB,GAAQnH,KAAMixF,GAAU9pF,GAAQ8pF,OAAQ5xE,GAAalY,GAAQkY,UAAW3P,GAAgBvI,GAAQuI,aAAc0rG,GAAej0G,GAAQi0G,cAEzJ,CCNA,MAAME,IAAkB37G,EAAAA,GAAAA,GAAO,MAAO,CACpCC,KAAM,cACNR,KAAM,yBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOw7G,wBAHvB57G,CAIrB,CACDqC,SAAU,OACV0I,MAAO,cAEPtI,OAAQ,OACRiL,SAAU,SAWNmuG,GAAc37C,GAAM2xB,SAAS3xB,EAAGqS,aAAa,iBAAkB,IAC/DupC,GAA0C52G,EAAAA,YAAiB,SAAoC/E,EAAO47G,GAAc,IAAAC,EACxH,MAAM/zG,EAAY2Z,KACZ,MACJpb,GACEyB,EACET,EAfkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,2BAEoB2W,EAAyBxP,EAAQ,EAQ9CE,CAAkB,CAChCF,QAASS,EAAUT,UAEfpC,EAAMF,EAAAA,OAAa,MACnB8lB,EAAYzV,EAAWnQ,EAAK22G,GAC5B3jG,EAASuW,KACTvV,EAAaX,EAAgBL,EAAQe,GACrC8iG,EAAqD,QAAvCD,EAAa,OAAV5iG,QAAU,IAAVA,OAAU,EAAVA,EAAY2iC,kBAAkBt5C,cAAM,IAAAu5G,EAAAA,EAAI,EACzDE,EAAoBvxG,KAAKm2C,KAAKm7D,EAAiB7iG,EAAW0yB,WAC1DgrD,EAAar+E,EAAgBL,EAAQyV,IACrCH,EAAYjV,EAAgBL,EAAQqV,IACpC0uF,EAAkBj3G,EAAAA,SAAc,IAAMwoB,EAAUlqB,QAAO+G,GAASA,GAASusF,IAAYxiF,QAAQ,CAACwiF,EAAYppE,IAC1G0uF,EAAoB3jG,EAAgBL,EAAQiU,IAC5CX,EAAUxmB,EAAAA,SAAc,IAAMk3G,EAAkBpnG,MAAM,EAAGmnG,IAAkB,CAACC,EAAmBD,IAC/FzvF,EAAgBjU,EAAgBL,EAAQqU,IACxC4vF,EAAiBn3G,EAAAA,aAAkB,CAAC0oB,EAAevE,EAAO/oB,KAEvD,CACL,CAACA,GAFkB06G,GAAoB16G,EAAUstB,EAAevE,EAAOqE,EAAWtU,MAInF,CAACA,EAAYsU,IACV4uF,EAAoBp3G,EAAAA,aAAkBgnB,IACwB,IAA9DQ,EAAc/nB,KAAKwf,WAAU6J,GAAOA,EAAI9B,QAAUA,IAC7CX,GAAyBq+B,MAEiC,IAA/Dl9B,EAActoB,MAAM+f,WAAU6J,GAAOA,EAAI9B,QAAUA,IAC9CX,GAAyBo+B,WADlC,GAIC,CAACj9B,EAAc/nB,KAAM+nB,EAActoB,QAChC4B,EAAWd,EAAAA,SAAc,KAC7B,MAAMwd,EAAQ,GACd,IAAK,IAAIpN,EAAI,EAAGA,EAAI4mG,EAAmB5mG,GAAK,EAAG,CAC7C,MAAMinG,EAAW,GACjB,IAAK,IAAIvnC,EAAW,EAAGA,EAAWtpD,EAAQpX,OAAQ0gE,GAAY,EAAG,CAC/D,MAAM1oD,EAASZ,EAAQspD,GACjB+e,EAAiBuoB,EAAkBhwF,EAAOJ,OAC1CswF,EAAezoB,IAAmBxoE,GAAyBq+B,KAC3D6yD,EAAgB1oB,IAAmBxoE,GAAyBo+B,MAC5DyxD,EAAgBrnB,EAAiBrnE,EAAcqnE,GAAgBz/E,OACnEoX,EAAQpX,OAASoY,EAAc/nB,KAAK2P,OAASoY,EAActoB,MAAMkQ,OAC7DooG,EAAe3oB,EAAiBrnE,EAAcqnE,GAAgB5vE,WAAU6J,GAAOA,EAAI9B,QAAUI,EAAOJ,QACxG8oD,EAAWtoD,EAAc/nB,KAAK2P,OAC1BqoG,EAAc5oB,GAAkBsoB,EAAe/vF,EAAOsB,cAAeonD,EAAU+e,GAC/EunB,EAAgBliG,EAAWuiC,kBAAoBviC,EAAWo/B,kBAAkBztC,MAC5E6xG,EAAkB1B,GAA0BnnB,EAAgB2oB,EAActB,EAAenzG,EAAUijB,uBAAwBowF,GAC3HuB,EAAiBrB,GAAyBznB,EAAgB2oB,GAC1DI,EAAe9nC,IAAatpD,EAAQpX,OAAS,EAC7CyoG,EAAqBN,GAAkC,IAAjBC,EACtCM,EAAkBD,GAAsBzB,EACxC2B,EAAiBH,IAAiBC,GAAsBzB,EACxD4B,EAAgB9jG,EAAWo/B,kBAAkBztC,MAAQqO,EAAWuiC,kBAChEwhE,EAAiBxyG,KAAKvE,IAAI,EAAG82G,GAC7BE,GAAyBz0G,EAAAA,GAAAA,KAAKnC,EAAM62G,aAAc,CACtDtyG,MAAOoyG,EACPrE,OAAO,GACN,0BAAFh4G,OAA4BwU,IACvBiiD,EAAiBn+C,EAAWsF,WAAatF,EAAWuF,cAAgB,EACpE2+F,EAAqBR,GAAmC,IAAnBvlD,EACvCylD,GACFT,EAASp0F,KAAKi1F,GAEhBb,EAASp0F,MAAkBxf,EAAAA,GAAAA,KAAKnC,EAAM62G,aAAc,CAClDnxF,MAAOI,EAAOJ,MACd9e,KAAMkf,EAAOlf,KACbwC,MAAO0c,EAAO1c,MACd7E,MAAO,eACPtI,OAAQ2W,EAAW0yB,UACnB,gBAAiBkpC,EACjBpvE,WAAW4C,EAAAA,EAAAA,GAAKg0G,GAAgBvlG,EAAY,oBAAqBwlG,GAAiBxlG,EAAY,qBAAsB2lG,GAAmB3lG,EAAY,yBAA0B4lG,GAAkB5lG,EAAY,yBAC3MlT,OAAOwD,EAAAA,EAAAA,GAAS,CACd,UAAW,GAAFzG,OAAKwrB,EAAOsB,cAAa,OACjC+uF,IACF,mBAAF77G,OAAqBwU,EAAC,KAAAxU,OAAIwrB,EAAOJ,SAC9B+wF,GACFV,EAASp0F,KAAKi1F,GAEZE,GACFf,EAASp0F,MAAkBxf,EAAAA,GAAAA,KAAK+yG,GAAyB,CACvDD,YAAa/uF,EAActoB,MAAMkQ,OAAS,GACzC,6BAAFxT,OAA+BwU,IAEpC,CACAoN,EAAMyF,MAAkBxf,EAAAA,GAAAA,KAAK,MAAO,CAClC/C,WAAW4C,EAAAA,EAAAA,GAAKyO,EAAYiE,IAAKjE,EAAYwI,YAAmB,IAANnK,GAAW2B,EAAY,sBACjFjR,SAAUu2G,GACT,gBAAFz7G,OAAkBwU,IACrB,CACA,OAAOoN,CAAK,GACX,CAAClc,EAAOklB,EAASgB,EAAewvF,EAAmBj0G,EAAUijB,uBAAwB9R,EAAWuiC,kBAAmBviC,EAAWo/B,kBAAkBztC,MAAOqO,EAAW0yB,UAAW1yB,EAAWsF,WAAYtF,EAAWuF,cAAe29F,EAAmBD,IA2CpP,OADAxrF,GAAuBzY,EAAQ,gBAvCJkZ,IAAU,IAAA8xC,EACnC,MAAM,OACJhwC,EAAM,MACNroB,GACEumB,EACE4jD,EAAmB,QAAd9R,EAAGh+D,EAAIuQ,eAAO,IAAAytD,OAAA,EAAXA,EAAa4O,iBAAiB,gBAADlxE,OAAiB0zE,GAA+BphD,EAAOlH,OAAM,OACxG,IAAKgpD,EACH,MAAM,IAAIlhE,MAAM,6EAElB,MAAMupG,EAAkB7xF,EAAQvH,WAAU6J,GAAOA,EAAI9B,QAAUkH,EAAOlH,QAChE6nE,EAAiBuoB,EAAkBlpF,EAAOlH,OAC1CswF,EAAezoB,IAAmBxoE,GAAyBq+B,KAC3D6yD,EAAgB1oB,IAAmBxoE,GAAyBo+B,MAC5D6zD,EAAe1yB,iBAAiB5V,EAAM,IAAIuoC,iBAAiB,WAC3DhmB,EAAQ5F,SAAS2rB,EAAc,IAAMzyG,EAM3C,GALImqE,GACFA,EAAMnoE,SAAQ+2D,IACZA,EAAQ//D,MAAMqzD,YAAY,UAAW,GAAFt2D,OAAKiK,EAAK,MAAK,IAGlDyxG,EAAc,KAAAkB,EAChB,MAAMC,EAAyB,QAAdD,EAAGt4G,EAAIuQ,eAAO,IAAA+nG,OAAA,EAAXA,EAAa1rC,iBAAiB,IAADlxE,OAAKmW,EAAY,sBACvD,OAAX0mG,QAAW,IAAXA,GAAAA,EAAa5wG,SAAQ+2D,IACF+3C,GAAY/3C,GACdy5C,IACbz5C,EAAQ//D,MAAMY,KAAO,GAAH7D,OAAM+wF,SAAS/G,iBAAiBhnB,GAASn/D,KAAM,IAAM8yF,EAAK,MAC9E,GAEJ,CACA,GAAIglB,EAAe,KAAAmB,EACjB,MAAMD,EAAyB,QAAdC,EAAGx4G,EAAIuQ,eAAO,IAAAioG,OAAA,EAAXA,EAAa5rC,iBAAiB,IAADlxE,OAAKmW,EAAY,uBACvD,OAAX0mG,QAAW,IAAXA,GAAAA,EAAa5wG,SAAQ+2D,IACF+3C,GAAY/3C,GACdy5C,IACbz5C,EAAQ//D,MAAMK,MAAQ,GAAHtD,OAAM+wF,SAAS/G,iBAAiBhnB,GAAS1/D,MAAO,IAAMqzF,EAAK,MAChF,GAEJ,MAGkB9uF,EAAAA,GAAAA,KAAKgzG,IAAiBp0G,EAAAA,EAAAA,GAAS,CACjD3B,UAAW4B,EAAQnH,KACnB+E,IAAK4lB,GACJ7qB,EAAO,CACR6F,SAAUA,IAEd,ICjLMpG,GAAY,CAAC,UAAW,gBAAiB,SAUzCi+G,GAAmB,CACvB,oBAAqB,CACnBh4G,UAAWi4G,GAAAA,EACX/5G,MAAO,CAAC,GAEV,kBAAmB,CACjB8B,UAAWk4G,GAAAA,EACXh6G,MAAO,CACLxD,QAAS,UAGby9G,SAAU,CACRn4G,UAAWi2G,GACX/3G,MAAO,CACLxD,QAAS,WAIT09G,GAAkC/4G,EAAAA,YAAiB,SAA4B/E,EAAOiF,GAC1F,MAAM,QACFvE,EAAU,oBAAmB,cAC7Bq9G,EAAgB,oBAAmB,MACnCn6G,GACE5D,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACTwvF,EAAY1lG,EAAgBL,EAAQwtB,IACpCw4E,EAAgBP,GAA+B,IAAdM,EAAkBD,EAAgBr9G,GACzE,OAAoB8H,EAAAA,GAAAA,KAAKoyG,IAAaxzG,EAAAA,EAAAA,GAAS,CAC7CnC,IAAKA,EACLrB,OAAOwD,EAAAA,EAAAA,GAAS,CAAC,EAAG62G,EAAcr6G,MAAOA,IACxC6C,EAAO,CACRZ,UAAuB2C,EAAAA,GAAAA,KAAKy1G,EAAcv4G,UAAW,CAAC,KAE1D,ICxCMw4G,GAAiCn5G,EAAAA,YAAiB,SAA2B/E,EAAOiF,GACxF,MACMisG,EADS1iF,KACYhZ,QAAQ+hB,cAAc,eACjD,OAAoB/uB,EAAAA,GAAAA,KAAKoyG,IAAaxzG,EAAAA,EAAAA,GAAS,CAC7CnC,IAAKA,GACJjF,EAAO,CACR6F,SAAUqrG,IAEd,I,4ECZO,SAASiN,GAAuB7+G,GACrC,OAAOC,EAAAA,GAAAA,IAAqB,aAAcD,EAC5C,EACuBE,EAAAA,GAAAA,GAAuB,aAAc,CAAC,OAAQ,UAAW,UAAW,UAA3F,MCDMC,GAAY,CAAC,YAAa,YAAa,iBAAkB,WAoBzD2+G,IAAcv+G,EAAAA,EAAAA,IAAO,MAAO,CAChCC,KAAM,aACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOC,MAAOM,EAAW69G,gBAAkBp+G,EAAOq+G,QAASr+G,EAAOO,EAAWE,SAAS,GAP9Eb,EASjBqF,IAAA,IAAC,MACF9D,EAAK,WACLZ,GACD0E,EAAA,OAAKkC,EAAAA,EAAAA,GAAS,CACbjH,SAAU,WACVC,QAAS,OACTsB,WAAY,WACVlB,EAAW69G,gBAAkB,CAC/BrvG,YAAa5N,EAAMud,QAAQ,GAC3BgzE,aAAcvwF,EAAMud,QAAQ,GAC5B,CAACvd,EAAM04G,YAAYC,GAAG,OAAQ,CAC5B/qG,YAAa5N,EAAMud,QAAQ,GAC3BgzE,aAAcvwF,EAAMud,QAAQ,KAEN,UAAvBne,EAAWE,SAAuB,CACnCkd,UAAW,IACX,IAAExY,IAAA,IAAC,MACHhE,EAAK,WACLZ,GACD4E,EAAA,MAA4B,YAAvB5E,EAAWE,SAAyBU,EAAM8a,OAAO8O,OAAO,IACxDuzF,GAAuBx5G,EAAAA,YAAiB,SAAiBC,EAASC,GACtE,MAAMjF,GAAQN,EAAAA,GAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,gBAEF,UACF2F,EAAS,UACTC,EAAY,MAAK,eACjB24G,GAAiB,EAAK,QACtB39G,EAAU,WACRV,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCe,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrC0F,YACA24G,iBACA39G,YAEI2G,EAzDkB7G,KACxB,MAAM,QACJ6G,EAAO,eACPg3G,EAAc,QACd39G,GACEF,EACE6F,EAAQ,CACZnG,KAAM,CAAC,QAASm+G,GAAkB,UAAW39G,IAE/C,OAAO4G,EAAAA,GAAAA,GAAejB,EAAO83G,GAAwB92G,EAAQ,EAgD7CE,CAAkB/G,GAClC,OAAoBgI,EAAAA,GAAAA,KAAK41G,IAAah3G,EAAAA,EAAAA,GAAS,CAC7CgB,GAAI1C,EACJD,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BR,IAAKA,EACLzE,WAAYA,GACXiG,GACL,IAuCA,M,mDC3GA,UAAeiN,EAAAA,GAAAA,IAA4BlL,EAAAA,GAAAA,KAAK,OAAQ,CACtDmL,EAAG,+DACD,YCFJ,IAAeD,EAAAA,GAAAA,IAA4BlL,EAAAA,GAAAA,KAAK,OAAQ,CACtDmL,EAAG,+DACD,aCPElU,GAAY,CAAC,sBAAuB,QAAS,WAAY,mBAAoB,sBAAuB,eAAgB,OAAQ,cAAe,kBAAmB,iBAAkB,QAAS,aAkL/L,GAnK4CsF,EAAAA,YAAiB,SAAgC/E,EAAOiF,GAClG,IAAIu5G,EAAoBC,EAAmBC,EAAmBC,EAAuBC,EAAuBC,EAAuBC,EAAuBC,EAC1J,MAAM,oBACFC,EAAmB,MACnBhN,EAAK,SACLnmG,GAAW,EAAK,iBAChBozG,EAAgB,oBAChBC,EAAmB,aACnBC,EAAY,KACZz+D,EAAI,YACJ0+D,EAAW,gBACXC,EAAe,eACfC,EAAc,MACdj5G,EAAQ,CAAC,EAAC,UACVC,EAAY,CAAC,GACXtG,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzC+sB,GAAQinB,EAAAA,GAAAA,KAaR8rE,EAA0D,OAA3Cf,EAAqBn4G,EAAMm5G,aAAuBhB,EAAqBiB,GAAAA,EACtFC,EAAuD,OAAzCjB,EAAoBp4G,EAAMs5G,YAAsBlB,EAAoBgB,GAAAA,EAClFG,EAAuD,OAAzClB,EAAoBr4G,EAAMw5G,YAAsBnB,EAAoBe,GAAAA,EAClFK,EAAmE,OAAjDnB,EAAwBt4G,EAAM05G,gBAA0BpB,EAAwBc,GAAAA,EAClGO,EAAqE,OAAlDpB,EAAwBv4G,EAAM45G,iBAA2BrB,EAAwBsB,GACpGC,EAAmE,OAAjDtB,EAAwBx4G,EAAM+5G,gBAA0BvB,EAAwBwB,GAClGC,EAAmE,OAAjDxB,EAAwBz4G,EAAMk6G,gBAA0BzB,EAAwB0B,GAAAA,EAClGC,EAA4E,OAAtD1B,EAAyB14G,EAAMq6G,oBAA8B3B,EAAyB4B,GAAAA,EAC5GC,EAAkBp0F,EAAQkzF,EAAaH,EACvCsB,EAAqBr0F,EAAQozF,EAAaE,EAC1CgB,EAAiBt0F,EAAQszF,EAAiBF,EAC1CmB,EAAiBv0F,EAAQ+yF,EAAcG,EACvCsB,EAAuBx0F,EAAQlmB,EAAUq5G,WAAar5G,EAAUk5G,YAChEyB,EAA0Bz0F,EAAQlmB,EAAUu5G,WAAav5G,EAAUy5G,eACnEmB,EAAsB10F,EAAQlmB,EAAUy5G,eAAiBz5G,EAAUu5G,WACnEsB,EAAsB30F,EAAQlmB,EAAUk5G,YAAcl5G,EAAUq5G,WACtE,OAAoBp3G,EAAAA,GAAAA,MAAM,OAAOnB,EAAAA,EAAAA,GAAS,CACxCnC,IAAKA,GACJwB,EAAO,CACRZ,SAAU,CAACw5G,IAAgC72G,EAAAA,GAAAA,KAAKo4G,GAAiBx5G,EAAAA,EAAAA,GAAS,CACxEqtC,QAhC+BphC,IACjC8rG,EAAa9rG,EAAO,EAAE,EAgCpBxH,SAAUA,GAAqB,IAAT60C,EACtB,aAAcu+D,EAAiB,QAASv+D,GACxCqsB,MAAOkyC,EAAiB,QAASv+D,IAChCsgE,EAAsB,CACvBn7G,SAAU2mB,GAAqBhkB,EAAAA,GAAAA,KAAK23G,GAAgB/4G,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAU85G,kBAAgC53G,EAAAA,GAAAA,KAAKw3G,GAAiB54G,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAU25G,sBACxIz3G,EAAAA,GAAAA,KAAKq4G,GAAoBz5G,EAAAA,EAAAA,GAAS,CAClDqtC,QApC0BphC,IAC5B8rG,EAAa9rG,EAAOqtC,EAAO,EAAE,EAoC3B70C,SAAUA,GAAqB,IAAT60C,EACtBz/C,MAAO,UACP,aAAcg+G,EAAiB,WAAYv+D,GAC3CqsB,MAAOkyC,EAAiB,WAAYv+D,IACR,MAA3BugE,EAAkCA,EAA0BjC,EAAqB,CAClFn5G,SAAU2mB,GAAqBhkB,EAAAA,GAAAA,KAAK83G,GAAgBl5G,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAUi6G,kBAAgC/3G,EAAAA,GAAAA,KAAKi4G,GAAoBr5G,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAUo6G,yBAC3Il4G,EAAAA,GAAAA,KAAKs4G,GAAgB15G,EAAAA,EAAAA,GAAS,CAC9CqtC,QAzC0BphC,IAC5B8rG,EAAa9rG,EAAOqtC,EAAO,EAAE,EAyC3B70C,SAAUA,IAAwB,IAAXmmG,GAAetxD,GAAQl2C,KAAKm2C,KAAKqxD,EAAQoN,GAAe,EAC/En+G,MAAO,UACP,aAAcg+G,EAAiB,OAAQv+D,GACvCqsB,MAAOkyC,EAAiB,OAAQv+D,IACR,MAAvBwgE,EAA8BA,EAAsBhC,EAAqB,CAC1Er5G,SAAU2mB,GAAqBhkB,EAAAA,GAAAA,KAAKi4G,GAAoBr5G,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAUo6G,sBAAoCl4G,EAAAA,GAAAA,KAAK83G,GAAgBl5G,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAUi6G,oBAC5JjB,IAA+B92G,EAAAA,GAAAA,KAAKu4G,GAAgB35G,EAAAA,EAAAA,GAAS,CAChEqtC,QA9C8BphC,IAChC8rG,EAAa9rG,EAAO7I,KAAKvE,IAAI,EAAGuE,KAAKm2C,KAAKqxD,EAAQoN,GAAe,GAAG,EA8ClEvzG,SAAUA,GAAY60C,GAAQl2C,KAAKm2C,KAAKqxD,EAAQoN,GAAe,EAC/D,aAAcH,EAAiB,OAAQv+D,GACvCqsB,MAAOkyC,EAAiB,OAAQv+D,IAC/BygE,EAAqB,CACtBt7G,SAAU2mB,GAAqBhkB,EAAAA,GAAAA,KAAKw3G,GAAiB54G,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAU25G,mBAAiCz3G,EAAAA,GAAAA,KAAK23G,GAAgB/4G,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAU85G,uBAG/J,I,gBClGO,SAASgB,GAA+B9hH,GAC7C,OAAOC,EAAAA,GAAAA,IAAqB,qBAAsBD,EACpD,CACA,MACA,IAD+BE,EAAAA,GAAAA,GAAuB,qBAAsB,CAAC,OAAQ,UAAW,SAAU,cAAe,aAAc,SAAU,aAAc,QAAS,WAAY,gBAAiB,YCDrM,IAAI6hH,GACJ,MAAM5hH,GAAY,CAAC,mBAAoB,sBAAuB,YAAa,UAAW,YAAa,QAAS,WAAY,mBAAoB,qBAAsB,mBAAoB,sBAAuB,eAAgB,sBAAuB,OAAQ,cAAe,qBAAsB,cAAe,kBAAmB,iBAAkB,YAAa,SAqB5V6hH,IAAsBzhH,EAAAA,EAAAA,IAAOgQ,GAAAA,EAAW,CAC5C/P,KAAM,qBACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAHnBL,EAIzBqF,IAAA,IAAC,MACF9D,GACD8D,EAAA,MAAM,CACLqI,SAAU,OACVtM,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ0I,KAAK+B,QAC1C7L,SAAUZ,EAAMS,WAAWI,QAAQ,IAEnC,eAAgB,CACdI,QAAS,GAEZ,IACKk/G,IAAyB1hH,EAAAA,EAAAA,IAAO0+G,GAAS,CAC7Cz+G,KAAM,qBACNR,KAAM,UACNS,kBAAmBA,CAACC,EAAOC,KAAWmH,EAAAA,EAAAA,GAAS,CAC7C,CAAC,MAADzG,OAAO6gH,GAAuB/3E,UAAYxpC,EAAOwpC,SAChDxpC,EAAO+qB,UALmBnrB,EAM5BuF,IAAA,IAAC,MACFhE,GACDgE,EAAA,MAAM,CACLwY,UAAW,GACX+zE,aAAc,EACd,CAAC,GAADhxF,OAAIS,EAAM04G,YAAYC,GAAG,MAAK,kCAAkC,CAC9Dn8F,UAAW,IAEb,CAACxc,EAAM04G,YAAYC,GAAG,OAAQ,CAC5Bn8F,UAAW,GACX+zE,aAAc,GAEhB,CAAC,MAADhxF,OAAO6gH,GAAuB/3E,UAAY,CACxCnpC,WAAY,EACZqL,WAAY,IAEf,IACK81G,IAAwB5hH,EAAAA,EAAAA,IAAO,MAAO,CAC1CC,KAAM,qBACNR,KAAM,SACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOyhH,QAHjB7hH,CAI3B,CACDgP,KAAM,aAEF8yG,IAA6B9hH,EAAAA,EAAAA,IAAO,IAAK,CAC7CC,KAAM,qBACNR,KAAM,cACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO2hH,aAHZ/hH,EAIhCsB,IAAA,IAAC,MACFC,GACDD,EAAA,OAAKiG,EAAAA,EAAAA,GAAS,CAAC,EAAGhG,EAAMS,WAAW8N,MAAO,CACzCrP,WAAY,GACZ,IACIuhH,IAAwBhiH,EAAAA,EAAAA,IAAOiiH,GAAAA,EAAQ,CAC3ChiH,KAAM,qBACNR,KAAM,SACNS,kBAAmBA,CAACC,EAAOC,KAAWmH,EAAAA,EAAAA,GAAS,CAC7C,CAAC,MAADzG,OAAO6gH,GAAuBO,aAAe9hH,EAAO8hH,WACpD,CAAC,MAADphH,OAAO6gH,GAAuBQ,SAAW/hH,EAAO+hH,QAC/C/hH,EAAOiT,MAAOjT,EAAOgiH,aANIpiH,CAO3B,CACDoB,MAAO,UACPe,SAAU,UACV1B,WAAY,EACZsL,YAAa,GACbD,WAAY,EACZ,CAAC,MAADhL,OAAO6gH,GAAuBQ,SAAW,CACvChzG,YAAa,EACb2iF,aAAc,GACdnkF,UAAW,QACX00G,cAAe,WAGbC,IAA0BtiH,EAAAA,EAAAA,IAAOksE,GAAAA,EAAU,CAC/CjsE,KAAM,qBACNR,KAAM,WACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOmiH,UAHfviH,CAI7B,CAAC,GACEwiH,IAA+BxiH,EAAAA,EAAAA,IAAO,IAAK,CAC/CC,KAAM,qBACNR,KAAM,gBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOqiH,eAHVziH,EAIlCkE,IAAA,IAAC,MACF3C,GACD2C,EAAA,OAAKqD,EAAAA,EAAAA,GAAS,CAAC,EAAGhG,EAAMS,WAAW8N,MAAO,CACzCrP,WAAY,GACZ,IACF,SAASiiH,GAAyBl+G,GAI/B,IAJgC,KACjC6zB,EAAI,GACJC,EAAE,MACF65E,GACD3tG,EACC,MAAO,GAAP1D,OAAUu3B,EAAI,UAAAv3B,OAAIw3B,EAAE,QAAAx3B,QAAkB,IAAXqxG,EAAeA,EAAQ,aAAHrxG,OAAgBw3B,GACjE,CACA,SAASqqF,GAAoBv1G,GAC3B,MAAO,SAAPtM,OAAgBsM,EAAI,QACtB,CACA,MAsBMw1G,GAA+B19G,EAAAA,YAAiB,SAAyBC,EAASC,GACtF,IAAIy9G,EACJ,MAAM1iH,GAAQN,EAAAA,GAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,wBAEF,iBACF6iH,EAAmBC,GAAsB,oBACzC5D,EAAmB,UACnBv5G,EACA0oB,QAAS00F,EAAW,UACpBn9G,EAAYmK,GAAAA,EAAS,MACrBmiG,EAAK,SACLnmG,GAAW,EAAK,iBAChBozG,EAAmBuD,GAAmB,mBACtCM,EAAqBP,GAAyB,iBAC9CQ,EAAmB,iBAAgB,oBACnC7D,EAAmB,aACnBC,EAAY,oBACZ6D,EAAmB,KACnBtiE,EAAI,YACJ0+D,EAAW,mBACX6D,EAAqB,CAAC,GAAI,GAAI,GAAI,KAAI,YACtCC,EAAc,CAAC,EAAC,gBAChB7D,GAAkB,EAAK,eACvBC,GAAiB,EAAK,UACtBh5G,EAAY,CAAC,EAAC,MACdD,EAAQ,CAAC,GACPrG,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCe,EAAaR,EACbqH,EArDkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAaJ,OAAO8G,EAAAA,GAAAA,GAZO,CACZpH,KAAM,CAAC,QACP8qB,QAAS,CAAC,WACV02F,OAAQ,CAAC,UACTE,YAAa,CAAC,eACdI,OAAQ,CAAC,UACT9uG,MAAO,CAAC,SACR6uG,WAAY,CAAC,cACbK,SAAU,CAAC,YACXE,cAAe,CAAC,iBAChB74E,QAAS,CAAC,YAEiB23E,GAAgC/5G,EAAQ,EAqCrDE,CAAkB/G,GAC5B2iH,EAAqF,OAAtET,EAAiC,MAAbp8G,OAAoB,EAASA,EAAU07G,QAAkBU,EAAoBQ,EAChHE,EAAoBD,EAAY11E,OAAS,SAAW00E,GAC1D,IAAIh0F,EACAzoB,IAAcmK,GAAAA,GAA2B,OAAdnK,IAC7ByoB,EAAU00F,GAAe,KAE3B,MAAMx1E,GAAWvX,EAAAA,GAAAA,GAAMqtF,EAAY/wG,IAC7Bid,GAAUyG,EAAAA,GAAAA,GAAMqtF,EAAY9zF,SAOlC,OAAoB7mB,EAAAA,GAAAA,KAAK84G,IAAqBl6G,EAAAA,EAAAA,GAAS,CACrD+mB,QAASA,EACTlpB,IAAKA,EACLmD,GAAI1C,EACJlF,WAAYA,EACZiF,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,IAC7BgB,EAAO,CACRZ,UAAuB0C,EAAAA,GAAAA,MAAMg5G,GAAwB,CACnD97G,UAAW4B,EAAQ2jB,QACnBnlB,SAAU,EAAc2C,EAAAA,GAAAA,KAAKi5G,GAAuB,CAClDh8G,UAAW4B,EAAQq6G,SACjBuB,EAAmB9uG,OAAS,IAAkB3L,EAAAA,GAAAA,KAAKm5G,GAA4B,CACjFl8G,UAAW4B,EAAQu6G,YACnBxvG,GAAIid,EACJxpB,SAAUk9G,IACRE,EAAmB9uG,OAAS,IAAkB3L,EAAAA,GAAAA,KAAKq5G,IAAuBz6G,EAAAA,EAAAA,GAAS,CACrF1G,QAAS,aACPyiH,EAAYziH,SAAW,CACzBwS,MAAOmuG,KAAeA,IAA0B74G,EAAAA,GAAAA,KAAKsqB,GAAAA,GAAW,CAAC,KAChE,CACD1oB,MAAOg1G,EACP5sG,SAAUwwG,EACV5wG,GAAIi7B,EACJhe,QAASA,GACR8zF,EAAa,CACd97G,SAASD,EAAAA,EAAAA,GAAS,CAAC,EAAG+7G,EAAY97G,QAAS,CAEzCnH,MAAMmI,EAAAA,EAAAA,GAAKhB,EAAQ6L,MAAO7L,EAAQ46G,YAAakB,EAAY97G,SAAW,CAAC,GAAGnH,MAC1E8hH,QAAQ35G,EAAAA,EAAAA,GAAKhB,EAAQ26G,QAASmB,EAAY97G,SAAW,CAAC,GAAG26G,QAEzD7vG,MAAM9J,EAAAA,EAAAA,GAAKhB,EAAQ06G,YAAaoB,EAAY97G,SAAW,CAAC,GAAG8K,QAE7DtG,SAAUA,EACVhG,SAAUo9G,EAAmBt/G,KAAI0/G,IAAkC9yE,EAAAA,EAAAA,eAAe6yE,GAAmBh8G,EAAAA,EAAAA,GAAS,CAAC,IAAIk8G,EAAAA,GAAAA,GAAgBF,IAAsB,CACvJ5iH,cACC,CACDiF,UAAW4B,EAAQ+6G,SACnB9+G,IAAK+/G,EAAkB93G,MAAQ83G,EAAkB93G,MAAQ83G,EACzDj5G,MAAOi5G,EAAkBj5G,MAAQi5G,EAAkBj5G,MAAQi5G,IACzDA,EAAkB93G,MAAQ83G,EAAkB93G,MAAQ83G,SACxC76G,EAAAA,GAAAA,KAAK65G,GAA8B,CACnD58G,UAAW4B,EAAQi7G,cACnBz8G,SAAUi9G,EAAmB,CAC3B5qF,KAAgB,IAAV85E,EAAc,EAAItxD,EAAO0+D,EAAc,EAC7CjnF,IAjDS,IAAX65E,GACMtxD,EAAO,GAAK0+D,GAEE,IAAjBA,EAAqBpN,EAAQxnG,KAAKwtB,IAAIg6E,GAAQtxD,EAAO,GAAK0+D,GA+C3DpN,OAAkB,IAAXA,GAAgB,EAAIA,EAC3BtxD,YAEal4C,EAAAA,GAAAA,KAAKm6G,EAAkB,CACtCl9G,UAAW4B,EAAQoiC,QACnBu1E,oBAAqBA,EACrBhN,MAAOA,EACPkN,oBAAqBA,EACrBC,aAAcA,EACdz+D,KAAMA,EACN0+D,YAAaA,EACbC,gBAAiBA,EACjBC,eAAgBA,EAChBh5G,UAAWA,EAAUmjC,QACrBpjC,MAAOA,EAAMojC,QACbw1E,iBAAkBA,EAClBpzG,SAAUA,SAIlB,IA4LA,MCnbM03G,IAAqB1jH,EAAAA,EAAAA,IAAO4iH,GAAP5iH,EAAwBqF,IAAA,IAAC,MAClD9D,GACD8D,EAAA,MAAM,CACLs+G,UAAW,mBAEXpvD,SAAU,EACV,CAAC,MAADzzD,OAAO6gH,GAAuBI,cAAgB,CAC5CxhH,QAAS,OACT,CAACgB,EAAM04G,YAAYC,GAAG,OAAQ,CAC5B35G,QAAS,UAGb,CAAC,MAADO,OAAO6gH,GAAuBtuG,QAAU,CACtC9S,QAAS,OACT,CAACgB,EAAM04G,YAAYC,GAAG,OAAQ,CAC5B35G,QAAS,gBAGd,IAeKmiH,GAA4BphH,IAK5B,IAL6B,KACjC+2B,EAAI,GACJC,EAAE,MACF65E,EAAK,UACLyR,GACDtiH,EACC,OAAKsiH,EAGE,GAAP9iH,OAAUu3B,EAAI,UAAAv3B,OAAIw3B,EAAE,QAAAx3B,QAAkB,IAAXqxG,EAAeA,EAAQ,aAAHrxG,OAAgB8iH,EAAYtrF,EAAKsrF,EAAYtrF,IAFnF,GAAPx3B,OAAUu3B,EAAI,UAAAv3B,OAAIw3B,EAAE,QAAAx3B,QAAkB,IAAXqxG,EAAeA,EAAQ,aAAHrxG,OAAgBw3B,GAE+B,EAK5FurF,GAA8B3+G,EAAAA,YAAiB,SAAwB/E,EAAOiF,GAClF,MAAMgT,EAASuW,KACT1mB,EAAY2Z,IACZ2/B,EAAkB9oC,EAAgBL,EAAQkpC,IAC1C9Y,EAAW/vB,EAAgBL,EAAQopC,IACnCitB,EAAYh2D,EAAgBL,EAAQwpC,KACpC,eACJe,EAAc,QACd5c,EAAO,kBACP+9E,GACE77G,EACE87G,EAAgB7+G,EAAAA,SAAc,KAChB,IAAdsjC,GAAsC,WAAnBma,GAA+B5c,EAC7C,CACLo5E,oBAAqB,CACnBnzG,UAAU,GAEZqzG,oBAAqB,CACnBrzG,UAAU,IAIT,CAAC,GACP,CAAC+5B,EAAS4c,EAAgBna,IACvBw7E,EAAW9+G,EAAAA,SAAc,IAAMyF,KAAKvE,IAAI,EAAGqoE,EAAY,IAAI,CAACA,IAC5Dw1C,EAAe/+G,EAAAA,SAAc,KACf,IAAdsjC,GAGG+Y,EAAgBV,MAAQmjE,EAFtBziE,EAAgBV,KAEwCmjE,GAChE,CAACA,EAAUziE,EAAgBV,KAAMrY,IAC9B07E,EAAuBh/G,EAAAA,aAAkBsO,IAC7C,MAAMotC,EAAWx5C,OAAOoM,EAAMI,OAAOrJ,OACrC6N,EAAOzC,QAAQqlE,YAAYp6B,EAAS,GACnC,CAACxoC,IACE+rG,EAAmBj/G,EAAAA,aAAkB,CAACsS,EAAGqpC,KAC7CzoC,EAAOzC,QAAQklE,QAAQh6B,EAAK,GAC3B,CAACzoC,IAuBJ,MAAMuwE,EAtBsC/nC,KAC1C,IAAK,IAAItrC,EAAI,EAAGA,EAAIrN,EAAU0gF,gBAAgBr0E,OAAQgB,GAAK,EAAG,CAC5D,MAAMglB,EAASryB,EAAU0gF,gBAAgBrzE,GACzC,GAAsB,kBAAXglB,GACT,GAAIA,IAAWsmB,EACb,OAAO,OAEJ,GAAItmB,EAAO/vB,QAAUq2C,EAC1B,OAAO,CAEX,CACA,OAAO,CAAK,EAWUwjE,CAAoC7iE,EAAgBX,UAAY34C,EAAU0gF,gBAAkB,GAC9G07B,EAAUjsG,EAAOzC,QAAQ+hB,cAAc,sBACvC4sF,GA1FwBrB,EA0F2BoB,EAAQpB,oBAAsBP,GA1FrCkB,EA0FgEE,EAzF3Gv+G,IAAA,IAAC,KACN8yB,EAAI,GACJC,EAAE,MACF65E,EAAK,KACLtxD,GACDt7C,EAAA,OAAK09G,EAAmB,CACvB5qF,OACAC,KACA65E,QACAtxD,OACA+iE,aACA,GAZ2BW,IAACtB,EAAoBW,EA2FlD,OAAoBj7G,EAAAA,GAAAA,KAAK+6G,IAAoBn8G,EAAAA,EAAAA,GAAS,CACpDnC,IAAKA,EACLS,UAAW,MACXssG,MAAO3pE,EACPqY,KAAMojE,EAKNb,mBAAoBz6B,EACpB42B,YAAah+D,EAAgBX,SAC7B0+D,aAAc6E,EACdhB,oBAAqBe,GACpBH,EAAeM,EAAS,CACzBpB,mBAAoBqB,GACnBnkH,GACL,ICtIMP,GAAY,CAAC,aAkBb4kH,IAAuBxkH,EAAAA,GAAAA,GAAO,MAAO,CACzCC,KAAM,cACNR,KAAM,eACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO6uB,cAHlBjvB,CAI1B,CACDO,QAAS,OACTkB,cAAe,SACfiM,SAAU,OACVsB,KAAM,MACN20G,UAAW,MAEb,SAASc,GAAiBtkH,GACxB,MAAM,UACFyF,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IACZpa,EA1BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,iBAEoB2W,EAAyBxP,EAAQ,EAmB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAK67G,IAAsBj9G,EAAAA,EAAAA,GAAS,CACtD3B,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,GACXrB,GACL,CCxCA,MAAMhH,GAAY,CAAC,aAkBb8kH,IAAsB1kH,EAAAA,GAAAA,GAAO,MAAO,CACxCC,KAAM,cACNR,KAAM,cACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOukH,aAHnB3kH,EAIzBqF,IAAA,IAAC,MACF9D,GACD8D,EAAA,MAAM,CACL7C,QAASjB,EAAMud,QAAQ,IACvBve,QAAS,OACToB,eAAgB,gBACjB,IACD,SAASijH,GAAgBzkH,GACvB,MAAM,UACFyF,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IACZpa,EA1BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,gBAEoB2W,EAAyBxP,EAAQ,EAmB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAK+7G,IAAqBn9G,EAAAA,EAAAA,GAAS,CACrD3B,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,GACXrB,GACL,C,gBCxCA,MAAMhH,GAAY,CAAC,YAAa,aAmB1BilH,IAAuB7kH,EAAAA,EAAAA,IAAO,MAAO,CACzCC,KAAM,cACNR,KAAM,eACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO0kH,cAHlB9kH,CAI1B,CACDO,QAAS,OACTkB,cAAe,SACfuN,KAAM,EACN,UAAW,CACT8O,QAAS,KAGPinG,GAAYA,KAAM,EAClBC,GAAgC9/G,EAAAA,YAAiB,SAA0B/E,EAAOiF,GACtF,MAAM,UACFQ,EAAS,UACTa,EAAY,CAAC,GACXtG,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IACZpa,EA7BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,iBAEoB2W,EAAyBxP,EAAQ,EAsB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKs8G,GAAAA,GAAW19G,EAAAA,EAAAA,GAAS,CAC3CmP,MAAM,EACNwuG,qBAAqB,EACrBH,UAAWA,IACVt+G,EAAU0+G,UAAW,CACtBn/G,UAAuB2C,EAAAA,GAAAA,KAAKk8G,IAAsBt9G,EAAAA,EAAAA,GAAS,CACzDnC,IAAKA,EACL0N,UAAW,EACXlN,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,GACXrB,MAEP,ICpDMhH,GAAY,CAAC,OAAQ,qBAAsB,eAAgB,qBAAsB,2BAA4B,6BAA8B,kCAAmC,kBAAmB,iBAAkB,cAAe,gBAAiB,kBAAmB,0BAA2B,qBAAsB,mBAAoB,kBAAmB,WAAY,YAC9W65B,GAAa,CAAC,uBA8BV2rF,IAAqBplH,EAAAA,EAAAA,IAAO,MAAO,CACvCC,KAAM,cACNR,KAAM,aACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOilH,YAHpBrlH,EAIxBqF,IAAA,IAAC,MACF9D,GACD8D,EAAA,MAAM,CACL9E,QAAS,OACTiC,QAASjB,EAAMud,QAAQ,GACxB,IACKwmG,IAAuBtlH,EAAAA,EAAAA,IAAO,MAAO,CACzCC,KAAM,cACNR,KAAM,uBACNS,kBAAmBA,CAACsX,EAAGpX,IAAWA,EAAOmlH,sBAHdvlH,EAI1BuF,IAAA,IAAC,MACFhE,GACDgE,EAAA,MAAM,CACL9E,WAAY,EACZkB,eAAgB,WAChBoK,YAAaxK,EAAMud,QAAQ,IAC3B5P,aAAc3N,EAAMud,QAAQ,IAC7B,IACK0mG,IAA+BxlH,EAAAA,EAAAA,IAAO,MAAO,CACjDC,KAAM,cACNR,KAAM,+BACNS,kBAAmBA,CAACsX,EAAGpX,IAAWA,EAAOqlH,8BAHNzlH,CAIlC,CACDqC,SAAU,GACV0J,YAAa,EACbpK,eAAgB,QAEZ+jH,IAAwB1lH,EAAAA,EAAAA,IAAO,MAAO,CAC1CC,KAAM,cACNR,KAAM,wBACNS,kBAAmBA,CAACsX,EAAGpX,IAAWA,EAAOulH,uBAHb3lH,CAI3B,CACD+K,MAAO,MAEH66G,IAA0B5lH,EAAAA,EAAAA,IAAO,MAAO,CAC5CC,KAAM,cACNR,KAAM,0BACNS,kBAAmBA,CAACsX,EAAGpX,IAAWA,EAAOylH,yBAHX7lH,CAI7B,CACD+K,MAAO,MAEH+6G,IAAuB9lH,EAAAA,EAAAA,IAAO,MAAO,CACzCC,KAAM,cACNR,KAAM,uBACNS,kBAAmBA,CAACsX,EAAGpX,IAAWA,EAAO2lH,sBAHd/lH,CAI1B,CACD+K,MAAO,MAYHi7G,GAAiBh4F,GAAOA,EAAI+nB,YAAc/nB,EAAI9B,MAC9CqJ,GAAW,IAAIC,KAAKC,SACpBwwF,GAA8B/gH,EAAAA,YAAiB,SAAwB/E,EAAOiF,GAAK,IAAAk6B,EAAAxQ,EAAAC,EAAAue,EAAAC,EAAA2D,EAAAg1E,EAAAC,EAAAC,EAAAC,EAAAC,EACvF,MAAM,KACFjkG,EAAI,mBACJkkG,EAAkB,aAClBC,EAAY,mBACZC,EAAkB,yBAClBC,EAAwB,2BACxBC,EAA0B,gCAC1BC,EAA+B,gBAC/BlwF,EAAe,eACfmwF,EAAiB,CAAClsF,GAAkBI,IAAKJ,GAAkBmsF,IAAG,YAC9DC,EAAW,cACXC,EAAa,gBACbC,EAAkB,CAAC,EAAC,wBACpBC,EAA0B,CAAC,EAAC,mBAC5BC,EAAqB,CAAC,EAAC,iBACvBC,EAAmB,CAAC,EAAC,gBACrBC,EAAkB,CAAC,EAAC,SACpBx0G,GACE1S,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACT2xB,EAAe7nC,EAAgBL,EAAQ0T,IACvCw7F,EAAoB7uG,EAAgBL,EAAQ2V,IAC5CgO,EAActjB,EAAgBL,EAAQwmC,IACtC2oE,EAAiBtxF,KACjBuxF,EAAsBvxF,KACtBwxF,EAAmBxxF,KACnByxF,EAAwBzxF,KACxBhuB,EAAY2Z,IACZpa,EA5GkB7G,KACxB,MAAM,QACJ6G,GACE7G,EASJ,OAAO8G,EARO,CACZpH,KAAM,CAAC,cACPsnH,WAAY,CAAC,wBACbC,mBAAoB,CAAC,gCACrBC,YAAa,CAAC,yBACdC,cAAe,CAAC,2BAChBC,WAAY,CAAC,yBAEc/wG,EAAyBxP,EAAQ,EAgG9CE,CAAkBO,GAC5B+/G,EAAW9iH,EAAAA,OAAa,MACxB+iH,EAAoB/iH,EAAAA,OAAa,MACjCgjH,EAA+C,QAA5B5oF,EAAGvD,EAAYjB,qBAAa,IAAAwE,EAAAA,EAAI3E,GAAkBI,IACrEotF,EAAyB5B,GAAsBM,EAAevyG,OAAS,EACvE8zG,IAA0C,QAAnBt5F,EAAA7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBif,kBAAmB,CAAC,EAEhEs6E,GAA2C,QAAzB/6E,IADmB,QAAnBve,EAAA9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqB2e,aAAc,CAAC,GACjBE,cAAM,IAAAN,GAAAA,EAC3Cg7E,IAAyC,QAAnB/6E,EAAAtlC,EAAUxB,iBAAS,IAAA8mC,OAAA,EAAnBA,EAAqBS,iBAAkB,CAAC,EAC9DH,IAA2C,QAAnBqD,EAAAjpC,EAAUxB,iBAAS,IAAAyqC,OAAA,EAAnBA,EAAqBpD,mBAAoB,CAAC,GAClE,oBACF1L,IACEilF,EACJkB,IAAuB1hH,EAAAA,EAAAA,GAA8BwgH,EAAiB5tF,KAClE,gBACJ2tC,GAAe,cACfohD,IACEtjH,EAAAA,SAAc,KAChB,IAAIujH,EAAYpmG,EAAK6J,MAGrB,MAAMw8F,GAAsE,IAAxCpoE,EAAaj+B,EAAK6J,OAAO+B,WAAuBqyB,EAAaj+B,EAAK6J,OAAS,KAC/G,GAAIw8F,EACF,MAAO,CACLthD,gBAAiB,CAACshD,GAClBF,cAAeC,GAGnB,QAAsBnhH,IAAlB0/G,GAAwD,oBAAlBA,EACxC,MAAO,CACL5/C,gBAAiBkgD,EACjBkB,cAAeC,GAGnB,MAAME,EAAiB3B,EAAc,CACnC96F,MAAO7J,EAAK6J,MACZR,QAAS47F,EACTsB,gBAA2B,OAAX7sF,QAAW,IAAXA,OAAW,EAAXA,EAAalB,QAAS,KAExC,MAAO,CACLusC,gBAAiBkgD,EAAkB9jH,QAAO8oB,IACxC,MAAMu8F,EAAkBF,EAAev7F,SAASd,EAAOJ,OAIvD,OAHII,EAAOJ,QAAU7J,EAAK6J,OAAU28F,IAClCJ,OAAYnhH,GAEPuhH,CAAe,IAExBL,cAAeC,EAChB,GACA,CAACzB,EAA0B,OAAXjrF,QAAW,IAAXA,OAAW,EAAXA,EAAalB,MAAOysF,EAAmBjlG,EAAK6J,MAAOo0B,IAChEwoE,GAAwB5jH,EAAAA,SAAc,KAC1C,OAAQ6hH,GACN,IAAK,MACH,OAAO3/C,GAAgBngC,MAAK,CAAC7vB,EAAGC,IAAMke,GAASiL,QAAQwlF,GAAe5uG,GAAI4uG,GAAe3uG,MAC3F,IAAK,OACH,OAAO+vD,GAAgBngC,MAAK,CAAC7vB,EAAGC,KAAOke,GAASiL,QAAQwlF,GAAe5uG,GAAI4uG,GAAe3uG,MAC5F,QACE,OAAO+vD,GACX,GACC,CAACA,GAAiB2/C,IACfgC,GAAgB1mG,EAAK6J,MAAQ9T,EAAOzC,QAAQme,UAAUzR,EAAK6J,OAAS,KACpE88F,GAAkB9jH,EAAAA,SAAc,KAAM,IAAA+jH,EAC1C,OAAK5mG,EAAKmZ,UAAautF,GAGa,QAApCE,EAAOF,GAActtF,uBAAe,IAAAwtF,OAAA,EAA7BA,EAA+BtkG,MAAK6W,GAAYA,EAASjxB,QAAU8X,EAAKmZ,WAFtE,IAE+E,GACvF,CAACnZ,EAAM0mG,KACJG,GAAehkH,EAAAA,aAAkBsO,IACrC,MAAM0Y,EAAQ1Y,EAAMI,OAAOrJ,MACrB+hB,EAASlU,EAAOzC,QAAQme,UAAU5H,GACxC,GAAII,EAAOJ,QAAU68F,GAAc78F,MAEjC,OAIF,MAAMi9F,EAAc78F,EAAOmP,gBAAgB9W,MAAK6W,GAAYA,EAASjxB,QAAU8X,EAAKmZ,YAAalP,EAAOmP,gBAAgB,GAIxH,IAAIgD,GADsB0qF,EAAY7nF,gBAAkB6nF,EAAY7nF,kBAAkC,OAAf0nF,SAAe,IAAfA,QAAe,EAAfA,GAAiB1nF,iBAAkBhV,EAAOlf,OAAS27G,GAAc37G,UACnH9F,EAAY+a,EAAK9X,MAGtD,GAAoB,iBAAhB+hB,EAAOlf,WAA2C9F,IAAhBm3B,EAA2B,CAC/D,MAAMrL,EAAS9G,EACT2iB,EAAeF,GAAgB3b,GACjC5e,MAAM8N,QAAQmc,GAChBA,EAAcA,EAAYj7B,QAAOg+B,QAG2Cl6B,IAAxE4nC,GAAyB1N,EAAKyN,EAAoB,OAAN7b,QAAM,IAANA,OAAM,EAANA,EAAQ+b,uBAGgC7nC,IAA/E4nC,GAAyB7sB,EAAK9X,MAAO0kC,EAAoB,OAAN7b,QAAM,IAANA,OAAM,EAANA,EAAQ+b,kBAEpE1Q,OAAcn3B,EAElB,CACAm/G,GAAmBl/G,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,EAAM,CACpC6J,QACAsP,SAAU2tF,EAAY5+G,MACtBA,MAAOk0B,IACN,GACF,CAACrmB,EAAQquG,EAAoBpkG,EAAM0mG,GAAeC,KAC/CI,GAAiBlkH,EAAAA,aAAkBsO,IACvC,MAAMgoB,EAAWhoB,EAAMI,OAAOrJ,MACxB4+G,EAA2B,OAAbJ,SAAa,IAAbA,QAAa,EAAbA,GAAettF,gBAAgB9W,MAAK0kG,GAAMA,EAAG9+G,QAAUixB,IACrE8tF,IAA6B,OAAXH,QAAW,IAAXA,GAAAA,EAAa7nF,kBAA6B,OAAX6nF,QAAW,IAAXA,OAAW,EAAXA,EAAa7nF,mBAAkC,OAAf0nF,SAAe,IAAfA,QAAe,EAAfA,GAAiB1nF,gBACxGmlF,GAAmBl/G,EAAAA,EAAAA,GAAS,CAAC,EAAG8a,EAAM,CACpCmZ,WACAjxB,MAAO++G,OAAiBhiH,EAAY+a,EAAK9X,QACxC,GACF,CAACk8G,EAAoBpkG,EAAM0mG,GAAeC,KACvCO,GAAsBrkH,EAAAA,aAAkBsO,IAC5C,MAAMsnB,EAAgBtnB,EAAMI,OAAOrJ,QAAUowB,GAAkBI,IAAI7B,WAAayB,GAAkBI,IAAMJ,GAAkBmsF,GAC1HF,EAAgC9rF,EAAc,GAC7C,CAAC8rF,IAaJ,OATA1hH,EAAAA,oBAA0BwxB,GAAiB,KAAM,CAC/CnC,MAAOA,KACgC,IAAAi1F,EAAlB,OAAfR,SAAe,IAAfA,IAAAA,GAAiB1nF,eACX,OAAR0mF,QAAQ,IAARA,GAAiB,QAATwB,EAARxB,EAAUryG,eAAO,IAAA6zG,GAAjBA,EAAmBj1F,QAEnB0zF,EAAkBtyG,QAAQ4e,OAC5B,KAEA,CAACy0F,MACetgH,EAAAA,GAAAA,MAAM08G,IAAoB79G,EAAAA,EAAAA,GAAS,CACrDnC,IAAKA,EACLQ,UAAW4B,EAAQnH,KACnB,UAAWgiB,EAAK9P,GAChB5R,WAAYsH,GACXrB,EAAO,CACRZ,SAAU,EAAc2C,EAAAA,GAAAA,KAAK28G,IAAsB/9G,EAAAA,EAAAA,GAAS,CAC1D1G,QAAS,WACT0H,GAAIN,EAAUzB,MAAMunC,iBACnBq6E,GAAsBnB,EAAiB,CACxCrhH,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQmgH,WAAYS,GAAqBxiH,UAAWqhH,EAAgBrhH,WACpFjF,WAAYsH,EACZjC,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+uC,gBAAgBhuC,EAAAA,EAAAA,GAAS,CACnE,aAAc6Q,EAAOzC,QAAQ+hB,cAAc,8BAC3Cw1C,MAAO90D,EAAOzC,QAAQ+hB,cAAc,8BACpCkd,QA3BqB60E,KACzBjD,EAAankG,EAAK,EA2BdhY,KAAM,QACN2B,SAAU6G,GACU,QAArBqzG,EAAEj+G,EAAUxB,iBAAS,IAAAy/G,OAAA,EAAnBA,EAAqB3wE,eAAgB,CACtCvvC,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMkjH,sBAAuB,CACjEvnH,SAAU,iBAGEwG,EAAAA,GAAAA,KAAK68G,IAA8Bj+G,EAAAA,EAAAA,GAAS,CAC5D1G,QAAS,WACT0H,GAAIN,EAAUzB,MAAMunC,iBACnBq6E,GAAsBlB,EAAyB,CAChDyC,GAAI,CAACxB,EAAyB,CAC5B5nH,QAAS,QACP,CACFA,QAAS,QACRmmH,EAA2B,CAC5BltG,WAAY,WACV,CACFA,WAAY,UACX4uG,GAAqBuB,GAAIzC,EAAwByC,IACpD/jH,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQogH,mBAAoBQ,GAAqBxiH,UAAWshH,EAAwBthH,WACpGjF,WAAYsH,EACZjC,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMknC,YAAYnmC,EAAAA,EAAAA,GAAS,CAC/DiL,WAAY,CACV,aAAc4F,EAAOzC,QAAQ+hB,cAAc,6BAE7CntB,MAA0B,OAAnB29G,QAAmB,IAAnBA,EAAAA,EAAuB,GAC9Bv1G,SAAU42G,GACVv9G,WAAY26G,GAAwD,IAA1BE,EAAevyG,OACzDs5B,OAAQy6E,IACY,QAArBlC,EAAEl+G,EAAUxB,iBAAS,IAAA0/G,OAAA,EAAnBA,EAAqBz4E,WAAY,CAClC1nC,SAAU6gH,EAAe/iH,KAAIg3B,IAA8B4V,EAAAA,EAAAA,eAAezoC,EAAUzB,MAAMsnC,kBAAkBvmC,EAAAA,EAAAA,GAAS,CAAC,EAAGsmC,GAAuB,CAC9ID,OAAQy6E,GACR5kH,IAAKq3B,EAAc5B,WACnB3uB,MAAOuwB,EAAc5B,aACnB9gB,EAAOzC,QAAQ+hB,cA9NOoD,KAChC,OAAQA,GACN,KAAKH,GAAkBI,IACrB,MAAO,yBACT,KAAKJ,GAAkBmsF,GACrB,MAAO,wBACT,QACE,MAAM,IAAI9yG,MAAM,qEACpB,EAsNuC41G,CAA0B9uF,cAE7CpyB,EAAAA,GAAAA,MAAMg9G,IAAuBn+G,EAAAA,EAAAA,GAAS,CACtD1G,QAAS,WACT0H,GAAIN,EAAUzB,MAAMunC,iBACnBq6E,GAAsBhB,EAAkB,CACzCxhH,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQqgH,YAAaO,GAAqBxiH,UAAWwhH,EAAiBxhH,WACtFjF,WAAYsH,EACZjC,SAAU,EAAc2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMwnC,gBAAgBzmC,EAAAA,EAAAA,GAAS,CAAC,EAAG+gH,GAAqB,CAC7Fp7E,QAASq6E,EACTh1G,GAAIi1G,EACJxhH,SAAUoS,EAAOzC,QAAQ+hB,cAAc,0BACvB/uB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMknC,YAAYnmC,EAAAA,EAAAA,GAAS,CAC1DioB,QAASg4F,EACTj1G,GAAIg1G,EACJ77G,MAAO0M,EAAOzC,QAAQ+hB,cAAc,sBACpCntB,MAAoB,OAAbi+G,SAAa,IAAbA,GAAAA,GAAiB,GACxB71G,SAAUu2G,GACVt7E,OAAQy6E,GACRr8G,SAAU6G,GACU,QAArBuzG,EAAEn+G,EAAUxB,iBAAS,IAAA2/G,OAAA,EAAnBA,EAAqB14E,WAAY,CAClC1nC,SAAU8iH,GAAsBhlH,KAAIkqB,IAAoB0iB,EAAAA,EAAAA,eAAezoC,EAAUzB,MAAMsnC,kBAAkBvmC,EAAAA,EAAAA,GAAS,CAAC,EAAGsmC,GAAuB,CAC3ID,OAAQy6E,GACR5kH,IAAKuqB,EAAI9B,MACT3hB,MAAOyjB,EAAI9B,QACT85F,GAAeh4F,cAELtlB,EAAAA,GAAAA,MAAMk9G,IAAyBr+G,EAAAA,EAAAA,GAAS,CACxD1G,QAAS,WACT0H,GAAIN,EAAUzB,MAAMunC,iBACnBq6E,GAAsBjB,EAAoB,CAC3CvhH,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQsgH,cAAeM,GAAqBxiH,UAAWuhH,EAAmBvhH,WAC1FjF,WAAYsH,EACZjC,SAAU,EAAc2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMwnC,gBAAgBzmC,EAAAA,EAAAA,GAAS,CAAC,EAAG+gH,GAAqB,CAC7Fp7E,QAASu6E,EACTl1G,GAAIm1G,EACJ1hH,SAAUoS,EAAOzC,QAAQ+hB,cAAc,2BACvB/uB,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMknC,YAAYnmC,EAAAA,EAAAA,GAAS,CAC1DioB,QAASk4F,EACTh8G,MAAO0M,EAAOzC,QAAQ+hB,cAAc,uBACpCnlB,GAAIk1G,EACJl9G,MAAO8X,EAAKmZ,SACZ7oB,SAAUy2G,GACVx7E,OAAQy6E,GACR51G,SAAUw1G,EACVj8G,SAAU6G,GACU,QAArBwzG,EAAEp+G,EAAUxB,iBAAS,IAAA4/G,OAAA,EAAnBA,EAAqB34E,WAAY,CAClC1nC,SAAuB,OAAb+iH,SAAa,IAAbA,IAA8B,QAAjBzC,EAAbyC,GAAettF,uBAAe,IAAA6qF,OAAA,EAA9BA,EAAgCxiH,KAAI03B,IAAyBkV,EAAAA,EAAAA,eAAezoC,EAAUzB,MAAMsnC,kBAAkBvmC,EAAAA,EAAAA,GAAS,CAAC,EAAGsmC,GAAuB,CAC1JD,OAAQy6E,GACR5kH,IAAK+3B,EAASjxB,MACdA,MAAOixB,EAASjxB,QACdixB,EAAS9vB,OAAS0M,EAAOzC,QAAQ+hB,cAAc,iBAAD52B,OAAkBC,EAAWy6B,EAASjxB,oBAE1E5B,EAAAA,GAAAA,KAAKm9G,IAAsBv+G,EAAAA,EAAAA,GAAS,CACpD1G,QAAS,WACT0H,GAAIN,EAAUzB,MAAMunC,iBACnBq6E,GAAsBG,GAAsB,CAC7C3iH,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQugH,WAAYK,GAAqBxiH,UAAW2iH,GAAqB3iH,WACzFjF,WAAYsH,EACZjC,SAAyB,OAAfgjH,SAAe,IAAfA,IAAAA,GAAiB1nF,gBAA8B34B,EAAAA,GAAAA,KAAKqgH,GAAgB1nF,gBAAgB/5B,EAAAA,EAAAA,GAAS,CACrG6Q,OAAQA,EACRiK,KAAMA,EACNoU,WAAYgwF,EACZ/vF,gBAAiBsxF,EACjBh8G,SAAU6G,GACTm2G,GAAgB5mF,oBAAqBA,IAAsB/f,EAAK6J,OAAS,WAGlF,ICrXMtsB,GAAY,CAAC,iBAAkB,cAAe,kBAAmB,wBAAyB,WAAY,yBAA0B,0BAchIiqH,GAAgB77F,IAAO,CAC3B9B,MAAO8B,EAAI9B,MACXsP,SAAUxN,EAAIyN,gBAAgB,GAAGlxB,MACjCgI,GAAI5H,KAAKG,MAAsB,IAAhBH,KAAK4wB,YAEhBuuF,GAA+B5kH,EAAAA,YAAiB,SAAyB/E,EAAOiF,GAAK,IAAA0pB,EAAAC,EACzF,MAAM3W,EAASuW,KACT1mB,EAAY2Z,IACZma,EAActjB,EAAgBL,EAAQwmC,IACtC0oE,EAAoB7uG,EAAgBL,EAAQ2V,IAC5Cg8F,EAA0BtxG,EAAgBL,EAAQ8V,IAClD87F,EAAgB9kH,EAAAA,OAAa,MAC7B+kH,EAAoB/kH,EAAAA,OAAa,OACjC,eACF2hH,EAAiB,CAAClsF,GAAkBI,IAAKJ,GAAkBmsF,IAAG,YAC9DC,EAAW,gBACXmD,EAAe,sBACfC,EAAqB,uBACrBC,GAAyB,EAAK,uBAC9BC,GAAyB,GACvBlqH,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzC0qH,EAAclyG,EAAOzC,QAAQwyF,iBAC7BoiB,EAA2BrlH,EAAAA,aAAkBs2B,IACjDpjB,EAAOzC,QAAQszF,uBAAuBztE,EAAS,GAC9C,CAACpjB,IACEoyG,EAAmBtlH,EAAAA,aAAkB,KACzC,IAAIulH,EACJ,GAAIN,GAA0D,oBAA1BA,EAAsC,CAExE,MAAMO,EAAgBP,EAAsB,CAC1CvB,gBAA2B,OAAX7sF,QAAW,IAAXA,OAAW,EAAXA,EAAalB,QAAS,GACtCnP,QAAS47F,IAEX,GAAsB,OAAlBoD,EACF,OAAO,KAETD,EAAyBnD,EAAkB3iG,MAAKtf,IAAA,IAAC,MAC/C6mB,GACD7mB,EAAA,OAAK6mB,IAAUw+F,CAAa,GAC/B,MACED,EAAyBnD,EAAkB3iG,MAAKyO,IAAM,IAAAu3F,EAAA,OAA0B,QAA1BA,EAAIv3F,EAAOqI,uBAAe,IAAAkvF,OAAA,EAAtBA,EAAwBr2G,MAAM,IAE1F,OAAKm2G,EAGEZ,GAAcY,GAFZ,IAEmC,GAC3C,CAAY,OAAX1uF,QAAW,IAAXA,OAAW,EAAXA,EAAalB,MAAOysF,EAAmB6C,IACrCS,EAAe1lH,EAAAA,aAAkB,KACrC,QAA8BoC,IAA1B6iH,GAAwE,oBAA1BA,EAChD,OAAOK,IAET,MAAM5B,EAAiB7sF,EAAYlB,MAAMvmB,OAASynB,EAAYlB,MAAQ,CAAC2vF,KAAoBhnH,OAAO0P,SAG5F23G,EAAsBV,EAAsB,CAChDvB,eAAgBA,EAChBl9F,QAAS47F,IAEX,GAA4B,OAAxBuD,EACF,OAAO,KAET,MAAMJ,EAAyBnD,EAAkB3iG,MAAKpf,IAAA,IAAC,MACrD2mB,GACD3mB,EAAA,OAAK2mB,IAAU2+F,CAAmB,IACnC,OAAKJ,EAGEZ,GAAcY,GAFZ,IAEmC,GAC3C,CAAC1uF,EAAYlB,MAAOysF,EAAmB6C,EAAuBK,IAC3D3vF,EAAQ31B,EAAAA,SAAc,IACtB62B,EAAYlB,MAAMvmB,OACbynB,EAAYlB,OAEhBovF,EAAkBt0G,UACrBs0G,EAAkBt0G,QAAU60G,KAEvBP,EAAkBt0G,QAAU,CAACs0G,EAAkBt0G,SAAW,KAChE,CAAComB,EAAYlB,MAAO2vF,IACjBjE,EAAqB1rF,EAAMvmB,OAAS,GACpC,gBACJw2G,EAAe,aACfC,GACE7lH,EAAAA,SAAc,IAAM21B,EAAM1R,QAAO,CAACgF,EAAK9L,KACrC0nG,EAAwB1nG,EAAK6J,OAC/BiC,EAAI48F,aAAa5iG,KAAK9F,GAEtB8L,EAAI28F,gBAAgB3iG,KAAK9F,GAEpB8L,IACN,CACD28F,gBAAiB,GACjBC,aAAc,MACZ,CAAClwF,EAAOkvF,IACNiB,EAAe9lH,EAAAA,aAAkB,KACrC,MAAM+lH,EAAYL,IACbK,GAGL7yG,EAAOzC,QAAQ2yF,kBAAkB,IAAIztE,EAAOowF,GAAW,GACtD,CAAC7yG,EAAQwyG,EAAc/vF,IACpB2rF,EAAethH,EAAAA,aAAkBmd,IACrC,MAAM6oG,EAAiD,IAAxBH,EAAaz2G,OAC5C8D,EAAOzC,QAAQ6yF,iBAAiBnmF,GAC5B6oG,GACF9yG,EAAOzC,QAAQqzF,iBACjB,GACC,CAAC5wF,EAAQ2yG,EAAaz2G,SACnB62G,EAAkBjmH,EAAAA,aAAkB,IACZ,IAAxB6lH,EAAaz2G,aAA0ChN,IAA1ByjH,EAAa,GAAGxgH,OAC/C6N,EAAOzC,QAAQ6yF,iBAAiBuiB,EAAa,IACtC3yG,EAAOzC,QAAQqzF,mBAEjB5wF,EAAOzC,QAAQ0yF,gBAAe9gG,EAAAA,EAAAA,GAAS,CAAC,EAAGw0B,EAAa,CAC7DlB,MAAOiwF,IACL,yBACH,CAAC1yG,EAAQ0yG,EAAiB/uF,EAAagvF,IAW1C,OAVA7lH,EAAAA,WAAgB,KACV2hH,EAAevyG,OAAS,GAAKynB,EAAYjB,gBAAkB+rF,EAAez5F,SAAS2O,EAAYjB,gBACjGyvF,EAAyB1D,EAAe,GAC1C,GACC,CAACA,EAAgB0D,EAA0BxuF,EAAYjB,gBAC1D51B,EAAAA,WAAgB,KACV6lH,EAAaz2G,OAAS,GACxB01G,EAAcr0G,QAAQ4e,OACxB,GACC,CAACw2F,EAAaz2G,UACG5L,EAAAA,GAAAA,MAAMs8G,IAAkBz9G,EAAAA,EAAAA,GAAS,CACnDnC,IAAKA,GACJwB,EAAO,CACRZ,SAAU,EAAc0C,EAAAA,GAAAA,MAAM+7G,GAAkB,CAC9Cz+G,SAAU,CAAC8kH,EAAgBhnH,KAAI,CAACue,EAAMgH,KAAuB1gB,EAAAA,GAAAA,KAAKs9G,IAAgB1+G,EAAAA,EAAAA,GAAS,CACzF8a,KAAMA,EACNokG,mBAAoB6D,EACpB9D,aAAcA,EACdD,mBAAoBA,EACpBG,yBAA0Br9F,EAAQ,EAClCs9F,2BAAsC,IAAVt9F,EAC5Bu9F,gCAAiC2D,EACjC7zF,gBAAiB,KACjB7jB,UAAU,EACVg0G,eAAgBA,EAChBE,YAAaA,GACZmD,GAA6B,MAAX7nG,EAAK9P,GAAa8W,EAAQhH,EAAK9P,MAAMw4G,EAAajnH,KAAI,CAACue,EAAMgH,KAAuB1gB,EAAAA,GAAAA,KAAKs9G,IAAgB1+G,EAAAA,EAAAA,GAAS,CACrI8a,KAAMA,EACNokG,mBAAoB6D,EACpB9D,aAAcA,EACdD,mBAAoBA,EACpBG,yBAA0BoE,EAAgBx2G,OAAS+U,EAAQ,EAC3Ds9F,2BAA4BmE,EAAgBx2G,OAAS+U,IAAU,EAC/Du9F,gCAAiC2D,EACjC7zF,gBAAiBrN,IAAU0hG,EAAaz2G,OAAS,EAAI01G,EAAgB,KACrEnD,eAAgBA,EAChBE,YAAaA,GACZmD,GAA6B,MAAX7nG,EAAK9P,GAAa8W,EAAQyhG,EAAgBx2G,OAAS+N,EAAK9P,SAC1EtK,EAAU0zB,iCAAqCyuF,GAA0BC,EAYzE,MAZgH3hH,EAAAA,GAAAA,MAAMk8G,GAAiB,CAC1I5+G,SAAU,CAAEokH,GAKOzhH,EAAAA,GAAAA,KAAK,OAAQ,CAAC,IALiBA,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM4kH,YAAY7jH,EAAAA,EAAAA,GAAS,CAC1FqtC,QAASo2E,EACTK,WAAwB1iH,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM8kH,mBAAoB,CAAC,IAC9C,QAArBx8F,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBs8F,WAAY,CAClCplH,SAAUoS,EAAOzC,QAAQ+hB,cAAc,4BACH2yF,GAA0BU,EAAaz2G,OAAS,GAAiB3L,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM4kH,YAAY7jH,EAAAA,EAAAA,GAAS,CAC/IqtC,QAASu2E,EACTE,WAAwB1iH,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+kH,yBAA0B,CAAC,IACpD,QAArBx8F,EAAE9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqBq8F,WAAY,CAClCplH,SAAUoS,EAAOzC,QAAQ+hB,cAAc,2BACnC,WAGZ,I,gBCzLO,MAAM8zF,GAAkCA,CAACp0G,EAAGC,KAEjD,MAAMo0G,EAAe,IAAI9yF,IAAIv1B,OAAOC,KAAK+T,GAAG5T,QAAOC,IAAkB,IAAX2T,EAAE3T,MACtDioH,EAAe,IAAI/yF,IAAIv1B,OAAOC,KAAKgU,GAAG7T,QAAOC,IAAkB,IAAX4T,EAAE5T,MAC5D,GAAIgoH,EAAaphH,OAASqhH,EAAarhH,KACrC,OAAO,EAET,IAAI0M,GAAS,EAMb,OALA00G,EAAa1+G,SAAQtJ,IACdioH,EAAajzF,IAAIh1B,KACpBsT,GAAS,EACX,IAEKA,CAAM,EAEF40G,GAAyBA,CAACr/F,EAAQs/F,KAAiBt/F,EAAOypB,YAAczpB,EAAOJ,OAAOqiB,cAAcpZ,QAAQy2F,IAAgB,ECAnIlkH,GAAoB/G,IACxB,MAAM,QACJ6G,GACE7G,EAOJ,OAAO8G,EANO,CACZpH,KAAM,CAAC,qBACPixF,OAAQ,CAAC,2BACT94B,OAAQ,CAAC,2BACTt9C,IAAK,CAAC,yBAEqBlE,EAAyBxP,EAAQ,EAE1D+tB,GAAW,IAAIC,KAAKC,SAC1B,SAASo2F,GAAsB1rH,GAAO,IAAA2uB,EAAAye,EAAA2D,EACpC,MAAM94B,EAASuW,KACTm9F,EAAiB5mH,EAAAA,OAAa,MAC9BwmB,EAAUjT,EAAgBL,EAAQ4T,IAClC+/F,EAA+Br0G,GAAW,IAAMyU,GAAkC/T,KAASzC,QAC3FyW,EAAwB3T,EAAgBL,EAAQ+T,IAChDlkB,EAAY2Z,KACXgqG,EAAaI,GAAkB9mH,EAAAA,SAAe,IAC/CsC,EAAUE,GAAkBO,IAC5B,KACJg/B,EAAI,gBACJglF,EAAkBN,GAAsB,qBACxCO,GAAuB,EAAI,sBAC3BC,GAAwB,EAAK,mBAC7BC,GAAqB,EAAK,cAC1BC,EAAgB,MAAK,oBACrBC,GACEnsH,EACEosH,EAAkBrnH,EAAAA,SAAc,IAAMsmH,GAAgCp/F,EAAuB2/F,IAA+B,CAAC3/F,EAAuB2/F,IACpJS,EAAgBtnH,EAAAA,SAAc,KAClC,OAAQ+hC,GACN,IAAK,MACH,MAAO,IAAIvb,GAASub,MAAK,CAAC7vB,EAAGC,IAAMke,GAASiL,QAAQppB,EAAE2+B,YAAc3+B,EAAE8U,MAAO7U,EAAE0+B,YAAc1+B,EAAE6U,SACjG,IAAK,OACH,MAAO,IAAIR,GAASub,MAAK,CAAC7vB,EAAGC,KAAOke,GAASiL,QAAQppB,EAAE2+B,YAAc3+B,EAAE8U,MAAO7U,EAAE0+B,YAAc1+B,EAAE6U,SAClG,QACE,OAAOR,EACX,GACC,CAACA,EAASub,IACPwlF,EAAej5G,IACnB,MACEvT,KAAMisB,GACJ1Y,EAAMI,OACVwE,EAAOzC,QAAQupF,oBAAoBhzE,GAAwC,IAAjCE,EAAsBF,GAAiB,EAE7Ew/C,EAAiBxmE,EAAAA,SAAc,KACnC,MAAMwnH,EAAmBJ,EAAsBA,EAAoBE,GAAiB,KAC9EG,EAAyBD,EAAmBF,EAAchpH,QAAO6B,IAAA,IAAC,MACtE6mB,GACD7mB,EAAA,OAAKqnH,EAAiBt/F,SAASlB,EAAM,IAAIsgG,EAC1C,OAAKZ,EAGEe,EAAuBnpH,QAAO8oB,GAAU2/F,EAAgB3/F,EAAQs/F,EAAYr9E,iBAF1Eo+E,CAEyF,GACjG,CAACH,EAAeZ,EAAaK,EAAiBK,IAC3CM,EAAmB1nH,EAAAA,aAAkBi6F,IACzC,MAAMrkB,EAAe3uD,GAAkC/T,GACjD+mE,GAAW53E,EAAAA,EAAAA,GAAS,CAAC,EAAGuzE,GACxB4xC,EAAmBJ,EAAsBA,EAAoB5gG,GAAW,KAW9E,OAVmB,iBAAlB2gG,EAAmC3gD,EAAiBhgD,GAAS3e,SAAQihB,IAChEA,EAAI6S,WAAiC,MAApB6rF,GAA4BA,EAAiBt/F,SAASY,EAAI9B,UACzEizE,SAEKhgB,EAASnxD,EAAI9B,OAEpBizD,EAASnxD,EAAI9B,QAAS,EAE1B,IAEK9T,EAAOzC,QAAQ85D,yBAAyB0P,EAAS,GACvD,CAAC/mE,EAAQsT,EAAS4gG,EAAqBD,EAAe3gD,IACnDmhD,EAA0B3nH,EAAAA,aAAkBsO,IAChDw4G,EAAex4G,EAAMI,OAAOrJ,MAAM,GACjC,IACGuiH,EAAkB5nH,EAAAA,SAAc,IAAMwmE,EAAeloE,QAAOwqB,GAAOA,EAAI6S,YAAW,CAAC6qC,IACnFqhD,EAA4B7nH,EAAAA,SAAc,IAAM4nH,EAAgBr3G,OAAM6W,GAAiD,MAAvCF,EAAsBE,EAAOJ,SAA0D,IAAxCE,EAAsBE,EAAOJ,UAAmB,CAACE,EAAuB0gG,IACvME,EAA2B9nH,EAAAA,SAAc,IAAM4nH,EAAgBr3G,OAAM6W,IAAkD,IAAxCF,EAAsBE,EAAOJ,UAAmB,CAACE,EAAuB0gG,IACvJG,EAAiB/nH,EAAAA,OAAa,MACpCA,EAAAA,WAAgB,KACVgnH,EACFJ,EAAen2G,QAAQ4e,QACd04F,EAAet3G,SAAmD,oBAAjCs3G,EAAet3G,QAAQ4e,OACjE04F,EAAet3G,QAAQ4e,OACzB,GACC,CAAC23F,IACJ,IAAIgB,GAA2B,EAC/B,MAAMC,EAAwB7gG,IACK,IAA7B4gG,IAA0D,IAApB5gG,EAAOuU,WAC/CqsF,GAA2B,GACpB,GAIX,OAAoBxkH,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CACxCc,SAAU,EAAc2C,EAAAA,GAAAA,KAAKykH,GAA6B,CACxDxnH,UAAW4B,EAAQ8pF,OACnB3wF,WAAYsH,EACZjC,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMixB,eAAelwB,EAAAA,EAAAA,GAAS,CAClEowB,YAAavf,EAAOzC,QAAQ+hB,cAAc,gCAC1CjlB,SAAUq5G,EACVvhH,MAAOqhH,EACPj5G,SAAUk6G,EACVhsH,QAAS,WACTwJ,KAAM,QACNusB,WAAY,CACVy2F,gBAA6B1kH,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM8mH,mBAAoB,CACpEhtH,SAAU,QACV0F,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+mH,gBAAiB,CAAC,KAEhE5D,GAAI,CACF6D,GAAI,MAGRh5F,WAAW,GACS,QAArB1F,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB2I,mBACT/uB,EAAAA,GAAAA,MAAM+kH,GAA2B,CAChD7nH,UAAW4B,EAAQnH,KACnBM,WAAYsH,EACZjC,SAAU,CAAC0lE,EAAe5nE,KAAIwoB,IAAM,IAAAyC,EAAA,OAAiBpmB,EAAAA,GAAAA,KAAK+kH,GAAAA,EAAkB,CAC1E9nH,UAAW4B,EAAQ0T,IACnB5O,SAAsB3D,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM2mC,cAAc5lC,EAAAA,EAAAA,GAAS,CAChEyE,UAA8B,IAApBsgB,EAAOuU,SACjB5uB,SAAiD,IAAxCma,EAAsBE,EAAOJ,OACtC0oB,QAAS63E,EACTxsH,KAAMqsB,EAAOJ,MACby9F,GAAI,CACFnkG,EAAG,IAEL/S,SAAU06G,EAAsB7gG,GAAU2gG,OAAiB3lH,GACvC,QAArBynB,EAAE9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqBoe,eACxBzhC,MAAO4gB,EAAOypB,YAAczpB,EAAOJ,OAClCI,EAAOJ,MAAM,IAA6B,IAA1Bw/C,EAAep3D,SAA6B3L,EAAAA,GAAAA,KAAKglH,GAAgC,CAClGhtH,WAAYsH,EACZjC,SAAUoS,EAAOzC,QAAQ+hB,cAAc,mCAErCy0F,GAA0BC,KAAuB1gD,EAAep3D,OAAS,GAqB1E,MArB2F5L,EAAAA,GAAAA,MAAMklH,GAA6B,CACjIjtH,WAAYsH,EACZrC,UAAW4B,EAAQgxD,OACnBxyD,SAAU,CAAEmmH,GAYMxjH,EAAAA,GAAAA,KAAK,OAAQ,CAAC,IAZiBA,EAAAA,GAAAA,KAAK+kH,GAAAA,EAAkB,CACtEphH,SAAsB3D,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM2mC,cAAc5lC,EAAAA,EAAAA,GAAS,CAChEyE,SAAqC,IAA3B8gH,EAAgBx4G,OAC1BrC,QAAS86G,EACTloD,eAAgBkoD,IAA8BC,EAC9Cp4E,QAASA,IAAMg4E,GAAkBG,GACjC9sH,KAAMmY,EAAOzC,QAAQ+hB,cAAc,oCACnCiyF,GAAI,CACFnkG,EAAG,KAEe,QAArB+nB,EAAEtlC,EAAUxB,iBAAS,IAAA8mC,OAAA,EAAnBA,EAAqBJ,eACxBzhC,MAAO0M,EAAOzC,QAAQ+hB,cAAc,sCACD00F,EAK/B,MALiEzjH,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM4kH,YAAY7jH,EAAAA,EAAAA,GAAS,CAC/GqtC,QAASA,IAAMx8B,EAAOzC,QAAQ85D,yBAAyBs8C,GACvD//G,SAAUugH,GACU,QAArBr7E,EAAEjpC,EAAUxB,iBAAS,IAAAyqC,OAAA,EAAnBA,EAAqBk6E,WAAY,CAClCplH,SAAUoS,EAAOzC,QAAQ+hB,cAAc,kCAI/C,CAyCA,MAAM+1F,IAA4BztH,EAAAA,EAAAA,IAAO,MAAO,CAC9CC,KAAM,cACNR,KAAM,oBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOytH,mBAHb7tH,EAI/BuF,IAAA,IAAC,MACFhE,GACDgE,EAAA,MAAM,CACL/C,QAASjB,EAAMud,QAAQ,EAAG,EAAG,KAC7Bve,QAAS,OACTkB,cAAe,SACfiM,SAAU,OACVsB,KAAM,MACN20G,UAAW,IACX9hH,WAAY,aACb,IACKurH,IAA8BptH,EAAAA,EAAAA,IAAO,MAAO,CAChDC,KAAM,cACNR,KAAM,0BACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO0tH,yBAHX9tH,EAIjCsB,IAAA,IAAC,MACFC,GACDD,EAAA,MAAM,CACLkB,QAASjB,EAAMud,QAAQ,IAAK,GAC7B,IACK8uG,IAA8B5tH,EAAAA,EAAAA,IAAO,MAAO,CAChDC,KAAM,cACNR,KAAM,0BACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO2tH,yBAHX/tH,EAIjCkE,IAAA,IAAC,MACF3C,GACD2C,EAAA,MAAM,CACL1B,QAASjB,EAAMud,QAAQ,GAAK,EAAG,GAAK,GACpCve,QAAS,OACToB,eAAgB,gBAChB+d,UAAW,aAAF5e,OAAeS,EAAMgC,QAAQ8M,SACvC,IACKs9G,IAAiC3tH,EAAAA,EAAAA,IAAO,MAAPA,EAAcwE,IAAA,IAAC,MACpDjD,GACDiD,EAAA,MAAM,CACLhC,QAASjB,EAAMud,QAAQ,GAAK,GAC5B1d,MAAOG,EAAMgC,QAAQyqH,KAAK,KAC3B,IChQD,MAAMpuH,GAAY,CAAC,WAAY,YAAa,WAY/BquH,GAAmBtuH,EAAuB,cAAe,CAAC,QAAS,UAC1EuuH,IAAgBluH,EAAAA,EAAAA,IAAO+xC,GAAAA,EAAQ,CACnC9xC,KAAM,cACNR,KAAM,QACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOivB,OAHzBrvB,EAInBqF,IAAA,IAAC,MACF9D,GACD8D,EAAA,MAAM,CACL1C,OAAQpB,EAAMoB,OAAOsvC,MACtB,IACKk8E,IAAgBnuH,EAAAA,EAAAA,IAAOozC,GAAAA,EAAO,CAClCnzC,KAAM,cACNR,KAAM,QACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO4f,OAHzBhgB,EAInBuF,IAAA,IAAC,MACFhE,GACDgE,EAAA,MAAM,CACLvB,iBAAkBzC,EAAM+B,MAAQ/B,GAAOgC,QAAQkN,WAAWuP,MAC1D3d,SAAU,IACVshH,UAAW,IACXpjH,QAAS,OACT8d,SAAU,gBAAFvd,OAAkBS,EAAMud,QAAQ,IAAI,KAC5CpR,SAAU,OACX,IACK0gH,GAAyBlpH,EAAAA,YAAiB,CAAC/E,EAAOiF,KACtD,MAAM,SACFY,EAAQ,UACRJ,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACT1mB,EAAY2Z,IACZpa,EAAUymH,IACTI,EAAUC,GAAeppH,EAAAA,UAAe,GACzCwtC,EAAkBxtC,EAAAA,aAAkB,KACxCkT,EAAOzC,QAAQ4xF,iBAAiB,GAC/B,CAACnvF,IACE8rD,EAAgBh/D,EAAAA,aAAkBsO,IACpB,WAAdA,EAAM/P,KACR2U,EAAOzC,QAAQ4xF,iBACjB,GACC,CAACnvF,IACEm2G,EAAYrpH,EAAAA,SAAc,IAAM,CAAC,CACrCjF,KAAM,OACNs2C,SAAS,EACT7wB,QAAS,CACP8oG,aAAc,aAEf,CACDvuH,KAAM,WACNs2C,SAAS,EACTk4E,MAAO,OACP12G,GAAIA,KACFu2G,GAAY,EAAK,EAEnBpjE,OAAQA,IAAM,KACZojE,GAAY,EAAM,KAElB,KACG17E,EAAU87E,GAAexpH,EAAAA,SAAe,MAO/C,OANAA,EAAAA,WAAgB,KAAM,IAAAsuF,EACpB,MAAMm7B,EAA2C,QAAhCn7B,EAAGp7E,EAAOzC,QAAQsV,sBAAc,IAAAuoE,GAAS,QAATA,EAA7BA,EAA+B79E,eAAO,IAAA69E,OAAA,EAAtCA,EAAwCvvB,cAAc,+BACtE0qD,GACFD,EAAYC,EACd,GACC,CAACv2G,IACCw6B,GAGejqC,EAAAA,GAAAA,KAAKulH,IAAe3mH,EAAAA,EAAAA,GAAS,CAC/CnC,IAAKA,EACLytC,UAAW,eACXjtC,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQ6nB,MAAOzpB,GAC/BjF,WAAYsH,EACZ2qC,SAAUA,EACV27E,UAAWA,GACV3nH,EAAO,CACRZ,UAAuB2C,EAAAA,GAAAA,KAAKoqC,GAAAA,EAAmB,CAC7CE,WAAY,YACZD,YAAaN,EACb1sC,UAAuB2C,EAAAA,GAAAA,KAAKwlH,GAAe,CACzCvoH,UAAW4B,EAAQwY,MACnBrf,WAAYsH,EACZ2mH,UAAW,EACX/5E,UAAWqvB,EACXl+D,SAAUqoH,GAAYroH,SAlBnB,IAqBN,ICrGL,IAAI6oH,GCCJ,MAAMjvH,GAAY,CAAC,SAAU,QAAS,gBAAiB,QAAS,WAAY,WAAY,QAAS,YAAa,QAAS,iBAAkB,UAAW,oBAAqB,eAAgB,eAAgB,iBAAkB,eAAgB,gBAAiB,gBAAiB,UAAW,gBAAiB,cAAe,YAAa,cAAe,YAAa,UAAW,cAAe,cACzX65B,GAAa,CAAC,eAAgB,gCAmBzB,IAAIq1F,GAA8B,SAAUA,GAKjD,OAJAA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAsB,MAAI,GAAK,QAC9CA,EAAeA,EAAwB,QAAI,GAAK,UACzCA,CACT,CANyC,CAMvC,CAAC,GACI,MAAMC,GAAiC,CAC5C,CAACD,GAAellE,MAAOr+B,GAAyBq+B,KAChD,CAACklE,GAAenlE,OAAQp+B,GAAyBo+B,MACjD,CAACmlE,GAAe1mE,WAAO9gD,EACvB,CAACwnH,GAAeE,cAAU1nH,GAEtB2nH,GAAoB,CACxB18G,IAAK,EACL2Z,MAAO,YACPhR,IAAK,CAAC,EACNgvB,QAAS,CACP33B,IAAK,EACLy0B,MAAO,EACP55B,KAAM,OACN4sD,QAAS,EACTkrB,YAAa,MAEf9xD,OAAQ,CACNhmB,KAAM,SACN8e,MAAO,YACP0B,cAAe,GAEjBs/B,SAAUte,GAAcivC,KACxBxqD,UAAU,EACVvgB,UAAW,EACXvI,MAAO,KACPm8D,eAAgB,YAChB+W,YAAY,EACZhf,IAAK,CAAC,GAsBR,MAAMywD,GAAwBhqH,EAAAA,YAAiB,SAAkB/E,EAAOiF,GAAK,IAAA+pH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC3E,MAAM,OACFnjG,EAAM,MACN4Y,EAAK,cACLwqF,EAAa,MACb9/G,EAAK,SACLolE,EAAQ,MACRjqE,EAAK,UACLnF,EACA7B,MAAO4rH,EAAS,QAChBrhG,EAAO,kBACPshG,EAAiB,aACjB5iE,EAAY,aACZiuD,EAAY,eACZlnB,EAAc,aACd2oB,EAAY,cACZtB,EAAa,cACbE,EAAa,QACb1mE,EAAO,cACPi7E,EAAa,YACbC,EAAW,UACXC,EAAS,YACTC,EAAW,UACXn7E,EAAS,QACTo7E,EAAO,YACPC,EAAW,WACXjzE,GACE98C,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASuW,KACT1mB,EAAY2Z,IACZ+K,GAAQinB,EAAAA,GAAAA,KACR1nB,EAAQI,EAAOJ,MACfo6C,EAAa7tD,EAAgBL,GAAQ,KAIzC,IACE,MAAMrB,EAASqB,EAAOzC,QAAQ06B,cAAcnL,EAAOhZ,GAEnD,OADAnV,EAAO0nD,IAAMrmD,EAAOzC,QACboB,CACT,CAAE,MAAO3K,GACP,GAAIA,aAAiBw5E,GACnB,OAAOqpC,GAET,MAAM7iH,CACR,IACCkM,GACGq0C,EAAal0C,EAAgBL,GAAQ,IAAMA,EAAOzC,QAAQuZ,6BAA6B,kBAAkB,EAAO,CACpH3c,GAAI2yB,EACJhZ,YAEI64B,EAActsC,EAAgBL,EAAQ0sC,IACtCG,GAAexsC,EAAgBL,EAAQ4sC,KACvC,SACJkI,GAAQ,SACR75B,GAAQ,WACRoqD,IAAa,EAAK,MAClBlzE,IACE+7D,EACE6pD,GAAoC,YAAhB7jG,EAAOlf,OAAuC,QAArB+hH,EAAI7iG,EAAOynB,kBAAU,IAAAo7E,OAAA,EAAjBA,EAAAxoG,KAAA2F,EAAoBlU,EAAOzC,QAAQs+B,aAAa/O,IAAQ7W,MAAKhgB,IAAWA,EAAOlO,MAAM6L,YACtI8G,GAAyB,SAAbo6C,IAAwBuwB,IAAgB0yC,IAA2C,EAAvB7pD,EAAWxzD,UAEvFtL,QAAS4oH,GAAW,iBACpBC,IACEpoH,EAOEqoH,GAAa,CAJI73G,EAAgBL,GAAQ,IAAMA,EAAOzC,QAAQuZ,6BAA6B,gBAAiB,GAAI,CACpH3c,GAAI2yB,EACJhZ,UACC1oB,OAAO0P,SAASgG,KAAK,QAEpBoT,EAAO06D,eACTspC,GAAWnoG,KAAqC,oBAAzBmE,EAAO06D,cAA+B16D,EAAO06D,cAAc1gB,GAAch6C,EAAO06D,eAElF,SAAnB16D,EAAO/rB,SACT+vH,GAAWnoG,KAAKlR,EAAY,eAE1Bo5G,IACFC,GAAWnoG,KAAKkoG,GAAiB/pD,IAEnC,MAAMiqD,GAAyC,QAA5BnB,EAAG9oD,EAAWI,sBAAc,IAAA0oD,EAAAA,EAAI7kH,GAC7CimH,GAAUtrH,EAAAA,OAAa,MACvB8lB,GAAYzV,EAAWnQ,EAAKorH,IAC5B95F,GAAkBxxB,EAAAA,OAAa,MAC/BurH,GAAyC,QAA1BpB,EAAGpnH,EAAUyoH,qBAAa,IAAArB,GAAAA,EACzC/uH,GAAWyuH,GAA+Bh7B,GAa1CvsF,GAxHkB7G,KACxB,MAAM,MACJiP,EAAK,eACLitG,EAAc,gBACdD,EAAe,eACf7oB,EAAc,WACdtW,EAAU,WACV9wB,EAAU,gBACV8jE,EAAe,QACfjpH,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,OAAQ,aAAFS,OAAeC,EAAW6O,IAAU+8C,GAAc,WAAY8wB,GAAc,iBAAkBo/B,GAAkB,uBAAwBD,GAAmB,wBAAyB7oB,IAAmB+6B,GAAellE,MAAQ,mBAAoBmqC,IAAmB+6B,GAAenlE,OAAS,oBAAqB8mE,IAAoBhzC,GAAc,wBAEtUzmE,EAAyBxP,EAAQ,EA0G9CE,CAVG,CACjBkI,QACAitG,eAJqBrB,GAAyBl7G,GAAUo8G,GAKxDE,gBAJsB1B,GAA0B56G,GAAUo8G,EAActB,EAAenzG,EAAUijB,uBAAwBowF,GAKzH79B,cACAj2E,QAASS,EAAUT,QACnBusF,iBACApnC,aACA8jE,qBAGIE,GAAiBzrH,EAAAA,aAAkB6rB,GAAavd,IACpD,MAAM8d,EAASlZ,EAAOzC,QAAQ06B,cAAcnL,EAAOhZ,GAAS,IAC5D9T,EAAOzC,QAAQ26B,aAAavf,EAAWO,EAAQ9d,GAC3Cu8G,GACFA,EAAUv8G,EACZ,GACC,CAAC4E,EAAQ8T,EAAO6jG,EAAW7qF,IACxB0rF,GAAmB1rH,EAAAA,aAAkB6rB,GAAavd,IACtD,MAAM8d,EAASlZ,EAAOzC,QAAQ06B,cAAcnL,EAAOhZ,GAAS,IAC5D9T,EAAOzC,QAAQ26B,aAAavf,EAAWO,EAAQ9d,GAC3Cs8G,GACFA,EAAYt8G,EACd,GACC,CAAC4E,EAAQ8T,EAAO4jG,EAAa5qF,IAC1B2rF,GAAU3rH,EAAAA,aAAkB,CAAC6rB,EAAW+/F,IAAgBt9G,IAE5D,IAAK4E,EAAOzC,QAAQse,OAAOiR,GACzB,OAEF,MAAM5T,EAASlZ,EAAOzC,QAAQ06B,cAAcnL,EAAOhZ,GAAS,IAC5D9T,EAAOzC,QAAQ26B,aAAavf,EAAWO,EAAQ9d,GAC3Cs9G,GACFA,EAAYt9G,EACd,GACC,CAAC4E,EAAQ8T,EAAOgZ,IACb6rF,GAA8C,QAA9BzB,EAAqB,QAArBC,EAAGxqE,EAAY7f,UAAM,IAAAqqF,OAAA,EAAlBA,EAAqBrjG,UAAM,IAAAojG,GAAAA,EAC9C32B,GAAsC,QAA/B62B,EAAsB,QAAtBC,EAAGxqE,GAAa/f,UAAM,IAAAuqF,OAAA,EAAnBA,EAAsBvjG,UAAM,IAAAsjG,EAAAA,EAAI,EAC1CzrH,GAAQmB,EAAAA,SAAc,KAC1B,GAAI8nD,EACF,MAAO,CACLxqD,QAAS,EACTsP,QAAS,EACT/G,MAAO,EACPkF,OAAQ,GAGZ,MAAM+gH,GAAYzpH,EAAAA,EAAAA,GAAS,CACzB,UAAW,GAAFzG,OAAKiK,EAAK,OAClB4kH,GACGsB,EAAel9B,IAAmB+6B,GAAellE,KACjDsnE,EAAgBn9B,IAAmB+6B,GAAenlE,MACxD,GAAIsnE,GAAgBC,EAAe,CACjC,IAAI77B,EAAO47B,EAAe,OAAS,QAC/BtkG,IACF0oE,EAAO47B,EAAe,QAAU,QAElCD,EAAU37B,GAAQ4lB,CACpB,CAKA,OAJItiB,GAAU,IACZq4B,EAAUvuH,OAAS,wBAAH3B,OAA2B63F,GAAO,KAClDq4B,EAAUruH,OAAS,GAEdquH,CAAS,GACf,CAACjmH,EAAOiiD,EAAc2iE,EAAW1U,EAAclnB,EAAgBpnE,EAAOgsE,KAoBzE,GAnBAzzF,EAAAA,WAAgB,KACd,IAAKmuB,IAAY65B,KAAate,GAAcwqC,KAC1C,OAEF,MAAMtK,EAAMX,GAAc/1D,EAAOzC,QAAQsV,eAAetV,SACxD,GAAI66G,GAAQ76G,UAAY66G,GAAQ76G,QAAQg9B,SAASm8B,EAAIt8B,eAAgB,CACnE,MAAM2+E,EAAmBX,GAAQ76G,QAAQsuD,cAAc,kBACjDmtD,EAAiB16F,GAAgB/gB,SAAWw7G,GAAoBX,GAAQ76G,QAC9E,QD/OgCrO,IAAhCunH,IACFt8E,SAASu2B,cAAc,OAAOv0C,MAAM,CAClC,iBAAIggB,GAEF,OADAs6E,IAA8B,GACvB,CACT,IAGGA,GCwODuC,EAAe78F,MAAM,CACnBggB,eAAe,QAEZ,CACL,MAAMqH,EAAiBxjC,EAAOzC,QAAQ05F,oBACtC+hB,EAAe78F,QACfnc,EAAOzC,QAAQknC,OAAOjB,EACxB,CACF,IACC,CAACvoB,GAAU65B,GAAU90C,IACpB24G,GACF,OAAoBpoH,EAAAA,GAAAA,KAAK,MAAO,CAC9B,gBAAiBqsE,EACjBhqE,KAAM,eACNjH,OAAOwD,EAAAA,EAAAA,GAAS,CACdwD,MAAO,gBACNhH,MAGP,GAAIuiE,IAAe2oD,GACjB,OAAO,KAET,IAgBIjpH,GACAknE,GAjBAmkD,GAAczqH,EAAMgM,QAqBxB,GAHsB,OAAlB88G,GAA0BpjG,EAAO8hB,aACnCpoC,GAAWsmB,EAAO8hB,WAAWk4B,IAET,OAAlBopD,GAA0BpjG,EAAOoV,eAAgB,CACnD,MAAM4vF,EAAal5G,EAAOzC,QAAQ8uE,wBAAwBv/C,EAAO5Y,EAAOJ,OAGlEqlG,GAAoB1qH,EAAAA,EAAAA,GAA8B6oH,EAAej2F,IACjEitC,EAAiBp6C,EAAO0V,eAAiB1V,EAAO0V,eAAe0tF,EAAcnlH,MAAO+mH,EAAYhlG,EAAQlU,GAAUkuD,EAAWI,eAC7Hp1C,GAAS/pB,EAAAA,EAAAA,GAAS,CAAC,EAAG++D,EAAY,CACtCprD,IAAKo2G,EACL5qD,kBACC6qD,GACHvrH,GAAWsmB,EAAOoV,eAAepQ,GACjCg/F,GAAWnoG,KAAKlR,EAAY,kBAC5Bq5G,GAAWnoG,KAAgB,OAAXioG,SAAW,IAAXA,QAAW,EAAXA,GAAc,iBAChC,CACA,QAAiB9oH,IAAbtB,GAAwB,CAC1B,MAAMwrH,EAA2B,OAAbjB,SAAa,IAAbA,QAAa,EAAbA,GAAer3F,WACnClzB,GAAWwrH,EACXtkD,GAAQskD,CACV,CACiBtsH,EAAAA,eAAqBc,KAAamqH,KACjDnqH,GAAwBd,EAAAA,aAAmBc,GAAU,CACnD0wB,sBAGJ,MAAM+6F,GAAyB7B,EAAoB,KAAO,CACxDM,YAAaW,GAAQ,gBAAiBX,GACtCjzE,WAAY4zE,GAAQ,eAAgB5zE,IAEtC,OAAoBt0C,EAAAA,GAAAA,KAAK,OAAOpB,EAAAA,EAAAA,GAAS,CACvCnC,IAAK4lB,GACLplB,WAAW4C,EAAAA,EAAAA,GAAKhB,GAAQnH,KAAMiwH,GAAY1qH,GAC1CoF,KAAM,WACN,aAAckhB,EACd,gBAAiB8oD,EACjB,gBAAiBA,EAAW,EAC5B,eAAgB1mD,EAChB,eAAgBqqE,GAChB50F,MAAOA,GACPmpE,MAAOA,GACPp6D,SAAUA,GACV8hC,QAASi8E,GAAQ,YAAaj8E,GAC9Bi7E,cAAegB,GAAQ,kBAAmBhB,GAC1CG,YAAaa,GAAQ,gBAAiBb,GACtCF,YAAac,GAAiB,iBAC9Bb,UAAWY,GAAe,eAC1B97E,UAAWg8E,GAAQ,cAAeh8E,GAClCo7E,QAASY,GAAQ,YAAaZ,IAC7BwB,GAAwB7qH,EAAO,CAChCgM,QAASy+G,GACTrrH,SAAUA,KAEd,IAkCM0rH,GAAmBhiG,GAASw/F,ICjX5BtvH,GAAY,CAAC,WAAY,QAAS,MAAO,QAAS,QAAS,YAAa,YAAa,iBAAkB,gBAAiB,YAAa,aAAc,aAAc,gBAAiB,qBAAsB,iBAAkB,gBAAiB,eAAgB,mBAAoB,cAAe,eAAgB,UAAW,gBAAiB,eAAgB,eAAgB,aAAc,eA0B9X,SAAS+xH,GAAStsH,GAEf,IAFgB,MACjB0F,GACD1F,EACC,OAAK0F,GAGepC,EAAAA,GAAAA,KAAK,MAAO,CAC9BqC,KAAM,eACNpF,WAAW4C,EAAAA,EAAAA,GAAKyO,EAAYgD,KAAMhD,EAAY4I,WAC9C9b,MAAO,CACL,UAAW,GAAFjD,OAAKiK,EAAK,SANd,IASX,CAQA,MAAM6mH,GAAuB1sH,EAAAA,YAAiB,SAAiB/E,EAAO0xH,GACpE,MAAM,SACFl7G,EAAQ,MACRuuB,EAAK,IACLhqB,EAAG,MACHmO,EACAtlB,MAAO4rH,EAAS,UAChB7jF,EAAS,UACTlmC,EAAS,eACT4mB,EAAc,cACdE,EAAa,WACb0gC,EAAU,WACVh0C,EAAU,cACV8qC,EAAa,mBACbsJ,EAAkB,eAClBX,EAAc,cACdC,EAAa,aACbE,EAAY,iBACZM,EAAgB,QAChB1Y,EAAO,cACPi7E,EAAa,aACbiC,EAAY,aACZC,EAAY,WACZC,EAAU,YACVhC,GACE7vH,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASY,IACTo7C,EAAgBD,KAChB/uD,EAAMF,EAAAA,OAAa,MACnB+C,EAAY2Z,IACZwkC,EAAcxD,GAAmBxqC,EAAQnQ,GACzC6sB,EAAYrc,EAAgBL,EAAQkmC,IACpC2zE,EAAYx5G,EAAgBL,EAAQ0uB,IACpColB,EAAkBzzC,EAAgBL,EAAQqV,IAC1CykG,EAAgBz5G,EAAgBL,EAAQ+jE,IACxCnxD,EAAYzV,EAAWnQ,EAAKysH,GAC5B3nF,EAAU9xB,EAAOzC,QAAQs2B,WAAW/G,GACpCqyB,EAAiBn+C,EAAWsF,WAAatF,EAAWuF,cAAgB,EACpE28F,EAAgBliG,EAAWuiC,kBAAoBviC,EAAWo/B,kBAAkBztC,MAC5E0rC,EAAUr+B,EAAOzC,QAAQksE,WAAW38C,KAAW2J,GAAauqC,KAC5Dj4C,EAAWl5B,EAAUsnC,WAAaZ,GAAcyB,IAChD+hF,OAAsC7qH,IAAvBkmD,EACf4kE,GAA0BD,GAAgB3kE,GAAsB9gC,EAAc/nB,KAAK2P,QAAUk5C,EAAqBtJ,EAAcE,iBAChIiuE,GAA2BF,GAAgB3kE,EAAqBhhC,EAAelY,OAASoY,EAActoB,MAAMkQ,QAAUk5C,GAAsBtJ,EAAcG,gBAC1J78C,GC5FD,SAA4BA,EAAShB,GAC1C,OAAOiB,EAAejB,EAAOwQ,EAAyBxP,EACxD,CD0FkB8qH,CAAmBrqH,EAAUT,QAAS,CACpDnH,KAAM,CAAC,MAAOsW,GAAY,WAAYwqB,GAAY,gBAAiBsV,GAAW,eAAgBoW,GAAkB,oBAAqBC,GAAiB,mBAAoBQ,GAAoB,oBAAmC,SAAdxhB,GAAwB,wBAEvOymF,GAAuBn+D,EAAcM,MAAM89D,2BACjDttH,EAAAA,iBAAsB,KACpB,GAAIkhD,EAAYhuB,MAAO,CACrB,MAAMowB,EAAWpwC,EAAOzC,QAAQ2oF,iCAAiCp5D,QAEhD59B,IAAbkhD,GACFpwC,EAAOzC,QAAQ24F,iCAAiC9lD,EAEpD,CACA,GAAIpjD,EAAIuQ,SAAyB,SAAdm2B,EACjB,OAAO1zB,EAAOzC,QAAQg5F,iBAAiBvpG,EAAIuQ,QAASuvB,EAEtC,GACf,CAAC9sB,EAAQguC,EAAYhuB,MAAO0T,EAAW5G,IAC1C,MAAM2rF,GAAU3rH,EAAAA,aAAkB,CAAC6rB,EAAW+/F,IAAgBt9G,IAExDmhE,GAAsBnhE,IAKrB4E,EAAOzC,QAAQse,OAAOiR,KAG3B9sB,EAAOzC,QAAQ26B,aAAavf,EAAW3Y,EAAOzC,QAAQs+B,aAAa/O,GAAQ1xB,GACvEs9G,GACFA,EAAYt9G,GACd,GACC,CAAC4E,EAAQ8sB,IACNutF,GAAevtH,EAAAA,aAAkBsO,IACrC,MAAMyG,EAAOo6D,GAA+B7gE,EAAMI,OAAQqD,EAAYgD,MAChEiS,EAAY,OAAJjS,QAAI,IAAJA,OAAI,EAAJA,EAAMs4D,aAAa,cAIjC,GAAIrmD,EAAO,CAET,GAAIA,IAAUw5C,GAAgCx5C,MAC5C,OAIF,GAAIA,IAAUkoD,GACZ,OAIF,GAAc,gBAAVloD,EACF,OAIF,GAAI9T,EAAOzC,QAAQ4nE,YAAYr4C,EAAOhZ,KAAW0iB,GAAcwqC,KAC7D,OAIF,MAAM9sD,EAASlU,EAAOzC,QAAQme,UAAU5H,GACxC,IAAU,OAANI,QAAM,IAANA,OAAM,EAANA,EAAQlf,QAASyoC,GACnB,MAEJ,CACAg7E,GAAQ,WAAYj8E,EAApBi8E,CAA6Br9G,EAAM,GAClC,CAAC4E,EAAQw8B,EAASi8E,GAAS3rF,KACxB,MACJ1+B,GAAK,UACLC,GAAS,qBACTshF,IACE9/E,EACEyqH,GAAgBzqH,EAAUyqH,cAC1BC,GAAcl6G,EAAgBL,GAAQ,KAAM7Q,EAAAA,EAAAA,GAAS,CAAC,EAAG6Q,EAAOzC,QAAQu3F,kBAAkBhoE,KAAS5sB,GACnGvU,GAAQmB,EAAAA,SAAc,KAC1B,GAAI8nD,EACF,MAAO,CACLl7C,QAAS,EACT/G,MAAO,EACPtI,OAAQ,GAGZ,MAAMmwH,GAAWrrH,EAAAA,EAAAA,GAAS,CAAC,EAAGooH,EAAW,CACvChM,UAAyB,SAAd73E,EAAuB,OAASA,EAE3C/tB,UAAW+tB,EACX,WAAiC,kBAAdA,EAAyB,GAAHhrC,OAAMgrC,EAAS,MAAOA,IAEjE,GAAI6mF,GAAYllB,WAAY,CAE1BmlB,EAD8C,WAA7B3qH,EAAU6gF,eAA8B,iBAAmB,aACvD6pC,GAAYllB,UACnC,CACA,GAAIklB,GAAYjlB,cAAe,CAC7B,MAAMlW,EAAwC,WAA7BvvF,EAAU6gF,eAA8B,oBAAsB,eAC/E,IAAIqX,EAAgByyB,EAASp7B,GAEA,kBAAlB2I,IACTA,EAAgBtO,SAASsO,GAAiB,IAAK,KAEjDA,GAAiBwyB,GAAYjlB,cAC7BklB,EAASp7B,GAAY2I,CACvB,CACA,OAAOyyB,CAAQ,GACd,CAAC5lE,EAAclhB,EAAW6jF,EAAWgD,GAAa1qH,EAAU6gF,iBACzD+pC,GAAgBz6G,EAAOzC,QAAQuZ,6BAA6B,eAAgB,GAAIgW,GAChFuvB,GAAiBvqB,EAAUqoF,GAAqBroF,EAAS7gB,QAAS/hB,EACxE,GAAyC,oBAA9BW,EAAU6qH,gBAAgC,KAAA1mE,GACnD,MAAMohD,EAA6BnkF,IAA0B,QAAjB+iC,GAAAhG,EAAYhuB,aAAK,IAAAg0B,QAAA,EAAjBA,GAAmBlK,gBAAiB,GAC1E8/B,GAAYz6E,EAAAA,EAAAA,GAAS,CAAC,EAAG6Q,EAAOzC,QAAQs+B,aAAa/O,GAAQ,CACjE2nB,eAA+C,IAA/B2gD,EAChB1gD,cAAe0gD,IAA+BpnD,EAAYzgB,KAAKrxB,OAAS,EACxEk5F,+BAEFqlB,GAAc1qG,KAAKlgB,EAAU6qH,gBAAgB9wC,GAC/C,CACA,MAAM+wC,GAAU,SAACzmG,EAAQ6uF,EAAgB6X,EAA2B5X,GAAwD,IAAA6X,EAAAC,EAAAC,EAAAC,EAAA,IAAzCr/B,EAAc1/E,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAGy6G,GAAe1mE,KACjH,MAAMsI,EAAkBt4C,EAAOzC,QAAQg7C,4BAA4BzrB,EAAO8tF,GAC1E,GAAmB,OAAftiE,QAAe,IAAfA,GAAAA,EAAiBE,iBACnB,OAAO,KAET,MAAM7lD,EAAwC,QAAnCkoH,EAAkB,OAAfviE,QAAe,IAAfA,OAAe,EAAfA,EAAiBo8B,UAAU/hF,aAAK,IAAAkoH,EAAAA,EAAI3mG,EAAOsB,cACnDU,EAA4C,QAArC4kG,EAAkB,OAAfxiE,QAAe,IAAfA,OAAe,EAAfA,EAAiBo8B,UAAUx+D,eAAO,IAAA4kG,EAAAA,EAAI,EAChDjY,EAAeD,GAAoB+T,GAA+Bh7B,GAAiBznE,EAAOsB,cAAeolG,EAA2B9mE,EAAiB9yC,GAC3J,GAAsB,iBAAX,OAAP8wB,QAAO,IAAPA,OAAO,EAAPA,EAAS98B,MACX,OAAoBzE,EAAAA,GAAAA,KAAKnC,GAAM62G,aAAc,CAC3CjwG,KAAMkf,EAAOlf,KACbrC,MAAOA,EACPtI,OAAQqpC,EACR5f,MAAOI,EAAOJ,MACdtc,MAAO0c,EAAO1c,OACb0c,EAAOJ,OAEZ,MAAMwjG,EAAoD,QAAvCyD,EAAuB,QAAvBC,EAAGlB,EAAchtF,UAAM,IAAAkuF,OAAA,EAApBA,EAAuB9mG,EAAOJ,cAAM,IAAAinG,EAAAA,EAAI,KAIxDE,EAAiC,gBAAjB/mG,EAAOJ,MACvBonG,EAAgBlwH,OAAOC,KAAK6uH,GAAe59G,OAAS,EACpDi/G,IAAqBxrC,IAAwBz7D,EAAOq5C,gBACpD6tD,EAAgBd,KAAkB59F,EAAUxgB,QAAU29G,GAAa,IAAMqB,EACzE1D,IAAsB2D,GAAoBF,GAAiBG,GAC3DC,EAAmB1/B,IAAmB+6B,GAAeE,QAC3D,OAAoBrmH,EAAAA,GAAAA,KAAKnC,GAAMyT,MAAM1S,EAAAA,EAAAA,GAAS,CAC5C+kB,OAAQA,EACRvhB,MAAOA,EACPm6B,MAAOA,EACPt1B,MAAO0c,EAAO1c,OAAS,OACvBolE,SAAUg+C,EACV1kG,QAASA,EACTshG,kBAAmBA,EACnBF,cAAeA,EACf1iE,aAAcymE,EACdxY,aAAcA,EACdlnB,eAAgBA,EAChB2oB,aAAcvB,EACdC,cAAeA,EACfE,cAAeA,GACL,OAAT70G,SAAS,IAATA,QAAS,EAATA,GAAWwT,MAAOqS,EAAOJ,MAC9B,EAIA,IAAKge,EACH,OAAO,KAET,MAAMwpF,GAAYhnG,EAAc/nB,KAAKb,KAAI,CAACwoB,EAAQhX,IAEzCy9G,GAAQzmG,EAAQhX,EADWA,EACmBoX,EAAc/nB,KAAK2P,OAAQw6G,GAAellE,QAE3F+pE,GAAajnG,EAActoB,MAAMN,KAAI,CAACwoB,EAAQhX,KAClD,MAAM09G,EAA4BxmG,EAAelY,OAASoY,EAActoB,MAAMkQ,OAASgB,EACvF,OAAOy9G,GAAQzmG,EAAQhX,EAAG09G,EAA2BtmG,EAActoB,MAAMkQ,OAAQw6G,GAAenlE,MAAM,IAElGiqE,GAAsBpnG,EAAelY,OAASoY,EAAc/nB,KAAK2P,OAASoY,EAActoB,MAAMkQ,OAC9F4gE,GAAQ,GACVk9C,IACFl9C,GAAM/sD,KAAK4qG,GAAQvmG,EAAeghC,GAAqBA,EAAqB9gC,EAAc/nB,KAAK2P,OAAQk5C,EAAoBomE,GAAqB9E,GAAeE,UAEjK,IAAK,IAAI15G,EAAI4uC,EAAcE,iBAAkB9uC,EAAI4uC,EAAcG,gBAAiB/uC,GAAK,EAAG,CACtF,MAAMgX,EAASE,EAAelX,GACxB6lG,EAAiB7lG,EAAIoX,EAAc/nB,KAAK2P,OACzCgY,GAGL4oD,GAAM/sD,KAAK4qG,GAAQzmG,EAAQ6uF,EAAgB7lG,EAAGs+G,IAChD,CACIvB,IACFn9C,GAAM/sD,KAAK4qG,GAAQvmG,EAAeghC,GAAqBA,EAAqB9gC,EAAc/nB,KAAK2P,OAAQk5C,EAAoBomE,GAAqB9E,GAAeE,UAEjK,MAAM6E,GAAgB34G,EAAM,CAC1B05B,QAAS69E,GACT5C,cAAegB,GAAQ,iBAAkBhB,GACzCiC,aAAcjB,GAAQ,gBAAiBiB,GACvCC,aAAclB,GAAQ,gBAAiBkB,GACvCC,WAAYnB,GAAQ,cAAemB,GACnChC,YAAaa,GAAQ,eAAgBb,IACnC,KACE9S,GAAgB9jG,EAAWo/B,kBAAkBztC,MAAQqO,EAAWuiC,kBAAoB4b,EACpF4lD,GAAiBxyG,KAAKvE,IAAI,EAAG82G,IACnC,OAAoBx0G,EAAAA,GAAAA,MAAM,OAAOnB,EAAAA,EAAAA,GAAS,CACxCnC,IAAK4lB,EACL,UAAWka,EACX,gBAAiB7b,EACjBre,KAAM,MACNpF,WAAW4C,EAAAA,EAAAA,MAAQqqH,GAAerrH,GAAQnH,KAAMuF,GAChD7B,MAAOA,IACN0wD,GAAgBo/D,GAAejtH,EAAO,CACvCZ,SAAU,CAAC0tH,IAAwB/qH,EAAAA,GAAAA,KAAK,MAAO,CAC7CqC,KAAM,eACNpF,UAAWqR,EAAY2J,eACvB7c,MAAO,CACLgH,MAAOqiD,KAEP8nB,GAAOioC,GAAiB,IAAkBx0G,EAAAA,GAAAA,KAAKgpH,GAAW,CAC5D5mH,MAAOoyG,KACLwW,GAAWr/G,OAAS,IAAkB3L,EAAAA,GAAAA,KAAK,MAAO,CACpDqC,KAAM,eACNpF,UAAWqR,EAAYqI,SACrBq0G,GAA+B,IAAnBp8D,IAAqC5uD,EAAAA,GAAAA,KAAKmrH,GAAiB,CACzErY,YAAa/uF,EAActoB,MAAMkQ,OAAS,OAGhD,IAiFMy/G,GAAkBrkG,GAASkiG,IE3XpBoC,GAAoC9uH,EAAAA,MAAW/E,IAAS,IAAA2uB,EAAAC,EACnE,MAAM,OACJqE,EAAM,KACN1c,EAAI,aACJu9G,EAAY,mBACZC,EAAkB,cAClBC,GACEh0H,EACEiY,EAASuW,KACT1mB,EAAY2Z,IAIZpa,EAxBkB7G,KACxB,MAAM,QACJ6G,EAAO,KACPkP,GACE/V,EAKJ,OAAO8G,EAJO,CACZpH,KAAM,CAAC,WAAYqW,GAAQ,YAC3B2+B,OAAQ,CAAC,mBAEkBr+B,EAAyBxP,EAAQ,EAe9CE,EAHGH,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCqH,QAASS,EAAUT,WAGf4sH,EAAsBlvH,EAAAA,aAAkBsO,IAC5CA,EAAM2hC,iBACN3hC,EAAM4hC,kBACNh9B,EAAOzC,QAAQ8iE,iBAAiBrlD,EAAOlH,MAAM,GAC5C,CAAC9T,EAAQgb,EAAOlH,QACnB,OAAoBvjB,EAAAA,GAAAA,KAAK,MAAO,CAC9B/C,UAAW4B,EAAQnH,KACnB2F,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM6tH,aAAa9sH,EAAAA,EAAAA,GAAS,CAChE2lE,MAAO90D,EAAOzC,QAAQ+hB,cAAc,mBACpC48F,WAAY,KACQ,QAArBxlG,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBulG,YAAa,CACnCruH,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+uC,gBAAgBhuC,EAAAA,EAAAA,GAAS,CACnEnC,IAAK+uH,EACLrhH,UAAW,EACXlN,UAAW4B,EAAQ6tC,OACnB,aAAcj9B,EAAOzC,QAAQ+hB,cAAc,mBAC3CrtB,KAAM,QACNuqC,QAASw/E,EACT,gBAAiB,OACjB,gBAAiB19G,EACjB,gBAAiBA,EAAOu9G,OAAe3sH,EACvCiL,GAAI2hH,GACgB,QAArBnlG,EAAE9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqBwmB,eAAgB,CACtCvvC,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+tH,eAAgB,CAC1DpyH,SAAU,mBAIhB,ICrDJ,SAASqyH,GAAoBnvH,GAS1B,IAT2B,aAC5B4uH,EAAY,mBACZC,EAAkB,iBAClBO,EAAgB,sBAChBC,EAAqB,MACrBxoG,EAAK,KACLxV,EAAI,OACJ9C,EAAM,SACNu+B,GACD9sC,EACC,MAAM+S,EAASuW,KACTyE,EAAShb,EAAOzC,QAAQme,UAAU5H,GAClCuoB,EAAWgI,IAAiBjpC,IAC5BA,IAEFA,EAAM4hC,kBACI,OAANxhC,QAAM,IAANA,GAAAA,EAAQ++B,SAASn/B,EAAMI,UAI7BwE,EAAOzC,QAAQ45F,gBAAgB,IAEjC,OAAK37F,GAAWwf,GAGIzqB,EAAAA,GAAAA,KAAKupC,GAAU,CACjCW,UAAW,UAAF/xC,OAA6B,UAAjBsyB,EAAOxjB,MAAoB,QAAU,OAC1D8G,KAAMA,EACN9C,OAAQA,EACRq8B,QAASwE,EACTtC,SAAUA,EACVnsC,UAAuB2C,EAAAA,GAAAA,KAAK8rH,GAAkBltH,EAAAA,EAAAA,GAAS,CACrD6rB,OAAQA,EACRqhB,SAAUA,EACV/9B,KAAMA,EACNnE,GAAI0hH,EACJU,WAAYT,GACXQ,MAdI,IAgBX,CC5CA,MAAM90H,GAAY,CAAC,YAAa,cAmB1Bg1H,IAA4B50H,EAAAA,GAAAA,GAAO,MAAO,CAC9CC,KAAM,cACNR,KAAM,oBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOqxF,mBAHbzxF,CAI/B,CACD2f,aAAc,WACdjS,SAAU,SACV0Q,WAAY,SACZnc,WAAY,sCACZM,WAAY,WAERsyH,GAAsC3vH,EAAAA,YAAiB,SAAgC/E,EAAOiF,GAGlG,MAAM,UACFQ,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IACZpa,EA5BkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,sBAEoB2W,EAAyBxP,EAAQ,EAqB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKisH,IAA2BrtH,EAAAA,EAAAA,GAAS,CAC3DnC,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,GACXrB,GACL,IAEA,SAASkuH,GAAsB30H,GAAO,IAAA2uB,EACpC,MAAM,MACJpjB,EAAK,YACLqpH,GACE50H,EACE8H,EAAY2Z,IACZozG,EAAW9vH,EAAAA,OAAa,OACvB+vH,EAASC,GAAchwH,EAAAA,SAAe,IACvCiwH,EAAkBjwH,EAAAA,aAAkB,KACxC,IAAK6vH,GAAuB,OAARC,QAAQ,IAARA,GAAAA,EAAUr/G,QAAS,CACrC,MAAMy/G,G5EzDgBtxD,E4EyDKkxD,EAASr/G,S5ExDzB0/G,aAAevxD,EAAQwxD,cAAgBxxD,EAAQiuB,YAAcjuB,EAAQ4nB,Y4E0D9EwpC,EADEE,EACS1pH,EAEA,GAEf,C5E/DG,IAAqBo4D,C4E+DxB,GACC,CAACixD,EAAarpH,IACjB,OAAoB/C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM6tH,aAAa9sH,EAAAA,EAAAA,GAAS,CAC7D2lE,MAAO6nD,GAAeE,GACF,QAArBnmG,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBulG,YAAa,CACnCruH,UAAuB2C,EAAAA,GAAAA,KAAKksH,GAAwB,CAClD7E,YAAamF,EACb/vH,IAAK4vH,EACLhvH,SAAU0F,MAGhB,CCzEA,MAAM9L,GAAY,CAAC,YAAa,WAAY,SAAU,QAOtD,IAAI21H,GAA8C,SAAUA,GAG1D,OAFAA,EAAqC,KAAI,OACzCA,EAAsC,MAAI,QACnCA,CACT,CAJkD,CAIhDA,IAAkC,CAAC,GAcrC,SAASC,GAA6Br1H,GACpC,MAAM,OACFsC,EAAM,KACN4yF,EAAOkgC,GAA+BE,OACpCt1H,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IAKZpa,EAxBkB7G,KACxB,MAAM,UACJogC,EAAS,SACT20F,EAAQ,QACRluH,EAAO,KACP6tF,GACE10F,EAKJ,OAAO8G,EAJO,CACZpH,KAAM,CAAC,kBAAmB0gC,GAAa,6BAA8B20F,GAAY,4BAA6BrgC,GAAQ,wBAAJv0F,OAA4BC,EAAWs0F,KACzJ/iF,KAAM,CAAC,kBAEoB0E,EAAyBxP,EAAQ,EAa9CE,EAJGH,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCk1F,OACA7tF,QAASS,EAAUT,WAGfmuH,EAAYzwH,EAAAA,aAAkBsO,IAClCA,EAAM2hC,iBACN3hC,EAAM4hC,iBAAiB,GACtB,IACH,OAGEzsC,EAAAA,GAAAA,KAAK,OAAOpB,EAAAA,EAAAA,GAAS,CACnB3B,UAAW4B,EAAQnH,KACnB0D,MAAO,CACLga,UAAWtb,IAEZmE,EAAO,CACRguC,QAAS+gF,EACT3vH,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMovH,iBAAkB,CAC5DhwH,UAAW4B,EAAQ8K,SAI3B,CACA,MAAMujH,GAAyC3wH,EAAAA,KAAWswH,ICzDpD51H,GAAY,CAAC,UAAW,iBAAkB,WAAY,SAAU,aAAc,gBAAiB,WAAY,WAAY,gBAAiB,cAAe,kBAAmB,cAAe,YAAa,QAAS,uBAAwB,aAAc,yBAA0B,kBAAmB,QAAS,YAAa,0BAA2B,6BAA8B,SASjXk2H,GAA2C5wH,EAAAA,YAAiB,SAAqC/E,EAAOiF,GAC5G,MAAM,QACFoC,EAAO,SACPwtE,EAAQ,OACRvyE,EAAM,WACNszH,EAAU,cACV/kH,EAAa,SACbqiB,EAAQ,SACRvgB,EAAQ,cACRkjH,EAAa,YACbC,EAAW,gBACXC,EAAe,YACfnB,EAAW,MACXhqH,EAAK,qBACLorH,EAAuB,KAAI,WAC3BjjE,EAAa,KAAI,uBACjBkjE,EAAyB,KAAI,gBAC7BnvC,EAAe,MACfv7E,EAAK,UACLq1B,EAAS,wBACTs1F,EAAuB,2BACvBC,EAA0B,MAC1BvyH,GACE5D,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCwY,EAASY,IACT/Q,EAAY2Z,IACZ20G,EAAgBrxH,EAAAA,OAAa,MAC7B8lB,EAAYzV,EAAWghH,EAAenxH,GAC5C,IAAIkM,EAAW,OAef,OAdqB,MAAjBN,IACFM,EAA6B,QAAlBN,EAA0B,YAAc,cAErD9L,EAAAA,iBAAsB,KACpB,MAAM0uD,EAAkBx7C,EAAOzC,QAAQxC,MAAM+/C,WAC7C,GAAI7/B,IAAaugC,EAAgBl9C,KAAM,KAAAk+E,EACrC,MACMw8B,EADmBmF,EAAc5gH,QAAQsuD,cAAc,mBAClBsyD,EAAc5gH,QAC3C,OAAdy7G,QAAc,IAAdA,GAAAA,EAAgB78F,QAC4B,QAA5CqgE,EAAIx8E,EAAOzC,QAAQs+C,iCAAyB,IAAA2gC,GAAxCA,EAA0Cj/E,UAC5CyC,EAAOzC,QAAQs+C,0BAA0Bt+C,QAAQyzC,WAAa,EAElE,IACC,CAAChxC,EAAQib,KACQ3qB,EAAAA,GAAAA,MAAM,OAAOnB,EAAAA,EAAAA,GAAS,CACxCnC,IAAK4lB,EACLplB,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAM4mF,GAC9BljF,OAAOwD,EAAAA,EAAAA,GAAS,CAAC,EAAGxD,EAAO,CACzBtB,SACAsI,UAEFC,KAAM,eACN8H,SAAUA,EACV,gBAAiBkiE,EAAW,EAC5B,YAAa1jE,GACZ1K,EAAO,CACRZ,SAAU,EAAc0C,EAAAA,GAAAA,MAAM,OAAOnB,EAAAA,EAAAA,GAAS,CAC5C3B,UAAW4B,EAAQgvH,mBACnBC,UAAWR,EACXjrH,KAAM,gBACLqrH,EAAyB,CAC1BrwH,SAAU,EAAc0C,EAAAA,GAAAA,MAAM,MAAO,CACnC9C,UAAW4B,EAAQkvH,eACnB1rH,KAAM,eACNhF,SAAU,EAAc2C,EAAAA,GAAAA,KAAK,MAAO,CAClC/C,UAAW4B,EAAQmvH,sBACnB3wH,cAA8BsB,IAApB4uH,EAAgCA,GAA+BvtH,EAAAA,GAAAA,KAAKmsH,GAAuB,CACnGppH,MAAOA,EACPqpH,YAAaA,EACb6B,YAAa7rH,MAEbqrH,KACFD,OACYxtH,EAAAA,GAAAA,KAAKktH,IAA2BtuH,EAAAA,EAAAA,GAAS,CACzDw5B,WAAY94B,EAAU+/E,uBAAyBjnD,EAC/C20F,SAAUK,EACVtzH,OAAQA,EACR4yF,KAAM2gC,GACLM,IAA8BpjE,KAErC,ICyIA,MAAMuC,GAAW/lC,IAzLjB,SAA8BvvB,GAAO,IAAA2uB,EAAA+nG,EAAA9nG,EAAAwe,EAAAupF,EACnC,MAAM,OACJ1jG,EAAM,eACN2jG,EAAc,SACd/hD,EAAQ,aACR34B,EAAY,WACZ05E,EAAU,OACViB,EAAM,cACNhmH,EAAa,UACb0tC,EAAS,mBACTu4E,EAAkB,SAClB5jG,EAAQ,SACRvgB,EAAQ,eACR6yD,EAAc,cACdqwD,EAAa,MACbjyH,EAAK,eACLgwF,EAAc,eACdonB,EAAc,cACdC,EAAa,cACbE,GACEn7G,EACEiY,EAASY,IACT/Q,EAAY2Z,IACZ20G,EAAgBrxH,EAAAA,OAAa,MAC7B+uH,EAAeh+F,KACfi+F,EAAqBj+F,KACrBk+F,EAAgBjvH,EAAAA,OAAa,OAC5BgyH,EAAoBC,GAAyBjyH,EAAAA,SAAe6xH,GAC7Dd,EAAc/wH,EAAAA,SAAc,KAAO+C,EAAU8/E,uBAAyBpiB,IAAmBvyC,EAAOuyC,gBAAgB,CAAC19D,EAAU8/E,qBAAsBpiB,EAAgBvyC,EAAOuyC,iBAC9K,IAAIuwD,EACA9iG,EAAOyyC,eACTqwD,EAAkB9iG,EAAOyyC,aAAaztD,EAAOzC,QAAQmwE,sBAAsB1yD,EAAOlH,SAEpF,MAAM2wF,EAAiBrB,GAAyBznB,EAAgBonB,GAC1DyB,EAAkB1B,GAA0BnnB,EAAgBonB,EAAgBC,EAAenzG,EAAU8gF,yBAA0BuyB,GAM/H9zG,EApEkB7G,KACxB,MAAM,OACJyyB,EAAM,QACN5rB,EAAO,WACP4vH,EAAU,cACVpmH,EAAa,gBACb4rG,EAAe,eACfC,EAAc,mBACdoa,EAAkB,eAClBljC,EAAc,eACdsjC,EAAc,iBACdC,GACE32H,EACE42H,EAAkC,MAAjBvmH,EACjBwmH,EAAyC,MAAtBP,GAA8BA,EAAqB,EAEtEQ,EAAkC,WAAhBrkG,EAAOhmB,KAU/B,OAAO3F,EATO,CACZpH,KAAM,CAAC,eAAuC,SAAvB+yB,EAAO2O,aAA0B,0BAAkD,WAAvB3O,EAAO2O,aAA4B,4BAAoD,UAAvB3O,EAAO2O,aAA2B,2BAA4B3O,EAAO0N,UAAY,yBAA0Bs2F,GAAc,uBAAwBG,GAAkB,uBAAwBC,GAAoB,yBAA0BC,GAAmB,wBAAyB,kBAAmB7a,GAAmB,gCAAiCC,GAAkB,+BAAmD,SAAnB9oB,GAA6B,2BAA+C,UAAnBA,GAA8B,4BAGxnBsjC,GAAkB,6BAA8BC,GAAoB,gCACpEd,mBAAoB,CAAC,kCACrBE,eAAgB,CAAC,8BACjBC,sBAAuB,CAAC,sCAEG3/G,EAAyBxP,EAAQ,EA0C9CE,EALGH,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCqH,QAASS,EAAUT,QACnBo1G,kBACAC,oBAGIgU,EAAU3rH,EAAAA,aAAkB6rB,GAAavd,IAGzCmhE,GAAsBnhE,IAG1B4E,EAAOzC,QAAQ26B,aAAavf,EAAW3Y,EAAOzC,QAAQmwE,sBAAsB1yD,EAAOlH,OAAQ1Y,EAAM,GAChG,CAAC4E,EAAQgb,EAAOlH,QACbwrG,EAAsBxyH,EAAAA,SAAc,KAAM,CAC9C0vC,QAASi8E,EAAQ,qBACjB8G,cAAe9G,EAAQ,2BACvBhB,cAAegB,EAAQ,2BACvBb,YAAaa,EAAQ,oBAErBmB,WAAYnB,EAAQ,mBAEpBiB,aAAcjB,EAAQ,qBAEtBkB,aAAclB,EAAQ,qBAEtBh8E,UAAWg8E,EAAQ,uBACnBj+G,QAASi+G,EAAQ,qBACjBn+G,OAAQm+G,EAAQ,uBACd,CAACA,IACCY,EAAyBvsH,EAAAA,SAAc,IAAM+wH,EAAc,CAC/D2B,YAAa/G,EAAQ,yBACrBX,YAAaW,EAAQ,yBACrB5zE,WAAY4zE,EAAQ,wBACpBgH,UAAWhH,EAAQ,wBACjB,CAAC,GAAG,CAACoF,EAAapF,IAChByF,EAA6BpxH,EAAAA,SAAc,KAAM,CACrD4qH,YAAae,EAAQ,4BACrBhB,cAAegB,EAAQ,iCACrB,CAACA,IACL3rH,EAAAA,WAAgB,KACTgyH,GACHC,EAAsBJ,EACxB,GACC,CAACG,EAAoBH,IACxB,MAAMe,EAAe5yH,EAAAA,aAAkB,KACrCiyH,GAAsB,EAAM,GAC3B,IACGhB,GAAwBluH,EAAU+tC,oBAAsB5iB,EAAO4iB,oBAAkCrtC,EAAAA,GAAAA,KAAKqrH,GAAsB,CAChI5gG,OAAQA,EACR6gG,aAAcA,EACdC,mBAAoBA,EACpBx9G,KAAMwgH,EACN/C,cAAeA,IAEXjhE,GAA0BvqD,EAAAA,GAAAA,KAAK6rH,GAAsB,CACzDP,aAAcA,EACdC,mBAAoBA,EACpBhoG,MAAOkH,EAAOlH,MACdxV,KAAMqgH,EACNnjH,OAAQugH,EAAcx+G,QACtB8+G,iBAAkBxsH,EAAUzB,MAAM0sD,WAClCwhE,sBAA0C,QAArB5lG,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBokC,WAC5C/gB,SAAU2lF,IAEN7iG,EAAkC,QAAtB4hG,EAAGzjG,EAAO6B,oBAAY,IAAA4hG,EAAAA,EAAI5uH,EAAUgtB,aAChD8iG,GAAgB3kG,EAAO0N,UAA6B,MAAjB9vB,KAA2BoiB,EAAO4kG,gBAAkB/vH,EAAUigF,qBACjGkuC,IAAsC1tH,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CAChEc,SAAU,EAAEiC,EAAU6/E,sBAAoCn/E,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMyxH,8BAA8B1wH,EAAAA,EAAAA,GAAS,CACpH2kB,MAAOkH,EAAOlH,MACdgsG,QAASjB,GACW,QAArBloG,EAAE9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqBkpG,+BAAgCF,IAA6BpvH,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM2xH,sBAAsB5wH,EAAAA,EAAAA,GAAS,CACvI2kB,MAAOkH,EAAOlH,MACd6oB,UAAW/jC,EACXqY,MAAOq1B,EACPzpB,aAAcA,EACdjpB,UAAWonB,EAAO0N,UACE,QAArByM,EAAEtlC,EAAUxB,iBAAS,IAAA8mC,OAAA,EAAnBA,EAAqB4qF,0BAE1BjzH,EAAAA,iBAAsB,KACpB,MAAM0uD,EAAkBx7C,EAAOzC,QAAQxC,MAAM+/C,WAC7C,GAAI7/B,IAAaugC,EAAgBl9C,KAAM,KAAAk+E,EACrC,MACMw8B,EADmBmF,EAAc5gH,QAAQsuD,cAAc,mBAClBsyD,EAAc5gH,QAC3C,OAAdy7G,QAAc,IAAdA,GAAAA,EAAgB78F,QAC4B,QAA5CqgE,EAAIx8E,EAAOzC,QAAQs+C,iCAAyB,IAAA2gC,GAAxCA,EAA0Cj/E,UAC5CyC,EAAOzC,QAAQs+C,0BAA0Bt+C,QAAQyzC,WAAa,EAElE,IACC,CAAChxC,EAAQib,IACZ,MAAM4zD,GAAoD,oBAA3B7zD,EAAO6zD,gBAAiC7zD,EAAO6zD,gBAAgB,CAC5F/6D,MAAOkH,EAAOlH,MACdkH,WACGA,EAAO6zD,gBACNv7E,GAAyB,QAApBorH,EAAG1jG,EAAO2iB,kBAAU,IAAA+gF,EAAAA,EAAI1jG,EAAOlH,MAC1C,OAAoBvjB,EAAAA,GAAAA,KAAKmtH,IAA6BvuH,EAAAA,EAAAA,GAAS,CAC7DnC,IAAKmxH,EACL/uH,QAASA,EACTuvH,eAAgBA,EAChB/hD,SAAUA,EACVvyE,OAAQ45C,EACR05E,WAAYA,EACZ/kH,cAAeA,EACfqiB,SAAUA,EACVvgB,SAAUA,EACVkjH,cAAeA,EACfC,YAAaA,EACbC,gBAAiBA,EACjBnB,YAAa3hG,EAAO2hG,YACpBqD,UAAWhlG,EAAOlH,MAClBnhB,MAAOqoB,EAAOxF,cACduoG,qBAAsBA,EACtBC,uBAAwBA,GACxBnvC,iBAAiBz+E,EAAAA,EAAAA,GAAKy+E,GAAiB+vC,GAAU//G,EAAY,uBAC7DvL,MAAOA,GACPq1B,WAAY94B,EAAU+/E,uBAAyB50D,EAAO2N,UACtD,aAAc3N,EAAOlH,MACrBgnC,WAAYA,EACZmjE,wBAAyB5E,EACzB6E,2BAA4BA,EAC5BvyH,MAAOA,GACN2zH,GACL,ICzKA,SAASW,GAAsBl4H,GAAO,IAAAm4H,EACpC,MAAM,QACJ5/D,EAAO,MACP3tD,EAAK,MACLi8B,EAAK,SACLuQ,EAAQ,OACRk0B,EAAM,OACNhpE,EAAM,SACNuyE,EAAQ,SACR3hD,EAAQ,SACRvgB,EAAQ,aACRgqG,EAAY,eACZ/oB,EAAc,MACdhwF,EAAK,eACLo3G,EAAc,cACdC,EAAa,cACbE,GACEn7G,EACE8H,EAAY2Z,IACZ20G,EAAgBrxH,EAAAA,OAAa,MAC7BkT,EAASuW,KACT4pG,EAAqB9/G,EAAgBL,EAAQ4+B,IAC7C8pB,EAAQpI,EAAU6/D,EAAmB7/D,GAAW,CAAC,GACjD,WACJ3iB,GAAoB,OAAP2iB,QAAO,IAAPA,EAAAA,EAAW,IAAE,YAC1Bq8D,EAAc,GAAE,YAChBhzF,GACE++B,EACJ,IAAIo1D,EACJ,MAAMsC,EAAS9/D,IAAsC,QAA/B4/D,EAAIC,EAAmB7/D,UAAQ,IAAA4/D,OAAA,EAA3BA,EAA6BG,mBACjDC,EAAexzH,EAAAA,SAAc,KAAM,CACvCwzD,UACA3iB,aACAg/E,cACA/tF,QACAuQ,WACAk0B,SACAuJ,WACA8nC,kBACE,CAACpkD,EAAS3iB,EAAYg/E,EAAa/tF,EAAOuQ,EAAUk0B,EAAQuJ,EAAU8nC,IACtEpkD,GAAW8/D,IACbtC,EAAkBsC,EAAOE,IAE3B,MAAM7b,EAAiBrB,GAAyBznB,EAAgBonB,GAC1DyB,EAAkB1B,GAA0BnnB,EAAgBonB,EAAgBC,EAAenzG,EAAU8gF,yBAA0BuyB,GAC/H36G,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCqH,QAASS,EAAUT,QACnBq1G,iBACAD,kBACA76E,cACAiF,QACAowF,YAAY,IAER1rH,EAAkB,OAAVqqC,QAAU,IAAVA,EAAAA,EAAc2iB,EACtBnmD,EAAK0jB,KACLmiG,EAAwB,OAAZ1/D,EAAmB,oBAAH53D,OAAuByR,GAAOmmD,EAC1DlxD,EA3EkB7G,KACxB,MAAM,QACJ6G,EAAO,YACPu6B,EAAW,WACXq1F,EAAU,aACVta,EAAY,eACZD,EAAc,gBACdD,EAAe,QACflkD,EAAO,eACPq7B,GACEpzF,EAOJ,OAAO8G,EANO,CACZpH,KAAM,CAAC,eAAgC,SAAhB0hC,GAA0B,0BAA2C,WAAhBA,GAA4B,4BAA6C,UAAhBA,GAA2B,2BAA4Bq1F,GAAc,uBAAwBxa,GAAmB,gCAAiCC,GAAkB,+BAAgC,kBAA+B,OAAZnkD,EAAmB,2BAA6B,4BAAgD,SAAnBq7B,GAA6B,2BAA+C,UAAnBA,GAA8B,4BAA6B+oB,GAAgB,sBAC5iB0Z,mBAAoB,CAAC,kCACrBE,eAAgB,CAAC,6BAA8B,mBAC/CC,sBAAuB,CAAC,sCAEG3/G,EAAyBxP,EAAQ,EA0D9CE,CAAkB/G,GAClCuE,EAAAA,iBAAsB,KACpB,GAAImuB,EAAU,CACZ,MACM+9F,EADmBmF,EAAc5gH,QAAQsuD,cAAc,mBAClBsyD,EAAc5gH,QAC3C,OAAdy7G,QAAc,IAAdA,GAAAA,EAAgB78F,OAClB,IACC,CAACnc,EAAQib,IACZ,MAAMw9F,EAAU3rH,EAAAA,aAAkB6rB,GAAavd,IAGzCmhE,GAAsBnhE,IAG1B4E,EAAOzC,QAAQ26B,aAAavf,EAAW2nG,EAAcllH,EAAM,GAI7D,CAAC4E,EAAQsgH,IACHhB,EAAsBxyH,EAAAA,SAAc,KAAM,CAC9C2vC,UAAWg8E,EAAQ,4BACnBj+G,QAASi+G,EAAQ,0BACjBn+G,OAAQm+G,EAAQ,4BACd,CAACA,IACC5pC,EAAmD,oBAA1BnmB,EAAMmmB,gBAAiCnmB,EAAMmmB,gBAAgByxC,GAAgB53D,EAAMmmB,gBAClH,OAAoBt+E,EAAAA,GAAAA,KAAKmtH,IAA6BvuH,EAAAA,EAAAA,GAAS,CAC7DnC,IAAKmxH,EACL/uH,QAASA,EACTuvH,gBAAgB,EAChB/hD,SAAUA,EACVvyE,OAAQA,EACRszH,YAAY,EACZ/kH,cAAe,KACfqiB,UAAU,EACVvgB,SAAUA,EACVmjH,aAAa,EACbC,gBAAiBA,EACjBjvC,gBAAiBA,EACjB8tC,YAAaA,EACbqD,UAAWA,EACXrtH,MAAOA,EACPorH,qBAAsB,KACtBC,uBAAwB,KACxBr1F,WAAW,EACXr1B,MAAOA,EACP,eAAgB+/D,EAAOn3D,OAGvB,cAAe,KAAFxT,OAAO2qE,EAAOvyD,KAAK,OAAM,MACtCnV,MAAOA,GACN2zH,GACL,CCrHO,MAAMiB,IAAsB34H,EAAAA,EAAAA,IAAO,MAAO,CAC/CC,KAAM,cACNR,KAAM,kBACNS,kBAAmBA,CAACsX,EAAGpX,IAAWA,EAAOw4H,iBAHR54H,CAIhC,CACDO,QAAS,SCxBLX,GAAY,CAAC,aAiBbi5H,IAAwB74H,EAAAA,GAAAA,GAAO,MAAO,CAC1CC,KAAM,cACNR,KAAM,gBACNS,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO6e,eAHjBjf,CAI3B,CACDO,QAAS,OACTkB,cAAe,SACfwc,oBAAqB,kCACrBC,qBAAsB,oCAEX46G,GAAqC5zH,EAAAA,YAAiB,SAA2B/E,EAAOiF,GACnG,MAAM,UACFQ,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,IACZpa,EAzBkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZpH,KAAM,CAAC,kBAEoB2W,EAAyBxP,EAAQ,EAkB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKkwH,IAAuBtxH,EAAAA,EAAAA,GAAS,CACvDnC,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYsH,GACXrB,EAAO,CACRoE,KAAM,iBAEV,ICzCMpL,GAAY,CAAC,YAAa,iBAAkB,mBAAoB,qBAAsB,4BAA6B,iCAAkC,oBAAqB,yBAA0B,yBAA0B,kBAAmB,mBAAoB,8BAA+B,gCAiFpSm5H,GAA4BrpG,GA1EKxqB,EAAAA,YAAiB,SAA2B/E,EAAOiF,GACxF,MAAM,eACFonB,EAAc,iBACd6mC,EAAgB,mBAChBD,EAAkB,0BAClBE,EAAyB,+BACzBE,EAA8B,kBAC9BC,EAAiB,uBACjBC,EAAsB,uBACtBC,EAAsB,gBACtBC,EAAe,iBACfC,EAAgB,4BAChBC,EAA2B,6BAC3BC,GACE5zD,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,KACzC,cACJo5H,EAAa,oBACbC,EAAmB,0BACnBC,GFAgC/4H,KAClC,MAAM,eACJqsB,EAAc,iBACd6mC,EAAgB,mBAChBD,EAAkB,0BAClBE,EAAyB,+BACzBE,EAA8B,kBAC9BC,EAAiB,uBACjBC,EAAsB,uBACtBC,EAAsB,gBACtBC,EAAe,iBACfC,EAAgB,4BAChBC,EAA2B,6BAC3BC,GACE5zD,GACGg5H,EAASC,GAAcl0H,EAAAA,SAAe,KACtCm0H,EAAWC,GAAgBp0H,EAAAA,SAAe,IAC3CkT,EAASY,IACT2T,GAAQinB,EAAAA,GAAAA,KACR3rC,EAAY2Z,IACZxI,EAAaX,EAAgBL,EAAQe,GACrCogH,EAAoB9gH,EAAgBL,EAAQyrC,IAC5C21E,EAAoB/gH,EAAgBL,EAAQy+B,IAC5CqV,EAAkBzzC,EAAgBL,EAAQqV,IAC1Cy2B,EAAgBzrC,EAAgBL,EAAQ+rC,IACxCz3B,EAAgBjU,EAAgBL,EAAQqU,IACxCwrB,EAAgBx/B,EAAgBL,EAAQ0T,IACxCshC,EAAaC,GAAkBnB,EAAiBhI,EAAex3B,EAAc/nB,KAAK2P,QAClFgnG,EAAgBliG,EAAWuiC,kBAAoBviC,EAAWo/B,kBAAkBztC,MAClF7F,EAAAA,WAAgB,KACVkT,EAAOzC,QAAQs+C,0BAA0Bt+C,UAC3CyC,EAAOzC,QAAQs+C,0BAA0Bt+C,QAAQyzC,WAAa,EAChE,GACC,CAAChxC,IACJ,MAAMqhH,EAA0Bv0H,EAAAA,aAAkBosB,GAAUgoG,EAAahoG,EAAOpF,QAAQ,IAClFwtG,EAAyBx0H,EAAAA,aAAkB,IAAMo0H,EAAa,KAAK,IACnEK,EAA2Bz0H,EAAAA,aAAkBosB,GAAU8nG,EAAW9nG,EAAOpF,QAAQ,IACjF0tG,EAA0B10H,EAAAA,aAAkB,IAAMk0H,EAAW,KAAK,IAClES,EAAoB30H,EAAAA,SAAc,IAC/BwnB,EAAc/nB,KAAK2P,OAAS,CACjC8vC,iBAAkB,EAClBC,gBAAiB33B,EAAc/nB,KAAK2P,QAClC,MACH,CAACoY,EAAc/nB,KAAK2P,SACjBwlH,EAAqB50H,EAAAA,SAAc,IAChCwnB,EAActoB,MAAMkQ,OAAS,CAClC8vC,iBAAkB53B,EAAelY,OAASoY,EAActoB,MAAMkQ,OAC9D+vC,gBAAiB73B,EAAelY,QAC9B,MACH,CAACoY,EAActoB,MAAMkQ,OAAQkY,EAAelY,SAC/Cuc,GAAuBzY,EAAQ,oBAAqBqhH,GACpD5oG,GAAuBzY,EAAQ,mBAAoBshH,GACnD7oG,GAAuBzY,EAAQ,wBAAyBuhH,GACxD9oG,GAAuBzY,EAAQ,sBAAuBwhH,GAGtD,MAAMG,EAAqBzoG,IACzB,MACE4yB,cAAe81E,EAAiB91E,EAAa,cAC7CoI,EAAgB9/B,EAAelY,QAC7Bgd,GAAU,CAAC,EACTi/B,EAAsBypE,EAAe51E,iBACrCgM,EAAsBmpE,EAAoCS,EAAe31E,gBAA/BiI,EAEhD,MAAO,CACL2tE,gBAFsBztG,EAAexX,MAAMu7C,EAAqBH,GAGhEG,sBACAH,qBACD,EAEG8pE,EAAa,SAAC5oG,EAAQtrB,EAAUm0H,GAAuC,IAAzBpqH,EAAYsE,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,IAAAA,UAAA,GAC9D,MAAMooG,GAAsB,OAANnrF,QAAM,IAANA,OAAM,EAANA,EAAQhxB,YAAairB,GAAyBo+B,MAC9DywE,OAAmC9yH,KAAf,OAANgqB,QAAM,IAANA,OAAM,EAANA,EAAQhxB,UACtBg9G,EAAqB5wF,EAActoB,MAAMkQ,OAAS,GAAKmoG,GAAgD,IAA/B/vF,EAActoB,MAAMkQ,QAAgB8lH,EAC5GC,EAAkBjtE,EAAa+sE,EACrC,OAAoBzxH,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CACxCc,SAAU,CAACo0H,IAA4BzxH,EAAAA,GAAAA,KAAK,MAAO,CACjDqC,KAAM,eACNjH,MAAO,CACLgH,MAAOsvH,KAEPr0H,EAAUo0H,IAA4BzxH,EAAAA,GAAAA,KAAK,MAAO,CACpDqC,KAAM,eACNpF,WAAW4C,EAAAA,EAAAA,GAAKyO,EAAYqI,OAAQvP,GAAgBkH,EAAY,2BAC9DqmG,IAAmC30G,EAAAA,GAAAA,KAAKmrH,GAAiB,CAC3DxiC,QAAQ,EACRmqB,YAAagB,EACb1sG,aAAcA,EACd2P,WAAW,MAGjB,EACM46G,EAAqBj1H,IAIrB,IACAtB,GALsB,eAC1BgwF,EAAc,YACdtrC,EAAW,cACX76B,GACDvoB,EAEC,MAAM4rH,EAAel9B,IAAmBxoE,GAAyBq+B,KAC3DsnE,EAAgBn9B,IAAmBxoE,GAAyBo+B,MAClE,GAAIsnE,GAAgBC,EAAe,CACjC,MAAMjW,EAAeD,GAAoBjnB,EAAgBnmE,EAAe66B,EAAayD,EAAiB9yC,GACtG,IAAIi8E,EAAO47B,EAAe,OAAS,QAC/BtkG,IACF0oE,EAAO47B,EAAe,QAAU,QAEX,SAAnBl9B,IACFhwF,EAAQ,CACN,CAACsxF,GAAO4lB,IAGW,UAAnBlnB,IACFhwF,EAAQ,CACN,CAACsxF,GAAO4lB,GAGd,CACA,OAAOl3G,CAAK,EAERw2H,EAAmB,SAACjpG,GAAuB,IAAf1qB,EAAKyN,UAAAC,OAAA,QAAAhN,IAAA+M,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzC,MAAM,gBACJ4lH,EAAe,oBACf1pE,GACEwpE,EAAmBzoG,GACjB5F,EAAU,GAChB,IAAK,IAAIpW,EAAI,EAAGA,EAAI2kH,EAAgB3lH,OAAQgB,GAAK,EAAG,CAClD,MAAM8d,EAAS6mG,EAAgB3kH,GACzBmzC,EAAc8H,EAAsBj7C,EACpCklH,EAAgC,IAAhB/xE,EAChB31C,EAAyC,OAA9BwgD,GAAsCA,EAA0BpnC,QAAUkH,EAAOlH,OAASsuG,IAAkBzmE,EAA+B,GAAK,EAC3J1gC,EAAiC,OAAtBogC,GAA8BA,EAAkBvnC,QAAUkH,EAAOlH,MAC5ExV,EAAOk9C,EAAgBl9C,MAAQk9C,EAAgB1nC,QAAUkH,EAAOlH,MAChE6nE,EAAuB,OAANziE,QAAM,IAANA,OAAM,EAANA,EAAQhxB,SACzByD,EAAQu2H,EAAmB,CAC/BvmC,iBACAtrC,cACA76B,cAAewF,EAAOxF,gBAElB6sG,EAAgC1mC,IAAmBxoE,GAAyBo+B,MAAQswE,EAAgB3kH,EAAI,GAAK2kH,EAAgB3kH,EAAI,GACjIgiH,IAAmBmD,GAAsD,OAAtBhnE,GAA8BA,EAAkBvnC,QAAUuuG,EAA8BvuG,MAC3ImrG,EAAiB5uE,EAAc,IAAMyD,EAAgB53C,OAASoY,EAActoB,MAAMkQ,OACxFoX,EAAQvD,MAAkBxf,EAAAA,GAAAA,KAAK+xH,IAAsBnzH,EAAAA,EAAAA,GAAS,CAAC,EAAG8rD,EAAiBjgC,EAAOlH,OAAQ,CAChG6qG,eAAgBrgH,EAChBugH,mBAAoB7jE,EAAmBhgC,EAAOlH,QAAUknC,EAAmBhgC,EAAOlH,OAAO5X,OACzF+nC,aAAcjjC,EAAWijC,aACzB+6E,WAAYhkG,EAAOlH,QAAUitG,EAC7B/lG,OAAQA,EACR4hD,SAAUvsB,EACVstE,WAAYsD,IAAcjmG,EAAOlH,MACjC8qG,OAAQvuE,IAAgByD,EAAgB53C,OAAS,EACjD+e,SAAUA,EACVvgB,SAAUA,EACVihF,eAAgBA,EAChBhwF,MAAOA,EACPo3G,eAAgB7lG,EAChB8lG,cAAe6e,EAAgB3lH,OAC/BgnG,cAAeA,EACf+b,eAAgBA,EAChBC,iBAAkBA,GACjB1wH,GAAQwsB,EAAOlH,OACpB,CACA,OAAOguG,EAAW5oG,EAAQ5F,EAAS,EACrC,EA0BMivG,EAAwBp1H,IAGxB,IAAAq1H,EAAAC,EAAAC,EAAAC,EAAA,IAHyB,MAC7B/zF,EAAK,OACL1V,GACD/rB,EACC,MAAMy1H,EAAkBjB,EAAmBzoG,GAC3C,GAA+C,IAA3C0pG,EAAgBf,gBAAgB3lH,OAClC,OAAO,KAET,MAAM,gBACJ2lH,EAAe,oBACf1pE,EAAmB,mBACnBH,GACE4qE,EACEC,EAAennE,EAA4B9sB,GAC3Ck0F,EAA2B1uG,EAAe+jC,GAAqBrkC,MAC/DivG,EAAyE,QAAvDP,EAA8C,QAA9CC,EAAGrB,EAAkB0B,UAAyB,IAAAL,OAAA,EAA3CA,EAA8C7zF,UAAM,IAAA4zF,EAAAA,EAAI,KAC7EQ,EAAkBH,EAAa92G,WAAU7iB,IAAA,IAAC,QAC9Co3D,EAAO,aACPt6B,GACD98B,EAAA,OAAKo3D,IAAYyiE,GAAsB/8F,EAAahR,SAAS8tG,EAAyB,IACjFG,EAA0B7uG,EAAe4jC,EAAqB,GAAGlkC,MACjEovG,EAAuE,QAAtDR,EAA6C,QAA7CC,EAAGvB,EAAkB6B,UAAwB,IAAAN,OAAA,EAA1CA,EAA6C/zF,UAAM,IAAA8zF,EAAAA,EAAI,KAC3ES,EAAiBN,EAAa92G,WAAUjgB,IAAA,IAAC,QAC7Cw0D,EAAO,aACPt6B,GACDl6B,EAAA,OAAKw0D,IAAY4iE,GAAqBl9F,EAAahR,SAASiuG,EAAwB,IAC/EG,EAA2BP,EAAajmH,MAAMomH,EAAiBG,EAAiB,GAAGz3H,KAAI23H,IACpFl0H,EAAAA,EAAAA,GAAS,CAAC,EAAGk0H,EAAgB,CAClCr9F,aAAcq9F,EAAer9F,aAAa56B,QAAO0oB,IAAqC,IAA5B2nC,EAAiB3nC,SAE5E1oB,QAAOi4H,GAAkBA,EAAer9F,aAAa9pB,OAAS,IAC3DonH,EAA0BF,EAAyB,GAAGp9F,aAAajJ,QAAQ+lG,GAE3Ef,EADqBqB,EAAyB,GAAGp9F,aAAappB,MAAM,EAAG0mH,GACrCvyG,QAAO,CAACgF,EAAKjC,KAAU,IAAAyvG,EAE7D,OAAOxtG,GAA2B,QAAxBwtG,EADK1jF,EAAc/rB,GACR0B,qBAAa,IAAA+tG,EAAAA,EAAI,EAAE,GACvC,GACH,IAAIlzE,EAAc8H,EAClB,MAAMvqD,EAAWw1H,EAAyB13H,KAAI,CAAAU,EAG3C6kB,KAAU,IAHkC,QAC7CqvC,EAAO,aACPt6B,GACD55B,EACC,MAAM6uB,EAAsC,OAA3BqgC,GAAmCA,EAAuB1sB,QAAUA,GAAS5I,EAAahR,SAASsmC,EAAuBxnC,OACrIpZ,EAA8C,OAAnC0gD,GAA2CA,EAA+BxsB,QAAUA,GAAS5I,EAAahR,SAASomC,EAA+BtnC,OAAS,GAAK,EAC3K0vG,EAAa,CACjBljE,UACA3tD,MAAOqzB,EAAajV,QAAO,CAACgF,EAAKjC,IAAUiC,EAAM8pB,EAAc/rB,GAAO0B,eAAe,GACrF69C,OAAQrtC,EACR42C,SAAUvsB,EACVp1B,WACAvgB,YAEIihF,EAAiBziE,EAAOhxB,SACxByD,EAAQu2H,EAAmB,CAC/BvmC,iBACAtrC,cACA76B,cAAeguG,EAAW7wH,QAE5B09C,GAAerqB,EAAa9pB,OAC5B,IAAI6mG,EAAiB9xF,EAKrB,MAJuB,SAAnB0qE,IAEFonB,EAAiB1yD,EAAc,IAEb9/C,EAAAA,GAAAA,KAAK0vH,GAAuB,CAC9C3/D,QAASA,EACT3tD,MAAO6wH,EAAW7wH,MAClB0gE,OAAQmwD,EAAWnwD,OACnBuJ,SAAU4mD,EAAW5mD,SACrBhuC,MAAOA,EACP81E,aAAc8e,EAAW5mD,WAAaxoD,EAAelY,OAASsnH,EAAWnwD,OAAOn3D,OAChFijC,SAAUoc,EACVlxD,OAAQ2W,EAAWiwE,kBACnBh2D,SAAUA,EACVvgB,SAAUA,EACVihF,eAAgBA,EAChBhwF,MAAOA,EACPo3G,eAAgBA,EAChBC,cAAe6e,EAAgB3lH,OAC/BgnG,cAAeA,GACdjyF,EAAM,IAEX,OAAO6wG,EAAW5oG,EAAQtrB,EAAUm0H,EAAa,EAoCnD,MAAO,CACLj2E,gBACA21E,oBACAC,qBACAptG,gBACAF,iBACA8tG,qBACAJ,aACAjB,oBAvJ0BA,KACNvwH,EAAAA,GAAAA,MAAMiwH,GAAqB,CAC7C3tH,KAAM,MACN,gBAAiB2oD,EAAyB,EAC1ChzD,WAAYsH,EACZrC,UAAWqR,EAAY,qBACvBjR,SAAU,CAAC6zH,GAAqBU,EAAiB,CAC/Cj6H,SAAUirB,GAAyBq+B,KACnC1F,cAAe21E,EACfvtE,cAAeutE,EAAkBx1E,iBAChC,CACDshB,gBAAgB,IACd40D,EAAiB,CACnBr2E,gBACAoI,cAAe9/B,EAAelY,OAASoY,EAActoB,MAAMkQ,SACzDwlH,GAAsBS,EAAiB,CACzCj6H,SAAUirB,GAAyBo+B,MACnCzF,cAAe41E,EACfxtE,cAAewtE,EAAmBz1E,iBACjC,CACDshB,gBAAgB,EAChBqwD,cAAeT,GAA+BsG,UAmIlD9B,qBACAb,0BA5CgCA,KAChC,GAA+B,IAA3BvlE,EACF,OAAO,KAET,MAAM0T,EAAa,GACnB,IAAK,IAAIrgC,EAAQ,EAAGA,EAAQ2sB,EAAwB3sB,GAAS,EAC3DqgC,EAAWl/C,MAAkBzf,EAAAA,GAAAA,MAAMiwH,GAAqB,CACtD3tH,KAAM,MACN,gBAAiBg8B,EAAQ,EACzBrmC,WAAYsH,EACZjC,SAAU,CAAC6zH,GAAqBc,EAAsB,CACpD3zF,QACA1V,OAAQ,CACNhxB,SAAUirB,GAAyBq+B,KACnC1F,cAAe21E,EACfvtE,cAAeutE,EAAkBx1E,mBAEjCs2E,EAAsB,CACxB3zF,QACA1V,OAAQ,CACN4yB,mBAEA41E,GAAsBa,EAAsB,CAC9C3zF,QACA1V,OAAQ,CACNhxB,SAAUirB,GAAyBo+B,MACnCzF,cAAe41E,EACfxtE,cAAewtE,EAAmBz1E,qBAGrCrd,IAEL,OAAOqgC,CAAU,EAajB+vD,aAAc+B,EACdH,cAAeA,KAAA,CACbhuH,KAAM,aAET,EEhUG8wH,CAAqB,CACvBtvG,iBACA6mC,mBACAD,qBACAE,4BACAE,iCACAC,oBACAC,yBACAC,yBACAC,kBACAC,mBACAC,8BACAC,iCAEF,OAAoBrrD,EAAAA,GAAAA,MAAMowH,IAAuBvxH,EAAAA,EAAAA,GAAS,CACxDnC,IAAKA,GACJwB,EAAOoyH,IAAiB,CACzBhzH,SAAU,CAACkzH,IAA6BD,OAE5C,KC9CMr5H,GAAY,CAAC,gBCAbA,GAAY,CAAC,WAAY,SAAU,KAAM,aAAc,YAAa,WAAY,QAShFm8H,IAAiB/7H,EAAAA,EAAAA,IAAO01C,GAAAA,EAAP11C,EAAiB,KAAM,CAC5CqC,SAAU,QAEN25H,GAAuC92H,EAAAA,YAAiB,SAAiC/E,EAAOiF,GACpG,MAAM,SACFqvC,EAAQ,GACRliC,EAAE,WACFoiH,EAAU,UACV/uH,EAAS,SACTI,EAAQ,KACR0Q,GACEvW,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCq8H,EAAoB/2H,EAAAA,aAAkBsO,IxGLjB/P,MwGMP,QAAd+P,EAAM/P,KACR+P,EAAM2hC,kBxGPgC,SAAf1xC,EwGSP+P,EAAM/P,MxGTiC,WAARA,IwGU/CgxC,EAASjhC,EACX,GACC,CAACihC,IACJ,OAAoB9rC,EAAAA,GAAAA,KAAKozH,IAAgBx0H,EAAAA,EAAAA,GAAS,CAChDgL,GAAIA,EACJnN,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKyO,EAAYgE,SAAUrV,GACtC,kBAAmB+uH,EACnB9/E,UAAWonF,EACXjqH,UAAW0E,GACV9P,EAAO,CACRZ,SAAUA,IAEd,I,4BCtCA,MAAMpG,GAAY,CAAC,aAoBbs8H,IAAmBl8H,EAAAA,EAAAA,IAAO,MAAO,CACrCC,KAAM,kBACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOC,KAAgC,eAA1BM,EAAWkB,YAA+BzB,EAAO+7H,oBAAoB,GAPrEn8H,EAStBqF,IAAA,IAAC,MACF9D,EAAK,WACLZ,GACD0E,EAAA,OAAKkC,EAAAA,EAAAA,GAAS,CACblF,SAAU,GACVjB,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ8K,OAAOC,OAC5C7N,WAAY,EACZF,QAAS,eACkB,eAA1BI,EAAWkB,YAA+B,CAC3CoN,UAAW,GACX,IAKImtH,GAA4Bl3H,EAAAA,YAAiB,SAAsBC,EAASC,GAChF,MAAMjF,GAAQN,EAAAA,GAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,qBAEF,UACF2F,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzC4hE,EAAUt8D,EAAAA,WAAiBsK,GAAAA,GAC3B7O,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrC0B,WAAY2/D,EAAQ3/D,aAEhB2F,EA/CkB7G,KACxB,MAAM,WACJkB,EAAU,QACV2F,GACE7G,EACE6F,EAAQ,CACZnG,KAAM,CAAC,OAAuB,eAAfwB,GAA+B,wBAEhD,OAAO4F,EAAAA,GAAAA,GAAejB,EAAO61H,GAAAA,EAA6B70H,EAAQ,EAuClDE,CAAkB/G,GAClC,OAAoBgI,EAAAA,GAAAA,KAAKuzH,IAAkB30H,EAAAA,EAAAA,GAAS,CAClD3B,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,GAC9BjF,WAAYA,EACZyE,IAAKA,GACJwB,GACL,IAwBA,M,gBClFA,SAAS01H,GAAuBn8H,GAC9B,MAAM,OACJizB,EAAM,QACNwhB,GACEz0C,EACEiY,EAASuW,KACT1mB,EAAY2Z,IAIZ5V,EAAsC,IAHrBqgB,GAAqCjU,GACrB5U,QAAOwqB,IAAiC,IAA1BA,EAAIgoB,oBAExB1hC,OAC3Bm4G,EAAevnH,EAAAA,aAAkBsO,IAMjCxH,IAGJoM,EAAOzC,QAAQupF,oBAAoB9rE,EAAOlH,OAAO,GACjD0oB,EAAQphC,GAAM,GACb,CAAC4E,EAAQgb,EAAOlH,MAAO0oB,EAAS5oC,IACnC,OAAI/D,EAAUggF,wBAGU,IAApB70D,EAAOyN,SAFF,MAKWn4B,EAAAA,GAAAA,MAAMwjE,GAAAA,EAAU,CAClCt3B,QAAS63E,EACTzgH,SAAUA,EACVhG,SAAU,EAAc2C,EAAAA,GAAAA,KAAKyzH,GAAc,CACzCp2H,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+1H,mBAAoB,CAC9Dp6H,SAAU,aAEGwG,EAAAA,GAAAA,KAAK6zH,GAAAA,EAAc,CAClCx2H,SAAUoS,EAAOzC,QAAQ+hB,cAAc,4BAG7C,CCxCA,SAAS+kG,GAAyBt8H,GAChC,MAAM,QACJy0C,GACEz0C,EACEiY,EAASuW,KACT1mB,EAAY2Z,IACZ86G,EAAcx3H,EAAAA,aAAkBsO,IACpCohC,EAAQphC,GACR4E,EAAOzC,QAAQ+xF,gBAAgBj5E,GAA0B/C,QAAQ,GAChE,CAACtT,EAAQw8B,IACZ,OAAI3sC,EAAUggF,sBACL,MAEWv/E,EAAAA,GAAAA,MAAMwjE,GAAAA,EAAU,CAClCt3B,QAAS8nF,EACT12H,SAAU,EAAc2C,EAAAA,GAAAA,KAAKyzH,GAAc,CACzCp2H,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMm2H,4BAA6B,CACvEx6H,SAAU,aAEGwG,EAAAA,GAAAA,KAAK6zH,GAAAA,EAAc,CAClCx2H,SAAUoS,EAAOzC,QAAQ+hB,cAAc,+BAG7C,CC9BA,MAAM93B,GAAY,CAAC,eAAgB,mBAAoB,QAAS,aASnDg9H,GAAyB,CACpCC,mBCFF,SAAgC18H,GAAO,IAAA02H,EACrC,MAAM,OACJzjG,EAAM,QACNwhB,GACEz0C,EACEiY,EAASuW,KACTmG,EAAYrc,EAAgBL,EAAQkmC,IACpCr2C,EAAY2Z,IACZ5Q,EAAgB9L,EAAAA,SAAc,KAClC,IAAKkuB,EACH,OAAO,KAET,MAAMqrB,EAAW3pB,EAAUnQ,MAAKtC,GAAQA,EAAK6J,QAAUkH,EAAOlH,QAC9D,OAAe,OAARuyB,QAAQ,IAARA,OAAQ,EAARA,EAAUxX,IAAI,GACpB,CAAC7T,EAAQ0B,IACNG,EAAkC,QAAtB4hG,EAAGzjG,EAAO6B,oBAAY,IAAA4hG,EAAAA,EAAI5uH,EAAUgtB,aAChD6nG,EAAsB53H,EAAAA,aAAkBsO,IAC5CohC,EAAQphC,GACR,MAAMuhC,EAAYvhC,EAAM+2C,cAAcgoB,aAAa,eAAiB,KACpEn6D,EAAOzC,QAAQ+1F,WAAWt4E,EAAOlH,MAAO6oB,IAAc/jC,EAAgB,KAAO+jC,EAAU,GACtF,CAAC38B,EAAQgb,EAAQwhB,EAAS5jC,IAC7B,GAAI/I,EAAUigF,uBAAyB90D,IAAWA,EAAO0N,WAAa7L,EAAa5G,MAAKhM,KAAUA,IAChG,OAAO,KAET,MAAM06G,EAAWt5H,IACf,MAAMiI,EAAQ0M,EAAOzC,QAAQ+hB,cAAcj0B,GAC3C,MAAwB,oBAAViI,EAAuBA,EAAM0nB,GAAU1nB,CAAK,EAE5D,OAAoBhD,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CACxCc,SAAU,CAACivB,EAAa7H,SAAS,QAA4B,QAAlBpc,GAAuCtI,EAAAA,GAAAA,MAAMwjE,GAAAA,EAAU,CAChGt3B,QAASkoF,EACT,aAAc,MACd92H,SAAU,EAAc2C,EAAAA,GAAAA,KAAKyzH,GAAc,CACzCp2H,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMw2H,4BAA6B,CACvE76H,SAAU,aAEGwG,EAAAA,GAAAA,KAAK6zH,GAAAA,EAAc,CAClCx2H,SAAU+2H,EAAS,0BAElB,KAAM9nG,EAAa7H,SAAS,SAA6B,SAAlBpc,GAAwCtI,EAAAA,GAAAA,MAAMwjE,GAAAA,EAAU,CAClGt3B,QAASkoF,EACT,aAAc,OACd92H,SAAU,EAAc2C,EAAAA,GAAAA,KAAKyzH,GAAc,CACzCp2H,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMy2H,6BAA8B,CACxE96H,SAAU,aAEGwG,EAAAA,GAAAA,KAAK6zH,GAAAA,EAAc,CAClCx2H,SAAU+2H,EAAS,2BAElB,KAAM9nG,EAAa7H,SAAS,OAA0B,MAAjBpc,GAAqCtI,EAAAA,GAAAA,MAAMwjE,GAAAA,EAAU,CAC7Ft3B,QAASkoF,EACT92H,SAAU,EAAc2C,EAAAA,GAAAA,KAAKyzH,GAAc,CAAC,IAAiBzzH,EAAAA,GAAAA,KAAK6zH,GAAAA,EAAc,CAC9Ex2H,SAAUoS,EAAOzC,QAAQ+hB,cAAc,yBAEtC,OAET,EDrDEwlG,qBELF,SAAkC/8H,GAChC,MAAM,OACJizB,EAAM,QACNwhB,GACEz0C,EACEiY,EAASuW,KACT1mB,EAAY2Z,IACZu7G,EAAaj4H,EAAAA,aAAkBsO,IACnCohC,EAAQphC,GACR4E,EAAOzC,QAAQ+yF,gBAAgBt1E,EAAOlH,MAAM,GAC3C,CAAC9T,EAAQgb,EAAOlH,MAAO0oB,IAC1B,OAAI3sC,EAAU6/E,sBAAwB10D,EAAOnF,WACpC,MAEWvlB,EAAAA,GAAAA,MAAMwjE,GAAAA,EAAU,CAClCt3B,QAASuoF,EACTn3H,SAAU,EAAc2C,EAAAA,GAAAA,KAAKyzH,GAAc,CACzCp2H,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM42H,qBAAsB,CAChEj7H,SAAU,aAEGwG,EAAAA,GAAAA,KAAK6zH,GAAAA,EAAc,CAClCx2H,SAAUoS,EAAOzC,QAAQ+hB,cAAc,wBAG7C,EFlBE2lG,sBGRF,SAAmCl9H,GACjC,OAAoBuI,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CACxCc,SAAU,EAAc2C,EAAAA,GAAAA,KAAK2zH,IAAwB/0H,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,KAAsBwI,EAAAA,GAAAA,KAAK8zH,IAA0Bl1H,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,MAExI,GHMam9H,GAA8B,CACzCT,mBAAoB,CAClBU,aAAc,IAEhBL,qBAAsB,CACpBK,aAAc,IAEhBF,sBAAuB,CACrBE,aAAc,KAGZC,GAAqCt4H,EAAAA,YAAiB,SAA+B/E,EAAOiF,GAChG,MAAM,aACFq4H,EAAY,iBACZ5qG,EAAgB,MAChBrsB,EAAK,UACLC,GACEtG,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzC89H,EL7BuBv9H,KAC7B,MAAMiY,EAASY,IACT/Q,EAAY2Z,KACZ,aACJ67G,EAAY,iBACZ5qG,EAAgB,MAChBrsB,EAAQ,CAAC,EAAC,UACVC,EAAY,CAAC,EAAC,SACdguC,EAAQ,OACRrhB,EAAM,YACNuqG,GAAc,GACZx9H,EACEy9H,EAAsB14H,EAAAA,SAAc,KAAMqC,EAAAA,EAAAA,GAAS,CAAC,EAAGk2H,EAAcj3H,IAAQ,CAACi3H,EAAcj3H,IAC5Fq3H,EAAqB34H,EAAAA,SAAc,KACvC,IAAKuB,GAA+C,IAAlCrD,OAAOC,KAAKoD,GAAW6N,OACvC,OAAOue,EAET,MAAMirG,GAAcv2H,EAAAA,EAAAA,GAAS,CAAC,EAAGd,GAIjC,OAHArD,OAAO6gB,QAAQ4O,GAAkB9lB,SAAQ1H,IAA6B,IAA3B5B,EAAKs6H,GAAiB14H,EAC/Dy4H,EAAYr6H,IAAO8D,EAAAA,EAAAA,GAAS,CAAC,EAAGw2H,EAAkBt3H,EAAUhD,IAAQ,CAAC,EAAE,IAElEq6H,CAAW,GACjB,CAACjrG,EAAkBpsB,IAChBu3H,EAAe5lH,EAAOzC,QAAQuZ,6BAA6B,aAAc,GAAI/uB,EAAMizB,QACnF6qG,EAAY/4H,EAAAA,SAAc,KAC9B,MAAMg5H,EAAuB96H,OAAOC,KAAKo6H,GACzC,OAAOr6H,OAAOC,KAAKmD,GAAOhD,QAAOC,IAAQy6H,EAAqB9wG,SAAS3pB,IAAK,GAC3E,CAAC+C,EAAOi3H,IACX,OAAOv4H,EAAAA,SAAc,KACnB,MAEMi5H,EAFc3pH,MAAM6jB,KAAK,IAAIM,IAAI,IAAIqlG,KAAiBC,KAC1Bz6H,QAAOC,GAAmC,MAA5Bm6H,EAAoBn6H,KACvCwjC,MAAK,CAAC7vB,EAAGC,KACpC,MAAM+mH,EAAgBP,EAAmBzmH,GACnCinH,EAAiBR,EAAmBxmH,GAG1C,OAFyBjQ,OAAOk3H,SAAsB,OAAbF,QAAa,IAAbA,OAAa,EAAbA,EAAeb,cAAgBa,EAAcb,aAAe,MAC3En2H,OAAOk3H,SAAuB,OAAdD,QAAc,IAAdA,OAAc,EAAdA,EAAgBd,cAAgBc,EAAed,aAAe,IAC7D,IAE7C,OAAOY,EAAOh1G,QAAO,CAACgF,EAAK1qB,EAAK4lB,KAC9B,IAAIk1G,EAAY,CACdnrG,SACAwhB,QAASH,GAEX,MAAM+pF,EAA0BX,EAAmBp6H,GACnD,GAAI+6H,EAAyB,CAC3B,MAAMC,GAAc53H,EAAAA,EAAAA,GAA8B23H,EAAyB5+H,IAC3E2+H,GAAYh3H,EAAAA,EAAAA,GAAS,CAAC,EAAGg3H,EAAWE,EACtC,CACA,OAAOd,GAAet0G,IAAU80G,EAAO7pH,OAAS,EAAI,IAAI6Z,EAAK,CAACyvG,EAAoBn6H,GAAM86H,GAAY,CAACt2H,EAAUzB,MAAMk4H,YAAa,CAAC,IAAM,IAAIvwG,EAAK,CAACyvG,EAAoBn6H,GAAM86H,GAAW,GACvL,GAAG,GACL,CAACZ,EAAavqG,EAAQ4qG,EAAcvpF,EAAUmpF,EAAqBC,EAAoBI,EAAWh2H,EAAUzB,MAAMk4H,aAAa,EKrB7GC,EAAuBp3H,EAAAA,EAAAA,GAAS,CAAC,EAAGX,EAAO,CAC9D62H,eACA5qG,mBACArsB,QACAC,eAEF,OAAoBkC,EAAAA,GAAAA,KAAKqzH,IAAyBz0H,EAAAA,EAAAA,GAAS,CACzDnC,IAAKA,GACJwB,EAAO,CACRZ,SAAU03H,EAAa55H,KAAI,CAAAuB,EAA0BgkB,KAAK,IAA7B5a,EAAWmwH,GAAWv5H,EAAA,OAAyBsD,EAAAA,GAAAA,KAAK8F,GAAWlH,EAAAA,EAAAA,GAAS,CAAC,EAAGq3H,GAAav1G,EAAM,MAEhI,IAiCMw1G,GAA8B35H,EAAAA,YAAiB,SAAwB/E,EAAOiF,GAClF,OAAoBuD,EAAAA,GAAAA,KAAK60H,IAAuBj2H,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CAClEiF,IAAKA,EACLq4H,aAAcb,GACd/pG,iBAAkByqG,KAEtB,IIhFO,MAAMwB,GAAoC55H,EAAAA,YAAiB,SAA8B/E,EAAOiF,GACrG,MACMksG,EADS3iF,KACsBhZ,QAAQ+hB,cAAc,yBAC3D,OAAoB/uB,EAAAA,GAAAA,KAAKoyG,IAAaxzG,EAAAA,EAAAA,GAAS,CAC7CnC,IAAKA,GACJjF,EAAO,CACR6F,SAAUsrG,IAEd,I,wCCJA,UAAez9F,EAAAA,GAAAA,IAA4BlL,EAAAA,GAAAA,KAAK,OAAQ,CACtDmL,EAAG,+FACD,wBCFJ,IAAeD,EAAAA,GAAAA,IAA4BlL,EAAAA,GAAAA,KAAK,OAAQ,CACtDmL,EAAG,wIACD,YCFJ,IAAeD,EAAAA,GAAAA,IAA4BlL,EAAAA,GAAAA,KAAK,OAAQ,CACtDmL,EAAG,kGACD,yB,4BCTG,SAASirH,GAAwBt/H,GACtC,OAAOC,EAAAA,GAAAA,IAAqB,cAAeD,EAC7C,CACA,MACA,IADwBE,EAAAA,GAAAA,GAAuB,cAAe,CAAC,OAAQ,UAAW,WAAY,gBAAiB,eAAgB,iBAAkB,YAAa,eCDxJC,GAAY,CAAC,cAAe,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,OAAQ,aA6BzGo/H,IAAeh/H,EAAAA,EAAAA,IAAOi/H,GAAAA,EAAY,CACtCrtH,kBAAmBugD,IAAQtgD,EAAAA,GAAAA,GAAsBsgD,IAAkB,YAATA,EAC1DlyD,KAAM,cACNR,KAAM,OACNS,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOC,KAAMM,EAAWkkE,eAAiBzkE,EAAOykE,cAAezkE,EAAO,OAADU,QAAQC,EAAAA,GAAAA,GAAWJ,EAAW0J,QAA+B,YAArB1J,EAAWS,OAAuBhB,EAAO,QAADU,QAASC,EAAAA,GAAAA,GAAWJ,EAAWS,SAAU,GARrLpB,EAUlBqF,IAAA,IAAC,MACF9D,EAAK,WACLZ,GACD0E,EAAA,OAAKkC,EAAAA,EAAAA,GAAS,CACbnG,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ0I,KAAKgC,YACxCtN,EAAWu+H,eAAiB,CAC9B,UAAW,CACTl7H,gBAAiBzC,EAAM+B,KAAO,QAAHxC,OAAgC,YAArBH,EAAWS,MAAsBG,EAAM+B,KAAKC,QAAQ8K,OAAO8wH,cAAgB59H,EAAM+B,KAAKC,QAAQ5C,EAAWS,OAAO6b,YAAW,OAAAnc,OAAMS,EAAM+B,KAAKC,QAAQ8K,OAAOsO,aAAY,MAAMvM,EAAAA,GAAAA,IAA2B,YAArBzP,EAAWS,MAAsBG,EAAMgC,QAAQ8K,OAAOC,OAAS/M,EAAMgC,QAAQ5C,EAAWS,OAAOwC,KAAMrC,EAAMgC,QAAQ8K,OAAOsO,cAEnV,uBAAwB,CACtB3Y,gBAAiB,iBAGC,YAArBrD,EAAWS,OAAuB,CACnC,CAAC,KAADN,OAAMs+H,GAAgBntH,QAAO,QAAAnR,OAAOs+H,GAAgBv6D,gBAAkB,CACpEzjE,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ5C,EAAWS,OAAOwC,MAEzD,CAAC,KAAD9C,OAAMs+H,GAAgBpzH,WAAa,CACjC5K,OAAQG,EAAM+B,MAAQ/B,GAAOgC,QAAQ8K,OAAOrC,WAE9C,IACIqzH,IAAkC12H,EAAAA,GAAAA,KAAK22H,GAAc,CAAC,GACtDC,IAA2B52H,EAAAA,GAAAA,KAAK62H,GAA0B,CAAC,GAC3DC,IAAwC92H,EAAAA,GAAAA,KAAK+2H,GAA2B,CAAC,GACzEC,GAAwBz6H,EAAAA,YAAiB,SAAkBC,EAASC,GACxE,IAAIw6H,EAAsBC,EAC1B,MAAM1/H,GAAQN,EAAAA,GAAAA,GAAc,CAC1BM,MAAOgF,EACPlF,KAAM,iBAEF,YACFkS,EAAcktH,GAAkB,MAChCj+H,EAAQ,UACRkR,KAAMwtH,EAAWP,GAAW,cAC5B16D,GAAgB,EAChBk7D,kBAAmBC,EAAwBP,GAAwB,WACnEjtH,EAAU,KACVnI,EAAO,SAAQ,UACfzE,GACEzF,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzC0S,EAAOuyD,EAAgBm7D,EAAwBF,EAC/CC,EAAoBl7D,EAAgBm7D,EAAwB7tH,EAC5DxR,GAAa4G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCiB,QACAyjE,gBACAx6D,SAEI7C,EAvEkB7G,KACxB,MAAM,QACJ6G,EAAO,cACPq9D,EAAa,MACbzjE,EAAK,KACLiJ,GACE1J,EACE6F,EAAQ,CACZnG,KAAM,CAAC,OAAQwkE,GAAiB,gBAAiB,QAAF/jE,QAAUC,EAAAA,GAAAA,GAAWK,IAAM,OAAAN,QAAWC,EAAAA,GAAAA,GAAWsJ,MAE5F41H,GAAkBx4H,EAAAA,GAAAA,GAAejB,EAAOu4H,GAAyBv3H,GACvE,OAAOD,EAAAA,EAAAA,GAAS,CAAC,EAAGC,EAASy4H,EAAgB,EA4D7Bv4H,CAAkB/G,GAClC,OAAoBgI,EAAAA,GAAAA,KAAKq2H,IAAcz3H,EAAAA,EAAAA,GAAS,CAC9C6F,KAAM,WACNoF,YAAYjL,EAAAA,EAAAA,GAAS,CACnB,qBAAsBs9D,GACrBryD,GACHF,KAAmBpN,EAAAA,aAAmBoN,EAAM,CAC1CnQ,SAA0D,OAA/Cy9H,EAAuBttH,EAAKnS,MAAMgC,UAAoBy9H,EAAuBv1H,IAE1F8H,YAA0BjN,EAAAA,aAAmB66H,EAAmB,CAC9D59H,SAAwE,OAA7D09H,EAAwBE,EAAkB5/H,MAAMgC,UAAoB09H,EAAwBx1H,IAEzG1J,WAAYA,EACZyE,IAAKA,EACLQ,WAAW4C,EAAAA,EAAAA,GAAKhB,EAAQnH,KAAMuF,IAC7BgB,EAAO,CACRY,QAASA,IAEb,IAsGA,M,oGCjNA,MAAM5H,GAAY,CAAC,gBAINsgI,GAAsCh7H,EAAAA,MAAW,SAAkC/E,GAC9F,MAAM,aACF80B,GACE90B,EACJyG,GAAQC,EAAAA,EAAAA,GAA8B1G,EAAOP,IACzCqI,EAAY2Z,KACXu+G,GAAqBlrG,EACtB1mB,EAA6B,QAAtB4xH,EAA8Bl4H,EAAUzB,MAAMgzG,0BAA4BvxG,EAAUzB,MAAMizG,2BACvG,OAAOlrG,GAAoB5F,EAAAA,GAAAA,KAAK4F,GAAMhH,EAAAA,EAAAA,GAAS,CAAC,EAAGX,IAAU,IAC/D,ICZaw5H,IAAsBvsH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACzEmL,EAAG,gEACD,eACSusH,IAAwBxsH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAC3EmL,EAAG,mEACD,iBACSwsH,IAAyBzsH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAC5EmL,EAAG,2DACD,sBACSysH,IAAqB1sH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACxEmL,EAAG,iDACD,cACS0sH,IAAqB3sH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACxEmL,EAAG,mDACD,cACS2sH,IAAoB5sH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACvEmL,EAAG,mJACD,aACS4sH,IAAiB7sH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACpEmL,EAAG,+OACD,UAOS6sH,KANe9sH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAClEmL,EAAG,kDACD,SAC+BD,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACzEmL,EAAG,0HACD,gBAC0BD,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACpEmL,EAAG,mPACD,eACS8sH,IAAoB/sH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACvEoC,MAAO,IACPtI,OAAQ,KACRmX,EAAG,OACHD,GAAI,QACF,aACSknH,IAAuBhtH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAC1EmL,EAAG,gEACD,gBACSgtH,IAAoBjtH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACvEmL,EAAG,wDACD,aACSitH,IAAqBltH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACxEmL,EAAG,mCACD,cACSktH,IAA6BntH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAChFmL,EAAG,sJACD,sBACSmtH,IAAgBptH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACnEmL,EAAG,0GACD,SACSotH,IAAcrtH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACjEmL,EAAG,wCACD,OACSqtH,IAAiBttH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACpEmL,EAAG,sBACD,UACSstH,IAAevtH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAClEmL,EAAG,oOACD,QACSutH,IAAextH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAClEmL,EAAG,wSACD,QACSwtH,IAAkBztH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACrEmL,EAAG,uHACD,WACSytH,IAAgB1tH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACnEmL,EAAG,sDACD,SACS0tH,IAAmB3tH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACtEmL,EAAG,sJACD,YACS2tH,IAAwB5tH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAC3EmL,EAAG,8fACD,iBACS4tH,IAAqB7tH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,IAAK,CACrE3C,UAAuB2C,EAAAA,GAAAA,KAAK,OAAQ,CAClCmL,EAAG,+EAEH,cACS6tH,IAAgB9tH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACnEmL,EAAG,0GACD,SAIS8tH,KAHiB/tH,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CACpEmL,EAAG,kFACD,WACiCD,EAAAA,GAAAA,IAA2BlL,EAAAA,GAAAA,KAAK,OAAQ,CAC3EmL,EAAG,gNACD,WCzFElU,GAAY,CAAC,UCenB,MAAMiiI,GAAY,CAChBj1F,oBAAqB20F,GACrB10F,qBAAsBo0F,GACtB1M,eAAgByM,GAChBc,qBAAsBtB,GACtB9W,sBAAuBuX,GACvBc,mBAAoBtB,GACpBuB,mBAAoBrB,GACpBjnB,mBAAoBwmB,GACpB1mB,0BAA2B4mB,GAC3B3mB,2BAA4B4mB,GAC5BzK,iBAAkBgL,GAClBqB,mBAAoBpB,GACpBqB,oBAAqBpB,GACrBqB,uBAAwBpB,GACxBqB,WAAYd,GACZ7rF,gBAAiB+rF,GACjBa,qBAAsB9B,GACtB+B,mBAAoBhC,GACpBiC,6BAA8BhC,GAC9BiC,2BAA4BlC,GAC5BmC,sBAAuBvB,GACvBwB,wBAAyBvB,GACzBwB,eAAgBtB,GAChB9T,gBAAiBmT,GACjBkC,qBAAsB3B,GACtB1E,mBAAoBkF,GACpBzE,4BAA6BoD,GAC7BnD,6BAA8BoD,GAC9BjD,qBAAsBqD,GACtB9D,4BAA6B+E,GAC7BmB,oBAAqBlB,GACrBjtG,SAAU0sG,GACV9V,mBAAoB4V,GACpB3V,yBAA0BqW,GAC1BkB,kBAAmBzB,IAkBrB,IAhBsB95H,EAAAA,EAAAA,GAAS,CAAC,EAAGs6H,GAAW,CAC5ChoB,UAAWkpB,GAAAA,EACX51F,aAAc61F,GACdtE,YAAauE,GAAAA,EACbxrG,cAAeyrG,GAAAA,EACfn1F,gBAAiBo1F,GAAAA,EACjBz1F,WAAY01F,GAAAA,EACZhY,WAAYiY,GAAAA,EACZ9tF,eAAgB+tF,GAAAA,EAChBhW,mBAAoBiW,GAAAA,EACpBlP,YAAamP,GAAAA,EACbl0G,WAAYm0G,GAAAA,EACZz1F,eAAgB01F,GAAAA,EAChB51F,iBD7Da,SAAyBzoC,GACtC,IAAI,OACAuoC,GACEvoC,EACJlF,GAAQ0G,EAAAA,EAAAA,GAA8BxB,EAAMzF,IAC9C,OAAIguC,GACkBjlC,EAAAA,GAAAA,KAAK,UAAUpB,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,KAE9BwI,EAAAA,GAAAA,KAAKg7H,GAAAA,GAAap8H,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,GACrD,ECqDEs6B,SAAUmpG,GAAAA,ICxDCC,IAAqCt8H,EAAAA,EAAAA,GAAS,CAAC,EAAGu8H,GAAe,CAC5E7pH,KAAMi1G,GACN7R,aAAc0mB,GACd9L,6BCMF,SAA0C93H,GAAO,IAAA2uB,EAAAC,EAC/C,MAAM,QACJmpG,EAAO,MACPhsG,EAAK,QACL0oB,GACEz0C,EACEiY,EAASuW,KACT1mB,EAAY2Z,IAIZpa,EApBkB7G,KACxB,MAAM,QACJ6G,GACE7G,EAIJ,OAAO8G,EAHO,CACZ6K,KAAM,CAAC,eAEoB0E,EAAyBxP,EAAQ,EAa9CE,EAHGH,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CACrCqH,QAASS,EAAUT,WAGfgnB,EAAkB/V,EAAgBL,EAAQmW,IAC1CiB,EAAUyG,KACV1G,EAAU0G,KACV+tG,EAAe9+H,EAAAA,aAAkBsO,IACrCA,EAAM2hC,iBACN3hC,EAAM4hC,kBACN,MAAM,KACJ1+B,EAAI,iBACJyY,GACEZ,GAAiCnW,EAAOzC,QAAQxC,OAChDuD,GAAQyY,IAAqBV,GAA0BW,QACzDhX,EAAOzC,QAAQqzF,kBAEf5wF,EAAOzC,QAAQ+yF,qBAAgBphG,EAAWioB,EAASC,GAEjDolB,GACFA,EAAQx8B,EAAOzC,QAAQmwE,sBAAsB55D,GAAQ1Y,EACvD,GACC,CAAC4E,EAAQ8T,EAAO0oB,EAASrlB,EAASC,IACrC,IAAK0oG,EACH,OAAO,KAET,MAAMxhH,EAAO8X,EAAgB9X,MAAQ8X,EAAgBgB,UAAYA,EAC3DoqF,GAA0BjxG,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM+uC,gBAAgBhuC,EAAAA,EAAAA,GAAS,CAC5EgL,GAAIid,EACJolB,QAASovF,EACT5iI,MAAO,UACP,aAAcgX,EAAOzC,QAAQ+hB,cAAc,4BAC3CrtB,KAAM,QACNyI,UAAW,EACX,gBAAiB,OACjB,gBAAiB4D,EACjB,gBAAiBA,EAAO6Y,OAAUjoB,GACd,QAArBwnB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqBymB,eAAgB,CACtCvvC,UAAuB2C,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMu7H,mBAAoB,CAC9Dn8H,UAAW4B,EAAQ8K,KACnBnQ,SAAU,aAGd,OAAoBwG,EAAAA,GAAAA,KAAKV,EAAUzB,MAAM6tH,aAAa9sH,EAAAA,EAAAA,GAAS,CAC7D2lE,MAAO90D,EAAOzC,QAAQ+hB,cAAc,mCAA7Btf,CAAiE8/G,GACxE5D,WAAY,KACQ,QAArBvlG,EAAE9mB,EAAUxB,iBAAS,IAAAsoB,OAAA,EAAnBA,EAAqBslG,YAAa,CACnCruH,UAAuB0C,EAAAA,GAAAA,MAAMywG,GAAyB,CACpDnzG,SAAU,CAACkyH,EAAU,IAAkBvvH,EAAAA,GAAAA,KAAKV,EAAUzB,MAAMqzG,UAAW,CACrEvzG,aAAc4xH,EACd92H,MAAO,UACP4E,SAAU4zG,IACI,IAAZse,GAAiBte,OAG3B,EDpEEue,qBAAsBre,GACtB5mD,WAAY2rE,GACZ5/G,cAAeglH,GACf9rE,aElBK,SAA0B3gD,GAC/B,OAAO,IACT,EFiBEghD,OAAQ+hD,GACRG,eAAgBG,GAChB1vF,QAAS,KACTpK,WGtBK,SAAwBvJ,GAC7B,OAAO,IACT,EHqBEqgD,eAAgBomD,GAChBimB,iBAAkBpF,GAClBqF,cAAe9lB,GACfh9D,WAAYwiE,GACZla,YAAamgB,GACbtpB,aItBF,SAA0BrgG,GAAO,IAAA2uB,EAC/B,MAAM7mB,EAAY2Z,IAClB,OAAoBjZ,EAAAA,GAAAA,KAAKq8G,IAAkBz9G,EAAAA,EAAAA,GAAS,CAAC,EAAGpH,EAAO,CAC7D6F,UAAuB2C,EAAAA,GAAAA,KAAKkjH,IAAuBtkH,EAAAA,EAAAA,GAAS,CAAC,EAAsB,QAArBunB,EAAE7mB,EAAUxB,iBAAS,IAAAqoB,OAAA,EAAnBA,EAAqB++F,sBAEzF,EJkBEA,kBAAmBhC,GACnBx8F,MAAO++F,GACPlzG,IAAK02G,KKXA,SAASwS,GAASC,GACvB,OAAOn/H,EAAAA,SAAc,IAnBvB,SAA6B/E,GAAO,IAAAmkI,EAClC,MAAMjhI,EAAOD,OAAOC,KAAKlD,GACzB,IAAKkD,EAAKgrB,MAAK5qB,GAAOA,EAAI8gI,WAAW,UAAY9gI,EAAI8gI,WAAW,WAC9D,OAAOpkI,EAET,MAAMm/E,EAAW,CAAC,EACZklD,EAAqC,QAAvBF,EAAGnkI,EAAMqkI,sBAAc,IAAAF,EAAAA,EAAI,CAAC,EAChD,IAAK,IAAIhvH,EAAI,EAAGA,EAAIjS,EAAKiR,OAAQgB,GAAK,EAAG,CACvC,MAAM7R,EAAMJ,EAAKiS,GACb7R,EAAI8gI,WAAW,UAAY9gI,EAAI8gI,WAAW,SAC5CC,EAAe/gI,GAAOtD,EAAMsD,GAE5B67E,EAAS77E,GAAOtD,EAAMsD,EAE1B,CAEA,OADA67E,EAASklD,eAAiBA,EACnBllD,CACT,CAE6BmlD,CAAoBJ,IAAW,CAACA,GAC7D,CChBA,MAAMK,GAAyB,CAC7B/oG,iCAAiC,EACjC/G,+BAA+B,EAC/Bq0D,oBAAgB3hF,EAChBihF,oBAAoB,EACpBlnC,YAAY,EACZgkB,8BAA8B,EAC9B0iB,sBAAsB,EACtBU,oCAAoC,EACpCzvB,UAAW,WACX/d,mBAAmB,GAEfwiF,GAAeoG,GACRc,GAAmBx/H,IAC9B,MAAMy/H,EAAcR,IAEpBvkI,EAAAA,GAAAA,GAAc,CACZM,MAAOgF,EACPlF,KAAM,iBAEF4iE,EAAa39D,EAAAA,SAAc,KAAMqC,EAAAA,EAAAA,GAAS,CAAC,EAAG6pG,GAA0BwzB,EAAY/hE,aAAa,CAAC+hE,EAAY/hE,aAC9Gr8D,EAAQtB,EAAAA,SAAc,IC3BvB,SAAqBG,GAGzB,IAH0B,aAC3Bo4H,EAAY,MACZj3H,GACDnB,EACC,MAAMw/H,EAAYr+H,EAClB,IAAKq+H,GAA+C,IAAlCzhI,OAAOC,KAAKwhI,GAAWvwH,OACvC,OAAOmpH,EAET,MAAM1mH,GAASxP,EAAAA,EAAAA,GAAS,CAAC,EAAGk2H,GAO5B,OANAr6H,OAAOC,KAAKwhI,GAAW93H,SAAQtJ,IAC7B,MAAMwoF,EAAIxoF,OACW6D,IAAjBu9H,EAAU54C,KACZl1E,EAAOk1E,GAAK44C,EAAU54C,GACxB,IAEKl1E,CACT,CDWoC+tH,CAAa,CAC7CrH,gBACAj3H,MAAOo+H,EAAYp+H,SACjB,CAACo+H,EAAYp+H,QACXu+H,EAAqB7/H,EAAAA,SAAc,IAChC9B,OAAOC,KAAKskF,IAAgCx+D,QAAO,CAACgF,EAAK1qB,KAAQ,IAAAuhI,EAGtE,OADA72G,EAAI1qB,GAAuB,QAAnBuhI,EAAGJ,EAAYnhI,UAAI,IAAAuhI,EAAAA,EAAIr9C,GAA+BlkF,GACvD0qB,CAAG,GACT,CAAC,IACH,CAACy2G,IACJ,OAAO1/H,EAAAA,SAAc,KAAMqC,EAAAA,EAAAA,GAAS,CAAC,EAAGq9H,EAAaG,EAAoB,CACvEliE,aACAr8D,SACCk+H,KAAyB,CAACE,EAAa/hE,EAAYr8D,EAAOu+H,GAAoB,EE7B7E3wE,GAAgB,CACpBM,MAAO,CACLC,sBCPiCA,KACnC,MAAMv8C,EAASY,IACT/Q,EAAY2Z,IACZ4K,EAAiB/T,EAAgBL,EAAQiU,IACzC44G,EAAqBxsH,EAAgBL,EAAQ4nC,IAC7C2T,EAAyBl7C,EAAgBL,EAAQi/B,IACjD6tF,EAAkBzsH,EAAgBL,EAAQ0vB,IAChD,MAAO,CACL98B,KAAM,OACN,gBAAiBwhB,EAAelY,OAChC,gBAAiBq/C,EAAyB,EAAIuxE,EAAkBD,EAChE,uBAAwBlsE,GAA8B9wD,GACvD,EDJCuqH,yBEXoCA,KACtC,MAAMp6G,EAASY,IACTygD,EAAoBhhD,EAAgBL,EAAQorC,IAC5CmQ,EAAyBl7C,EAAgBL,EAAQi/B,IACvD,OAAOnyC,EAAAA,aAAkB,CAACglC,EAAS7gB,KACjC,MAAMorC,EAAiB,CAAC,EAClB0wE,EAAe97G,EAAQsqC,EAAyB,EAKtD,OAJAc,EAAe,iBAAmB0wE,EAC9B/sH,EAAOzC,QAAQi3C,gBAAgB1iB,EAAQ33B,MACzCkiD,EAAe,sBAAqDntD,IAAlCmyD,EAAkBvvB,EAAQ33B,KAEvDkiD,CAAc,GACpB,CAACr8C,EAAQqhD,EAAmB9F,GAAwB,IFQzD,MAAMyxE,GAA2BlgI,EAAAA,YAAiB,SAAkBC,EAASC,GAC3E,MAAMjF,EAAQwkI,GAAiBx/H,GACzB8T,EAAgBwgF,GAAqBt5F,EAAMiY,OAAQjY,GAIzD,OAAoBwI,EAAAA,GAAAA,KAAK8xD,GAAqB,CAC5CxhD,cAAeA,EACfm7C,cAAeA,GACfj0D,MAAOA,EACP6F,UAAuB0C,EAAAA,GAAAA,MAAMqiB,IAAUxjB,EAAAA,EAAAA,GAAS,CAC9C3B,UAAWzF,EAAMyF,UACjB7B,MAAO5D,EAAM4D,MACb4lH,GAAIxpH,EAAMwpH,GACVvkH,IAAKA,GACJjF,EAAMqkI,eAAgB,CACvBx+H,SAAU,EAAc2C,EAAAA,GAAAA,KAAK8mB,GAAY,CAAC,IAAiB9mB,EAAAA,GAAAA,KAAK08H,GAAU,CAAC,IAAiB18H,EAAAA,GAAAA,KAAK2vD,GAAuB,CAAC,QAG/H,IAQanX,GAAwBj8C,EAAAA,KAAWkgI,IAChDA,GAAYE,UAAY,CAQtBltH,OAAQmtH,IAAAA,MAAgB,CACtB5vH,QAAS4vH,IAAAA,OAAiBC,aAK5B,aAAcD,IAAAA,OAId,kBAAmBA,IAAAA,OAUnBzrH,WAAYyrH,IAAAA,KAKZvkF,aAAcukF,IAAAA,KAKd39C,gBAAiB29C,IAAAA,KAIjBjvC,gBAAiBivC,IAAAA,MAAgB,CAC/B75G,QAAS65G,IAAAA,QAAkBA,IAAAA,QAC3Bp2C,OAAQo2C,IAAAA,KACRp+D,eAAgBo+D,IAAAA,KAChBt2C,gBAAiBs2C,IAAAA,KACjBr2C,eAAgBq2C,IAAAA,SAKlB5oD,eAAgB4oD,IAAAA,OAKhBtsE,kBAAmBssE,IAAAA,KAInB/9H,QAAS+9H,IAAAA,OAKT17D,2BAA4B07D,IAAAA,OAK5Bt9E,eAAgBs9E,IAAAA,OAKhBx7C,wBAAyBw7C,IAAAA,OACzBl4C,oBAAqBk4C,IAAAA,QAAkBA,IAAAA,QAKvClqF,mBAAoBkqF,IAAAA,OAIpB75G,QAAS65G,IAAAA,QAAkBA,IAAAA,QAAkBC,WAK7Cp5G,sBAAuBm5G,IAAAA,OAKvB16G,QAAS06G,IAAAA,MAAgB,CAAC,cAAe,UAAW,aAKpD19C,gBAAiB09C,IAAAA,KAKjBz9C,oBAAqBy9C,IAAAA,KAKrBvvF,kBAAmBuvF,IAAAA,KAKnBv9C,oBAAqBu9C,IAAAA,KAKrBt9C,sBAAuBs9C,IAAAA,KAKvBr9C,qBAAsBq9C,IAAAA,KAKtBp9C,uBAAwBo9C,IAAAA,KAKxBvoG,YAAauoG,IAAAA,KAMbrsE,4BAA6BqsE,IAAAA,KAK7Bn9C,2BAA4Bm9C,IAAAA,KAK5B5gF,sBAAuB4gF,IAAAA,KAKvBh2F,SAAUg2F,IAAAA,MAAgB,CAAC,OAAQ,QAMnCzhB,kBAAmByhB,IAAAA,OAKnBE,qBAAsBF,IAAAA,MAAgB,CACpCG,4BAA6BH,IAAAA,OAM/BluG,iBAAkBkuG,IAAAA,OAMlBl9C,WAAYk9C,IAAAA,MAAgB,CAAC,SAAU,WAIvCxpG,YAAawpG,IAAAA,MAAgB,CAC3B1qG,MAAO0qG,IAAAA,QAAkBA,IAAAA,MAAgB,CACvCr5G,MAAOq5G,IAAAA,OAAiBC,WACxBjzH,GAAIgzH,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAC3C/pG,SAAU+pG,IAAAA,OAAiBC,WAC3Bj7H,MAAOg7H,IAAAA,OACLC,WACJ1qG,cAAeyqG,IAAAA,MAAgB,CAAC,MAAO,OACvC1nG,gCAAiC0nG,IAAAA,KACjCtqG,yBAA0BsqG,IAAAA,MAAgB,CAAC,MAAO,OAClDvqG,kBAAmBuqG,IAAAA,QAMrBf,eAAgBe,IAAAA,OAMhBlV,iBAAkBkV,IAAAA,KAMlBI,sBAAuBJ,IAAAA,KAQvB14B,sBAAuB04B,IAAAA,KAMvBzS,gBAAiByS,IAAAA,KAMjBr6C,aAAcq6C,IAAAA,KAIdlgG,SAAUkgG,IAAAA,KAMV34B,cAAe24B,IAAAA,KAKfhtE,WAAYgtE,IAAAA,KAKZj9C,qBAAsBi9C,IAAAA,KAKtB/8C,2BAA4B+8C,IAAAA,KAM5BhpG,iBAAkBgpG,IAAAA,KAMlB57D,iCAAkC47D,IAAAA,UAAoB,CAACA,IAAAA,MAAgB,CACrE37D,gBAAiB27D,IAAAA,KACjBh5D,UAAWg5D,IAAAA,OACTA,IAAAA,OAQJ3gE,4BAA6B2gE,IAAAA,MAAgB,CAAC,WAAY,WAM1D1rF,aAAc0rF,IAAAA,OAMdloD,eAAgBkoD,IAAAA,KAMhB34E,gBAAiB24E,IAAAA,KAOjB78C,4BAA6B68C,IAAAA,KAK7Bx/F,QAASw/F,IAAAA,KAKT1iE,WAAY0iE,IAAAA,OAKZ5pE,OAAQ4pE,IAAAA,MAAgB,CACtBpqE,MAAOoqE,IAAAA,KAAeC,WACtBp5H,MAAOm5H,IAAAA,KAAeC,WACtBt3H,KAAMq3H,IAAAA,KAAeC,WACrBpqE,KAAMmqE,IAAAA,KAAeC,aAMvBjqE,SAAUgqE,IAAAA,MAAgB,CAAC,QAAS,QAAS,OAAQ,QAAQ,IAI7DK,MAAOL,IAAAA,OAOPr1B,YAAaq1B,IAAAA,KAObp1B,kBAAmBo1B,IAAAA,KAMnBzmD,gBAAiBymD,IAAAA,KAMjBxmD,eAAgBwmD,IAAAA,KAOhBn1B,cAAem1B,IAAAA,KAMfroD,uBAAwBqoD,IAAAA,KAKxB76D,gBAAiB66D,IAAAA,KAOjB51B,oBAAqB41B,IAAAA,KAMrB31B,0BAA2B21B,IAAAA,KAO3B11B,0BAA2B01B,IAAAA,KAO3Bv1B,oBAAqBu1B,IAAAA,KAOrBt1B,oBAAqBs1B,IAAAA,KAOrBx1B,kBAAmBw1B,IAAAA,KAOnBz1B,mBAAoBy1B,IAAAA,KAOpBM,oBAAqBN,IAAAA,KAOrBjuC,eAAgBiuC,IAAAA,KAMhB1mC,8BAA+B0mC,IAAAA,KAO/BhuC,oBAAqBguC,IAAAA,KAKrBl5B,gBAAiBk5B,IAAAA,KAMjB19B,oBAAqB09B,IAAAA,KAOrB/0B,YAAa+0B,IAAAA,KAObh1B,WAAYg1B,IAAAA,KAKZvrD,uBAAwBurD,IAAAA,KAMxB3qD,wBAAyB2qD,IAAAA,KAOzBl1B,uBAAwBk1B,IAAAA,KAOxBj1B,sBAAuBi1B,IAAAA,KAKvBvoD,wBAAyBuoD,IAAAA,KAOzBn5C,SAAUm5C,IAAAA,KAQV70B,WAAY60B,IAAAA,KAKZ5pD,iBAAkB4pD,IAAAA,KAOlB90B,iBAAkB80B,IAAAA,KAMlB5iD,eAAgB4iD,IAAAA,KAMhB3iD,cAAe2iD,IAAAA,KAMf5jD,sBAAuB4jD,IAAAA,KAMvBhrC,0BAA2BgrC,IAAAA,KAM3Bp7B,kBAAmBo7B,IAAAA,KAQnB50B,cAAe40B,IAAAA,KAKf58C,gBAAiB48C,IAAAA,QAAkBA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,MAAgB,CACxF75H,MAAO65H,IAAAA,OAAiBC,WACxBj7H,MAAOg7H,IAAAA,OAAiBC,eACrBA,YACLnkF,WAAYkkF,IAAAA,MAAgB,EAAC,IAK7B1rD,eAAgB0rD,IAAAA,MAAgB,CAC9BvpD,YAAaupD,IAAAA,OAQf5iF,eAAgB4iF,IAAAA,MAAgB,CAAC,SAAU,WAI3ChkF,gBAAiBgkF,IAAAA,MAAgB,CAC/B1kF,KAAM0kF,IAAAA,OAAiBC,WACvB5kF,SAAU2kF,IAAAA,OAAiBC,aAU7BzoD,iBAAkBwoD,IAAAA,KAKlB38C,iBAAkB28C,IAAAA,OAKlBv9E,YAAau9E,IAAAA,OAMb/8F,SAAU+8F,IAAAA,OAKVz5F,UAAWy5F,IAAAA,OAIXnkD,cAAemkD,IAAAA,OAQf18C,uBAAwB08C,IAAAA,OAKxB5/F,KAAM4/F,IAAAA,QAAkBA,IAAAA,QAKxBriF,aAAcqiF,IAAAA,KAId3+C,kBAAmB2+C,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAAmBC,YAAaD,IAAAA,OAAkBA,IAAAA,SAKnJz8C,eAAgBy8C,IAAAA,MAAgB,CAAC,SAAU,WAI3C5mH,cAAe4mH,IAAAA,OAKfr6G,uBAAwBq6G,IAAAA,KAKxBx8C,yBAA0Bw8C,IAAAA,KAI1B9+H,UAAW8+H,IAAAA,OAIX/+H,MAAO++H,IAAAA,OAOPv8C,YAAau8C,IAAAA,MAAgB,CAAC,SAAU,WAKxCtwG,aAAcswG,IAAAA,QAAkBA,IAAAA,MAAgB,CAAC,MAAO,UAIxDzwG,UAAWywG,IAAAA,QAAkBA,IAAAA,MAAgB,CAC3Cr5G,MAAOq5G,IAAAA,OAAiBC,WACxBv+F,KAAMs+F,IAAAA,MAAgB,CAAC,MAAO,YAKhC5b,GAAI4b,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAAkBA,IAAAA,QAAmBA,IAAAA,KAAgBA,IAAAA,SAKrIr8C,qBAAsBq8C,IAAAA,K","sources":["../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/base/useBadge/useBadge.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/Icon/iconClasses.js","../node_modules/@mui/material/Icon/Icon.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/Table/TableContext.js","../node_modules/@mui/material/Table/Tablelvl2Context.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/node_modules/reselect/src/utils.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/lruMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/weakMapMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createSelectorCreator.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createStructuredSelector.ts","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/resolveProps/resolveProps.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/utils/platform.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/GridHeaders.js","../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-internals/EventManager/EventManager.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-internals/throttle/throttle.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/material/Toolbar/toolbarClasses.js","../node_modules/@mui/material/Toolbar/Toolbar.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useBadge } from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useThemeProps = createUseThemeProps('MuiBadge');\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme\n}) => {\n  var _theme$vars;\n  return {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    variants: [...Object.keys(((_theme$vars = theme.vars) != null ? _theme$vars : theme).palette).filter(key => {\n      var _theme$vars2, _theme$vars3;\n      return ((_theme$vars2 = theme.vars) != null ? _theme$vars2 : theme).palette[key].main && ((_theme$vars3 = theme.vars) != null ? _theme$vars3 : theme).palette[key].contrastText;\n    }).map(color => ({\n      props: {\n        color\n      },\n      style: {\n        backgroundColor: (theme.vars || theme).palette[color].main,\n        color: (theme.vars || theme).palette[color].contrastText\n      }\n    })), {\n      props: {\n        variant: 'dot'\n      },\n      style: {\n        borderRadius: RADIUS_DOT,\n        height: RADIUS_DOT * 2,\n        minWidth: RADIUS_DOT * 2,\n        padding: 0\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n      style: {\n        top: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n      style: {\n        bottom: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n      style: {\n        top: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n      style: {\n        bottom: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n      style: {\n        top: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n      style: {\n        bottom: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n      style: {\n        top: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n      style: {\n        bottom: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: {\n        invisible: true\n      },\n      style: {\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeInOut,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      }\n    }]\n  };\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nexport function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from '../FormControl';\nimport Stack from '../Stack';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(Stack, {\n      display: \"block\",\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconUtilityClass(slot) {\n  return generateUtilityClass('MuiIcon', slot);\n}\nconst iconClasses = generateUtilityClasses('MuiIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default iconClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"baseClassName\", \"className\", \"color\", \"component\", \"fontSize\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getIconUtilityClass } from './iconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(36)\n  }[ownerState.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: (theme.vars || theme).palette.primary.main,\n    secondary: (theme.vars || theme).palette.secondary.main,\n    info: (theme.vars || theme).palette.info.main,\n    success: (theme.vars || theme).palette.success.main,\n    warning: (theme.vars || theme).palette.warning.main,\n    action: (theme.vars || theme).palette.action.active,\n    error: (theme.vars || theme).palette.error.main,\n    disabled: (theme.vars || theme).palette.action.disabled,\n    inherit: undefined\n  }[ownerState.color]\n}));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n      baseClassName = 'material-icons',\n      className,\n      color = 'inherit',\n      component: Component = 'span',\n      fontSize = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, _extends({\n    as: Component,\n    className: clsx(baseClassName,\n    // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default Icon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n      align = 'inherit',\n      className,\n      component: componentProp,\n      padding: paddingProp,\n      scope: scopeProp,\n      size: sizeProp,\n      sortDirection,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: `capitalize(string)` expects a string argument.' : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","/**\n * WARNING: Don't import this directly. It's imported by the code generated by\n * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`\n * constructors to ensure the plugin works as expected. Supported patterns include:\n *   throw new Error('My message');\n *   throw new Error(`My message: ${foo}`);\n *   throw new Error(`My message: ${foo}` + 'another string');\n *   ...\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code, ...args) {\n  const url = new URL(`https://mui.com/production-error/?code=${code}`);\n  args.forEach(arg => url.searchParams.append('args[]', arg));\n  return `Minified MUI error #${code}; visit ${url} for the full message.`;\n}","/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from \"../ClassNameGenerator/index.js\";\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from \"../generateUtilityClass/index.js\";\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","export const gridDimensionsSelector = state => state.dimensions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from \"../useEnhancedEffect/index.js\";\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","'use client';\n\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\nimport useOnMount from \"../useOnMount/useOnMount.js\";\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = null;\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== null) {\n      clearTimeout(this.currentId);\n      this.currentId = null;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? reactId;\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value: Boolean(value)\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","/**\n * Get a list column definition\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = selectableIds;\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.push(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = [];\n      }\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      const addRow = rowId => {\n        selectionLookup[rowId] = rowId;\n      };\n      const removeRow = rowId => {\n        delete selectionLookup[rowId];\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const isFirstRender = React.useRef(true);\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    if (isFirstRender.current) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (filteredRowsLookup[id] !== true) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n    if (hasChanged || isNestedData && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (isNestedData) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n  }, []);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const virtualScrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const virtualScrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && virtualScrollbarHorizontalRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      virtualScrollbarHorizontalRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && virtualScrollbarVerticalRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      virtualScrollbarVerticalRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, virtualScrollbarHorizontalRef, virtualScrollbarVerticalRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import ownerDocument from \"../ownerDocument/index.js\";\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set(['__check__', '__reorder__', '__detail_panel_toggle__']);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  })\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"disabled\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { isHostComponent } from '@mui/base/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  var _slotProps$select;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = (_slotProps$select = slotProps == null ? void 0 : slotProps.select) != null ? _slotProps$select : SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !selectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, selectProps, {\n        classes: _extends({}, selectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        }),\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (error) {\n      if (error instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw error;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../constants/gridDetailPanelToggleField.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};"],"names":["getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useThemeProps","createUseThemeProps","BadgeRoot","styled","name","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","concat","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","_ref3","theme","_theme$vars","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","variants","Object","keys","vars","palette","filter","key","_theme$vars2","_theme$vars3","main","contrastText","map","style","backgroundColor","RADIUS_DOT","_ref4","top","right","transform","transformOrigin","badgeClasses","_ref5","bottom","_ref6","left","_ref7","_ref8","_ref9","_ref10","_ref11","leavingScreen","React","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","anchorOriginProp","className","component","components","componentsProps","children","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slots","slotProps","showZero","variantProp","other","_objectWithoutPropertiesLoose","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","useBadge","undefined","_extends","classes","composeClasses","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","getCircularProgressUtilityClass","_templateObject","_templateObject2","_templateObject3","_templateObject4","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","CircularProgressRoot","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","size","thickness","value","circleStyle","rootStyle","circumference","Math","PI","toFixed","round","width","role","viewBox","cx","cy","r","fill","strokeWidth","getFormControlLabelUtilityClasses","FormControlLabelRoot","formControlLabelClasses","label","labelPlacement","cursor","WebkitTapHighlightColor","marginLeft","marginRight","disabled","text","AsteriskComponent","asterisk","error","_slotProps$typography","control","disabledProp","disableTypography","labelProp","required","requiredProp","muiFormControl","useFormControl","controlProps","forEach","fcs","formControlState","states","typographySlotProps","type","Typography","Stack","getIconUtilityClass","IconRoot","userSelect","overflow","textAlign","inherit","small","medium","large","primary","secondary","info","success","warning","action","active","Icon","baseClassName","Component","muiName","ListItemTextRoot","listItemTextClasses","inset","multiline","dense","flex","marginTop","marginBottom","paddingLeft","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","ListContext","getListItemTextUtilityClass","getTableCellUtilityClass","TableCellRoot","align","stickyHeader","body2","borderBottom","TableCell","border","mode","lighten","alpha","divider","darken","tableCellClasses","paddingCheckbox","background","default","componentProp","paddingProp","scope","scopeProp","sizeProp","sortDirection","table","TableContext","tablelvl2","Tablelvl2Context","isHeadCell","ariaSort","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","edge","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","opacity","margin","autoFocus","checked","checkedProp","checkedIcon","defaultChecked","disableFocusRipple","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","tabIndex","setCheckedState","useControlled","controlled","Boolean","state","hasLabelFor","input","centerRipple","focusRipple","event","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","d","string","Error","code","url","URL","_len","arguments","length","args","Array","_key","arg","searchParams","append","_formatMuiErrorMessage","charAt","toUpperCase","slice","getUtilityClass","output","slotName","buffer","start","i","useForkRef","refs","every","instance","current","setRef","window","defaultGenerator","componentName","createClassNameGenerator","generate","configure","generator","reset","globalStateClasses","completed","expanded","focused","focusVisible","open","selected","globalStatePrefix","globalStateClass","ClassNameGenerator","result","getDataGridUtilityClass","gridClasses","is","fastObjectShallowCompare","a","b","aLength","bLength","_","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","useOnMount","fn","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","defaultCompare","objectShallowCompare","createRefs","equals","useGridSelector","didInit","setState","store","subscribe","newState","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","join","gridDimensionsSelector","dimensions","columnHeaderStyles","c","iconButtonContainer","visibility","menuIcon","separatorIconDragStyles","rx","x","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","_t$mixins$MuiDataGrid","_t$mixins$MuiDataGrid2","_t$mixins$MuiDataGrid3","_t$mixins$MuiDataGrid4","t","borderColor","radius","shape","containerBackground","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedHoverOpacity","selectedBackground","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","borderWidth","borderStyle","outline","minHeight","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","columnHeaderTitleContainerContent","whiteSpace","maxWidth","groupingCriteriaCell","outlineOffset","focusOutlineWidth","hasScrollX","hasScrollY","scrollbarSize","shorter","gap","spacing","borderBottomWidth","borderBottomStyle","columnHeaders","columnSeparatorOffset","touchAction","pointerEvents","shortest","filler","scrollbarFiller","breakInside","rowSkeleton","borderTop","textOverflow","borderTopColor","cellEmpty","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","virtualScrollerContent","cellOffsetLeft","alignSelf","groupingCriteriaCellToggle","pinnedRows","virtualScroller","overlay","gamma","f","o","decomposeColor","overlayColor","rgb","values","recomposeColor","removeOpacity","GridRootPropsContext","useGridRootProps","contextValue","NOT_FOUND","Symbol","assertIsFunction","func","errorMessage","TypeError","ensureIsArray","item","isArray","getDependencies","createSelectorArgs","dependencies","array","itemTypes","assertIsArrayOfFunctions","getPrototypeOf","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","cache","entry","get","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","resetResultsCount","Ref","WeakRef","constructor","deref","this","UNTERMINATED","TERMINATED","createCacheNode","s","v","p","weakMapMemoize","options","fnNode","lastResult","cacheNode","l","objectCache","WeakMap","objectNode","set","primitiveCache","Map","primitiveNode","terminatedNode","_lastResult$deref","_lastResult","_lastResult$deref2","lastResultValue","call","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","push","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","structuredSelector","_len3","_key4","reduce","composition","index","reselectCreateSelector","checkIsAPIRef","DEFAULT_INSTANCE_ID","e","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","GridRoot","handleRef","rootElementRef","showCellVerticalBorder","toolbar","mountedState","setMountedState","useEnhancedEffect","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","column","gridVisibleColumnFieldsSelector","visibleColumns","gridVisiblePinnedColumnDefinitionsSelector","pinnedColumns","isRtl","model","visibleColumnFields","visiblePinnedFields","invert","_pinnedColumns$left","_pinnedColumns$right","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","acc","gridHasColSpanSelector","some","colSpan","gridPreferencePanelStateSelector","preferencePanel","GridPreferencePanelsValue","GridApiContext","useGridApiContext","GridPreferencesPanel","_preferencePanelState","_rootProps$slotProps","_rootProps$slotProps2","preferencePanelState","panelContent","unstable_applyPipeProcessors","openedPanelValue","filters","panel","basePopper","panelId","labelId","GridHeader","fastMemo","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","details","_handlerRef$current","defaultMuiPrevented","subscribeEvent","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","Timeout","_defineProperty","currentId","delay","useTimeout","disposeEffect","resolveProps","defaultProps","prototype","hasOwnProperty","propName","defaultSlotProps","slotKey","slotPropName","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","valueState","setValueState","handleChange","async","newValue","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","endAdornment","loadIcon","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","sorting","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","globalId","maybeReactUseId","useId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","GridFilterInputValue","_item$value","applyValue","focusElementRef","clearButton","InputProps","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","String","filterDebounceMs","newItem","fromInput","_item$value2","baseTextField","getLocaleText","placeholder","InputLabelProps","shrink","isFunction","isObject","escapeRegExp","replace","clamp","min","range","from","to","isDeepEqual","entriesA","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","toString","deepClone","obj","structuredClone","JSON","parse","stringify","_excluded2","GridFilterInputMultipleValue","helperText","TextFieldProps","itemValue","filterItemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","operator","filterOperators","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","filterItem","_filterItem$value","parser","ignoreDiacritics","newFilterItem","filterOperator","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","_filterModel$quickFil","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","_filterModel$quickFil2","_filterModel$quickFil3","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","_isRowMatchingFilterI","_isRowMatchingQuickFi","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","filterRegex","matches","test","createEqualityFilterFn","sensitivity","usage","isEqual","compare","createEmptyFilterFn","isEmpty","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","InputComponent","requiresFilterValue","val","getGridStringOperators","renderEditCell","columnValue","getRowFormattedValue","parseNumericValue","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNaN","isNumber","toLocaleString","InputComponentProps","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","renderEditDateCell","throwIfNotDateObject","columnType","rowId","GRID_DATE_COL_DEF","gridDateFormatter","getRowId","toLocaleDateString","pastedValueParser","GRID_DATETIME_COL_DEF","gridDateTimeFormatter","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","_rawPinnedRows$bottom","_rawPinnedRows$bottom2","_rawPinnedRows$top$ma","_rawPinnedRows$top","rawPinnedRows","rowEntry","_rowEntry$model","_rowEntry$model2","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","_previousCache$update","_previousCache$update2","_previousCache$update3","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","getMinimalContentHeight","rowHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","htmlFor","baseCheckbox","BooleanOperatorContainer","GridFilterInputBoolean","_baseSelectProps$nati","_rootProps$slotProps3","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","gridBooleanFormatter","valueAsBoolean","toLowerCase","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","MenuProps","otherBaseSelectProps","_inputRef$current","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","_resolvedColumn","_resolvedColumn2","_rootProps$slotProps4","resolvedColumn","currentValueOptions","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","GridMenuRoot","Popper","menu","modal","GridMenu","onExited","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","document","activeElement","HTMLElement","handleClickAway","contains","anchorEl","placement","TransitionProps","ClickAwayListener","onClickAway","mouseEvent","Grow","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useRtl","menuId","buttonId","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","handleButtonClick","onClick","onKeyDown","getNewIndex","direction","_options","indexMod","newIndex","preventDefault","stopPropagation","button","touchRippleRef","baseIconButton","showMenu","moreActionsIcon","MenuList","autoFocusItem","closeMenu","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","_headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","unwrappedGroupingModel","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","number","dateTime","boolean","singleSelect","custom","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","viewportOuterSize","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","_apiRef$current$getRo","_apiRef$current$getRo2","_apiRef$current","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getRootDimensions","getTotalHeaderHeight","_props$headerFilterHe","unstable_listView","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","viewportInnerSize","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","leftPinnedWidth","rightPinnedWidth","handleDragOver","useEventCallback","offset","clientX","getBoundingClientRect","scroll","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","onDragOver","noop","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnGroupHeaderSelector","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","gridSortColumnLookupSelector","res","sortItem","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","gridFilteredRowsLookupSelector","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","visibleSortedRows","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilterActiveItemsSelector","topLevelRowCount","columnLookup","_filterModel$items","_column$filterOperato","gridFilterActiveItemsLookupSelector","activeFilters","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","getVisibleRows","paginationMode","useGridVisibleRows","response","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","gridListColumnSelector","listViewColumn","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","isJSDOM","useGridVirtualScroller","listView","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","selectedRowsLookup","currentPage","gridRootRef","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","virtualScrollbarVerticalRef","scrollbarHorizontalRef","virtualScrollbarHorizontalRef","contentHeight","contentSize","hasColSpan","fnRef","ResizeObserver","frameID","observer","observe","cancelAnimationFrame","disconnect","useResizeObserver","resize","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","bufferForDirection","MINIMUM_COLUMN_WIDTH","focusedCell","rowIndex","columnIndex","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","ReactDOM","forceUpdateRenderContext","handleScroll","currentTarget","handleWheel","handleTouchMove","needsHorizontalScrollbar","scrollerStyle","overflowX","overflowY","flexBasis","currentPageTotalHeight","useRunOnce","condition","effect","didRun","initialRenderContext","getRows","_params$renderContext","_params$rows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","_currentPage$range","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","isNotVisible","tabbableCell","cellMode","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","offsetTop","focusedColumnIndex","_apiRef$current$getIn","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","platform","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","_lastColumn$computedW","_rootProps$unstable_l","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","_inputs$range","_inputs$range2","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","_columnPositions$rend","_columnPositions$pinn","GridOverlayWrapperRoot","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","GridOverlays","_rootProps$slots","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","_props$style","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","Memoized","rowsLength","minimumSize","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","_rowsMeta$positions$r","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","content","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","addEventListener","capture","removeEventListener","setProperty","Container","Scroller","scrollbarWidth","GridVirtualScroller","overlaysProps","useGridOverlays","visibleRowCount","noRows","loadingOverlay","TopContainer","GridHeaders","Overlays","Content","RenderZone","detailPanels","SpaceFiller","BottomContainer","GridFooterPlaceholder","hideFooter","footer","getGridRowGroupSelectableDescendants","groupId","sortedRowIds","groupNode","descendants","_rowTree$sortedRowIds","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","findRowsToSelect","selectedRow","autoSelectDescendants","autoSelectParents","addRow","filteredRows","selectedIdsLookup","selectedDescendants","add","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","parent","childId","findRowsToDeselect","deselectedRow","removeRow","allParents","getRowNodeParents","parents","descendant","GridContextProvider","Provider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","logger","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","Store","_value","listeners","getSnapshot","SYMBOL_API_PRIVATE","useGridApiInitialization","inputApiRef","_inputApiRef$current","_publicApiRef$current","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","api","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","useGridLoggerFactory","getLogger","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","context","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","_ref$current","added","setAdded","targetElement","wrapHandler","GridCellCheckboxForwardRef","_rootProps$rowSelecti","_rootProps$rowSelecti2","checkboxElement","rippleRef","element","getCellElement","_checkboxElement$curr","querySelector","handleKeyDown","isSelectable","checkboxPropsSelector","rowSelectionPropagation","rowSelectionLookup","isIndeterminate","isChecked","selectableDescendantsCount","selectedDescendantsCount","_rowTree$sortedRowIds2","indeterminateCheckboxAction","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","getColumnHeaderElement","handleSelectionChange","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","_cellParams$value","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","CSVHead","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isPasteShortcut","fromCharCode","keyCode","shiftKey","altKey","writeToClipboardPolyfill","data","span","createElement","textContent","body","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","isCopyShortcut","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","_state$pinnedColumns","mergeColumnsState","densityStateInitializer","_props$initialState$d","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","_options$getRowsToExp","_options$shouldAppend","_options$includeHeade","_options$includeColum","_options$escapeFormul","getRowsToExport","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","disableToolbarButton","ownerDocument","getDerivedPaginationModel","paginationState","paginationModelProp","_paginationModelProp$","_paginationModelProp$2","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","doc","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","_gridRootElement$quer","_gridRootElement$quer2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","_options$printOptions","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","_api$columnHeadersCon","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","_rowSpanHiddenCells$r","rowSpanHiddenCells","nextRowIndex","_rowSpanHiddenCells$n","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","Edit","getColumnIndexFn","rowIndexBefore","checkIfCanStartEditing","paginationStateInitializer","_props$paginationMode","_props$rowCount","_props$paginationMeta","_props$initialState3","paginationMeta","useGridPagination","useGridPaginationMeta","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","restoredPaginationMeta","stateToRestore","useGridPaginationModel","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","_context$stateToResto2","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","handlePaginationModelChange","_apiRef$current$virtu","useGridRowCount","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","preferencePanelStateInitializer","_props$initialState$p","gridEditRowsStateSelector","editRows","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","_editRowsState$id$fie","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","_rowModesModel$id","_copyOfPrevRowModesMo","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","rawValue","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","_getSelectionModelPro","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","_props$sortModel","scrollIntoView","containerSize","elementSize","elementOffset","elementEnd","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableColumnFilter","disableColumnReorder","disableColumnResize","disableColumnSelector","disableColumnSorting","disableDensitySelector","disableRowSelectionOnClick","filterMode","hideFooterPagination","hideFooterRowCount","hideFooterSelectedRowCount","keepColumnPositionIfDraggedOutside","keepNonExistentRowsSelected","pageSizeOptions","resizeThrottleMs","rowPositionsDebounceMs","rowSpacingType","showColumnVerticalBorder","sortingMode","throttleRowsMs","unstable_rowSpanning","EMPTY_SIZE","EMPTY_DIMENSIONS","groupHeaderHeight","rowWidth","headersTotalHeight","dimensionsStateInitializer","useGridDimensions","_props$columnGroupHea","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnGroupHeaderHeight","decimals","w","savedSize","setSavedSize","debouncedSetSavedSize","lastArgs","wait","later","throttled","throttle","previousSize","setDimensions","computedStyle","defaultView","getComputedStyle","newSize","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","_apiRef$current$updat","rootElement","pinnedRowsHeight","calculatePinnedRowsHeight","scrollDiv","offsetWidth","clientWidth","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPrivate","k","isFirstSizing","handleResize","onResize","globalThis","unobserve","rowsMetaStateInitializer","heights","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","cellProps","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","_getParents$depth","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","_unwrappedGroupingMod2","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","trackFinger","currentTouchId","changedTouches","touch","identifier","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","asyncCheck","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","_cell$getBoundingClie","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","header","_iconContainer$client","_menuContainer$client","columnHeaderTitle","iconContainer","menuContainer","paddingWidth","parseInt","paddingRight","scrollWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","_apiRef$current$rootE","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","pinnedPosition","updateProperty","finishResize","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","_apiRef$current$colum","_elem$querySelectorAl","findGroupHeaderElementsFromField","_api$virtualScrollerR","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","side","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","_apiRef$current$rootE2","_userOptions$columns","userOptions","unstable_setColumnVirtualization","newColumns","totalWidth","total","_widthByField$column$","remainingWidth","widthPerColumn","updateColumns","_apiRef$current$colum2","passive","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","_colDef$rowSpanValueG","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","_hiddenCells$row$id","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","_state$filter$filterM","isFilteringPending","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","unstable_listColumn","getListColumnWidth","useDataGridComponent","useGridRowsPreProcessors","useGridRowSelection","_props$rowSelectionPr","_props$rowSelectionPr2","_props$rowSelectionPr15","_props$rowSelectionPr16","_props$rowSelectionPr29","_props$rowSelectionPr30","_props$rowSelectionPr32","runIfRowSelectionIsEnabled","applyAutoSelection","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","_props$rowSelectionPr3","_props$rowSelectionPr4","_props$rowSelectionPr5","_props$rowSelectionPr6","_props$rowSelectionPr7","_props$rowSelectionPr8","_props$rowSelectionPr9","_props$rowSelectionPr10","_props$rowSelectionPr11","_props$rowSelectionPr12","_props$rowSelectionPr13","_props$rowSelectionPr14","selectRows","selectableIds","_props$rowSelectionPr17","_props$rowSelectionPr18","_props$rowSelectionPr19","_props$rowSelectionPr20","selectionLookup","_props$rowSelectionPr21","_props$rowSelectionPr22","_props$rowSelectionPr23","_props$rowSelectionPr24","_props$rowSelectionPr25","_props$rowSelectionPr26","_props$rowSelectionPr27","_props$rowSelectionPr28","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","_props$rowSelectionPr31","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_event$target$closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","_props$initialState4","_props$slotProps2","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","_apiRef$current$updat2","_apiRef$current2","setColumnVisibility","isVisible","_columnVisibilityMode","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","columnReorderApi","_props$initialState$c","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$slotProps","ColumnsPanel","columnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","useGridRows","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","_idRowsLookup$id","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","_tree$childId","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","_props$rows","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRowSpanning","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","resetColSpan","columnSpanningPrivateApi","getCellColSpanInfo","_lookup$current$rowId","useGridColumnSpanning","useGridColumnGrouping","_unwrappedGroupingMod3","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","updateColumnGroupingState","_apiRef$current$getPi","_apiRef$current$getPi2","getPinnedColumns","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","_gridFocusCellSelecto","lastFocusedRowId","_nextRow$id","lastFocusedRowIndex","nextRow","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","hidePreferences","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortComparator","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","isHeightMetaValid","processHeightEntry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","_heightCache$get$cont","_heightCache$get","unstable_setLastMeasuredRowIndex","storeRowHeightMeasurement","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","_heightCache$get$auto","_heightCache$get2","useGridScroll","colRef","scrollCoordinates","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","getScrollPosition","showColumnMenu","hideColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setVirtualization","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","_CONTENT_WIDTH_RANGE_","Skeleton","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","baseBadge","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","GridRowCountRoot","GridRowCount","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","pinnedRight","GridScrollbarFillerCell","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","_dimensions$viewportI","viewportHeight","skeletonRowsCount","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","_ref$current2","pinnedCells","_ref$current3","LOADING_VARIANTS","CircularProgress","LinearProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","getToolbarUtilityClass","ToolbarRoot","disableGutters","gutters","Toolbar","_slots$firstButton","_slots$lastButton","_slots$nextButton","_slots$previousButton","_slots$firstButtonIco","_slots$lastButtonIcon","_slots$nextButtonIcon","_slots$previousButton2","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","FirstButton","firstButton","IconButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","FirstPageIconDefault","LastButtonIcon","lastButtonIcon","LastPageIconDefault","NextButtonIcon","nextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","previousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","tablePaginationClasses","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","TablePagination","_slotProps$select","ActionsComponent","TablePaginationActions","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","maxHeight","estimated","GridPagination","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","wrapLabelDisplayedRows","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","_valueRef$current","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","baseButton","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","startAdornment","baseInputAdornment","quickFilterIcon","pl","GridColumnsManagementBody","FormControlLabel","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagement","columnsManagementHeader","columnsManagementFooter","grey","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","elevation","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","VIRTUAL","EMPTY_CELL_PARAMS","GridCell","_column$getActions","_cellParams$formatted","_rootProps$cellSelect","_hiddenCells$rowId$fi","_hiddenCells$rowId","_spannedCells$rowId$f","_spannedCells$rowId","editCellState","styleProp","disableDragEvents","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","cellStyle","isLeftPinned","isRightPinned","focusableElement","elementToFocus","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","EmptyCell","GridRow","refProp","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","editRowsState","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","publishClick","rowReordering","heightEntry","rowStyle","rowClassNames","getRowClassName","getCell","indexRelativeToAllColumns","_cellColSpanInfo$cell","_cellColSpanInfo$cell2","_editRowsState$rowId$","_editRowsState$rowId","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","labelledby","GridColumnHeaderTitleRoot","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","clientHeight","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","_colDef$sortingOrder","_colDef$headerName","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onContextMenu","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","columnHeaderFilterIconButton","counter","columnHeaderSortIcon","elementId","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","render","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","MemoizedGridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","GridColumnHeaderItem","getColumnGroupHeaders","_columnGroupsModel$fi","_columnGroupsModel$fi2","_columnGroupsModel$la","_columnGroupsModel$la2","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","_column$computedWidth","headerInfo","Left","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","ListItemIconRoot","alignItemsFlexStart","ListItemIcon","getListItemIconUtilityClass","GridColumnMenuHideItem","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","baseDivider","useGridColumnMenuSlots","otherProps","GridColumnMenu","GridNoResultsOverlay","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","disableRipple","activeChannel","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","openFilterButtonIcon","columnFilteredIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterClearIcon","columnMenuClearIcon","columnReorderIcon","MUIBadge","MUICheckbox","MUIDivider","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIMenuItem","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","GridSkeletonCell","toggleFilter","GridColumnHeaders","noResultsOverlay","noRowsOverlay","useProps","allProps","_props$forwardedProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","useDataGridProps","themedProps","overrides","computeSlots","injectDefaultProps","_themedProps$key","accessibleRowCount","pinnedRowsCount","ariaRowIndex","DataGridRaw","GridBody","propTypes","PropTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange"],"sourceRoot":""}