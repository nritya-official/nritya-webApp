{"version":3,"file":"static/js/3876.0da0d959.chunk.js","mappings":"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","sources":["Components/CardSlider.js","Components/NStudioCard.js","Components/EditProfileModal.js","Screens/UserPage.js"],"sourcesContent":["import React from 'react';\nimport { Card as MuiCard } from '@mui/joy';\nimport { useState } from 'react';\nimport { Dialog, DialogContent, Button } from '@mui/material';\nimport CardCover from '@mui/joy/CardCover';\nimport ProductCard from './NStudioCard';\n\nconst CardSlider = ({ dataList, imgOnly = false }) => {\n  //console.log(\"Debug from CardSlider\", imgOnly);\n  //console.log(dataList);\n  const formattedDataList = Array.isArray(dataList) ? dataList : Object.values(dataList);\n  //console.log(formattedDataList)\n\n  const [open, setOpen] = useState(false);\n  const [selectedEntity, setSelectedEntity] = useState(null);\n\n  const handleOpen = (url) => {\n    console.log(url)\n    setSelectedEntity(url);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedEntity(null);\n  };\n\n  const cardHoverStyle = {\n    transform: 'scale(1.01)', // Scale up slightly on hover\n  };\n\n  return (\n    <div className=\"horizontal-scroll-wrapper no-important\">\n      {formattedDataList.map((entity, index) => (\n        imgOnly ? (\n          <a className=\"no-important\" key={index} onClick={() => handleOpen(entity)}>\n          <MuiCard\n            key={index}\n            style={{ marginRight: \"0.5rem\" }}\n            component=\"li\"\n            sx={{\n              height: 300,\n              width: 534,\n              '&:hover': {\n                ...cardHoverStyle,\n              },\n            }}\n          >\n            <CardCover>\n              <img\n                src={entity} // Use studio.iconUrl for the image source\n                loading=\"lazy\"\n                alt=\"Studio image\" // Use studioName for alt text\n              />\n            </CardCover>\n          </MuiCard>\n          </a>\n        ) : (\n\n          <a key={index} href={`#/studio/${entity.id}`}>\n            <ProductCard\n              key={entity.id}\n              data={entity}\n              img_src={entity.iconUrl}\n            />\n          </a>\n        )\n      ))}\n      <Dialog open={open} onClose={handleClose}>\n        {selectedEntity && (\n          <>\n            <DialogContent sx={{ padding: 0 }}>\n              <img\n                src={selectedEntity}\n                alt={\"Image\"}\n                style={{ maxWidth: '100%', height: 'auto' }}\n              />\n            </DialogContent>\n            <Button sx={{\n                          '&:hover': {\n                            backgroundColor: '#735EAB',\n                            color: 'white',\n                          }\n                        }} \n                        onClick={handleClose}>Close</Button>\n          </>\n        )}\n      </Dialog>\n    </div>\n\n  );\n};\n\nexport default CardSlider;\n","\nimport React from 'react';\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport Chip from '@mui/joy/Chip';\nimport Link from '@mui/joy/Link';\nimport Typography from '@mui/joy/Typography';\nimport { Stack } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { CHIP_LEVELS_DESIGN, COLORS, danceStylesColorChips } from '../constants';\nimport IconButton from '@mui/joy/IconButton';\nimport Favorite from '@mui/icons-material/Favorite';\n\n\nexport default function NStudioCard({img_src,data}) {\n    const isDarkModeOn = useSelector(selectDarkModeStatus);\n    \n    const studioId = data.id?data.id:data.studioId;\n\n    const cardStyle = {\n      backgroundColor: isDarkModeOn ? '#444' : 'white',\n      padding: '0px',\n      color: isDarkModeOn ? 'white' : 'black',\n      marginRight: \"10px\",\n      width: 320,\n      maxWidth: \"100%\",\n      boxShadow: 'lg',\n      transition: 'opacity 0.3s ease',\n    };\n  \n    const cardHoverStyle = {\n      transform: 'scale(1.01)',\n    };\n  \n  return (\n    <Card variant=\"solid\" sx={{\n      ...cardStyle,\n      '&:hover': cardHoverStyle,\n    }}>\n      \n        <AspectRatio ratio=\"1.78\" style={{ position: 'relative'}}>\n          <img\n            src={data && data.iconUrl ? data.iconUrl :\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: '100%', height: 'auto', overflow: 'hidden' }}\n            \n          />\n          <Stack direction=\"row\" spacing={2} style={{ position: 'absolute', bottom: 0, left: 0, padding: '1px' }}>\n        {data && data.danceStyles && typeof data.danceStyles === 'string' ? (data.danceStyles.split(\",\").slice(0, 3).map((form, index) => (\n        <Chip\n            key={index}\n            color={index % 2 === 0 ? \"danger\" : \"success\"}  \n            sx={{ marginBottom: \"10px\", fontSize: '0.8rem',  \n                    bgcolor: danceStylesColorChips[index].backgroundColor,\n                    color: danceStylesColorChips[index].color, \n            }}\n        >\n            {form.trim()}\n        </Chip>\n        ))):(\n            <Chip\n            key={10}\n            color={10 % 2 === 0 ? \"danger\" : \"success\"} \n            style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n        >\n            {\"No danceforms\"}\n        </Chip>\n        )}\n\n        </Stack>\n\n        <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", top: 0, left: 0, padding: \"1px\", paddingTop: \"1px\" }}\n          >\n            {data && data.freeTrialAvailable &&(\n            \n                <Chip\n                  key={1}\n                 \n                  sx={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                    bgcolor: COLORS.LIME.backgroundColor,  // Set the background color\n                    color: COLORS.LIME.color,  // Set the text color\n                  }}\n                >\n                  {'Free Trial Available'}\n                </Chip>\n              \n            )}\n          </Stack>\n\n        </AspectRatio>\n      <CardContent style={{padding:'10px'}}>\n        <Link\n          href={`#/studio/${studioId}`}\n          fontWeight=\"bold\"\n          color=\"neutral\"\n          textColor=\"text.primary\"\n          underline='none'\n          overlay\n          style={{color: isDarkModeOn?'white':'black'}}\n        >\n          {data && data.studioName?data.studioName:\"    \"}\n        </Link>\n        <Typography style={{color: isDarkModeOn?'white':'black'}} level=\"body-xs\">{data.street?data.street:\".  \"}</Typography>\n        <IconButton\n          hidden\n          aria-label=\"Like minimal photography\"\n          size=\"md\"\n          variant=\"solid\"\n          color=\"danger\"\n          sx={{\n            position: 'absolute',\n            zIndex: 2,\n            borderRadius: '50%',\n            right: '1rem',\n            bottom: '2rem',\n            transform: 'translateY(50%)',\n          }}\n        >\n          <Favorite />\n        </IconButton>\n        <Typography style={{color: isDarkModeOn ? 'white' : 'black'}}>\n            <span>⭐ {data && data.avgRating ? data.avgRating.toFixed(1) : \"Not rated yet\"}</span>\n            {data && data.minFee && (\n              <span style={{position: \"absolute\", right: 2}}>  Starts @₹{data.minFee}</span>\n            )}\n          </Typography>\n\n      </CardContent>\n    </Card>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Modal, Box, Button, TextField, Typography, FormControl, InputLabel, Select, MenuItem, Autocomplete, Alert, Snackbar } from '@mui/material';\nimport danceStyles from '../danceStyles.json';\nimport { COLLECTIONS } from '../constants';\nimport { useAuth } from '../context/AuthContext';\nimport { saveDocument, handleSavePostOTPSuccess } from '../utils/firebaseUtils';\nimport axios from \"axios\";\nimport qs from 'qs';\n\nconst PROD_BASE_URL = \"https://nrityaserver-2b241e0a97e5.herokuapp.com\"\nconst LOCAL_BASE_URL = \"http://127.0.0.1:8000\"\nconst BASE_URL = PROD_BASE_URL\n\nconst EditProfileModal = ({ open, onClose, userProfileInfo, setUserProfileInfo }) => {\n  const { currentUser } = useAuth();\n  const danceStylesOptions = danceStyles.danceStyles;\n  const [userDanceStyles, setUserDanceStyles] = useState([]);\n  const [userPhoneNumber, setUserPhoneNumber] = useState();\n  const [isOTPModalOpen, setIsOTPModalOpen] = useState(false); // To handle OTP modal\n  const [otp, setOtp] = useState('');\n  const [isPhoneVerified, setIsPhoneVerified] = useState(userProfileInfo?.isPhoneNumberVerified || false);\n  const [otpSent, setOtpSent] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('info');\n\n  useEffect(() => {\n    if (userProfileInfo && userProfileInfo.DanceStyles && userProfileInfo.DanceStyles !== \"\") {\n      setUserDanceStyles(userProfileInfo.DanceStyles);\n    }\n    if (userProfileInfo && userProfileInfo.PhoneNumber && userProfileInfo.setUserPhoneNumber !== \"\") {\n      setUserPhoneNumber(userProfileInfo.PhoneNumber);\n    }\n  }, [userProfileInfo]);\n\n  const handleChange = (e) => {\n    setUserProfileInfo({ ...userProfileInfo, [e.target.name]: e.target.value });\n  };\n\n  const handleDanceStylesChange = (event, value) => {\n    setUserDanceStyles(value);\n  };\n\n\n  const handleSave = async () => {\n    userProfileInfo.DanceStyles = userDanceStyles;\n    const data = await saveDocument(COLLECTIONS.USER, currentUser.uid, userProfileInfo);\n    if (data) {\n      setSnackbarMessage(\"Profile Updated\");\n      setSnackbarSeverity(\"success\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleSavePostOTP = async () => {\n    const docRef = handleSavePostOTPSuccess(COLLECTIONS.USER, currentUser.uid,userProfileInfo.PhoneNumber);\n  };\n\n  const handleVerifyPhoneNumber = async () => {\n    try {\n      //console.log(userProfileInfo.PhoneNumber);\n  \n      const response = await axios.post(\n        `${BASE_URL}/djSms/request_otp/`,\n        qs.stringify({\n          phone_number: userProfileInfo.PhoneNumber, // use qs to stringify the data\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n  \n      if (response.status === 200) {\n        setOtpSent(true);\n        setIsOTPModalOpen(true); // Open OTP modal\n        setSnackbarMessage(\"OTP sent to your phone number.\");\n        setSnackbarSeverity(\"info\");\n        setSnackbarOpen(true);\n      } else {\n        throw new Error('Failed to send OTP.');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setSnackbarMessage('Error sending OTP, please try again.');\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n  \n\n  const handleOtpSubmit = async () => {\n    //console.log(userProfileInfo.PhoneNumber,otp)\n    try {\n      const response = await axios.post(\n        `${BASE_URL}/djSms/confirm_otp/`, \n        qs.stringify({\n          \"phone_number\": userProfileInfo.PhoneNumber,\n          \"otp\": otp,\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n      console.log(response)\n      if (response && response.data && response.data.status === \"success\") {\n        setIsPhoneVerified(true);\n        setUserProfileInfo({ ...userProfileInfo, isPhoneNumberVerified: true });\n        setIsOTPModalOpen(false);\n        handleSavePostOTP()\n        setSnackbarMessage('Phone number verified successfully.');\n        setSnackbarSeverity(\"success\");\n        setSnackbarOpen(true);\n      } else {\n        setSnackbarMessage(response.message || 'Invalid OTP.');\n        setSnackbarSeverity(\"error\");\n        setSnackbarOpen(true);\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setSnackbarMessage('Error verifying OTP, please try again.');\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n\n  return (\n    <>\n      <Modal open={open} onClose={onClose} style={{ overflow: 'scroll' }}>\n        <Box sx={{ p: 4, backgroundColor: 'white', margin: 'auto', mt: 5, maxWidth: 400, borderRadius: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Edit Profile\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            name=\"Name\"\n            value={userProfileInfo.Name}\n            onChange={handleChange}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            label=\"Age\"\n            name=\"Age\"\n            type=\"number\"\n            value={userProfileInfo.Age}\n            onChange={handleChange}\n            margin=\"normal\"\n          />\n\n          <TextField\n            fullWidth\n            label=\"Phone Number\"\n            name=\"PhoneNumber\"\n            type=\"number\"\n            value={userProfileInfo.PhoneNumber}\n            onChange={handleChange}\n            margin=\"normal\"\n            InputProps={{\n              readOnly: isPhoneVerified || userProfileInfo.isPhoneNumberVerified, // If verified, make it read-only\n            }}\n          />\n          {isPhoneVerified || userProfileInfo.isPhoneNumberVerified? (\n            <Typography color=\"green\">Phone Number Verified</Typography>\n          ) : (\n            <Button variant=\"outlined\" onClick={handleVerifyPhoneNumber}>\n              {otpSent ? \"Resend OTP\" : \"Verify Phone Number\"}\n            </Button>\n          )}\n\n          <Autocomplete\n            multiple\n            id=\"tags-standard\"\n            options={danceStylesOptions}\n            value={userDanceStyles}\n            onChange={handleDanceStylesChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                placeholder=\"Select Dance Styles\"\n                style={{ backgroundColor: 'white', color: 'black' }}\n              />\n            )}\n          />\n\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Gender</InputLabel>\n            <Select\n              name=\"Gender\"\n              value={userProfileInfo.Gender}\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Male\">Male</MenuItem>\n              <MenuItem value=\"Female\">Female</MenuItem>\n              <MenuItem value=\"Other\">Other</MenuItem>\n            </Select>\n          </FormControl>\n\n          <TextField\n            fullWidth\n            label=\"Bio\"\n            name=\"Bio\"\n            value={userProfileInfo.Bio}\n            onChange={handleChange}\n            multiline\n            rows={4}\n            margin=\"normal\"\n          />\n          <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"outlined\" onClick={onClose}>Cancel</Button>\n            <Button variant=\"contained\" onClick={handleSave}>Save</Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      {/* OTP Verification Modal */}\n      <Modal open={isOTPModalOpen} onClose={() => setIsOTPModalOpen(false)}>\n        <Box sx={{ p: 4, backgroundColor: 'white', margin: 'auto', mt: 5, maxWidth: 300, borderRadius: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Enter OTP\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"4-Digit OTP\"\n            value={otp}\n            onChange={(e) => setOtp(e.target.value)}\n            margin=\"normal\"\n          />\n          <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"outlined\" onClick={() => setIsOTPModalOpen(false)}>Cancel</Button>\n            <Button variant=\"contained\" onClick={handleOtpSubmit}>Submit OTP</Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      <Snackbar open={snackbarOpen} autoHideDuration={600}  anchorOrigin={ {vertical:'top', horizontal:'center'} } onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default EditProfileModal;\n","import { useState, useEffect } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Button as MUIButton } from '@mui/joy';\nimport { COLLECTIONS } from '../constants';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { useAuth } from '../context/AuthContext';\nimport { readDocument } from '../utils/firebaseUtils';\nimport './UserPage.css';\nimport Kyc from '../Components/Kyc';\nimport {Card as MUICard,CardHeader,Avatar, CardContent, Typography, Tooltip} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport EditProfileModal from '../Components/EditProfileModal';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  doc,\n  getDoc,\n} from \"firebase/firestore\";\nimport {\n  faClock,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CardSlider from \"../Components/CardSlider\";\nimport { db } from \"../config\";\n\n\nfunction UserPage() {\n\n  const [isCreator, setIsCreator] = useState(false);\n  const [userProfileInfo,setUserProfileInfo] = useState(\n    {\n      Name: '',\n      Age: '',\n      DanceStyles: '',\n      Gender: '',\n      Bio: '',\n    }\n  );\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n\n  const { currentUser } = useAuth();\n  console.log(\"currentUser\",currentUser)\n  const cardData = [\n    ['Transactions', 'All', '#/transactions'],\n    ['My Bookings', 'All', '#/myBookings'],\n    ['Instructors', 'Creator', '#/modifyInstructors'],\n    ['Studios', 'Creator', '#/modifyStudios'],\n    ['DashBoard', 'Creator', '#/creatorDashboard']\n  ];\n  const [open, setOpen] = useState(false);\n  const [recentlyWatchedStudios, setRecentlyWatchedStudios] = useState([]);\n\n\n  const fetchRecentlyWatchedStudios = async (userId) => {\n    try {\n      const userRef = doc(db, COLLECTIONS.USER, userId);\n      const userDoc = await getDoc(userRef);\n      const recentlyWatchedMap = userDoc.exists()\n        ? userDoc.data().recentlyWatched\n        : {};\n\n      const studioIds = Object.values(recentlyWatchedMap);\n      //console.log(\"got\",studioIds)\n      const studioDataPromises = studioIds.map(async (studioId) => {\n        //console.log(studioId)\n        if (!studioId) {\n          console.warn(\"Invalid studioId:\", studioId);\n          return null;\n        }\n        console.log(\"studioId\", studioId);\n        const studioRef = doc(db, COLLECTIONS.STUDIO, studioId);\n        const studioDoc = await getDoc(studioRef);\n        if (studioDoc.exists()) {\n          //console.log(studioDoc.data())\n          return { id: studioId, ...studioDoc.data() };\n        } else {\n          console.warn(`Studio document not found for ID: ${studioId}`);\n          return null;\n        }\n      });\n\n      const studioData = await Promise.all(studioDataPromises);\n      const validStudioData = studioData.filter((studio) => studio !== null);\n\n      setRecentlyWatchedStudios(validStudioData);\n    } catch (error) {\n      console.error(\"Error fetching recently watched studios:\", error);\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // Sort the array by the card name\n  cardData.sort((a, b) => a[0].localeCompare(b[0]));\n \n  useEffect(() => {\n  \n    if (currentUser && currentUser.uid) {\n      \n        fetchRecentlyWatchedStudios(currentUser.uid);\n      \n    }\n    const getCreatorMode = async () => {\n      try{\n      const userData = await readDocument(COLLECTIONS.USER, currentUser.uid);\n      if (userData) {\n          setUserProfileInfo(\n            {\n              Name: userData.Name || '',\n              Age: userData.Age || '',\n              DanceStyles: userData.DanceStyles || '',\n              Gender: userData.Gender || '',\n              Bio: userData.Bio || '',\n              PhoneNumber : userData.PhoneNumber || '',\n              isPhoneNumberVerified : userData.isPhoneNumberVerified || false,\n            }\n          )\n          setIsCreator(userData.CreatorMode)\n      } else {\n        console.log(\"User not found but workshop created... error\");\n      }\n      }catch(error){\n        console.log(\" error\");\n      }\n    }\n  \n    getCreatorMode();\n  }, [isCreator]); // Run once on mount\n\n  const cardStyle = {\n    background: isDarkModeOn ? 'black' : 'white',\n    color: isDarkModeOn ? 'white' : 'black',\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"10px\",\n    cursor: 'pointer' ,\n  };\n\n  return (\n    <div >\n      <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform:'capitalize' }}>Profile</h1>\n      <MUICard sx={{ maxWidth: 400,background: isDarkModeOn ? 'black' : 'white',color: isDarkModeOn ? 'white' : 'black'}}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt={\"Picture\"}\n              src={currentUser.photoURL}\n              sx={{ width: 40, height: 40 }}\n            />\n          }\n          title={\n            <Typography variant=\"h6\" component=\"div\" sx={{ display: 'flex',color: isDarkModeOn ? 'white' : 'black', alignItems: 'center' }}>\n              {currentUser.displayName}\n              {isCreator && (\n                 <Tooltip title=\"You are a verified user.\" arrow>\n                 <CheckCircleIcon sx={{ color: 'green', marginLeft: 0.5, fontSize: 20 }} />\n               </Tooltip>\n              )}\n            </Typography>\n          }\n          subheader={\n            <>\n              <Typography variant=\"body2\" component=\"div\" sx={{ color: isDarkModeOn ? 'white' : 'black' }}>\n                {[currentUser.email, userProfileInfo.Age]\n                  .filter(Boolean)\n                  .join(' || ')}\n              </Typography>\n              {userProfileInfo.DanceStyles && (\n                <Typography variant=\"body2\" component=\"div\" sx={{ mt: 1, color: isDarkModeOn ? 'white' : 'black' }}>\n                  {userProfileInfo.DanceStyles}\n                </Typography>\n              )}\n              {userProfileInfo.Bio && (\n                <Typography variant=\"body2\" component=\"div\" sx={{ mt: 1, color: isDarkModeOn ? 'white' : 'black' }}>\n                  {userProfileInfo.Bio}\n                </Typography>\n              )}\n            </>\n          }\n      \n          \n          subheaderTypographyProps={{\n            sx: {\n              color: isDarkModeOn ? 'gray' : 'darkgray'\n            }\n          }}\n        />\n        <MUIButton sx={{ ml: 2 }} variant=\"outlined\" onClick={handleOpen}>\n          Edit Profile\n        </MUIButton>\n        <EditProfileModal open={open} onClose={handleClose} userProfileInfo={userProfileInfo} setUserProfileInfo={setUserProfileInfo} />\n        <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\" style={{color: isDarkModeOn ? 'white' : 'black'}}>\n          {isCreator ? \"List your studios now!!\" : \"Welcome to the Nritya! \\n Verify your profile to list your studio.\"}\n        </Typography>\n      </CardContent>\n      </MUICard>\n      <br/>\n      <Row>\n      {cardData.map(([name, type, link]) => {\n        if (type === 'Creator' && !isCreator) return null;\n\n        return (\n          <Col\n            key={name}\n            xs={12}\n            sm={6}\n            md={6}\n            lg={3}\n            xl={3}\n            className=\"mb-4\"\n          >\n            <a href={link} >\n              <Card style={cardStyle}>\n                <Card.Body>\n                  <Card.Title>{name}</Card.Title>\n                </Card.Body>\n              </Card>\n            </a>\n          </Col>\n        );\n      })}\n    </Row>\n    <Kyc/>\n      <Row hidden>\n          {recentlyWatchedStudios.length > 0 && (\n            <h4 style={{ color: isDarkModeOn ? \"white\" : \"black\" }}>\n              {\" \"}\n              <FontAwesomeIcon icon={faClock} size=\"1x\" /> Recently Viewed\n            </h4>\n          )}\n          {recentlyWatchedStudios.length > 0 ? (\n            <CardSlider dataList={recentlyWatchedStudios} imgOnly={false} />\n          ) : (\n            \"\"\n          )}\n        </Row>\n    </div>\n  );\n}\n\nexport default UserPage\n\nconst formatDateTime = (timestamp) => {\n  const options = {\n    timeZone: 'Asia/Kolkata', // Set the time zone to IST\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n  };\n\n  return new Date(timestamp).toLocaleString('en-IN', options);\n};\n\n"],"names":["_ref","dataList","imgOnly","formattedDataList","Array","isArray","Object","values","open","setOpen","useState","selectedEntity","setSelectedEntity","handleClose","cardHoverStyle","transform","_jsxs","className","children","map","entity","index","_jsx","onClick","handleOpen","url","console","log","MuiCard","style","marginRight","component","sx","height","width","CardCover","src","loading","alt","href","id","ProductCard","data","img_src","iconUrl","Dialog","onClose","_Fragment","DialogContent","padding","maxWidth","Button","backgroundColor","color","NStudioCard","isDarkModeOn","useSelector","selectDarkModeStatus","studioId","cardStyle","boxShadow","transition","Card","variant","AspectRatio","ratio","position","overflow","Stack","direction","spacing","bottom","left","danceStyles","split","slice","form","Chip","marginBottom","fontSize","bgcolor","danceStylesColorChips","trim","top","paddingTop","freeTrialAvailable","marginLeft","COLORS","LIME","CardContent","Link","fontWeight","textColor","underline","overlay","studioName","Typography","level","street","IconButton","hidden","size","zIndex","borderRadius","right","Favorite","avgRating","toFixed","minFee","BASE_URL","userProfileInfo","setUserProfileInfo","currentUser","useAuth","danceStylesOptions","userDanceStyles","setUserDanceStyles","userPhoneNumber","setUserPhoneNumber","isOTPModalOpen","setIsOTPModalOpen","otp","setOtp","isPhoneVerified","setIsPhoneVerified","isPhoneNumberVerified","otpSent","setOtpSent","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","useEffect","DanceStyles","PhoneNumber","handleChange","e","target","name","value","handleSnackbarClose","Modal","Box","p","margin","mt","gutterBottom","TextField","fullWidth","label","Name","onChange","type","Age","InputProps","readOnly","async","axios","qs","phone_number","headers","status","Error","error","Autocomplete","multiple","options","handleDanceStylesChange","event","renderInput","params","placeholder","FormControl","InputLabel","Select","Gender","MenuItem","Bio","multiline","rows","display","justifyContent","saveDocument","COLLECTIONS","USER","uid","response","handleSavePostOTPSuccess","handleSavePostOTP","message","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","isCreator","setIsCreator","cardData","recentlyWatchedStudios","setRecentlyWatchedStudios","sort","a","b","localeCompare","userRef","doc","db","userId","userDoc","getDoc","recentlyWatchedMap","exists","recentlyWatched","studioDataPromises","warn","studioRef","STUDIO","studioDoc","validStudioData","Promise","all","filter","studio","fetchRecentlyWatchedStudios","userData","readDocument","CreatorMode","getCreatorMode","background","cursor","textTransform","MUICard","CardHeader","avatar","Avatar","photoURL","title","alignItems","displayName","Tooltip","arrow","CheckCircleIcon","subheader","email","Boolean","join","subheaderTypographyProps","MUIButton","ml","EditProfileModal","Row","link","Col","xs","sm","md","lg","xl","Body","Title","Kyc","length","FontAwesomeIcon","icon","faClock","CardSlider"],"sourceRoot":""}