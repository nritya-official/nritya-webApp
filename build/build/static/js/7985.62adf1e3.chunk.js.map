{"version":3,"file":"static/js/7985.62adf1e3.chunk.js","mappings":"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","sources":["Components/LoginModalForm.js","Components/LoginModalDailog.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { styled } from '@mui/system';\nimport loginBoxLogo from '../../src/Components/DanceImg/Nritya_Login_logo.png';\nimport loginText from '../../src/Components/DanceImg/Lets_dance.png';\nimport LoginPage from \"../Screens/LoginPage\";\n\n// Styled components using `styled`\nconst LoginBoxMain = styled('div')(({ theme }) => ({\n    width: 'auto',\n    backgroundColor: '#000',\n    padding: '15px',\n    minHeight: '100px', // Set a minimum height\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst LoginLogo = styled('div')(({ theme }) => ({\n    height: '130px',\n    width: '130px',\n    margin: '0 auto',\n}));\n\nconst LoginText = styled('div')(({ theme }) => ({\n    width: '67%', // Full width to contain text\n    minHeight: '75px',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'center', // Center the content\n    alignItems: 'center', // Center the content\n}));\n\nconst LoginModalForm = ({ isLoggedIn, setIsLoggedIn }) => {\n    const [username, setUsername] = useState(() => localStorage.getItem('username') || '');\n    const [userID, setUserID] = useState(() => {\n        const userInfo = localStorage.getItem('userInfo');\n        return userInfo ? JSON.parse(userInfo).localId : '';\n    });\n\n    const handleLogin = (UserInfo, userInfoFull) => {\n        setUsername(UserInfo.displayName);\n        setIsLoggedIn(true);\n        setUserID(UserInfo.localId);\n        localStorage.setItem('username', UserInfo.displayName);\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('userInfo', JSON.stringify(UserInfo));\n        localStorage.setItem('userInfoFull', JSON.stringify(userInfoFull));\n        console.log(\"User Info Full local\", JSON.parse(localStorage.getItem('userInfoFull')));\n    };\n\n    return (\n        <LoginBoxMain>\n            <LoginLogo>\n                <img src={loginBoxLogo} alt=\"login-box-logo\" style={{ width: '100%', height: 'auto' }} />\n            </LoginLogo>\n            <LoginText>\n                <img src={loginText} alt=\"login-text-img\" style={{ width: '100%', height: 'auto' }} />\n            </LoginText>\n            <LoginPage onLogin={handleLogin} setIsLoggedIn={setIsLoggedIn} />\n        </LoginBoxMain>\n    );\n};\n\nexport default LoginModalForm;\n","import React,{useState,useEffect} from \"react\";\nimport Dialog from '@mui/material/Dialog';\nimport { styled } from '@mui/material/styles';\nimport LoginModalForm from \"./LoginModalForm\";\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  }\n}));\n\nconst LoginModalDailog = ({open, handleClose }) => {\n  console.log(\"Open\",open)\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    return storedIsLoggedIn === 'true';\n  });\n\n  useEffect(() => {\n    if (isLoggedIn && localStorage.getItem('isLoggedIn') === 'true') {\n      console.log(\"It's logged in\",isLoggedIn)\n      handleClose();\n    }\n  }, [isLoggedIn, handleClose]);\n\n  \n\n    return (\n\n        <React.Fragment>\n          <BootstrapDialog\n            onClose={handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={open}\n            maxWidth='xs'\n            sx={{\n              '& .MuiModal-backdrop': {\n                backdropFilter: 'blur(8px)'\n              },\n            }}\n          \n          >\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n                <CloseIcon />\n          </IconButton>\n            <LoginModalForm isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>\n          </BootstrapDialog>\n        </React.Fragment>\n       \n    )\n}\n\nexport default LoginModalDailog;"],"names":["LoginBoxMain","styled","_ref","theme","width","backgroundColor","padding","minHeight","display","flexDirection","alignItems","justifyContent","LoginLogo","_ref2","height","margin","LoginText","_ref3","_ref4","isLoggedIn","setIsLoggedIn","username","setUsername","useState","localStorage","getItem","userID","setUserID","userInfo","JSON","parse","localId","_jsxs","children","_jsx","src","alt","style","loginText","LoginPage","onLogin","handleLogin","UserInfo","userInfoFull","displayName","setItem","stringify","console","log","BootstrapDialog","Dialog","spacing","open","handleClose","useEffect","React","onClose","maxWidth","sx","backdropFilter","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","LoginModalForm"],"sourceRoot":""}