{"version":3,"file":"static/js/645.09921f8e.chunk.js","mappings":"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","sources":["Components/ImageUpload.js","Components/KycStepper.js","Components/Kyc.js","utils/validationUtils.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport { ref, getDownloadURL, listAll } from 'firebase/storage';\nimport { storage } from '../config';\nimport { useSelector } from 'react-redux'; // Import useSelector and useDispatch\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { deleteAllImagesInFolder,deleteImages,uploadImages} from '../utils/firebaseUtils'\nimport { Card, CardContent, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { STORAGES } from \"../constants\";\n\n\nconst ImageUpload = ({entityId,storageFolder,title, maxImageCount=10, updateMode, disable }) => {\n  const showSnackbar = useSnackbar();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [newFiles, setNewFiles] = useState([]); // Track new files to be added\n  const [deletedFiles, setDeletedFiles] = useState([]); // Track deleted files\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n  //console.log(\"Received props=> entityId:\", entityId, \"|storageFolder:\", storageFolder);\n  console.log(\"Kyc enitity id \",entityId, disable)\n  const filesizes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  useEffect(() => {\n   // console.log(\"Fetching image for\",entityId)\n    if(entityId){\n      fetchStudioImages(entityId); // Fetch images when component mounts\n    }\n  }, [entityId]);\n\n  useEffect(() => {\n   // console.log(\"Selected files:\", selectedFiles);\n    if (maxImageCount && selectedFiles.length > maxImageCount) {\n      const truncatedFiles = selectedFiles.slice(0, maxImageCount);\n      alert(`Exceeded maxImageCount, keeping first ${maxImageCount} files.`);\n      setSelectedFiles(truncatedFiles);\n    }\n  }, [selectedFiles, maxImageCount]);\n  \n\n  const handleInputChange = (e) => {\n    // console.log(\"handleInputChange\")\n    const files = Array.from(e.target.files);\n    const updatedFiles = [];\n    // console.log(\"file array \",files.length)\n    files.forEach((file) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        updatedFiles.push({\n          id: shortid.generate(),\n          filename: file.name,\n          filetype: file.type,\n          fileimage: reader.result,\n          datetime: file.lastModifiedDate.toLocaleString(\"en-IN\"),\n          filesize: filesizes(file.size),\n          file: file, // Store the actual file object\n        });\n\n        if (updatedFiles.length === files.length) {\n          setSelectedFiles((prevFiles) => [...prevFiles, ...updatedFiles]);\n          setNewFiles(updatedFiles);\n          // console.log(\"New files in total\",setNewFiles.length)\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleDeleteSelectedFile = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this image?\")) {\n      const fileToDelete = selectedFiles.find((file) => file.id === id);\n      setDeletedFiles((prevDeletedFiles) => [...prevDeletedFiles, fileToDelete]);\n      setSelectedFiles((prevFiles) =>\n        prevFiles.filter((file) => file.id !== id)\n      );\n    }\n  };\n\n  const handleUploadSubmit = async () => {\n    if (!entityId) {\n      alert(\"No studio selected\");\n      return;\n    }\n\n    try {\n      if (maxImageCount === 1) {\n        // Delete all previous images in the folder\n        await deleteAllImagesInFolder(storageFolder, entityId);\n        await uploadImages(storageFolder,newFiles, entityId);\n      } else {\n        // Calculate images to delete and add\n        const { imagesToDelete, newImages } = calculateDelta(selectedFiles, uploadedFiles);\n\n        // Delete images if there are any\n        if (imagesToDelete.length > 0) {\n          await deleteImages(storageFolder, imagesToDelete, entityId);\n        }\n\n        // Upload new images if there are any\n        if (newImages.length > 0) {\n          await uploadImages(storageFolder, newImages, entityId);\n        }\n\n      }\n\n      // alert(\"Images Uploaded/Deleted\");\n      showSnackbar(\"Images Uploaded/Deleted\", \"success\");\n    } catch (error) {\n      console.error(\"Error uploading/deleting images:\", error);\n    }\n  };\n\n  // Function to calculate images to delete and new images to upload\n  const calculateDelta = (selectedFiles, uploadedFiles) => {\n    const selectedFileIds = selectedFiles.map(file => file.id);\n    const uploadedFileIds = uploadedFiles.map(file => file.id);\n\n    const imagesToDelete = uploadedFiles.filter(file => !selectedFileIds.includes(file.id));\n    const newImages = selectedFiles.filter(file => !uploadedFileIds.includes(file.id));\n\n    return { imagesToDelete, newImages };\n  };\n\n\n  const fetchStudioImages = async (entityId) => {\n    setSelectedFiles([]);\n    setNewFiles([]);\n    setDeletedFiles([]);\n    try {\n      const folderPath = `${storageFolder}/${entityId}`;\n      console.log(folderPath)\n      const folderRef = ref(storage, folderPath);\n      const fileList = await listAll(folderRef);\n\n      const files = await Promise.all(\n        fileList.items.map(async (fileRef) => {\n          const downloadURL = await getDownloadURL(fileRef);\n\n          return {\n            id: fileRef.name,\n            filename: fileRef.name,\n            fileURL: downloadURL,\n          };\n        })\n      );\n      // console.log('File fetching',files);\n      setUploadedFiles(files); // Update the uploadedFiles state with fetched data\n      setSelectedFiles(files);\n    } catch (error) {\n      console.error('Error fetching user images:', error);\n    }\n  };\n\n  return (\n    <div className=\"fileupload-view\" style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n      <div className=\"row justify-content-center m-0\" style={{ flex: '1',justifyContent: 'center' }}>\n        <div className=\"col-md-6\" style={{ flex: '1' ,justifyContent: 'center'}}>\n          <div className=\"card mt-5\">\n            <div className=\"card-body\" style={{ backgroundColor: isDarkModeOn ? '#333333' : 'white' }}>\n              <div className=\"kb-data-box\">\n                <div className=\"kb-modal-data-title\">\n                  <div className=\"kb-data-title\" style={{justifyContent:'center',flex: '1'}}>\n                    <h4>{title}</h4>\n                    <p>Max no of image(s):{maxImageCount} {storageFolder === STORAGES.STUDIOIMAGES && <p>Add at least 5 images</p>}</p>\n                  </div>\n                </div>\n                <form style={{  backgroundColor: isDarkModeOn ? '#333333' : 'white'}}>\n                  <div className=\"kb-file-upload\">\n                    <div className=\"file-upload-box\">\n                      <input\n                        type=\"file\"\n                        id=\"fileupload\"\n                        className=\"file-upload-input\"\n                        onChange={handleInputChange}\n                        multiple\n                      />\n\n                    </div>\n                  </div>\n                  <br></br>\n                  <div className=\"kb-attach-box mb-3\">\n                  <div className=\"row\">\n                    {entityId && selectedFiles.length > 0 ? (\n                      selectedFiles.map((file) => (\n                        \n                        <div key={file.id} className=\"col-6 col-md-3 mb-3\" style={{ position: 'relative' }}>\n                          \n                          <Card sx={{ maxWidth: 345 }}>\n                            {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                              <div style={{ position: 'relative' }}>\n                                <img\n                                  src={file.fileimage ? file.fileimage : file.fileURL}\n                                  alt={file.filename}\n                                  className=\"card-img-top\"\n                                  style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                                />\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  disabled={disable}\n                                  onClick={() => handleDeleteSelectedFile(file.id)}\n                                  style={{ position: 'absolute', top: 0, right: 0, backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                                >\n                                  <DeleteIcon style={{color:\"ff0000\"}}/>\n                                </IconButton>\n                              </div>\n                            ) : (\n                              <CardContent>\n                                <i className=\"far fa-file-alt\"></i>\n                              </CardContent>\n                            )}\n                          </Card>\n                        </div>\n                        \n                      ))\n                    ) : (\n                      <div className=\"col-12 text-center\">\n                        <p>No images selected</p>\n                      </div>\n                    )}\n                  </div>\n\n                  </div>\n\n                  \n                  <div className=\"kb-buttons-box\">\n                    <button\n                      type=\"button\"\n                      className=\"btn form-submit\"\n                      style={{ backgroundColor: isDarkModeOn ? '#892CDC' : 'black', color:'white'  }}\n                      onClick={handleUploadSubmit}\n                      disabled={disable}\n                    >\n                      Image Upload\n                    </button>\n                  </div>\n                </form>\n                {selectedFiles.length > 0 && (\n                  <div className=\"kb-attach-box\" hidden>\n                    <div className=\"row\">\n                    <hr />\n                    {selectedFiles.map((file) => (\n                      <div key={file.id} className=\"col-6 col-md-3 mb-3\">\n                      <div className=\"card\">\n                        {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                          <img\n                            src={file.fileimage}\n                            alt={file.filename}\n                            className=\"card-img-top\"\n                            style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                          />\n                        ) : (\n                          <div className=\"card-body\">\n                            <i className=\"far fa-file-alt\"></i>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Set default prop values\nImageUpload.defaultProps = {\n  maxImageCount: 5, // Default maximum image count\n  updateMode: false,\n  disable:false,\n};\n\nexport default ImageUpload;","import React, { useState, useEffect } from 'react';\nimport { Stepper, Step, StepLabel, Typography, Paper, ThemeProvider, createTheme } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { styled } from '@mui/material/styles';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport { readDocument } from '../utils/firebaseUtils';\nimport { STATUSES, COLLECTIONS } from '../constants';\nimport './KycStepper.css';\n\nconst QontoConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      borderColor: 'green',\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      borderColor: 'green',\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    borderColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n}));\n\nconst stages = [STATUSES.SUBMITTED, STATUSES.UNDER_REVIEW, STATUSES.REVIEWED, STATUSES.VERIFIED];\nconst map = {\n  [STATUSES.SUBMITTED]: 0,\n  [STATUSES.UNDER_REVIEW]: 1,\n  [STATUSES.REVIEWED]: 2,\n  [STATUSES.VERIFIED]: 3,\n  [STATUSES.VERIFICATION_FAILED]: 3\n};\n\nconst KycStepper = ({ kycId, status }) => {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [kycData, setKycData] = useState({});\n\n  console.log(status)\n\n  const theme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? 'dark' : 'light',\n      primary: {\n        main: isDarkModeOn ? '#90caf9' : '#1976d2',\n      },\n    },\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await readDocument(COLLECTIONS.USER_KYC, kycId);\n        setKycData(data);\n      } catch (error) {\n        console.error(`Error fetching KYC data for KYC ID ${kycId}:`, error);\n      }\n    };\n    fetchData();\n  }, [kycId]);\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper sx={{ textAlign: 'center', marginBottom: '1rem' }} elevation={2}>\n        <Typography variant=\"h5\" component=\"p\">Application Status: {status}</Typography>\n        <br/>\n        <Stepper activeStep={map[status]} alternativeLabel connector={<QontoConnector />}>\n          {stages.map((stage, index) => (\n            <Step key={index}>\n              <StepLabel error={stage === STATUSES.VERIFIED && status === STATUSES.VERIFICATION_FAILED}>\n                {stage === STATUSES.VERIFIED && status === STATUSES.VERIFICATION_FAILED ? 'Failed Verification' : stage}\n              </StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <br/>\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default KycStepper;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { saveDocument, updateDocumentFields, readDocument } from '../utils/firebaseUtils.js';\nimport { STATUSES, COLLECTIONS, STORAGES } from '../constants.js';\nimport KycStepper from './KycStepper.js';\nimport CryptoJS from 'crypto-js';\nimport { validateField } from '../utils/validationUtils';\nimport ImageUpload from './ImageUpload.js';\n\nconst names_map = new Map([\n  [\"first_name\" , \"First Name\"],\n  [\"middle_last_name\" , \"Middle & Last Name\"],\n  [\"phone_number\" , \"Phone Number\"],\n  [\"street_address\" , \"Street Address\"],\n  [\"city\" , \"City\"],\n  [\"state_province\" , \"State\"],\n  [\"state\" , \"State\"],\n  [\"zip_pin_code\" , \"PIN Code/ZIP\"],\n  [\"aadhar\" , \"Aadhar Number\"],\n  [\"gstin\" , \"GST Number\"],\n  [\"comments\" , \"Remark(s)\"]\n  ])\n\nfunction Kyc() {\n  const [formData, setFormData] = useState({\n    first_name: '',\n    middle_last_name: '',\n    phone_number: '',\n    street_address: '',\n    city: '',\n    state_province: '',\n    zip_pin_code: '',\n    country: 'India',\n    aadhar: '',\n    gstin: '',\n    comments : '',\n    status: STATUSES.SUBMITTED,\n    tncAgreed: false,\n    hash: '',\n  });\n  const [kycData, setKycData] = useState(null);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [errors, setErrors] = useState({});\n  const user_id = JSON.parse(localStorage.getItem('userInfo')).UserId;\n  const kycId = `${user_id}_Kyc`;\n\n  const calculateHash = (data) => {\n    const filteredData = Object.keys(data).filter(key => key !== 'hash' && key !== 'status');\n    const sortedData = filteredData.sort().map(key => `${key}:${data[key]}`).join('|');\n  // Calculate hash using SHA-256\n    return CryptoJS.SHA256(sortedData).toString();\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleTnCAgreement = (e) => {\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      tncAgreed: e.target.checked,\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n\n      const formFields = Object.keys(formData).filter(\n          (key) => !['hash', 'status', 'country', 'comments', 'UserId'].includes(key)\n      );\n\n      let isValid = true;\n      let errorMessages = [];\n      let errorNum = 0;\n\n      formFields.forEach((field) => {\n          const error = validateField(field, formData[field]);\n          if (error) {\n              isValid = false;\n              errorNum = errorNum + 1;\n              errorMessages.push(`${errorNum}: ${error}`);\n              setErrors((prevErrors) => ({\n                  ...prevErrors,\n                  [field]: error,\n              }));\n          }\n      });\n\n      // If there are errors, prompt the user and stop the submission\n      if (!isValid) {\n          alert(`Please correct the following errors before submitting:\\n\\n${errorMessages.join('\\n')}`);\n          return;\n      }\n\n\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      const newHash = calculateHash(formData);\n\n      if (kycDoc) {\n        if (kycDoc.hash !== newHash) {\n          await updateDocumentFields(COLLECTIONS.USER_KYC, kycId, {\n            ...formData,\n            hash: newHash,\n          });\n          alert(\"KYC updated successfully\");\n        } else {\n          alert(\"No changes detected\");\n        }\n      } else {\n        // If no KYC record exists, create a new one\n        await saveDocument(COLLECTIONS.USER_KYC, kycId, {\n          ...formData,\n          UserId: user_id,\n          hash: newHash,\n        });\n        alert(\"KYC added successfully\");\n      }\n\n      await updateDocumentFields(COLLECTIONS.USER, user_id, {\n        KycIdList: { [kycId]: formData.status },\n      });\n\n      event.target.reset();\n    } catch (error) {\n      console.error(\"Error processing KYC: \", error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchKycData = async () => {\n      const kycDoc = await readDocument(COLLECTIONS.USER_KYC, kycId);\n      if (kycDoc) {\n        setKycData(kycDoc);\n        setFormData({ ...kycDoc, status: kycDoc.status || STATUSES.SUBMITTED });\n      } else {\n        setKycData(null);\n      }\n    };\n\n    fetchKycData();\n  }, [kycId]);\n\n  return (\n    <div style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n      <Container style={{ margin: 'auto', border: isDarkModeOn ? '1px solid white' : '1px solid black', borderRadius: '5px', padding: '20px' }}>\n        <Form onSubmit={handleSubmit}>\n          <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform: 'capitalize' }}>Verify yourself</h1>\n          <div className=\"row\">\n            { Object.keys(formData).map((key) => (\n              key !== 'status' && key !== 'hash' && key !== 'country'&& key !== 'tncAgreed' &&key !== 'comments' && key !== 'UserId' && (\n                <div className=\"col-md-6 col-lg-4\" key={key}>\n                  <Form.Group controlId={`formBasic${key}`}>\n                    <Form.Label>{names_map.get(String(key))}</Form.Label>\n                    <Form.Control\n                      type={key === 'age' || key === 'phone_number' ? 'number' : 'text'}\n                      placeholder={`Enter ${names_map.get(String(key))}`}\n                      name={key}\n                      value={formData[key]}\n                      onChange={handleChange}\n                      required\n                      style={{ backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5', color: isDarkModeOn ? 'white' : 'black' }}\n                    />\n                  </Form.Group>\n                </div>\n              )\n            ))}\n          </div>\n          <ImageUpload disable={formData.status === \"Verified\"} entityId={user_id} title={\"Upload Documents\"}  storageFolder={STORAGES.CREATORS_KYC_DOCUMENTS} ></ImageUpload>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"tnc-switch\" checked={formData.tncAgreed}\n            onChange={handleTnCAgreement}/>\n            <label class=\"form-check-label\" for=\"exampleCheck1\">\n            <span>\n                I agree to the <a href=\"#/npolicies/1\" style={{ color: isDarkModeOn ? 'lightblue' : 'blue' }}>Terms and Conditions. Click to read.</a>\n              </span>\n            </label>\n          </div>\n          <br/>\n          {formData.comments && (\n            <div className=\"col-md-12 col-lg-12\">\n              <br/>\n              <Form.Group controlId=\"formBasicComments\">\n                <Form.Label>{names_map.get('comments')}</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"comments\"\n                  value={formData.comments}\n                  readOnly\n                  style={{\n                    backgroundColor: isDarkModeOn ? '#181818' : '#e5e5e5',\n                    color: isDarkModeOn ? 'white' : 'black'\n                  }}\n                />\n              </Form.Group>\n            </div>\n          )}\n          <Button variant=\"success\" type=\"submit\" disabled={formData.status === \"Verified\" || !formData.tncAgreed}          >\n            Submit\n          </Button>\n\n        </Form>\n        <br/>\n        <>\n          {formData.hash && <KycStepper kycId={kycId} status={formData.status} />}\n        </>\n      </Container>\n      <br />\n    </div>\n  );\n}\n\nexport default Kyc;\n","export const validateField = (name, value) => {\n  let error = '';\n  console.log(name, value)\n  switch (name) {\n      case 'phone_number':\n          if (!/^\\d{10}$/.test(value)) {\n              error = 'Phone number must be exactly 10 digits.';\n          }\n          break;\n      case 'zip_pin_code':\n          if (!/^\\d{6}$/.test(value)) {\n              error = 'ZIP/Pin code must be exactly 6 digits.';\n          }\n          break;\n      case 'aadhar':\n          if (!/^\\d{12}$/.test(value)) {\n              error = 'Aadhar number must be exactly 12 digits.';\n          }\n          break;\n      case 'gstin':\n          if (!/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}[Z]{1}[0-9A-Z]{1}$/.test(value)) {\n              error = 'GSTIN must be a valid format (e.g., 22AAAAA0000A1Z5).';\n          }\n          break;\n      default:\n          break;\n  }\n  console.log(error)\n\n  return error;\n};\n"],"names":["ImageUpload","_ref","entityId","storageFolder","title","maxImageCount","updateMode","disable","showSnackbar","useSnackbar","selectedFiles","setSelectedFiles","useState","uploadedFiles","setUploadedFiles","newFiles","setNewFiles","deletedFiles","setDeletedFiles","isDarkModeOn","useSelector","selectDarkModeStatus","console","log","filesizes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","useEffect","fetchStudioImages","truncatedFiles","slice","alert","calculateDelta","selectedFileIds","map","file","id","uploadedFileIds","imagesToDelete","filter","includes","newImages","async","folderPath","folderRef","ref","storage","fileList","listAll","files","Promise","all","items","downloadURL","getDownloadURL","fileRef","name","filename","fileURL","error","_jsx","className","style","display","width","justifyContent","children","flex","backgroundColor","_jsxs","STORAGES","STUDIOIMAGES","type","onChange","e","Array","from","target","updatedFiles","forEach","reader","FileReader","onloadend","push","shortid","filetype","fileimage","result","datetime","lastModifiedDate","toLocaleString","filesize","size","prevFiles","readAsDataURL","multiple","position","Card","sx","maxWidth","match","src","alt","maxHeight","objectFit","IconButton","disabled","onClick","window","confirm","fileToDelete","find","prevDeletedFiles","handleDeleteSelectedFile","top","right","DeleteIcon","color","CardContent","deleteAllImagesInFolder","uploadImages","deleteImages","hidden","defaultProps","QontoConnector","styled","StepConnector","theme","stepConnectorClasses","alternativeLabel","left","active","line","borderColor","completed","palette","mode","grey","borderTopWidth","borderRadius","stages","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","_ref2","kycId","status","kycData","setKycData","createTheme","primary","main","data","readDocument","COLLECTIONS","USER_KYC","fetchData","ThemeProvider","Paper","textAlign","marginBottom","elevation","Typography","variant","component","Stepper","activeStep","connector","stage","index","Step","StepLabel","names_map","Map","formData","setFormData","first_name","middle_last_name","phone_number","street_address","city","state_province","zip_pin_code","country","aadhar","gstin","comments","tncAgreed","hash","errors","setErrors","user_id","JSON","parse","localStorage","getItem","UserId","handleChange","value","prevFormData","kycDoc","fetchKycData","Container","margin","border","padding","Form","onSubmit","event","preventDefault","formFields","Object","keys","key","isValid","errorMessages","errorNum","field","validateField","test","prevErrors","join","newHash","sortedData","sort","CryptoJS","toString","calculateHash","updateDocumentFields","saveDocument","USER","KycIdList","reset","textTransform","Group","controlId","Label","get","String","Control","placeholder","required","CREATORS_KYC_DOCUMENTS","class","checked","for","href","as","readOnly","Button","_Fragment","KycStepper"],"sourceRoot":""}