{"version":3,"file":"static/js/8393.baf012b2.chunk.js","mappings":"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","sources":["Screens/LoginPage.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {auth , provider}  from './../config.js';\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { db } from '../config';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { COLLECTIONS } from \"./../constants.js\";\nimport {  Row, Col } from 'react-bootstrap';\nimport { Button, Container } from '@mui/material';\nimport { setCreatorMode } from '../utils/firebaseUtils.js';\nimport { postData } from '../utils/common.js';\n\n\n\nfunction LoginPage() {\n  const [loginFailed, setLoginFailed] = useState(false);\n  const [username, setUsername] = useState(null);\n  const onLogin = async (UserInfo,userInfoFull) => {\n    setUsername(UserInfo?.displayName);\n\n    localStorage.setItem('username',username);\n    localStorage.setItem('isLoggedIn', true);\n    localStorage.setItem('userInfo',JSON.stringify(UserInfo));\n    localStorage.setItem('userInfoFull',JSON.stringify(userInfoFull));\n  };\n\n  const navigate = useNavigate();\n\n    const addUserIfMissing = async (user) => {\n      try {\n        const userRef = doc(db, COLLECTIONS.USER, user.uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          console.log(\"User there\");\n        } else {\n          // docSnap.data() will be undefined in this case\n          console.log(\"No such document!\");\n          const dbPayload = {\n            Name: user.displayName,\n            Email: user.email,\n            DoB: null, // You may want to add user's date of birth here\n            UserId: user.uid,\n            WorkshopCreated: [],\n            WorkshopEnrolled: [],\n            Cart: [],\n            CreatorMode: false,\n            KycIdList:{},\n            StudioCreated:[],\n            premiumTill: false,\n            TransactionIDs:[],\n            recentlyWatched:{0:\"\",1:\"\",2:\"\",3:\"\",4:\"\"},\n          }\n          const notifyEmails = user.email\n          const metadata = {\n            \"user_id\":user.uid\n          }\n          const response = await postData(dbPayload, COLLECTIONS.USER, notifyEmails, metadata) ;\n          if (response.ok) {\n            console.log(\"User added successfully\");\n          }else{\n            console.error(response);\n          }\n        }\n\n        const userRef2 = doc(db, COLLECTIONS.USER, user.uid);\n        const userSnap2 = await getDoc(userRef2);\n        localStorage.setItem('userDetails',JSON.stringify({\"UserId\":user.uid,\"email\":user.email,\"isPremium\":userSnap2.data().isPremium,\"displayName\":userSnap2.data().displayName,\"WorkshopCreated\":userSnap2.data().WorkshopCreated,\"WorkshopEnrolled\":userSnap2.data().WorkshopEnrolled}));\n       \n\n        \n      } catch (error) {\n        console.error(\"Error adding user: \", error);\n      }\n    };\n\n    const signin = async () => {\n      try {\n        const result = await signInWithPopup(auth, provider);\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const accessToken = credential.accessToken;\n        const idToken = credential.idToken;\n        const user = result.user;\n\n        if (result) {\n          let token = await auth.currentUser?.getIdToken();\n          console.log(\"token\", token);\n          localStorage.setItem(\"authToken\", token);\n        }\n        onLogin({\"UserId\":user.uid,\"email\":user.email,\"isPremium\":user.isPremium,\"displayName\":user.displayName,\"WorkshopCreated\":user.WorkshopCreated,\"WorkshopEnrolled\":user.WorkshopEnrolled,\"CreatorMode\":false,\"photoURL\":user.photoURL},user);\n        await addUserIfMissing(user);\n        await setCreatorMode(user.uid);\n        navigate(`/`);\n      } catch (error) {\n\n        console.log('Invalid username or password');\n        setLoginFailed(true);\n      }\n    };\n    \n      \n    return (\n      <Container fluid className='custom-container-main'>\n          <Row>\n            <Col xs={12} md={12}>\n              <div>\n              <form\n                className='custom-login-form'\n                onSubmit={(e) => {\n                  e.preventDefault(); // Prevent form submission\n                  signin(); \n                }}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  padding: '15px 0'\n                }}\n              >\n                <Button\n                  type=\"submit\" // Add a type to the button to trigger form submission\n                  style={{\n                    backgroundColor: \"#D9D9D9\",\n                    color: '#000',\n                    borderRadius: '6px',\n                    textTransform: 'none',\n                    border: '1px solid #777',\n                    padding: '8px 16px'\n                  }}\n                >\n                  <img\n                    src=\"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg\"\n                    alt=\"Google Icon\"\n                    style={{ marginRight: '10px', height: '20px' }}\n                  />\n                  Sign In with Google\n                </Button>\n              </form>\n              </div>\n            </Col>\n          </Row>\n      </Container>\n    );\n}\n\nexport default LoginPage;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["loginFailed","setLoginFailed","useState","username","setUsername","navigate","useNavigate","signin","async","result","signInWithPopup","auth","provider","credential","GoogleAuthProvider","credentialFromResult","user","accessToken","idToken","_auth$currentUser","token","currentUser","getIdToken","console","log","localStorage","setItem","UserInfo","userInfoFull","displayName","JSON","stringify","onLogin","uid","email","isPremium","WorkshopCreated","WorkshopEnrolled","photoURL","userRef","doc","db","COLLECTIONS","USER","getDoc","exists","dbPayload","Name","Email","DoB","UserId","Cart","CreatorMode","KycIdList","StudioCreated","premiumTill","TransactionIDs","recentlyWatched","notifyEmails","metadata","response","postData","ok","error","userRef2","userSnap2","data","addUserIfMissing","setCreatorMode","_jsx","Container","fluid","className","children","Row","Col","xs","md","onSubmit","e","preventDefault","style","display","alignItems","justifyContent","padding","_jsxs","Button","type","backgroundColor","color","borderRadius","textTransform","border","src","alt","marginRight","height","React","_ref","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","concat","classes","forEach","brkPoint","propValue","cols","infix","push","classNames"],"sourceRoot":""}