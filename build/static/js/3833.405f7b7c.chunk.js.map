{"version":3,"file":"static/js/3833.405f7b7c.chunk.js","mappings":"wOAQA,MAyEA,EAzEsBA,IAA8D,IAA7D,SAAEC,EAAQ,aAACC,EAAY,KAAEC,EAAOC,EAAAA,GAAYC,WAAWL,EAC5E,MAAMM,GAAYC,EAAAA,EAAAA,QAAO,OAClBC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,IAC5CC,EAAgBC,IAAqBF,EAAAA,EAAAA,WAAS,GAErDG,QAAQC,IAAIb,GACZ,MAAMc,EAAoBC,MAAMC,QAAQhB,GAAYA,EAAWiB,OAAOC,OAAOlB,GAC7EY,QAAQC,IAAIC,EAAkBb,GAE9B,MAAMkB,EAAsBA,KAC1B,MAAMC,EAAYf,EAAUgB,QACxBD,IACFZ,EAAiBY,EAAUE,WAAa,GACxCX,EACES,EAAUE,WAAaF,EAAUG,YAAcH,EAAUI,aAE7D,EAGIC,EAAUC,IACd,MAAMN,EAAYf,EAAUgB,QACV,SAAdK,EACFN,EAAUO,SAAS,CAAEC,MAAO,IAAKC,SAAU,WACpB,UAAdH,GACTN,EAAUO,SAAS,CAAEC,KAAM,IAAKC,SAAU,UAC5C,EAYF,OATAC,EAAAA,EAAAA,YAAU,KACR,MAAMV,EAAYf,EAAUgB,QAC5B,GAAID,EAGF,OAFAD,IACAC,EAAUW,iBAAiB,SAAUZ,GAC9B,IAAMC,EAAUY,oBAAoB,SAAUb,EACvD,GACC,KAGDc,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,EAAG,EAAGC,EAAG,EAAGC,SAAU,YAAaC,SAAA,CAC9DjC,IAAiBkC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,qBAAqBC,QAASA,IAAMlB,EAAO,QAAQe,UACrFC,EAAAA,EAAAA,KAACG,EAAAA,IAAiB,OAEpBX,EAAAA,EAAAA,MAAA,OAAKY,IAAKxC,EAAWqC,UAAU,wDAAuDF,SAAA,CACnFtC,IAASC,EAAAA,GAAYC,WAAaU,EAAkBgC,KAAI,CAACC,EAAMC,KAC1DP,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CAEdC,SAAUH,EACV9C,aAAcA,GAFT8C,EAAKI,MAKjBjD,IAASC,EAAAA,GAAYiD,SAAWtC,EAAkBgC,KAAI,CAACC,EAAMC,KACtDP,EAAAA,EAAAA,KAACY,EAAAA,EAAW,CAEZH,SAAUH,EACV9C,aAAcA,GAFT8C,EAAKI,MAMjBjD,IAASC,EAAAA,GAAYmD,cAAgBxC,EAAkBgC,KAAI,CAACC,EAAMC,KAC3DP,EAAAA,EAAAA,KAACc,EAAAA,EAAc,CAEfL,SAAUH,EACV9C,aAAcA,GAFT8C,EAAKI,SAMjBzC,IAAkB+B,EAAAA,EAAAA,KAAA,UAAQC,UAAU,sBAAsBC,QAASA,IAAMlB,EAAO,SAASe,UAC1FC,EAAAA,EAAAA,KAACe,EAAAA,IAAiB,QAEZ,C,4FCvEV,MAAMC,EAAuBC,EAAAA,YAAiB,CAAA3D,EAS3C8C,KAAQ,IAToC,SAC7Cc,EAAQ,QACRC,EAAO,UACPC,EAAY,SAAQ,KACpBC,EAEAC,GAAIC,EAAY,MAAK,UACrBtB,KACGuB,GACJlE,EACC4D,GAAWO,EAAAA,EAAAA,IAAmBP,EAAU,WACxC,MAAMQ,EAAkB,GAAHC,OAAMT,EAAQ,KAAAS,OAAIP,GACvC,OAAoBpB,EAAAA,EAAAA,KAAKuB,EAAW,CAClCnB,IAAKA,KACFoB,EACHvB,UAAW2B,IAAW3B,EAAWyB,EAAiBL,GAAQ,GAAJM,OAAOD,EAAe,KAAAC,OAAIN,GAAQF,GAAW,QAAJQ,OAAYR,KAC3G,IAEJH,EAAQa,YAAc,UACtB,S","sources":["Components/CardSliderNew.js","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport NWorkshopCard from './NWorkshopCard';\nimport { COLLECTIONS } from '../constants';\nimport NCourseCard from './NCourseCard';\nimport NOpenClassCard from './NOpenClassCard';\nimport { MdArrowBackIosNew, MdArrowForwardIos } from \"react-icons/md\";\nimport { Box } from '@mui/material';\n\nconst CardSliderNew = ({ dataList,studioIdName, type = COLLECTIONS.WORKSHOPS }) => {\n  const scrollRef = useRef(null);\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\n  const [canScrollRight, setCanScrollRight] = useState(false);\n\n  console.log(dataList);\n  const formattedDataList = Array.isArray(dataList) ? dataList : Object.values(dataList);\n  console.log(formattedDataList,studioIdName)\n\n  const updateScrollButtons = () => {\n    const container = scrollRef.current;\n    if (container) {\n      setCanScrollLeft(container.scrollLeft > 0);\n      setCanScrollRight(\n        container.scrollLeft < container.scrollWidth - container.clientWidth\n      );\n    }\n  };\n\n  const scroll = (direction) => {\n    const container = scrollRef.current;\n    if (direction === \"left\") {\n      container.scrollBy({ left: -330, behavior: \"smooth\" });\n    } else if (direction === \"right\") {\n      container.scrollBy({ left: 330, behavior: \"smooth\" });\n    }\n  };\n\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (container) {\n      updateScrollButtons();\n      container.addEventListener(\"scroll\", updateScrollButtons);\n      return () => container.removeEventListener(\"scroll\", updateScrollButtons);\n    }\n  }, []);\n\n  return (\n    <Box sx={{ display: 'flex', p: 0, m: 0, position: 'relative' }}>\n    {canScrollLeft && <button className=\"scroll-button left\" onClick={() => scroll(\"left\")}>\n      <MdArrowBackIosNew />\n      </button>}\n    <div ref={scrollRef} className=\"horizontal-scroll-wrapper no-important scroll-wrapper\">\n      {type === COLLECTIONS.WORKSHOPS && formattedDataList.map((data, index) => (\n            <NWorkshopCard\n            key={data.id}\n            dataItem={data}\n            studioIdName={studioIdName}\n          />\n      ))}\n    {type === COLLECTIONS.COURSES && formattedDataList.map((data, index) => (\n            <NCourseCard\n            key={data.id}\n            dataItem={data}\n            studioIdName={studioIdName}\n          />\n      ))}\n    \n    {type === COLLECTIONS.OPEN_CLASSES && formattedDataList.map((data, index) => (\n            <NOpenClassCard\n            key={data.id}\n            dataItem={data}\n            studioIdName={studioIdName}\n          />\n      ))}\n    </div>\n    {canScrollRight && <button className=\"scroll-button right\" onClick={() => scroll(\"right\")}>\n    <MdArrowForwardIos />\n      </button>}\n    </Box>\n  );\n};\n\nexport default CardSliderNew;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["_ref","dataList","studioIdName","type","COLLECTIONS","WORKSHOPS","scrollRef","useRef","canScrollLeft","setCanScrollLeft","useState","canScrollRight","setCanScrollRight","console","log","formattedDataList","Array","isArray","Object","values","updateScrollButtons","container","current","scrollLeft","scrollWidth","clientWidth","scroll","direction","scrollBy","left","behavior","useEffect","addEventListener","removeEventListener","_jsxs","Box","sx","display","p","m","position","children","_jsx","className","onClick","MdArrowBackIosNew","ref","map","data","index","NWorkshopCard","dataItem","id","COURSES","NCourseCard","OPEN_CLASSES","NOpenClassCard","MdArrowForwardIos","Spinner","React","bsPrefix","variant","animation","size","as","Component","props","useBootstrapPrefix","bsSpinnerPrefix","concat","classNames","displayName"],"sourceRoot":""}