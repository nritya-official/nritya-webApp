{"version":3,"file":"static/js/865.4295eb28.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/Icon/iconClasses.js","../node_modules/@mui/material/Icon/Icon.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/node_modules/reselect/src/utils.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/lruMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/weakMapMemoize.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createSelectorCreator.ts","../node_modules/@mui/x-data-grid/node_modules/reselect/src/createStructuredSelector.ts","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/resolveProps/resolveProps.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/utils/platform.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/GridHeaders.js","../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-internals/EventManager/EventManager.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-internals/throttle/throttle.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/material/Toolbar/toolbarClasses.js","../node_modules/@mui/material/Toolbar/Toolbar.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from '../FormControl';\nimport Stack from '../Stack';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(Stack, {\n      display: \"block\",\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconUtilityClass(slot) {\n  return generateUtilityClass('MuiIcon', slot);\n}\nconst iconClasses = generateUtilityClasses('MuiIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default iconClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"baseClassName\", \"className\", \"color\", \"component\", \"fontSize\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getIconUtilityClass } from './iconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(36)\n  }[ownerState.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: (theme.vars || theme).palette.primary.main,\n    secondary: (theme.vars || theme).palette.secondary.main,\n    info: (theme.vars || theme).palette.info.main,\n    success: (theme.vars || theme).palette.success.main,\n    warning: (theme.vars || theme).palette.warning.main,\n    action: (theme.vars || theme).palette.action.active,\n    error: (theme.vars || theme).palette.error.main,\n    disabled: (theme.vars || theme).palette.action.disabled,\n    inherit: undefined\n  }[ownerState.color]\n}));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n      baseClassName = 'material-icons',\n      className,\n      color = 'inherit',\n      component: Component = 'span',\n      fontSize = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, _extends({\n    as: Component,\n    className: clsx(baseClassName,\n    // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default Icon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: `capitalize(string)` expects a string argument.' : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","/**\n * WARNING: Don't import this directly. It's imported by the code generated by\n * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`\n * constructors to ensure the plugin works as expected. Supported patterns include:\n *   throw new Error('My message');\n *   throw new Error(`My message: ${foo}`);\n *   throw new Error(`My message: ${foo}` + 'another string');\n *   ...\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code, ...args) {\n  const url = new URL(`https://mui.com/production-error/?code=${code}`);\n  args.forEach(arg => url.searchParams.append('args[]', arg));\n  return `Minified MUI error #${code}; visit ${url} for the full message.`;\n}","/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from \"../ClassNameGenerator/index.js\";\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from \"../generateUtilityClass/index.js\";\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","export const gridDimensionsSelector = state => state.dimensions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from \"../useEnhancedEffect/index.js\";\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","'use client';\n\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\nimport useOnMount from \"../useOnMount/useOnMount.js\";\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = null;\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== null) {\n      clearTimeout(this.currentId);\n      this.currentId = null;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? reactId;\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value: Boolean(value)\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","/**\n * Get a list column definition\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = selectableIds;\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.push(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = [];\n      }\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      const addRow = rowId => {\n        selectionLookup[rowId] = rowId;\n      };\n      const removeRow = rowId => {\n        delete selectionLookup[rowId];\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const isFirstRender = React.useRef(true);\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    if (isFirstRender.current) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (filteredRowsLookup[id] !== true) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n    if (hasChanged || isNestedData && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (isNestedData) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n  }, []);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const virtualScrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const virtualScrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && virtualScrollbarHorizontalRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      virtualScrollbarHorizontalRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && virtualScrollbarVerticalRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      virtualScrollbarVerticalRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, virtualScrollbarHorizontalRef, virtualScrollbarVerticalRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import ownerDocument from \"../ownerDocument/index.js\";\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set(['__check__', '__reorder__', '__detail_panel_toggle__']);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  })\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"disabled\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { isHostComponent } from '@mui/base/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  var _slotProps$select;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = (_slotProps$select = slotProps == null ? void 0 : slotProps.select) != null ? _slotProps$select : SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !selectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, selectProps, {\n        classes: _extends({}, selectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        }),\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (error) {\n      if (error instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw error;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../constants/gridDetailPanelToggleField.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","styled","name","overridesResolver","props","styles","ownerState","concat","formControlLabelClasses","label","root","capitalize","labelPlacement","_ref2","theme","_extends","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","disabled","flexDirection","color","vars","palette","text","AsteriskComponent","asterisk","_ref3","error","main","React","inProps","ref","_ref","_slotProps$typography","useThemeProps","className","componentsProps","control","disabledProp","disableTypography","labelProp","required","requiredProp","slotProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","classes","slots","composeClasses","useUtilityClasses","typographySlotProps","typography","type","Typography","_jsx","component","clsx","children","_jsxs","Stack","getIconUtilityClass","IconRoot","fontSize","userSelect","width","height","overflow","textAlign","flexShrink","inherit","small","pxToRem","medium","large","primary","secondary","info","success","warning","action","active","undefined","Icon","baseClassName","Component","as","muiName","ListItemTextRoot","listItemTextClasses","inset","multiline","dense","flex","minWidth","marginTop","marginBottom","paddingLeft","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","ListContext","getListItemTextUtilityClass","variant","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","size","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","position","opacity","top","left","margin","zIndex","autoFocus","checked","checkedProp","checkedIcon","defaultChecked","disableFocusRipple","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","tabIndex","value","setCheckedState","useControlled","controlled","default","Boolean","state","hasLabelFor","input","centerRipple","focusRipple","role","event","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","d","string","Error","code","url","URL","_len","arguments","length","args","Array","_key","arg","searchParams","append","_formatMuiErrorMessage","charAt","toUpperCase","slice","getUtilityClass","output","slotName","buffer","start","i","useForkRef","refs","every","instance","current","setRef","window","defaultGenerator","componentName","createClassNameGenerator","generate","configure","generator","reset","globalStateClasses","completed","expanded","focused","focusVisible","open","selected","globalStatePrefix","globalStateClass","ClassNameGenerator","result","getDataGridUtilityClass","gridClasses","is","Object","fastObjectShallowCompare","a","b","aLength","bLength","_","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","useOnMount","fn","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","defaultCompare","objectShallowCompare","createRefs","equals","useGridSelector","didInit","setState","store","subscribe","newState","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","join","gridDimensionsSelector","dimensions","columnHeaderStyles","c","iconButtonContainer","visibility","menuIcon","separatorIconDragStyles","rx","x","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","_t$mixins$MuiDataGrid","_t$mixins$MuiDataGrid2","_t$mixins$MuiDataGrid3","_t$mixins$MuiDataGrid4","t","borderColor","TableCell","border","mode","lighten","alpha","divider","darken","radius","shape","containerBackground","background","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedHoverOpacity","selectedBackground","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","backgroundColor","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","fontWeightMedium","boxSizing","borderWidth","borderStyle","body2","outline","minHeight","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","columnHeaderTitleContainerContent","whiteSpace","maxWidth","groupingCriteriaCell","outlineOffset","focusOutlineWidth","hasScrollX","hasScrollY","scrollbarSize","justifyContent","transition","transitions","create","duration","shorter","gap","spacing","borderBottomWidth","borderBottomStyle","columnHeaders","right","columnSeparatorOffset","touchAction","pointerEvents","shortest","borderBottom","filler","scrollbarFiller","breakInside","rowSkeleton","lineHeight","borderTop","textOverflow","borderTopColor","cellEmpty","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","virtualScrollerContent","cellOffsetLeft","alignSelf","groupingCriteriaCellToggle","pinnedRows","virtualScroller","overlay","gamma","f","o","Math","round","decomposeColor","overlayColor","rgb","values","recomposeColor","removeOpacity","GridRootPropsContext","useGridRootProps","contextValue","NOT_FOUND","Symbol","assertIsFunction","func","errorMessage","TypeError","ensureIsArray","item","isArray","getDependencies","createSelectorArgs","dependencies","array","itemTypes","map","assertIsArrayOfFunctions","getPrototypeOf","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","cache","entry","get","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","resetResultsCount","Ref","WeakRef","constructor","deref","this","UNTERMINATED","TERMINATED","createCacheNode","s","v","p","weakMapMemoize","options","fnNode","lastResult","cacheNode","l","objectCache","WeakMap","objectNode","set","primitiveCache","Map","primitiveNode","terminatedNode","_lastResult$deref","_lastResult","_lastResult$deref2","lastResultValue","call","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","_objectSpread","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","push","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","keys","structuredSelector","_len3","_key4","reduce","composition","index","reselectCreateSelector","checkIsAPIRef","DEFAULT_INSTANCE_ID","e","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","GridRoot","rootProps","handleRef","rootElementRef","showCellVerticalBorder","toolbar","mountedState","setMountedState","useEnhancedEffect","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridVisibleColumnFieldsSelector","visibleColumns","gridVisiblePinnedColumnDefinitionsSelector","pinnedColumns","isRtl","model","visibleColumnFields","visiblePinnedFields","invert","_pinnedColumns$left","_pinnedColumns$right","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","acc","gridHasColSpanSelector","some","colSpan","gridPreferencePanelStateSelector","preferencePanel","GridPreferencePanelsValue","GridApiContext","useGridApiContext","GridPreferencesPanel","_preferencePanelState","_rootProps$slotProps","_rootProps$slotProps2","preferencePanelState","panelContent","unstable_applyPipeProcessors","openedPanelValue","filters","panel","basePopper","panelId","labelId","GridHeader","fastMemo","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","details","_handlerRef$current","defaultMuiPrevented","subscribeEvent","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","Timeout","_defineProperty","currentId","delay","useTimeout","disposeEffect","resolveProps","defaultProps","prototype","hasOwnProperty","propName","defaultSlotProps","slotKey","slotPropName","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","valueState","setValueState","handleChange","async","newValue","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","endAdornment","loadIcon","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","sorting","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","Number","gridDateComparator","globalId","maybeReactUseId","useId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","GridFilterInputValue","_item$value","applyValue","focusElementRef","clearButton","InputProps","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","String","filterDebounceMs","newItem","fromInput","_item$value2","baseTextField","getLocaleText","placeholder","InputLabelProps","shrink","isFunction","isObject","escapeRegExp","replace","clamp","min","max","range","from","to","isDeepEqual","entriesA","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","toString","deepClone","obj","structuredClone","JSON","parse","stringify","_excluded2","GridFilterInputMultipleValue","helperText","TextFieldProps","itemValue","filterItemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","operator","filterOperators","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","filterItem","_filterItem$value","parser","ignoreDiacritics","newFilterItem","filterOperator","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","_filterModel$quickFil","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","_filterModel$quickFil2","_filterModel$quickFil3","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","_isRowMatchingFilterI","_isRowMatchingQuickFi","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","filterRegex","matches","test","createEqualityFilterFn","sensitivity","usage","isEqual","compare","createEmptyFilterFn","isEmpty","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","align","InputComponent","requiresFilterValue","val","getGridStringOperators","renderEditCell","columnValue","getRowFormattedValue","parseNumericValue","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNaN","isNumber","toLocaleString","InputComponentProps","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","renderEditDateCell","throwIfNotDateObject","columnType","rowId","GRID_DATE_COL_DEF","gridDateFormatter","getRowId","toLocaleDateString","pastedValueParser","GRID_DATETIME_COL_DEF","gridDateTimeFormatter","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","_rawPinnedRows$bottom","_rawPinnedRows$bottom2","_rawPinnedRows$top$ma","_rawPinnedRows$top","rawPinnedRows","bottom","rowEntry","_rowEntry$model","_rowEntry$model2","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","_ref4","_previousCache$update","_previousCache$update2","_previousCache$update3","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","getMinimalContentHeight","rowHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","htmlFor","baseCheckbox","BooleanOperatorContainer","GridFilterInputBoolean","_baseSelectProps$nati","_rootProps$slotProps3","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","gridBooleanFormatter","valueAsBoolean","toLowerCase","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","MenuProps","otherBaseSelectProps","_inputRef$current","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","_resolvedColumn","_resolvedColumn2","_rootProps$slotProps4","resolvedColumn","currentValueOptions","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","GridMenuRoot","Popper","menu","modal","transformOrigin","GridMenu","onExited","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","document","activeElement","HTMLElement","handleClickAway","contains","anchorEl","placement","TransitionProps","ClickAwayListener","onClickAway","mouseEvent","Grow","style","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useRtl","menuId","buttonId","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","handleButtonClick","onClick","onKeyDown","getNewIndex","direction","_options","indexMod","newIndex","preventDefault","stopPropagation","button","touchRippleRef","baseIconButton","showMenu","moreActionsIcon","MenuList","autoFocusItem","closeMenu","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","_headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","unwrappedGroupingModel","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","number","dateTime","boolean","singleSelect","custom","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","viewportOuterSize","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","_apiRef$current$getRo","_apiRef$current$getRo2","_apiRef$current","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getRootDimensions","getTotalHeaderHeight","_props$headerFilterHe","unstable_listView","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","viewportInnerSize","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","leftPinnedWidth","rightPinnedWidth","handleDragOver","useEventCallback","offset","clientX","getBoundingClientRect","scroll","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","onDragOver","noop","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnGroupHeaderSelector","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","gridSortColumnLookupSelector","res","sortItem","sortDirection","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","gridFilteredRowsLookupSelector","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","visibleSortedRows","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilterActiveItemsSelector","topLevelRowCount","columnLookup","_filterModel$items","_column$filterOperato","gridFilterActiveItemsLookupSelector","activeFilters","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","getVisibleRows","paginationMode","useGridVisibleRows","response","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","gridListColumnSelector","listViewColumn","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","isJSDOM","useGridVirtualScroller","listView","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","selectedRowsLookup","currentPage","gridRootRef","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","virtualScrollbarVerticalRef","scrollbarHorizontalRef","virtualScrollbarHorizontalRef","contentHeight","contentSize","hasColSpan","fnRef","ResizeObserver","frameID","observer","observe","cancelAnimationFrame","disconnect","useResizeObserver","resize","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","bufferForDirection","MINIMUM_COLUMN_WIDTH","focusedCell","rowIndex","columnIndex","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","ReactDOM","forceUpdateRenderContext","handleScroll","currentTarget","handleWheel","handleTouchMove","needsHorizontalScrollbar","scrollerStyle","overflowX","overflowY","flexBasis","currentPageTotalHeight","useRunOnce","condition","effect","didRun","initialRenderContext","getRows","_params$renderContext","_params$rows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","_currentPage$range","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","isNotVisible","tabbableCell","cellMode","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","offsetTop","focusedColumnIndex","_apiRef$current$getIn","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","platform","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","_lastColumn$computedW","_rootProps$unstable_l","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","_ref5","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","_inputs$range","_inputs$range2","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","_columnPositions$rend","_columnPositions$pinn","GridOverlayWrapperRoot","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","GridOverlays","_rootProps$slots","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","_props$style","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","Memoized","rowsLength","minimumSize","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","_rowsMeta$positions$r","transform","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","content","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","addEventListener","capture","removeEventListener","setProperty","Container","Scroller","scrollbarWidth","GridVirtualScroller","overlaysProps","useGridOverlays","visibleRowCount","noRows","loadingOverlay","TopContainer","GridHeaders","Overlays","Content","RenderZone","detailPanels","SpaceFiller","BottomContainer","GridFooterPlaceholder","hideFooter","footer","getGridRowGroupSelectableDescendants","groupId","sortedRowIds","groupNode","descendants","_rowTree$sortedRowIds","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","findRowsToSelect","selectedRow","autoSelectDescendants","autoSelectParents","addRow","filteredRows","selectedIdsLookup","selectedDescendants","add","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","parent","childId","findRowsToDeselect","deselectedRow","removeRow","allParents","getRowNodeParents","parents","descendant","GridContextProvider","Provider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","logger","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","Store","_value","listeners","getSnapshot","SYMBOL_API_PRIVATE","useGridApiInitialization","inputApiRef","_inputApiRef$current","_publicApiRef$current","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","api","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","useGridLoggerFactory","getLogger","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","context","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","_ref$current","added","setAdded","targetElement","wrapHandler","GridCellCheckboxForwardRef","_rootProps$rowSelecti","_rootProps$rowSelecti2","checkboxElement","rippleRef","element","getCellElement","_checkboxElement$curr","querySelector","handleKeyDown","isSelectable","checkboxPropsSelector","rowSelectionPropagation","rowSelectionLookup","isIndeterminate","isChecked","selectableDescendantsCount","selectedDescendantsCount","_rowTree$sortedRowIds2","indeterminateCheckboxAction","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","getColumnHeaderElement","handleSelectionChange","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","_cellParams$value","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","CSVHead","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isPasteShortcut","fromCharCode","keyCode","shiftKey","altKey","writeToClipboardPolyfill","data","span","createElement","textContent","body","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","isCopyShortcut","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","_state$pinnedColumns","mergeColumnsState","densityStateInitializer","_props$initialState$d","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","_options$getRowsToExp","_options$shouldAppend","_options$includeHeade","_options$includeColum","_options$escapeFormul","getRowsToExport","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","disableToolbarButton","ownerDocument","getDerivedPaginationModel","paginationState","paginationModelProp","_paginationModelProp$","_paginationModelProp$2","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","doc","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","_gridRootElement$quer","_gridRootElement$quer2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","_options$printOptions","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","_api$columnHeadersCon","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","_rowSpanHiddenCells$r","rowSpanHiddenCells","nextRowIndex","_rowSpanHiddenCells$n","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","Edit","getColumnIndexFn","rowIndexBefore","checkIfCanStartEditing","paginationStateInitializer","_props$paginationMode","_props$rowCount","_props$paginationMeta","_props$initialState3","paginationMeta","useGridPagination","useGridPaginationMeta","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","restoredPaginationMeta","stateToRestore","useGridPaginationModel","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","_context$stateToResto2","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","handlePaginationModelChange","_apiRef$current$virtu","useGridRowCount","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","preferencePanelStateInitializer","_props$initialState$p","gridEditRowsStateSelector","editRows","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","_editRowsState$id$fie","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","_rowModesModel$id","_copyOfPrevRowModesMo","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","rawValue","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","_getSelectionModelPro","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","_props$sortModel","scrollIntoView","containerSize","elementSize","elementOffset","elementEnd","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableColumnFilter","disableColumnReorder","disableColumnResize","disableColumnSelector","disableColumnSorting","disableDensitySelector","disableRowSelectionOnClick","filterMode","hideFooterPagination","hideFooterRowCount","hideFooterSelectedRowCount","keepColumnPositionIfDraggedOutside","keepNonExistentRowsSelected","pageSizeOptions","resizeThrottleMs","rowPositionsDebounceMs","rowSpacingType","showColumnVerticalBorder","sortingMode","throttleRowsMs","unstable_rowSpanning","EMPTY_SIZE","EMPTY_DIMENSIONS","groupHeaderHeight","rowWidth","headersTotalHeight","dimensionsStateInitializer","useGridDimensions","_props$columnGroupHea","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnGroupHeaderHeight","decimals","w","savedSize","setSavedSize","debouncedSetSavedSize","lastArgs","wait","later","throttled","throttle","previousSize","setDimensions","computedStyle","defaultView","getComputedStyle","newSize","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","_apiRef$current$updat","rootElement","pinnedRowsHeight","calculatePinnedRowsHeight","scrollDiv","offsetWidth","clientWidth","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPrivate","k","isFirstSizing","handleResize","onResize","globalThis","unobserve","rowsMetaStateInitializer","heights","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","cellProps","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","_getParents$depth","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","_unwrappedGroupingMod2","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","trackFinger","currentTouchId","changedTouches","touch","identifier","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","asyncCheck","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","_cell$getBoundingClie","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","header","_iconContainer$client","_menuContainer$client","columnHeaderTitle","iconContainer","menuContainer","paddingWidth","parseInt","paddingRight","scrollWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","_apiRef$current$rootE","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","pinnedPosition","updateProperty","finishResize","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","_apiRef$current$colum","_elem$querySelectorAl","findGroupHeaderElementsFromField","_api$virtualScrollerR","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","side","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","_apiRef$current$rootE2","_userOptions$columns","userOptions","unstable_setColumnVirtualization","newColumns","totalWidth","total","_widthByField$column$","remainingWidth","widthPerColumn","updateColumns","_apiRef$current$colum2","passive","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","_colDef$rowSpanValueG","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","_hiddenCells$row$id","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","_state$filter$filterM","isFilteringPending","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","unstable_listColumn","getListColumnWidth","useDataGridComponent","useGridRowsPreProcessors","useGridRowSelection","_props$rowSelectionPr","_props$rowSelectionPr2","_props$rowSelectionPr15","_props$rowSelectionPr16","_props$rowSelectionPr29","_props$rowSelectionPr30","_props$rowSelectionPr32","runIfRowSelectionIsEnabled","applyAutoSelection","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","_props$rowSelectionPr3","_props$rowSelectionPr4","_props$rowSelectionPr5","_props$rowSelectionPr6","_props$rowSelectionPr7","_props$rowSelectionPr8","_props$rowSelectionPr9","_props$rowSelectionPr10","_props$rowSelectionPr11","_props$rowSelectionPr12","_props$rowSelectionPr13","_props$rowSelectionPr14","selectRows","selectableIds","_props$rowSelectionPr17","_props$rowSelectionPr18","_props$rowSelectionPr19","_props$rowSelectionPr20","selectionLookup","_props$rowSelectionPr21","_props$rowSelectionPr22","_props$rowSelectionPr23","_props$rowSelectionPr24","_props$rowSelectionPr25","_props$rowSelectionPr26","_props$rowSelectionPr27","_props$rowSelectionPr28","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","_props$rowSelectionPr31","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_event$target$closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","_props$initialState4","_props$slotProps2","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","_apiRef$current$updat2","_apiRef$current2","setColumnVisibility","isVisible","_columnVisibilityMode","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","columnReorderApi","_props$initialState$c","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$slotProps","ColumnsPanel","columnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","useGridRows","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","_idRowsLookup$id","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","_tree$childId","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","_props$rows","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRowSpanning","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","resetColSpan","columnSpanningPrivateApi","getCellColSpanInfo","_lookup$current$rowId","useGridColumnSpanning","useGridColumnGrouping","_unwrappedGroupingMod3","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","updateColumnGroupingState","_apiRef$current$getPi","_apiRef$current$getPi2","getPinnedColumns","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","_gridFocusCellSelecto","lastFocusedRowId","_nextRow$id","lastFocusedRowIndex","nextRow","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","hidePreferences","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortComparator","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","isHeightMetaValid","processHeightEntry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","_heightCache$get$cont","_heightCache$get","unstable_setLastMeasuredRowIndex","storeRowHeightMeasurement","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","_heightCache$get$auto","_heightCache$get2","useGridScroll","colRef","scrollCoordinates","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","getScrollPosition","showColumnMenu","hideColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setVirtualization","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","_CONTENT_WIDTH_RANGE_","Skeleton","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","baseBadge","badgeContent","overlap","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","GridRowCountRoot","GridRowCount","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","pinnedRight","GridScrollbarFillerCell","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","_dimensions$viewportI","viewportHeight","skeletonRowsCount","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","_ref$current2","pinnedCells","_ref$current3","LOADING_VARIANTS","CircularProgress","LinearProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","getToolbarUtilityClass","ToolbarRoot","disableGutters","gutters","Toolbar","_slots$firstButton","_slots$lastButton","_slots$nextButton","_slots$previousButton","_slots$firstButtonIco","_slots$lastButtonIcon","_slots$nextButtonIcon","_slots$previousButton2","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","FirstButton","firstButton","IconButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","FirstPageIconDefault","LastButtonIcon","lastButtonIcon","LastPageIconDefault","NextButtonIcon","nextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","previousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","tablePaginationClasses","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","TablePagination","_slotProps$select","ActionsComponent","TablePaginationActions","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","maxHeight","estimated","GridPagination","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","wrapLabelDisplayedRows","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","_valueRef$current","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","baseButton","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","startAdornment","baseInputAdornment","quickFilterIcon","pl","GridColumnsManagementBody","FormControlLabel","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagement","columnsManagementHeader","columnsManagementFooter","grey","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","elevation","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","VIRTUAL","EMPTY_CELL_PARAMS","GridCell","_column$getActions","_cellParams$formatted","_rootProps$cellSelect","_hiddenCells$rowId$fi","_hiddenCells$rowId","_spannedCells$rowId$f","_spannedCells$rowId","editCellState","styleProp","disableDragEvents","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","cellStyle","isLeftPinned","isRightPinned","focusableElement","elementToFocus","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","EmptyCell","GridRow","refProp","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","editRowsState","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","publishClick","rowReordering","heightEntry","rowStyle","rowClassNames","getRowClassName","getCell","indexRelativeToAllColumns","_cellColSpanInfo$cell","_cellColSpanInfo$cell2","_editRowsState$rowId$","_editRowsState$rowId","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","labelledby","GridColumnHeaderTitleRoot","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","clientHeight","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","ariaSort","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","_colDef$sortingOrder","_colDef$headerName","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onContextMenu","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","columnHeaderFilterIconButton","counter","columnHeaderSortIcon","elementId","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","render","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","MemoizedGridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","GridColumnHeaderItem","getColumnGroupHeaders","_columnGroupsModel$fi","_columnGroupsModel$fi2","_columnGroupsModel$la","_columnGroupsModel$la2","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","_column$computedWidth","headerInfo","Left","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","ListItemIconRoot","alignItemsFlexStart","ListItemIcon","getListItemIconUtilityClass","GridColumnMenuHideItem","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","baseDivider","useGridColumnMenuSlots","otherProps","GridColumnMenu","GridNoResultsOverlay","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","disableRipple","activeChannel","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","openFilterButtonIcon","columnFilteredIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterClearIcon","columnMenuClearIcon","columnReorderIcon","MUIBadge","MUICheckbox","MUIDivider","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIMenuItem","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","GridSkeletonCell","toggleFilter","GridColumnHeaders","noResultsOverlay","noRowsOverlay","useProps","allProps","_props$forwardedProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","useDataGridProps","themedProps","overrides","computeSlots","injectDefaultProps","_themedProps$key","accessibleRowCount","pinnedRowsCount","ariaRowIndex","DataGridRaw","GridBody","propTypes","PropTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","location","propFullName","secret","getShim","ReactPropTypes","bigint","bool","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes"],"sourceRoot":""}