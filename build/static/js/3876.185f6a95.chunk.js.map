{"version":3,"file":"static/js/3876.185f6a95.chunk.js","mappings":"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","sources":["Components/CardSlider.js","Components/NStudioCard.js","Components/EditProfileModal.js","Screens/UserPage.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Card as MuiCard } from '@mui/joy';\nimport { useState } from 'react';\nimport { Dialog, DialogContent, Button, Box } from '@mui/material';\nimport CardCover from '@mui/joy/CardCover';\nimport { FiZoomIn } from \"react-icons/fi\";\nimport { MdArrowBackIosNew, MdArrowForwardIos } from \"react-icons/md\";\nimport './MagnifyImage.css';\nimport ProductCard from './NStudioCard';\n\nconst CardSlider = ({ dataList, imgOnly = false }) => {\n  //console.log(\"Debug from CardSlider\", imgOnly);\n  //console.log(dataList);\n  const formattedDataList = Array.isArray(dataList) ? dataList : Object.values(dataList);\n  //console.log(formattedDataList)\n\n  const [open, setOpen] = useState(false);\n  const [selectedEntity, setSelectedEntity] = useState(null);\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\n  const [canScrollRight, setCanScrollRight] = useState(false);\n\n  const scrollRef = useRef(null);\n\n  const updateScrollButtons = () => {\n    const container = scrollRef.current;\n    if (container) {\n      setCanScrollLeft(container.scrollLeft > 0);\n      setCanScrollRight(\n        container.scrollLeft < container.scrollWidth - container.clientWidth\n      );\n    }\n  };\n\n  const scroll = (direction) => {\n    const container = scrollRef.current;\n    if (direction === \"left\") {\n      container.scrollBy({ left: -330, behavior: \"smooth\" });\n    } else if (direction === \"right\") {\n      container.scrollBy({ left: 330, behavior: \"smooth\" });\n    }\n  };\n\n  const handleOpen = (url) => {\n    console.log(url)\n    setSelectedEntity(url);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedEntity(null);\n  };\n\n  const cardHoverStyle = {\n    transform: 'scale(1.01)', // Scale up slightly on hover\n  };\n\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (container) {\n      updateScrollButtons();\n      container.addEventListener(\"scroll\", updateScrollButtons);\n      return () => container.removeEventListener(\"scroll\", updateScrollButtons);\n    }\n  }, []);\n\n  return (\n    <Box sx={{ display: 'flex', p: 0, m: 0, position: 'relative' }}>\n      {canScrollLeft && <button className=\"scroll-button left\" onClick={() => scroll(\"left\")}>\n      <MdArrowBackIosNew />\n      </button>}\n    <div ref={scrollRef} className=\"horizontal-scroll-wrapper no-important scroll-wrapper\">\n      {formattedDataList.map((entity, index) => (\n        imgOnly ? (\n          <a className=\"no-important\" key={index} onClick={() => handleOpen(entity)}>\n          <MuiCard\n            key={index}\n            style={{ marginRight: \"0.5rem\" }}\n            component=\"li\"\n            sx={{\n              height: 300,\n              width: 534,\n              '&:hover': {\n                ...cardHoverStyle,\n              },\n            }}\n          >\n            <CardCover className='image-gallery-container'>\n              <img\n                src={entity} // Use studio.iconUrl for the image source\n                loading=\"lazy\"\n                alt=\"Studio image\" // Use studioName for alt text\n              />\n              <div className=\"gallery-image-overlay\">\n                <FiZoomIn size={50} color='white' />\n              </div>\n            </CardCover>\n          </MuiCard>\n          </a>\n        ) : (\n\n          <a key={index} href={`#/studio/${entity.id}`}>\n            <ProductCard\n              key={entity.id}\n              data={entity}\n              img_src={entity.iconUrl}\n            />\n          </a>\n        )\n      ))}\n      <Dialog open={open} onClose={handleClose}>\n        {selectedEntity && (\n          <>\n            <DialogContent sx={{ padding: 0 }}>\n              <img\n                src={selectedEntity}\n                alt={\"Image\"}\n                style={{ maxWidth: '100%', height: 'auto' }}\n              />\n            </DialogContent>\n            <Button sx={{\n                          '&:hover': {\n                            backgroundColor: '#735EAB',\n                            color: 'white',\n                          }\n                        }} \n                        onClick={handleClose}>Close</Button>\n          </>\n        )}\n      </Dialog>\n    </div>\n    {canScrollRight && <button className=\"scroll-button right\" onClick={() => scroll(\"right\")}>\n    <MdArrowForwardIos />\n      </button>}\n    </Box>\n  );\n};\n\nexport default CardSlider;\n","\nimport React from 'react';\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport Chip from '@mui/joy/Chip';\nimport Box from '@mui/joy/Box';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/joy/Link';\nimport Typography from '@mui/joy/Typography';\nimport { Stack } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { CHIP_LEVELS_DESIGN, COLORS, danceStylesColorChips } from '../constants';\nimport IconButton from '@mui/joy/IconButton';\nimport Favorite from '@mui/icons-material/Favorite';\n\n\nexport default function NStudioCard({img_src,data}) {\n    const isDarkModeOn = useSelector(selectDarkModeStatus);\n    \n    const studioId = data.id?data.id:data.studioId;\n\n    const cardStyle = {\n      backgroundColor: isDarkModeOn ? '#444' : 'white',\n      padding: '0px',\n      color: isDarkModeOn ? 'white' : 'black',\n      marginRight: \"10px\",\n      width: 320,\n      maxWidth: \"100%\",\n      boxShadow: 'lg',\n      transition: 'opacity 0.3s ease',\n    };\n  \n    const cardHoverStyle = {\n      transform: 'scale(1.01)',\n    };\n  \n  return (\n    <Card variant=\"solid\" sx={{\n      ...cardStyle,\n      '&:hover': cardHoverStyle,\n    }}>\n      \n        <AspectRatio ratio=\"1.78\" style={{ position: 'relative'}}>\n          <img\n            src={data && data.iconUrl ? data.iconUrl :\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: '100%', height: 'auto', overflow: 'hidden' }}\n            \n          />\n          <Stack direction=\"row\" spacing={2} style={{ position: 'absolute', bottom: 0, left: 0, padding: '1px' }}>\n        {data && data.danceStyles && typeof data.danceStyles === 'string' ? (data.danceStyles.split(\",\").slice(0, 3).map((form, index) => (\n        <Chip\n            key={index}\n            color={index % 2 === 0 ? \"danger\" : \"success\"}  \n            sx={{ marginBottom: \"10px\", fontSize: '0.8rem',  \n                    bgcolor: danceStylesColorChips[index].backgroundColor,\n                    color: danceStylesColorChips[index].color, \n            }}\n        >\n            {form.trim()}\n        </Chip>\n        ))):(\n            <Chip\n            key={10}\n            color={10 % 2 === 0 ? \"danger\" : \"success\"} \n            style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n        >\n            {\"No danceforms\"}\n        </Chip>\n        )}\n\n        </Stack>\n\n        <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", top: 0, left: 0, padding: \"1px\", paddingTop: \"1px\" }}\n          >\n            {data && data.freeTrialAvailable &&(\n            \n                <Chip\n                  key={1}\n                 \n                  sx={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                    bgcolor: COLORS.LIME.backgroundColor,  // Set the background color\n                    color: COLORS.LIME.color,  // Set the text color\n                  }}\n                >\n                  {'Free Trial Available'}\n                </Chip>\n              \n            )}\n          </Stack>\n\n        </AspectRatio>\n      <CardContent style={{ padding: '10px' }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" columnGap={1}>\n          <Link\n            alignSelf=\"center\"\n            href={`#/studio/${studioId}`}\n            fontWeight=\"bold\"\n            color=\"neutral\"\n            textColor=\"text.primary\"\n            underline='none'\n            overlay\n            whiteSpace='nowrap'\n            overflow='hidden'\n            textOverflow='ellipsis'\n            style={{ color: isDarkModeOn ? 'white' : 'black' }}\n          >\n            {data && data.studioName ? data.studioName : \"    \"}\n          </Link>\n          {data && data.avgRating ?\n            <Typography width={52} flexShrink={0} alignSelf=\"center\" style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n              ⭐ {data.avgRating.toFixed(1)}\n            </Typography> : null\n          }\n        </Box>\n        <Typography style={{ color: isDarkModeOn ? 'white' : 'black' }} level=\"body-xs\">{data.street ? data.street : \".  \"}</Typography>\n        <IconButton\n          hidden\n          aria-label=\"Like minimal photography\"\n          size=\"md\"\n          variant=\"solid\"\n          color=\"danger\"\n          sx={{\n            position: 'absolute',\n            zIndex: 2,\n            borderRadius: '50%',\n            right: '1rem',\n            bottom: '2rem',\n            transform: 'translateY(50%)',\n          }}\n        >\n          <Favorite />\n        </IconButton>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography alignSelf=\"center\" fontSize={12} style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n            {data && data.minFee && (`@ ₹${data.minFee} onwards`)}\n          </Typography>\n          <Button\n            size='small'\n            variant=\"contained\"\n            sx={{\n              alignSelf: \"center\",\n              color: 'white',\n              backgroundColor: '#735EAB',\n              '&:hover': {\n                backgroundColor: '#735EAB',\n                color: 'white',\n              },\n              '&.Mui-disabled': {\n                backgroundColor: isDarkModeOn ? 'rgba(115, 94, 171, 0.5)' : 'rgba(115, 94, 171, 0.3)',\n                color: 'rgba(255, 255, 255, 0.5)',\n              },\n            }}\n            type='button'\n          >\n            Explore\n          </Button>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Modal, Box, Button, TextField, Typography, FormControl, InputLabel, Select, MenuItem, Autocomplete, Alert, Snackbar } from '@mui/material';\nimport danceStyles from '../danceStyles.json';\nimport { BASEURL_PROD, COLLECTIONS } from '../constants';\nimport { useAuth } from '../context/AuthContext';\nimport { saveDocument, handleSavePostOTPSuccess } from '../utils/firebaseUtils';\nimport axios from \"axios\";\nimport qs from 'qs';\n\nconst PROD_BASE_URL = BASEURL_PROD\nconst LOCAL_BASE_URL = \"http://127.0.0.1:8000/\"\nconst BASE_URL = PROD_BASE_URL\n\nconst EditProfileModal = ({ open, onClose, userProfileInfo, setUserProfileInfo }) => {\n  const { currentUser } = useAuth();\n  const danceStylesOptions = danceStyles.danceStyles;\n  const [userDanceStyles, setUserDanceStyles] = useState([]);\n  const [userPhoneNumber, setUserPhoneNumber] = useState();\n  const [isOTPModalOpen, setIsOTPModalOpen] = useState(false); // To handle OTP modal\n  const [otp, setOtp] = useState('');\n  const [isPhoneVerified, setIsPhoneVerified] = useState(userProfileInfo?.isPhoneNumberVerified || false);\n  const [otpSent, setOtpSent] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('info');\n\n  useEffect(() => {\n    if (userProfileInfo && userProfileInfo.DanceStyles && userProfileInfo.DanceStyles !== \"\") {\n      setUserDanceStyles(userProfileInfo.DanceStyles);\n    }\n    if (userProfileInfo && userProfileInfo.PhoneNumber && userProfileInfo.setUserPhoneNumber !== \"\") {\n      setUserPhoneNumber(userProfileInfo.PhoneNumber);\n    }\n  }, [userProfileInfo]);\n\n  const handleChange = (e) => {\n    setUserProfileInfo({ ...userProfileInfo, [e.target.name]: e.target.value });\n  };\n\n  const handleDanceStylesChange = (event, value) => {\n    setUserDanceStyles(value);\n  };\n\n\n  const handleSave = async () => {\n    userProfileInfo.DanceStyles = userDanceStyles;\n    const data = await saveDocument(COLLECTIONS.USER, currentUser.uid, userProfileInfo);\n    if (data) {\n      setSnackbarMessage(\"Profile Updated\");\n      setSnackbarSeverity(\"success\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleSavePostOTP = async () => {\n    const docRef = handleSavePostOTPSuccess(COLLECTIONS.USER, currentUser.uid,userProfileInfo.PhoneNumber);\n  };\n\n  const handleVerifyPhoneNumber = async () => {\n    try {\n      //console.log(userProfileInfo.PhoneNumber);\n  \n      const response = await axios.post(\n        `${BASE_URL}djSms/request_otp/`,\n        qs.stringify({\n          phone_number: userProfileInfo.PhoneNumber, // use qs to stringify the data\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n  \n      if (response.status === 200) {\n        setOtpSent(true);\n        setIsOTPModalOpen(true); // Open OTP modal\n        setSnackbarMessage(\"OTP sent to your phone number.\");\n        setSnackbarSeverity(\"info\");\n        setSnackbarOpen(true);\n      } else {\n        throw new Error('Failed to send OTP.');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setSnackbarMessage('Error sending OTP, please try again.');\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n  \n\n  const handleOtpSubmit = async () => {\n    //console.log(userProfileInfo.PhoneNumber,otp)\n    try {\n      const response = await axios.post(\n        `${BASE_URL}djSms/confirm_otp/`, \n        qs.stringify({\n          \"phone_number\": userProfileInfo.PhoneNumber,\n          \"otp\": otp,\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n      console.log(response)\n      if (response && response.data && response.data.status === \"success\") {\n        setIsPhoneVerified(true);\n        setUserProfileInfo({ ...userProfileInfo, isPhoneNumberVerified: true });\n        setIsOTPModalOpen(false);\n        handleSavePostOTP()\n        setSnackbarMessage('Phone number verified successfully.');\n        setSnackbarSeverity(\"success\");\n        setSnackbarOpen(true);\n      } else {\n        setSnackbarMessage(response.message || 'Invalid OTP.');\n        setSnackbarSeverity(\"error\");\n        setSnackbarOpen(true);\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setSnackbarMessage('Error verifying OTP, please try again.');\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n\n  return (\n    <>\n      <Modal open={open} onClose={onClose} style={{ overflow: 'scroll' }}>\n        <Box sx={{ p: 4, backgroundColor: 'white', margin: 'auto', mt: 5, maxWidth: 400, borderRadius: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Edit Profile\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            name=\"Name\"\n            value={userProfileInfo.Name}\n            onChange={handleChange}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            label=\"Age\"\n            name=\"Age\"\n            type=\"number\"\n            value={userProfileInfo.Age}\n            onChange={handleChange}\n            margin=\"normal\"\n          />\n\n          <TextField\n            fullWidth\n            label=\"Phone Number\"\n            name=\"PhoneNumber\"\n            type=\"number\"\n            value={userProfileInfo.PhoneNumber}\n            onChange={handleChange}\n            margin=\"normal\"\n            InputProps={{\n              readOnly: isPhoneVerified || userProfileInfo.isPhoneNumberVerified, // If verified, make it read-only\n            }}\n          />\n          {isPhoneVerified || userProfileInfo.isPhoneNumberVerified? (\n            <Typography color=\"green\">Phone Number Verified</Typography>\n          ) : (\n            <Button variant=\"outlined\" onClick={handleVerifyPhoneNumber}>\n              {otpSent ? \"Resend OTP\" : \"Verify Phone Number\"}\n            </Button>\n          )}\n\n          <Autocomplete\n            multiple\n            id=\"tags-standard\"\n            options={danceStylesOptions}\n            value={userDanceStyles}\n            onChange={handleDanceStylesChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                placeholder=\"Select Dance Styles\"\n                style={{ backgroundColor: 'white', color: 'black' }}\n              />\n            )}\n          />\n\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Gender</InputLabel>\n            <Select\n              name=\"Gender\"\n              value={userProfileInfo.Gender}\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Male\">Male</MenuItem>\n              <MenuItem value=\"Female\">Female</MenuItem>\n              <MenuItem value=\"Other\">Other</MenuItem>\n            </Select>\n          </FormControl>\n\n          <TextField\n            fullWidth\n            label=\"Bio\"\n            name=\"Bio\"\n            value={userProfileInfo.Bio}\n            onChange={handleChange}\n            multiline\n            rows={4}\n            margin=\"normal\"\n          />\n          <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"outlined\" onClick={onClose}>Cancel</Button>\n            <Button variant=\"contained\" onClick={handleSave}>Save</Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      {/* OTP Verification Modal */}\n      <Modal open={isOTPModalOpen} onClose={() => setIsOTPModalOpen(false)}>\n        <Box sx={{ p: 4, backgroundColor: 'white', margin: 'auto', mt: 5, maxWidth: 300, borderRadius: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Enter OTP\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"4-Digit OTP\"\n            value={otp}\n            onChange={(e) => setOtp(e.target.value)}\n            margin=\"normal\"\n          />\n          <Box mt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"outlined\" onClick={() => setIsOTPModalOpen(false)}>Cancel</Button>\n            <Button variant=\"contained\" onClick={handleOtpSubmit}>Submit OTP</Button>\n          </Box>\n        </Box>\n      </Modal>\n\n      <Snackbar open={snackbarOpen} autoHideDuration={600}  anchorOrigin={ {vertical:'top', horizontal:'center'} } onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default EditProfileModal;\n","import { useState, useEffect } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Button as MUIButton } from '@mui/joy';\nimport { COLLECTIONS } from '../constants';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { useAuth } from '../context/AuthContext';\nimport { readDocument } from '../utils/firebaseUtils';\nimport './UserPage.css';\nimport Kyc from '../Components/Kyc';\nimport {Card as MUICard,CardHeader,Avatar, CardContent, Typography, Tooltip} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport EditProfileModal from '../Components/EditProfileModal';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  doc,\n  getDoc,\n} from \"firebase/firestore\";\nimport {\n  faClock,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CardSlider from \"../Components/CardSlider\";\nimport { db } from \"../config\";\n\n\nfunction UserPage() {\n\n  const [isCreator, setIsCreator] = useState(false);\n  const [userProfileInfo,setUserProfileInfo] = useState(\n    {\n      Name: '',\n      Age: '',\n      DanceStyles: '',\n      Gender: '',\n      Bio: '',\n    }\n  );\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n\n  const { currentUser } = useAuth();\n  console.log(\"currentUser\",currentUser)\n  const cardData = [\n    ['Transactions', 'All', '#/transactions'],\n    ['My Bookings', 'All', '#/myBookings'],\n    ['Instructors', 'Creator', '#/modifyInstructors'],\n    ['Studios', 'Creator', '#/modifyStudios'],\n    ['DashBoard', 'Creator', '#/creatorDashboard']\n  ];\n  const [open, setOpen] = useState(false);\n  const [recentlyWatchedStudios, setRecentlyWatchedStudios] = useState([]);\n\n\n  const fetchRecentlyWatchedStudios = async (userId) => {\n    try {\n      const userRef = doc(db, COLLECTIONS.USER, userId);\n      const userDoc = await getDoc(userRef);\n      const recentlyWatchedMap = userDoc.exists()\n        ? userDoc.data().recentlyWatched\n        : {};\n\n      const studioIds = Object.values(recentlyWatchedMap);\n      //console.log(\"got\",studioIds)\n      const studioDataPromises = studioIds.map(async (studioId) => {\n        //console.log(studioId)\n        if (!studioId) {\n          console.warn(\"Invalid studioId:\", studioId);\n          return null;\n        }\n        console.log(\"studioId\", studioId);\n        const studioRef = doc(db, COLLECTIONS.STUDIO, studioId);\n        const studioDoc = await getDoc(studioRef);\n        if (studioDoc.exists()) {\n          //console.log(studioDoc.data())\n          return { id: studioId, ...studioDoc.data() };\n        } else {\n          console.warn(`Studio document not found for ID: ${studioId}`);\n          return null;\n        }\n      });\n\n      const studioData = await Promise.all(studioDataPromises);\n      const validStudioData = studioData.filter((studio) => studio !== null);\n\n      setRecentlyWatchedStudios(validStudioData);\n    } catch (error) {\n      console.error(\"Error fetching recently watched studios:\", error);\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // Sort the array by the card name\n  cardData.sort((a, b) => a[0].localeCompare(b[0]));\n \n  useEffect(() => {\n  \n    if (currentUser && currentUser.uid) {\n      \n        fetchRecentlyWatchedStudios(currentUser.uid);\n      \n    }\n    const getCreatorMode = async () => {\n      try{\n      const userData = await readDocument(COLLECTIONS.USER, currentUser.uid);\n      if (userData) {\n          setUserProfileInfo(\n            {\n              Name: userData.Name || '',\n              Age: userData.Age || '',\n              DanceStyles: userData.DanceStyles || '',\n              Gender: userData.Gender || '',\n              Bio: userData.Bio || '',\n              PhoneNumber : userData.PhoneNumber || '',\n              isPhoneNumberVerified : userData.isPhoneNumberVerified || false,\n            }\n          )\n          setIsCreator(userData.CreatorMode)\n      } else {\n        console.log(\"User not found but workshop created... error\");\n      }\n      }catch(error){\n        console.log(\" error\");\n      }\n    }\n  \n    getCreatorMode();\n  }, [isCreator]); // Run once on mount\n\n  const cardStyle = {\n    background: isDarkModeOn ? 'black' : 'white',\n    color: isDarkModeOn ? 'white' : 'black',\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"10px\",\n    cursor: 'pointer' ,\n  };\n\n  return (\n    <div >\n      <h1 style={{ color: isDarkModeOn ? 'white' : 'black', textTransform:'capitalize' }}>Profile</h1>\n      <MUICard sx={{ maxWidth: 400,background: isDarkModeOn ? 'black' : 'white',color: isDarkModeOn ? 'white' : 'black'}}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt={\"Picture\"}\n              src={currentUser.photoURL}\n              sx={{ width: 40, height: 40 }}\n            />\n          }\n          title={\n            <Typography variant=\"h6\" component=\"div\" sx={{ display: 'flex',color: isDarkModeOn ? 'white' : 'black', alignItems: 'center' }}>\n              {currentUser.displayName}\n              {isCreator && (\n                 <Tooltip title=\"You are a verified user.\" arrow>\n                 <CheckCircleIcon sx={{ color: 'green', marginLeft: 0.5, fontSize: 20 }} />\n               </Tooltip>\n              )}\n            </Typography>\n          }\n          subheader={\n            <>\n              <Typography variant=\"body2\" component=\"div\" sx={{ color: isDarkModeOn ? 'white' : 'black' }}>\n                {[currentUser.email, userProfileInfo.Age]\n                  .filter(Boolean)\n                  .join(' || ')}\n              </Typography>\n              {userProfileInfo.DanceStyles && (\n                <Typography variant=\"body2\" component=\"div\" sx={{ mt: 1, color: isDarkModeOn ? 'white' : 'black' }}>\n                  {userProfileInfo.DanceStyles}\n                </Typography>\n              )}\n              {userProfileInfo.Bio && (\n                <Typography variant=\"body2\" component=\"div\" sx={{ mt: 1, color: isDarkModeOn ? 'white' : 'black' }}>\n                  {userProfileInfo.Bio}\n                </Typography>\n              )}\n            </>\n          }\n      \n          \n          subheaderTypographyProps={{\n            sx: {\n              color: isDarkModeOn ? 'gray' : 'darkgray'\n            }\n          }}\n        />\n        <MUIButton sx={{ ml: 2 }} variant=\"outlined\" onClick={handleOpen}>\n          Edit Profile\n        </MUIButton>\n        <EditProfileModal open={open} onClose={handleClose} userProfileInfo={userProfileInfo} setUserProfileInfo={setUserProfileInfo} />\n        <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\" style={{color: isDarkModeOn ? 'white' : 'black'}}>\n          {isCreator ? \"List your studios now!!\" : \"Welcome to the Nritya! \\n Verify your profile to list your studio.\"}\n        </Typography>\n      </CardContent>\n      </MUICard>\n      <br/>\n      <Row>\n      {cardData.map(([name, type, link]) => {\n        if (type === 'Creator' && !isCreator) return null;\n\n        return (\n          <Col\n            key={name}\n            xs={12}\n            sm={6}\n            md={6}\n            lg={3}\n            xl={3}\n            className=\"mb-4\"\n          >\n            <a href={link} >\n              <Card style={cardStyle}>\n                <Card.Body>\n                  <Card.Title>{name}</Card.Title>\n                </Card.Body>\n              </Card>\n            </a>\n          </Col>\n        );\n      })}\n    </Row>\n    <Kyc/>\n      <Row hidden>\n          {recentlyWatchedStudios.length > 0 && (\n            <h4 style={{ color: isDarkModeOn ? \"white\" : \"black\" }}>\n              {\" \"}\n              <FontAwesomeIcon icon={faClock} size=\"1x\" /> Recently Viewed\n            </h4>\n          )}\n          {recentlyWatchedStudios.length > 0 ? (\n            <CardSlider dataList={recentlyWatchedStudios} imgOnly={false} />\n          ) : (\n            \"\"\n          )}\n        </Row>\n    </div>\n  );\n}\n\nexport default UserPage\n\nconst formatDateTime = (timestamp) => {\n  const options = {\n    timeZone: 'Asia/Kolkata', // Set the time zone to IST\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n  };\n\n  return new Date(timestamp).toLocaleString('en-IN', options);\n};\n\n"],"names":["_ref","dataList","imgOnly","formattedDataList","Array","isArray","Object","values","open","setOpen","useState","selectedEntity","setSelectedEntity","canScrollLeft","setCanScrollLeft","canScrollRight","setCanScrollRight","scrollRef","useRef","updateScrollButtons","container","current","scrollLeft","scrollWidth","clientWidth","scroll","direction","scrollBy","left","behavior","handleClose","cardHoverStyle","transform","useEffect","addEventListener","removeEventListener","_jsxs","Box","sx","display","p","m","position","children","_jsx","className","onClick","MdArrowBackIosNew","ref","map","entity","index","handleOpen","url","console","log","MuiCard","style","marginRight","component","height","width","CardCover","src","loading","alt","FiZoomIn","size","color","href","concat","id","ProductCard","data","img_src","iconUrl","Dialog","onClose","_Fragment","DialogContent","padding","maxWidth","Button","backgroundColor","MdArrowForwardIos","NStudioCard","isDarkModeOn","useSelector","selectDarkModeStatus","studioId","cardStyle","boxShadow","transition","Card","variant","AspectRatio","ratio","overflow","Stack","spacing","bottom","danceStyles","split","slice","form","Chip","marginBottom","fontSize","bgcolor","danceStylesColorChips","trim","top","paddingTop","freeTrialAvailable","marginLeft","COLORS","LIME","CardContent","justifyContent","columnGap","Link","alignSelf","fontWeight","textColor","underline","overlay","whiteSpace","textOverflow","studioName","avgRating","Typography","flexShrink","toFixed","level","street","IconButton","hidden","zIndex","borderRadius","right","Favorite","minFee","type","BASE_URL","BASEURL_PROD","userProfileInfo","setUserProfileInfo","currentUser","useAuth","danceStylesOptions","userDanceStyles","setUserDanceStyles","userPhoneNumber","setUserPhoneNumber","isOTPModalOpen","setIsOTPModalOpen","otp","setOtp","isPhoneVerified","setIsPhoneVerified","isPhoneNumberVerified","otpSent","setOtpSent","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","DanceStyles","PhoneNumber","handleChange","e","target","name","value","handleSnackbarClose","Modal","margin","mt","gutterBottom","TextField","fullWidth","label","Name","onChange","Age","InputProps","readOnly","async","axios","qs","phone_number","headers","status","Error","error","Autocomplete","multiple","options","handleDanceStylesChange","event","renderInput","params","placeholder","FormControl","InputLabel","Select","Gender","MenuItem","Bio","multiline","rows","saveDocument","COLLECTIONS","USER","uid","response","handleSavePostOTPSuccess","handleSavePostOTP","message","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","isCreator","setIsCreator","cardData","recentlyWatchedStudios","setRecentlyWatchedStudios","sort","a","b","localeCompare","userRef","doc","db","userId","userDoc","getDoc","recentlyWatchedMap","exists","recentlyWatched","studioDataPromises","warn","studioRef","STUDIO","studioDoc","validStudioData","Promise","all","filter","studio","fetchRecentlyWatchedStudios","userData","readDocument","CreatorMode","getCreatorMode","background","cursor","textTransform","MUICard","CardHeader","avatar","Avatar","photoURL","title","alignItems","displayName","Tooltip","arrow","CheckCircleIcon","subheader","email","Boolean","join","subheaderTypographyProps","MUIButton","ml","EditProfileModal","Row","link","Col","xs","sm","md","lg","xl","Body","Title","Kyc","length","FontAwesomeIcon","icon","faClock","CardSlider"],"sourceRoot":""}