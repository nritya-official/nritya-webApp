{"version":3,"file":"static/js/7985.4cdcffb4.chunk.js","mappings":"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","sources":["Components/LoginModalForm.js","Components/LoginModalDailog.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/Dialog/dialogClasses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { styled } from '@mui/system';\nimport loginBoxLogo from '../../src/Components/DanceImg/Nritya_Login_logo.png';\nimport loginText from '../../src/Components/DanceImg/Lets_dance.png';\nimport LoginPage from \"../Screens/LoginPage\";\n\n// Styled components using `styled`\nconst LoginBoxMain = styled('div')(({ theme }) => ({\n    width: 'auto',\n    backgroundColor: '#000',\n    padding: '15px',\n    minHeight: '100px', // Set a minimum height\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst LoginLogo = styled('div')(({ theme }) => ({\n    height: '130px',\n    width: '130px',\n    margin: '0 auto',\n}));\n\nconst LoginText = styled('div')(({ theme }) => ({\n    width: '67%', // Full width to contain text\n    minHeight: '75px',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'center', // Center the content\n    alignItems: 'center', // Center the content\n}));\n\nconst LoginModalForm = ({ isLoggedIn, setIsLoggedIn }) => {\n    const [username, setUsername] = useState(() => localStorage.getItem('username') || '');\n    const [userID, setUserID] = useState(() => {\n        const userInfo = localStorage.getItem('userInfo');\n        return userInfo ? JSON.parse(userInfo).localId : '';\n    });\n\n    const handleLogin = (UserInfo, userInfoFull) => {\n        setUsername(UserInfo.displayName);\n        setIsLoggedIn(true);\n        setUserID(UserInfo.localId);\n        localStorage.setItem('username', UserInfo.displayName);\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('userInfo', JSON.stringify(UserInfo));\n        localStorage.setItem('userInfoFull', JSON.stringify(userInfoFull));\n        console.log(\"User Info Full local\", JSON.parse(localStorage.getItem('userInfoFull')));\n    };\n\n    return (\n        <LoginBoxMain>\n            <LoginLogo>\n                <img src={loginBoxLogo} alt=\"login-box-logo\" style={{ width: '100%', height: 'auto' }} />\n            </LoginLogo>\n            <LoginText>\n                <img src={loginText} alt=\"login-text-img\" style={{ width: '100%', height: 'auto' }} />\n            </LoginText>\n            <LoginPage onLogin={handleLogin} setIsLoggedIn={setIsLoggedIn} />\n        </LoginBoxMain>\n    );\n};\n\nexport default LoginModalForm;\n","import React,{useState,useEffect} from \"react\";\nimport Dialog from '@mui/material/Dialog';\nimport { styled } from '@mui/material/styles';\nimport LoginModalForm from \"./LoginModalForm\";\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  }\n}));\n\nconst LoginModalDailog = ({open, handleClose }) => {\n  console.log(\"Open\",open)\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    return storedIsLoggedIn === 'true';\n  });\n\n  useEffect(() => {\n    if (isLoggedIn && localStorage.getItem('isLoggedIn') === 'true') {\n      console.log(\"It's logged in\",isLoggedIn)\n      handleClose();\n    }\n  }, [isLoggedIn, handleClose]);\n\n  \n\n    return (\n\n        <React.Fragment>\n          <BootstrapDialog\n            onClose={handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={open}\n            maxWidth='xs'\n            sx={{\n              '& .MuiModal-backdrop': {\n                backdropFilter: 'blur(8px)'\n              },\n            }}\n          \n          >\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n                <CloseIcon />\n          </IconButton>\n            <LoginModalForm isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>\n          </BootstrapDialog>\n        </React.Fragment>\n       \n    )\n}\n\nexport default LoginModalDailog;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport useTheme from '../styles/useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&::after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `max(${theme.breakpoints.values.xs}${theme.breakpoints.unit}, 444px)`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\n\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-labelledby': ariaLabelledbyProp,\n      BackdropComponent,\n      BackdropProps,\n      children,\n      className,\n      disableEscapeKeyDown = false,\n      fullScreen = false,\n      fullWidth = false,\n      maxWidth = 'sm',\n      onBackdropClick,\n      onClose,\n      open,\n      PaperComponent = Paper,\n      PaperProps = {},\n      scroll = 'paper',\n      TransitionComponent = Fade,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n    backdropClick.current = null;\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    closeAfterTransition: true,\n    components: {\n      Backdrop: DialogBackdrop\n    },\n    componentsProps: {\n      backdrop: _extends({\n        transitionDuration,\n        as: BackdropComponent\n      }, BackdropProps)\n    },\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import * as React from 'react';\nconst DialogContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\nexport default DialogContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;"],"names":["LoginBoxMain","styled","_ref","theme","width","backgroundColor","padding","minHeight","display","flexDirection","alignItems","justifyContent","LoginLogo","_ref2","height","margin","LoginText","_ref3","_ref4","isLoggedIn","setIsLoggedIn","username","setUsername","useState","localStorage","getItem","userID","setUserID","userInfo","JSON","parse","localId","_jsxs","children","_jsx","src","alt","style","loginText","LoginPage","onLogin","handleLogin","UserInfo","userInfoFull","displayName","setItem","stringify","console","log","BootstrapDialog","Dialog","spacing","open","handleClose","useEffect","React","onClose","maxWidth","sx","backdropFilter","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","LoginModalForm","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","_excluded","DialogBackdrop","Backdrop","name","slot","overrides","props","styles","backdrop","zIndex","DialogRoot","Modal","overridesResolver","root","DialogContainer","ownerState","container","concat","capitalize","scroll","_extends","outline","overflowY","overflowX","textAlign","content","verticalAlign","DialogPaper","Paper","paper","String","fullWidth","paperFullWidth","fullScreen","paperFullScreen","boxShadow","maxHeight","breakpoints","unit","Math","max","values","xs","dialogClasses","paperScrollBody","down","borderRadius","inProps","ref","useThemeProps","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","className","disableEscapeKeyDown","onBackdropClick","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","getDialogUtilityClass","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","clsx","closeAfterTransition","components","componentsProps","as","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","DialogContext","Provider","value","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}