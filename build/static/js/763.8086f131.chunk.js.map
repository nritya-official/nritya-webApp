{"version":3,"file":"static/js/763.8086f131.chunk.js","mappings":"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","sources":["Components/CourseCard.js","Components/CourseCardSlider.js","Components/ImageUpload.js","Components/TimeRange.js","Components/CourseAdd.js","Components/CourseUpdate.js","Screens/CreatorCourse.js","utils/common.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AspectRatio from \"@mui/joy/AspectRatio\";\nimport Card from \"@mui/joy/Card\";\nimport CardContent from \"@mui/joy/CardContent\";\nimport Chip from \"@mui/joy/Chip\";\nimport Typography from \"@mui/joy/Typography\";\nimport {\n  Box,\n  Grid,\n  Modal,\n  Stack,\n  Typography as MUITypography,\n  Button,\n  IconButton,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { COLLECTIONS, STORAGES } from \"../constants\";\nimport { readDocumentWithImageUrl } from \"../utils/firebaseUtils\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport dayjs from \"dayjs\";\nimport { addDoc, collection, doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../config\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport whatsAppImage from '../assets/images/whatsapp.png';\nimport callImage from '../assets/images/india_11009487.png';\nimport ShareButton from \"./ShareButton\";\n\nfunction WorkshopDetailsModal({\n  open,\n  handleClose,\n  dataItem,\n  activateCourse,\n  deactivateCourse,\n  actionsAllowed,\n}) {\n\n  const showSnackbar = useSnackbar();\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [isBooking, setIsBooking] = useState(false);\n  const [userDetails, setUserDetails] = useState(null);\n\n  const currentUser = JSON.parse(localStorage.getItem(\"userInfo\"))?.UserId;\n\n  const handleBook = async () => {\n    try {\n      setIsBooking(true);\n\n      addDoc(collection(db, COLLECTIONS.BOOKINGS), {\n        StudioId: dataItem.StudioId,\n        CourseId: dataItem.id,\n        UserId: currentUser,\n        bookingDate: Date.now(),\n      });\n\n      const userRef = doc(db, \"User\", currentUser);\n      const userSnap = await getDoc(userRef);\n\n      if (userSnap.exists()) {\n        if (userSnap.data() != null) {\n          await updateDoc(userRef, {\n            BookedCourses: [\n              ...(userSnap.data().BookedCourses || []),\n              dataItem.id,\n            ],\n          });\n        }\n      }\n\n      setUserDetails(prev => ({ ...prev, BookedCourses: [...(prev?.BookedCourses || []), dataItem.id] }));\n\n      showSnackbar(\"Course booked\", \"success\");\n    } catch (error) {\n      console.error(error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsBooking(false);\n    }\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const userRef = doc(db, \"User\", currentUser);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) setUserDetails(userSnap.data());\n      } catch (error) {\n        console.log(\" error\");\n      }\n    };\n\n    getUser();\n  }, []);\n\n  const isCreatorOfWorkshop = dataItem.UserId === currentUser;\n\n  const isBooked = userDetails?.BookedCourses?.includes?.(dataItem?.id);\n\n  const whatsappMessage = encodeURIComponent(\"Hey, I found your Studio on nritya.co.in. I'm interested\");\n\n  const shareUrl = `${window.location.host}/nritya-webApp#/course/${dataItem.id}`;\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n      style={{zIndex:40}}\n    >\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          maxHeight: \"90%\",\n          overflow: \"auto\",\n          width: { xs: \"90%\", md: \"60%\" },\n          bgcolor: isDarkModeOn ? \"black\" : \"background.paper\",\n          borderWidth: \"2px\",\n          borderStyle: \"solid\",\n          borderColor: isDarkModeOn ? \"white\" : \"black\",\n          boxShadow: 24,\n          p: \"1rem\",\n          borderRadius: \"8px\",\n        }}\n      >\n        <Grid container spacing=\"8px\" rowGap={2}>\n          <Grid item xs={12} lg={8}>\n            <img\n              src={dataItem.imageUrl}\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"contain\",\n                borderRadius: \"8px\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <Box\n              sx={{\n                height: \"100%\",\n                bgcolor: isDarkModeOn ? \"#333333\" : \"#efefef\",\n                p: 2,\n                borderRadius: \"8px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Box sx={{ flex: 1 }}>\n                <MUITypography\n                  variant=\"h6\"\n                  component=\"p\"\n                  sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dayjs(dataItem.date).format(\"LL\")}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"h6\"\n                  component=\"p\"\n                  sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.time}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"body1\"\n                  component=\"p\"\n                  sx={{ mt: \"2rem\", color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.venue}\n                </MUITypography>\n\n                <MUITypography\n                  variant=\"body1\"\n                  component=\"p\"\n                  sx={{ mt: \"2rem\", color: isDarkModeOn ? \"white\" : \"black\" }}\n                >\n                  {dataItem.duration} {dataItem.durationUnit}\n                </MUITypography>\n              </Box>\n\n              <Box sx={{ mt: \"2rem\", display: \"flex\", justifyContent: \"space-between\", flexWrap: 'wrap' }}>\n                <MUITypography\n                  variant=\"h5\"\n                  sx={{\n                    alignSelf: \"center\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                  }}\n                >\n                  ₹{dataItem.price}\n                </MUITypography>\n                {!actionsAllowed && !isCreatorOfWorkshop && currentUser && <Button\n                  variant=\"outlined\"\n                  onClick={handleBook}\n                  disabled={isBooked || isBooking}\n                  sx={{\n                    alignSelf: \"center\",\n                    boxShadow: \"none\",\n                    textTransform: \"none\",\n                    fontSize: 16,\n                    padding: \"6px 12px\",\n                    border: \"1px solid\",\n                    lineHeight: 1.5,\n                    backgroundColor: \"transparent\",\n                    borderColor: isDarkModeOn ? \"white\" : \"black\",\n                    color: isDarkModeOn ? \"white\" : \"black\",\n                    \"&:hover\": {\n                      backgroundColor: \"transparent\",\n                      borderColor: isDarkModeOn ? \"white\" : \"black\",\n                      boxShadow: \"none\",\n                    },\n                    \"&:active\": {\n                      boxShadow: \"none\",\n                      backgroundColor: \"transparent\",\n                      borderColor: isDarkModeOn ? \"white\" : \"black\",\n                    },\n                    \"&:focus\": {\n                      boxShadow: \"none\",\n                    },\n                  }}\n                >\n                  {isBooked ? \"Booked\" : \"Book Now\"}\n                </Button>}\n              </Box>\n            </Box>\n            {!actionsAllowed && !isCreatorOfWorkshop && currentUser && <MUITypography component={'p'} variant=\"caption\" sx={{ my: '2px', color: isDarkModeOn ? \"white\" : \"black\", textAlign: 'center' }}>\n              Book here and pay at the venue\n            </MUITypography>}\n          </Grid>\n          <Grid item sx={{ mt: 1 }}>\n            <Box sx={{ display: 'flex', columnGap: 2 }}>\n              <MUITypography\n                variant=\"h5\"\n                component=\"p\"\n                sx={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n              >\n                {dataItem.name || \"\"}\n                {dataItem.danceStyles.map((dance) => ` | ${dance}`)}\n              </MUITypography>\n              <ShareButton shareUrl={shareUrl} />\n            </Box>\n            <MUITypography\n              variant=\"body1\"\n              component=\"p\"\n              sx={{ mt: 1, color: isDarkModeOn ? \"white\" : \"black\" }}\n            >\n              <span>By {dataItem.studioDetails?.studioName || \"\"}</span>\n              {dataItem.studioDetails && dataItem.studioDetails?.whatsappNumber && (\n                <IconButton color=\"success\" size=\"small\" target=\"_blank\" href={`https://wa.me/91${dataItem.studioDetails.whatsappNumber}?text=${whatsappMessage}`}>\n                  <img src={whatsAppImage} alt=\"Whatsapp call\" style={{ width: 30, height: 28 }} />\n                </IconButton>\n              )}\n              {dataItem.studioDetails && dataItem.studioDetails?.mobileNumber && (\n                <IconButton color=\"primary\" size=\"small\" target=\"_blank\" href={`tel:${dataItem.studioDetails.mobileNumber}`}>\n                  <img src={callImage} alt=\"Phone call\" style={{ width: 30, height: 28 }} />\n                </IconButton>\n              )}\n            </MUITypography>\n            {/* <MUITypography\n              variant=\"body1\"\n              component=\"p\"\n              sx={{ mt: 2, color: isDarkModeOn ? \"white\" : \"black\" }}\n            >\n              {dataItem.description || \"\"}\n            </MUITypography> */}\n            <div style={{ color: isDarkModeOn ? 'white ' : 'black' }} className=\"description-box\" dangerouslySetInnerHTML={{ __html: dataItem.description || \"Course Description\" }}></div>\n          </Grid>\n        </Grid>\n\n        <Box sx={{ mt: \"1rem\", textAlign: \"right\" }}>\n          {actionsAllowed && isCreatorOfWorkshop && (\n            <Button\n              onClick={() =>\n                dataItem?.active\n                  ? deactivateCourse(dataItem?.id)\n                  : activateCourse(dataItem?.id)\n              }\n              variant=\"outlined\"\n              sx={{\n                mr: \"1rem\",\n                color: \"white\",\n                boxShadow: \"none\",\n                border: \"1px solid\",\n                backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                borderColor: \"white\",\n                color: \"white\",\n                \"&:hover\": {\n                  backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                  borderColor: \"white\",\n                  boxShadow: \"none\",\n                },\n                \"&:active\": {\n                  boxShadow: \"none\",\n                  backgroundColor: dataItem?.active ? \"red\" : \"green\",\n                  borderColor: \"white\",\n                },\n                \"&:focus\": {\n                  boxShadow: \"none\",\n                },\n              }}\n            >\n              {dataItem?.active ? \"Deactivate\" : \"Activate\"}\n            </Button>\n          )}\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            sx={{\n              color: \"white\",\n              boxShadow: \"none\",\n              border: \"1px solid\",\n              backgroundColor: \"transparent\",\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              color: isDarkModeOn ? \"white\" : \"black\",\n              \"&:hover\": {\n                backgroundColor: \"transparent\",\n                borderColor: isDarkModeOn ? \"white\" : \"black\",\n                boxShadow: \"none\",\n              },\n              \"&:active\": {\n                boxShadow: \"none\",\n                backgroundColor: \"transparent\",\n                borderColor: isDarkModeOn ? \"white\" : \"black\",\n              },\n              \"&:focus\": {\n                boxShadow: \"none\",\n              },\n            }}\n          >\n            Close\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default function CourseCard({\n  dataItem,\n  activateCourse,\n  deactivateCourse,\n  actionsAllowed,\n}) {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [isWorkshopDetailsModalOpen, setIsWorkshopDetailsModalOpen] =\n    useState(false);\n  const workshopId = dataItem.id;\n\n  const handleWorkshopDetailsModalOpen = () =>\n    setIsWorkshopDetailsModalOpen(true);\n\n  const handleWorkshopDetailsModalClose = () =>\n    setIsWorkshopDetailsModalOpen(false);\n\n  useEffect(() => {\n    const fetchImageUrl = async () => {\n      try {\n        const url = await readDocumentWithImageUrl(\n          STORAGES.COURSEICON,\n          workshopId\n        );\n\n        setImageUrl(\n          url ||\n          \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"\n        );\n      } catch (error) {\n        console.error(\"Error fetching image URL:\", error);\n      }\n    };\n\n    fetchImageUrl();\n  }, [dataItem.id]);\n\n  const cardStyle = {\n    backgroundColor: isDarkModeOn ? \"#444\" : \"white\",\n    padding: \"0px\",\n    color: isDarkModeOn ? \"white\" : \"black\",\n    marginRight: \"10px\",\n    width: 320,\n    maxWidth: \"100%\",\n    boxShadow: \"lg\",\n    transition: \"opacity 0.3s ease\",\n  };\n\n  const cardHoverStyle = {\n    transform: \"scale(1.01)\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <>\n      <Card\n        variant=\"solid\"\n        sx={{\n          ...cardStyle,\n          \"&:hover\": cardHoverStyle,\n          // flex: 'none'\n        }}\n        onClick={handleWorkshopDetailsModalOpen}\n      >\n        <AspectRatio ratio=\"1.78\" style={{ position: \"relative\" }}>\n          <img\n            src={imageUrl}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: \"100%\", objectFit: \"cover\", overflow: \"hidden\" }}\n          />\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", bottom: 0, left: 0, padding: \"1px\" }}\n          >\n            {dataItem && dataItem.danceStyles ? (\n              dataItem.danceStyles.slice(0, 3).map((form, index) => (\n                <Chip\n                  key={index}\n                  color={index % 2 === 0 ? \"danger\" : \"success\"}\n                  style={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                  }}\n                >\n                  {form.trim()}\n                </Chip>\n              ))\n            ) : (\n              <Chip\n                key={10}\n                color={10 % 2 === 0 ? \"danger\" : \"success\"}\n                style={{ marginBottom: \"10px\", fontSize: \"0.8rem\" }}\n              >\n                {\"No danceforms\"}\n              </Chip>\n            )}\n          </Stack>\n        </AspectRatio>\n        <CardContent style={{ padding: \"10px\", paddingTop: \"5px\" }}>\n          <Box\n            fontWeight=\"md\"\n            color=\"neutral\"\n            textColor=\"text.primary\"\n            underline=\"none\"\n            overlay\n            style={{\n              color: isDarkModeOn ? \"white\" : \"black\",\n              extDecoder: \"one\",\n            }}\n          >\n            <span>{dataItem && dataItem.name ? dataItem.name : \"\"}</span>\n            {!dataItem?.active && (\n              <span\n                style={{\n                  marginLeft: \"2px\",\n                  padding: \"2px 4px\",\n                  fontSize: \"14px\",\n                  borderRadius: \"4px\",\n                  background: \"red\",\n                }}\n              >\n                Inactive\n              </span>\n            )}\n          </Box>\n          <Typography\n            style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n            noWrap\n          >\n            By {dataItem.studioDetails?.studioName ? dataItem.studioDetails.studioName : \"\"}\n          </Typography>\n          <Typography\n            style={{ marginTop: 10, color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n            noWrap\n          >\n            {dataItem.venue ? dataItem.venue : \"\"}\n          </Typography>\n          <Typography\n            style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n            level=\"body-xs\"\n          >\n            {dataItem.date || \"\"} | {dataItem.time || \"\"}\n          </Typography>\n        </CardContent>\n      </Card>\n\n      <WorkshopDetailsModal\n        dataItem={{ ...dataItem, imageUrl }}\n        open={isWorkshopDetailsModalOpen}\n        handleClose={handleWorkshopDetailsModalClose}\n        activateCourse={activateCourse}\n        deactivateCourse={deactivateCourse}\n        actionsAllowed={actionsAllowed}\n      />\n    </>\n  );\n}\n","import \"./WorkshopCardSlider.css\";\nimport React from \"react\";\nimport CourseCard from \"./CourseCard\";\n\nconst CardSlider = ({\n  dataList,\n  activateCourse,\n  deactivateCourse,\n  actionsAllowed,\n}) => {\n  return (\n    <div className={\"horizontal-scroll-wrapper\"}>\n      {dataList.map((dataItem, index) => (\n        <CourseCard\n          key={dataItem.id}\n          dataItem={dataItem}\n          activateCourse={activateCourse}\n          deactivateCourse={deactivateCourse}\n          actionsAllowed={actionsAllowed}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardSlider;\n","import React, { useState,useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport { ref, getDownloadURL, listAll } from 'firebase/storage';\nimport { storage } from '../config';\nimport { useSelector } from 'react-redux'; // Import useSelector and useDispatch\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport { deleteAllImagesInFolder,deleteImages,uploadImages} from '../utils/firebaseUtils'\nimport { Card, CardContent, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport { STORAGES } from \"../constants\";\n\n\nconst ImageUpload = ({entityId,storageFolder,title, maxImageCount=10, updateMode, disable }) => {\n  const showSnackbar = useSnackbar();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [newFiles, setNewFiles] = useState([]); // Track new files to be added\n  const [deletedFiles, setDeletedFiles] = useState([]); // Track deleted files\n  const isDarkModeOn = useSelector(selectDarkModeStatus); // Use useSelector to access isDarkModeOn\n  //console.log(\"Received props=> entityId:\", entityId, \"|storageFolder:\", storageFolder);\n  const [progressDelete, setProgressDelete] = useState(-1);\n  const [progressUpdate, setProgressUpdate] = useState(-1);\n\n  console.log(\"Kyc enitity id \",entityId, disable)\n  const filesizes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  useEffect(() => {\n   // console.log(\"Fetching image for\",entityId)\n    if(entityId){\n      fetchStudioImages(entityId); // Fetch images when component mounts\n    }\n  }, [entityId]);\n\n  useEffect(() => {\n   // console.log(\"Selected files:\", selectedFiles);\n    if (maxImageCount && selectedFiles.length > maxImageCount) {\n      const truncatedFiles = selectedFiles.slice(0, maxImageCount);\n      alert(`Exceeded maxImageCount, keeping first ${maxImageCount} files.`);\n      setSelectedFiles(truncatedFiles);\n    }\n  }, [selectedFiles, maxImageCount]);\n  \n\n  const handleInputChange = (e) => {\n    // console.log(\"handleInputChange\")\n    const files = Array.from(e.target.files);\n    const updatedFiles = [];\n    // console.log(\"file array \",files.length)\n    files.forEach((file) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        updatedFiles.push({\n          id: shortid.generate(),\n          filename: file.name,\n          filetype: file.type,\n          fileimage: reader.result,\n          datetime: file.lastModifiedDate.toLocaleString(\"en-IN\"),\n          filesize: filesizes(file.size),\n          file: file, // Store the actual file object\n        });\n\n        if (updatedFiles.length === files.length) {\n          setSelectedFiles((prevFiles) => [...prevFiles, ...updatedFiles]);\n          setNewFiles(updatedFiles);\n          // console.log(\"New files in total\",setNewFiles.length)\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleDeleteSelectedFile = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this image?\")) {\n      const fileToDelete = selectedFiles.find((file) => file.id === id);\n      setDeletedFiles((prevDeletedFiles) => [...prevDeletedFiles, fileToDelete]);\n      setSelectedFiles((prevFiles) =>\n        prevFiles.filter((file) => file.id !== id)\n      );\n    }\n  };\n\n  const handleUploadSubmit = async () => {\n    if (!entityId) {\n      alert(\"No studio selected\");\n      return;\n    }\n\n    try {\n      if (maxImageCount === 1) {\n        // Delete all previous images in the folder\n        await deleteAllImagesInFolder(storageFolder, entityId);\n        await uploadImages(storageFolder,newFiles, entityId);\n      } else {\n        // Calculate images to delete and add\n        const { imagesToDelete, newImages } = calculateDelta(selectedFiles, uploadedFiles);\n\n        // Delete images if there are any\n        if (imagesToDelete.length > 0) {\n          await deleteImages(storageFolder, imagesToDelete, entityId, setProgressDelete);\n        }\n\n        // Upload new images if there are any\n        if (newImages.length > 0) {\n          await uploadImages(storageFolder, newImages, entityId, setProgressUpdate);\n        }\n\n      }\n\n      // alert(\"Images Uploaded/Deleted\");\n      //showSnackbar(\"Images Uploaded/Deleted\", \"success\");\n    } catch (error) {\n      console.error(\"Error uploading/deleting images:\", error);\n    }\n  };\n\n  // Function to calculate images to delete and new images to upload\n  const calculateDelta = (selectedFiles, uploadedFiles) => {\n    const selectedFileIds = selectedFiles.map(file => file.id);\n    const uploadedFileIds = uploadedFiles.map(file => file.id);\n\n    const imagesToDelete = uploadedFiles.filter(file => !selectedFileIds.includes(file.id));\n    const newImages = selectedFiles.filter(file => !uploadedFileIds.includes(file.id));\n\n    return { imagesToDelete, newImages };\n  };\n\n\n  const fetchStudioImages = async (entityId) => {\n    setSelectedFiles([]);\n    setNewFiles([]);\n    setDeletedFiles([]);\n    try {\n      const folderPath = `${storageFolder}/${entityId}`;\n      console.log(folderPath)\n      const folderRef = ref(storage, folderPath);\n      const fileList = await listAll(folderRef);\n\n      const files = await Promise.all(\n        fileList.items.map(async (fileRef) => {\n          const downloadURL = await getDownloadURL(fileRef);\n\n          return {\n            id: fileRef.name,\n            filename: fileRef.name,\n            fileURL: downloadURL,\n          };\n        })\n      );\n      // console.log('File fetching',files);\n      setUploadedFiles(files); // Update the uploadedFiles state with fetched data\n      setSelectedFiles(files);\n    } catch (error) {\n      console.error('Error fetching user images:', error);\n    }\n  };\n\n  return (\n    <div className=\"fileupload-view\" style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n      <div className=\"row justify-content-center m-0\" style={{ flex: '1',justifyContent: 'center' }}>\n        <div className=\"col-md-6\" style={{ flex: '1' ,justifyContent: 'center'}}>\n          <div className=\"card mt-5\">\n            <div className=\"card-body\" style={{ backgroundColor: isDarkModeOn ? '#333333' : 'white' }}>\n              <div className=\"kb-data-box\">\n                <div className=\"kb-modal-data-title\">\n                  <div className=\"kb-data-title\" style={{justifyContent:'center',flex: '1'}}>\n                    <h4>{title}</h4>\n                    <p>Max no of image(s):{maxImageCount} {storageFolder === STORAGES.STUDIOIMAGES && <p>Add at least 5 images</p>}</p>\n                  </div>\n                </div>\n                <form style={{  backgroundColor: isDarkModeOn ? '#333333' : 'white'}}>\n                  <div className=\"kb-file-upload\">\n                    <div className=\"file-upload-box\">\n                      <input\n                        type=\"file\"\n                        id=\"fileupload\"\n                        className=\"file-upload-input\"\n                        onChange={handleInputChange}\n                        multiple\n                      />\n\n                    </div>\n                  </div>\n                  <br></br>\n                  <div className=\"kb-attach-box mb-3\">\n                  <div className=\"row\">\n                    {entityId && selectedFiles.length > 0 ? (\n                      selectedFiles.map((file) => (\n                        \n                        <div key={file.id} className=\"col-6 col-md-3 mb-3\" style={{ position: 'relative' }}>\n                          \n                          <Card sx={{ maxWidth: 345 }}>\n                            {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                              <div style={{ position: 'relative' }}>\n                                <img\n                                  src={file.fileimage ? file.fileimage : file.fileURL}\n                                  alt={file.filename}\n                                  className=\"card-img-top\"\n                                  style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                                />\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  disabled={disable}\n                                  onClick={() => handleDeleteSelectedFile(file.id)}\n                                  style={{ position: 'absolute', top: 0, right: 0, backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                                >\n                                  <DeleteIcon style={{color:\"ff0000\"}}/>\n                                </IconButton>\n                              </div>\n                            ) : (\n                              <CardContent>\n                                <i className=\"far fa-file-alt\"></i>\n                              </CardContent>\n                            )}\n                          </Card>\n                        </div>\n                        \n                      ))\n                    ) : (\n                      <div className=\"col-12 text-center\">\n                        <p>No images selected</p>\n                      </div>\n                    )}\n                  </div>\n\n                  </div>\n\n                  \n                  <div className=\"kb-buttons-box\">\n                    <button\n                      type=\"button\"\n                      className=\"btn form-submit\"\n                      style={{ backgroundColor: isDarkModeOn ? '#892CDC' : 'black', color:'white'  }}\n                      onClick={handleUploadSubmit}\n                      disabled={disable}\n                    >\n                      Image Upload\n                    </button>\n                  </div>\n                </form>\n                {selectedFiles.length > 0 && (\n                  <div className=\"kb-attach-box\" hidden>\n                    <div className=\"row\">\n                    <hr />\n                    {selectedFiles.map((file) => (\n                      <div key={file.id} className=\"col-6 col-md-3 mb-3\">\n                      <div className=\"card\">\n                        {file.filename.match(/\\.(jpg|jpeg|png|gif|svg)$/i) ? (\n                          <img\n                            src={file.fileimage}\n                            alt={file.filename}\n                            className=\"card-img-top\"\n                            style={{ maxHeight: \"150px\", objectFit: \"cover\" }}\n                          />\n                        ) : (\n                          <div className=\"card-body\">\n                            <i className=\"far fa-file-alt\"></i>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n              { progressDelete >= 0 && (\n                    <div>\n                        <p style={{ color: isDarkModeOn ? '#fff' : '#000' }}>\n                            Deleting images... {progressDelete.toFixed(2)}%\n                        </p>\n                        <progress \n                            value={progressDelete} \n                            max=\"100\" \n                            style={{\n                                color: isDarkModeOn ? '#fff' : '#000'\n                            }}\n                        >\n                            {progressDelete.toFixed(2)}%\n                        </progress>\n                    </div>\n                )}\n\n                { progressUpdate >= 0 && (\n                    <div>\n                        <p style={{ color: isDarkModeOn ? '#fff' : '#000' }}>\n                            Uploading images... {progressUpdate.toFixed(2)}%\n                        </p>\n                        <progress \n                            value={progressUpdate} \n                            max=\"100\" \n                            style={{\n                                color: isDarkModeOn ? '#fff' : '#000'\n                            }}\n                        >\n                            {progressUpdate.toFixed(2)}%\n                        </progress>\n                    </div>\n                )}\n\n                            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Set default prop values\nImageUpload.defaultProps = {\n  maxImageCount: 5, // Default maximum image count\n  updateMode: false,\n  disable:false,\n};\n\nexport default ImageUpload;","import React from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\n\nconst TimeRange = ({ defaultTime, handleSelect }) => {\n  const startTime_i = defaultTime.split(\"-\")[0].trim();\n  const endTime_i = defaultTime.split(\"-\")[1]?.trim();\n\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const generateTimeOptions = () => {\n    const options = [];\n    let option_AM = [];\n    let option_PM = [];\n    \n    for (let hours = 0; hours < 24; hours++) {\n        for (let minutes = 0; minutes < 60; minutes += 30) {\n            const formattedMinutes = minutes.toString().padStart(2, \"0\");\n            \n            if (hours < 12) {\n                // Handle 12-hour format for AM, converting 0 hours to 12 for midnight\n                const formattedHours = hours === 0 ? 12 : hours;\n                option_AM.push(`${formattedHours}:${formattedMinutes} AM`);\n            } else {\n                // Handle 12-hour format for PM, converting 12-23 hours to 1-12 format\n                const formattedHours = hours === 12 ? 12 : hours % 12;\n                option_PM.push(`${formattedHours}:${formattedMinutes} PM`);\n            }\n        }\n    }\n\n    // Interleave AM and PM options to build the full list\n    for (let i = 0; i < option_AM.length || i < option_PM.length; i++) {\n        if (i < option_AM.length) {\n            options.push(option_AM[i]);\n        }\n        if (i < option_PM.length) {\n            options.push(option_PM[i]);\n        }\n    }\n\n    return options;\n};\n\n  const renderTimeOptions = (defaultValue) => {\n    const timeOptions = generateTimeOptions();\n\n    return (\n      <>\n        <option value={defaultValue}>{defaultValue}</option>\n        {timeOptions.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <Row>\n      <Col>\n        <Form.Group>\n          <Form.Label>Start Time</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => handleSelect(e.target.value, null)}\n            style={{\n              background: \"transparent\",\n              borderWidth: 1,\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n          >\n            {renderTimeOptions(startTime_i)}\n          </Form.Control>\n        </Form.Group>\n      </Col>\n      <Col>\n        <Form.Group>\n          <Form.Label>End Time</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => handleSelect(null, e.target.value)}\n            style={{\n              background: \"transparent\",\n              borderWidth: 1,\n              borderColor: isDarkModeOn ? \"white\" : \"black\",\n              height: 'auto',\n            }}\n          >\n            {renderTimeOptions(endTime_i)}\n          </Form.Control>\n        </Form.Group>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TimeRange;\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { LinearProgress, Button as MuiButton } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { db } from \"../config\";\nimport {\n  doc,\n  getDoc,\n  addDoc,\n  updateDoc,\n  collection,\n  query,\n  where,\n  getDocs,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { COLLECTIONS, DRAFT_COLLECTIONS, LEVELS } from \"../constants\";\nimport ImageUpload from \"./ImageUpload\";\nimport { STORAGES } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport danceStyles from \"../danceStyles.json\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport TimeRange from \"./TimeRange\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport cities from '../cities.json';\nimport { postData } from \"../utils/common\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { isEqual } from 'lodash';\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\nconst DRAFT_INTERVAL_TIME = 1000 * 10;\n\nfunction CourseAdd({ instructors, studioId, setCourses }) {\n  const showSnackbar = useSnackbar();\n  const [newCourseId, setNewCourseId] = useState(\"\");\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [selectedInstructors, setSelectedInstructors] = useState([]);\n  const [selectedDanceStyles, setSelectedDanceStyles] = useState([]);\n\n  const instructorNamesWithIds = instructors.map(\n    (instructor) => `${instructor.name} - ${instructor.id}`\n  );\n\n  const danceStylesOptions = danceStyles.danceStyles;\n  const currentCity = localStorage.getItem(FILTER_LOCATION_KEY) || \"\";\n\n  const [isReady, setIsReady] = useState(false);\n  const [selectedDurationUnit, setSelectedDurationUnit] = useState(\"\");\n  const [selectedStudio, setSelectedStudio] = useState(null);\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState(currentCity);\n  const [courseTime, setCourseTime] = useState(\"\");\n  const [courseDate, setCourseDate] = useState(dayjs(new Date()));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [step, setStep] = useState(1);\n  const [description, setDescription] = useState('');\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleDanceStylesChange = (event, value) => {\n    setSelectedDanceStyles(value);\n  };\n\n  const handleDurationUnitChange = (event, value) => {\n    setSelectedDurationUnit(value);\n  };\n\n  const handleLevelChange = (event, value) => {\n    setSelectedLevel(value);\n  };\n\n  const handleCityChange = (event, value) => {\n    setSelectedCity(value);\n  };\n\n  const handleSelectStudio = (event, value) => {\n    setSelectedStudio(value);\n  };\n\n  const handleInstructorChange = (event, value) => {\n    setSelectedInstructors(value);\n  };\n\n  const isValidInputs = (form) => {\n    let validationFailed = true;\n    if (\n      !form.name.value ||\n      !form.duration.value ||\n      !form.courseFees.value ||\n      !description ||\n      !selectedDanceStyles?.length ||\n      !selectedInstructors?.length ||\n      !selectedStudio ||\n      !selectedDurationUnit ||\n      !selectedLevel ||\n      !courseTime ||\n      !courseDate ||\n      !selectedCity\n    )\n      validationFailed = false;\n\n    return validationFailed;\n  };\n\n  const resetDraft = async () => {\n    const q = query(\n      collection(db, DRAFT_COLLECTIONS.DRAFT_COURSES),\n      where(\"UserId\", \"==\", JSON.parse(localStorage.getItem(\"userInfo\")).UserId)\n    );\n\n    const querySnapshot = await getDocs(q);\n\n    if (!querySnapshot.empty) {\n      let studios = [];\n\n      querySnapshot.forEach((doc) => {\n        studios.push({ id: doc.id, ...doc.data() });\n      });\n\n      let foundStudio = studios[0];\n\n      const studioRef = doc(\n        db,\n        DRAFT_COLLECTIONS.DRAFT_COURSES,\n        foundStudio.id\n      );\n\n      await deleteDoc(studioRef);\n    }\n  };\n\n  const handleAddCourse = async (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (!isValidInputs(form)) {\n      showSnackbar(\"Please fill all the fields.\", \"error\");\n      return;\n    }\n\n    try {\n      const currentUserEmail = JSON.parse(localStorage.getItem(\"userInfo\")).email;\n      const dbPayload = {\n        courseName: event.target.name.value,\n        danceStyles: selectedDanceStyles,\n        instructors: selectedInstructors\n          ? selectedInstructors?.map?.(\n              (instructor) => instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n            )\n          : null,\n        author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n        UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n        creatorEmail: currentUserEmail,\n        StudioId: selectedStudio\n          ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n          : null,\n        duration: event.target.duration.value,\n        durationUnit: selectedDurationUnit,\n        level: selectedLevel,\n        time: courseTime,\n        date: courseDate.format(\"YYYY-MM-DD\"),\n        price: event.target.courseFees.value,\n        description: description,\n        city: selectedCity,\n        active: true,\n        youtubeViedoLink: event.target.youtubeViedoLink.value,\n      };\n\n      setIsSubmitting(true);\n\n      const notifyEmails = currentUserEmail; \n      const metaData = {\n        entity_name: dbPayload.courseName,\n        time: dbPayload.time,\n        date: dbPayload.date,\n        StudioId : dbPayload.StudioId\n      }\n      const response = await postData(dbPayload, COLLECTIONS.COURSES, notifyEmails,metaData) ;\n      if (response.ok) {\n        const result = await response.json();\n        setNewCourseId(result.id);\n        setCourses((prev) => [...prev, { id: result.id, ...dbPayload }]);\n        clearForm(form);\n        resetDraft();\n        showSnackbar(\"Course successfully added.\", \"success\");\n        setStep((prev) => prev + 1);\n      }\n\n    } catch (error) {\n      console.error(\"Error adding course: \", error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const clearForm = (form) => {\n    form.reset();\n    setSelectedDanceStyles([]);\n    setSelectedInstructors([]);\n    setSelectedStudio(null);\n    setSelectedDurationUnit(\"\");\n    setSelectedLevel(\"\");\n    setCourseTime(\"\");\n    setCourseDate(dayjs(Date.now()));\n    setSelectedCity('');\n    setDescription('');\n  };\n\n  const handleTimeSelect = (startTime, endTime) => {\n    const [currentStartTime, currentEndTime] = courseTime.split(\" - \");\n    let newTime = `${currentStartTime} - ${currentEndTime}`;\n\n    if (startTime !== null) newTime = `${startTime} - ${currentEndTime}`;\n    if (endTime !== null) newTime = `${currentStartTime} - ${endTime}`;\n\n    setCourseTime(newTime);\n  };\n\n  useEffect(() => {\n    async function main() {\n      const form = document.getElementById(\"addStudioForm\");\n\n      try {\n        const q = query(\n          collection(db, DRAFT_COLLECTIONS.DRAFT_COURSES),\n          where(\n            \"UserId\",\n            \"==\",\n            JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n          )\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n          let courses = [];\n\n          querySnapshot.forEach((doc) => {\n            courses.push({ id: doc.id, ...doc.data() });\n          });\n\n          let foundCourse = courses[0];\n\n          form.name.value = foundCourse.name;\n          form.courseFees.value = foundCourse.price;\n          form.duration.value = foundCourse.duration;\n          setDescription(foundCourse?.description || \"\");\n\n          setSelectedDanceStyles(\n            foundCourse?.danceStyles?.length ? foundCourse.danceStyles : []\n          );\n\n          setSelectedInstructors(\n            instructors\n              .filter((instructor) =>\n                foundCourse?.instructors.includes(instructor.id)\n              )\n              .map((instructor) => `${instructor.name} - ${instructor.id}`)\n          );\n\n          const studios = studioId.map((studio) => studio.split(\":\")[1].trim());\n          const currentStudioIndex = studios.findIndex(\n            (studio) => studio === foundCourse?.StudioId\n          );\n          if (currentStudioIndex > 0)\n            setSelectedStudio(studioId[currentStudioIndex]);\n\n          setSelectedDurationUnit(foundCourse.durationUnit);\n\n          setSelectedLevel(foundCourse?.level || \"\");\n          setCourseTime(foundCourse?.time || \"\");\n          setCourseDate(dayjs(foundCourse?.date || Date.now()));\n          setSelectedCity(foundCourse?.city || '');\n        } else {\n          await addDoc(collection(db, DRAFT_COLLECTIONS.DRAFT_COURSES), {\n            name: form.name?.value || \"\",\n            duration: form.duration?.value || \"\",\n            price: form.courseFees?.value || \"\",\n            description: description ,\n\n            danceStyles: selectedDanceStyles,\n            instructors: selectedInstructors\n              ? selectedInstructors?.map?.(\n                  (instructor) =>\n                    instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n                )\n              : null,\n            author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n            UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n            creatorEmail: JSON.parse(localStorage.getItem(\"userInfo\")).email,\n            StudioId: selectedStudio\n              ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n              : null,\n            durationUnit: selectedDurationUnit,\n            level: selectedLevel,\n            time: courseTime,\n            date: courseDate.format(\"YYYY-MM-DD\"),\n            city: selectedCity,\n          });\n        }\n\n        setIsReady(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    main();\n  }, []);\n\n  useEffect(() => {\n    let intervalId = null;\n    let previousState = null; // Keep track of the previous form state.\n    async function main() {\n      const form = document.getElementById(\"addStudioForm\");\n\n      try {\n        const q = query(\n          collection(db, DRAFT_COLLECTIONS.DRAFT_COURSES),\n          where(\n            \"UserId\",\n            \"==\",\n            JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n          )\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n          let openClasses = [];\n\n          querySnapshot.forEach((doc) => {\n            openClasses.push({ id: doc.id, ...doc.data() });\n          });\n\n          let foundOpenClasses = openClasses[0];\n\n          const openClassRef = doc(\n            db,\n            DRAFT_COLLECTIONS.DRAFT_COURSES,\n            foundOpenClasses.id\n          );\n\n          intervalId = setInterval(async () => {\n            try {\n              const currentState = {\n                name: form.name?.value || \"\",\n                price: form.courseFees?.value || \"\",\n                description: description,\n                danceStyles: selectedDanceStyles,\n                instructors: selectedInstructors\n                  ? selectedInstructors?.map?.(\n                      (instructor) =>\n                        instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n                    )\n                  : null,\n                StudioId: selectedStudio\n                  ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n                  : null,\n                duration: form.duration?.value || \"\",\n                durationUnit: selectedDurationUnit,\n                level: selectedLevel,\n                time: courseTime,\n                date: courseDate.format(\"YYYY-MM-DD\"),\n                city: selectedCity,\n              };\n    \n              // Check if the current state is different from the previous state\n              if (!isEqual(previousState, currentState)) {\n                try {\n                  await updateDoc(openClassRef, currentState);\n                  previousState = currentState; // Update previous state after successful save\n                  console.log(\"Next AutoSave in\",DRAFT_INTERVAL_TIME)\n                } catch (error) {\n                  console.error(error);\n                }\n              }else{\n                  console.log(\"Nothing for Autosave to save\")\n              }\n            } catch (error) {\n              console.error(error);\n            }\n          }, DRAFT_INTERVAL_TIME);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    if (isReady) main();\n\n    return () => clearInterval(intervalId);\n  }, [\n    isReady,\n    selectedDanceStyles,\n    selectedInstructors,\n    selectedStudio,\n    selectedDurationUnit,\n    selectedLevel,\n    courseTime,\n    courseDate,\n    selectedCity,\n    description\n  ]);\n\n  useEffect(() => {\n    if (isDarkModeOn) {\n      const toolbarEle = document.getElementsByClassName(\"ql-toolbar ql-snow\")[0]\n      toolbarEle.style.backgroundColor = \"white\";\n\n      const inputEle = document.getElementsByClassName(\"ql-container ql-snow\")[0];\n      inputEle.style.backgroundColor = \"white\";\n\n      const editEle = document.getElementsByClassName(\"ql-editor \")[0];\n      console.log(editEle);\n      inputEle.style.color = \"black\";      \n    }\n  }, [isDarkModeOn]);\n\n  return (\n    <div>\n      {step === 1 && (\n        <Form\n          id=\"addStudioForm\"\n          onSubmit={handleAddCourse}\n          style={{\n            backgroundColor: isDarkModeOn ? \"#202020\" : \"\",\n            color: isDarkModeOn ? \"white\" : \"black\",\n          }}\n        >\n          <Form.Group controlId=\"formBasicAdd\">\n            <div>\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Couese Name</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"textarea\"\n                    placeholder=\"Enter course name\"\n                    name=\"name\"\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Dance Styles</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      multiple\n                      id=\"tags-standard\"\n                      options={danceStylesOptions}\n                      value={selectedDanceStyles}\n                      onChange={handleDanceStylesChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Dance Styles\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Names of Instructors</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      multiple\n                      id=\"tags-standard\"\n                      options={instructorNamesWithIds}\n                      value={selectedInstructors}\n                      onChange={handleInstructorChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Instructors\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Row>\n                    <Col md={6}>\n                      <Form.Label>Duration</Form.Label>\n                      <Form.Control\n                        rows={1}\n                        style={{\n                          backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                          color: isDarkModeOn ? \"white\" : \"black\",\n                        }}\n                        type=\"number\"\n                        placeholder=\"Enter Duration\"\n                        name=\"duration\"\n                      />\n                    </Col>\n                    <Col md={6}>\n                      <Form.Label>Duration In Units</Form.Label>\n                      <ThemeProvider theme={darkTheme}>\n                        <CssBaseline />\n\n                        <Autocomplete\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                          id=\"tags-standard\"\n                          options={[\"Months\", \"Weeks\", \"Days\"]}\n                          value={selectedDurationUnit}\n                          onChange={handleDurationUnitChange}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              variant=\"standard\"\n                              placeholder=\"Select Duration In Units\"\n                              style={{\n                                backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                                color: isDarkModeOn ? \"white\" : \"black\",\n                              }}\n                            />\n                          )}\n                        />\n                      </ThemeProvider>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <TimeRange\n                    defaultTime={courseTime || \"00:00-00:00\"}\n                    handleSelect={handleTimeSelect}\n                  />\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Course Start Date</Form.Label>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DemoContainer components={[\"DatePicker\"]}>\n                      <ThemeProvider theme={darkTheme}>\n                        <CssBaseline />\n                        <DatePicker\n                          sx={{ width: \"100%\" }}\n                          value={courseDate}\n                          onChange={(newValue) => setCourseDate(newValue)}\n                        />\n                      </ThemeProvider>\n                    </DemoContainer>\n                  </LocalizationProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Level</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={[LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]}\n                      value={selectedLevel}\n                      onChange={handleLevelChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Level\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Fees/Price</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"number\"\n                    placeholder=\"Enter fees/price\"\n                    name=\"courseFees\"\n                  />\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>City</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={cities.cities}\n                      value={selectedCity}\n                      onChange={handleCityChange}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select City\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n              </Row>\n\n              <br />\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Studio</Form.Label>\n                  <ThemeProvider theme={darkTheme}>\n                    <CssBaseline />\n\n                    <Autocomplete\n                      style={{\n                        backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                        color: isDarkModeOn ? \"white\" : \"black\",\n                      }}\n                      id=\"tags-standard\"\n                      options={studioId}\n                      value={selectedStudio}\n                      onChange={handleSelectStudio}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"standard\"\n                          placeholder=\"Select Studio\"\n                          style={{\n                            backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                            color: isDarkModeOn ? \"white\" : \"black\",\n                          }}\n                        />\n                      )}\n                    />\n                  </ThemeProvider>\n                </Col>\n                <Col md={6}>\n                  <Form.Label>Brief Description</Form.Label>\n                  <ReactQuill\n                    theme=\"snow\"\n                    placeholder=\"Enter Description\"\n                    value={description}\n                    onChange={setDescription}\n                  />\n                </Col>\n              </Row>\n\n              <Row>\n                <Col md={6}>\n                  <Form.Label>Youtube video link</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    style={{\n                      backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n                      color: isDarkModeOn ? \"white\" : \"black\",\n                    }}\n                    type=\"text\"\n                    placeholder=\"Enter youtube video link\"\n                    name=\"youtubeViedoLink\"\n                  />\n                </Col>\n              </Row>\n\n              <hr></hr>\n\n              <Row>\n                <Col xs={6}></Col>\n                <Col xs={6} className=\"d-flex justify-content-end\">\n                  <MuiButton\n                    variant=\"contained\"\n                    style={{\n                      color: \"white\",\n                      backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                    }}\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    Next\n                  </MuiButton>\n                </Col>\n              </Row>\n            </div>\n          </Form.Group>\n        </Form>\n      )}\n      {isSubmitting && <LinearProgress />}\n      {step === 2 && (\n        <>\n          <Row>\n            <Col>\n              <ImageUpload\n                entityId={newCourseId}\n                title={\"Course Images\"}\n                storageFolder={STORAGES.COURSEICON}\n                maxImageCount={1}\n              ></ImageUpload>\n            </Col>\n          </Row>\n          <Row style={{ margin: \"1rem 0\" }}>\n            <Col style={{ textAlign: \"right\" }}>\n              <MuiButton\n                variant=\"contained\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: isDarkModeOn ? \"#892cdc\" : \"black\",\n                }}\n                onClick={() => setStep((prev) => prev - 1)}\n              >\n                Done\n              </MuiButton>\n            </Col>\n          </Row>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default CourseAdd;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { LinearProgress, Button as MuiButton } from \"@mui/material\";\nimport { db } from \"../config\";\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { COLLECTIONS, LEVELS } from \"../constants\";\nimport ImageUpload from \"./ImageUpload\";\nimport { STORAGES } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport danceStyles from \"../danceStyles.json\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport TimeRange from \"./TimeRange\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\nimport cities from '../cities.json';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { putData } from \"../utils/common\";\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\n\nfunction CourseUpdate({ courseId, instructors, studioId }) {\n  const currentCity = localStorage.getItem(FILTER_LOCATION_KEY) || \"\";\n\n  const showSnackbar = useSnackbar();\n\n  const [selectedStudio, setSelectedStudio] = useState(null);\n  const [selectedInstructors, setSelectedInstructors] = useState([]);\n\n  const danceStylesOptions = danceStyles.danceStyles;\n  const [selectedDanceStyles, setSelectedDanceStyles] = useState([]);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const [selectedDurationUnit, setSelectedDurationUnit] = useState(\"\");\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState(currentCity);\n  const [courseTime, setCourseTime] = useState(\"\");\n  const [courseDate, setCourseDate] = useState(dayjs(new Date()));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [description, setDescription] = useState('');\n\n  const instructorNamesWithIds = instructors.map(\n    (instructor) => `${instructor.name} - ${instructor.id}`\n  );\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\",\n    },\n  });\n\n  const handleDanceStylesChange = (event, value) => {\n    setSelectedDanceStyles(value);\n  };\n\n  const baseStyles = {\n    backgroundColor: isDarkModeOn ? \"#333333\" : \"\",\n    color: isDarkModeOn ? \"white\" : \"black\",\n    height: 'auto',\n  };\n\n  const [selectedCourseId, setSelectedCourseId] = useState(\"\");\n  const [selectedCourse, setSelectedCourse] = useState(null);\n\n  const isValidInputs = (form) => {\n    let validationFailed = true;\n    if (\n      !form.name.value ||\n      !form.courseFees.value ||\n      !form.duration.value ||\n      !description ||\n      !selectedDanceStyles?.length ||\n      !selectedInstructors?.length ||\n      !selectedStudio ||\n      !selectedDurationUnit ||\n      !selectedLevel ||\n      !courseTime ||\n      !courseDate ||\n      !selectedCity\n    )\n      validationFailed = false;\n\n    return validationFailed;\n  };\n\n  const handleSelectStudio = async (event) => {\n    event.preventDefault();\n    const selected = event.target.value;\n    const selectedId = selected.split(\":\").pop().trim();\n    setSelectedCourseId(selectedId);\n    try {\n      const studioDoc = await getDoc(doc(db, COLLECTIONS.COURSES, selectedId));\n      if (studioDoc.exists) {\n        setSelectedCourse(studioDoc.data());\n      } else {\n        setSelectedCourse(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching course data:\", error, selectedId);\n    }\n  };\n\n  const handleUpdateStudio = async (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (!selectedCourseId) return;\n\n    if (!isValidInputs(form)) {\n      showSnackbar(\"Please fill all the fields.\", \"error\");\n      return;\n    }\n\n    try {\n      const dbPayload = {\n        courseName: form.name.value,\n        duration: form.duration.value,\n        price: form.courseFees.value,\n        description: description,\n        danceStyles: selectedDanceStyles,\n        instructors: selectedInstructors\n          ? selectedInstructors?.map?.(\n              (instructor) => instructor?.split?.(\"-\")?.[1]?.trim?.() || null\n            )\n          : null,\n        author: JSON.parse(localStorage.getItem(\"userInfo\")).displayName,\n        UserId: JSON.parse(localStorage.getItem(\"userInfo\")).UserId,\n        creatorEmail: JSON.parse(localStorage.getItem(\"userInfo\")).email,\n        StudioId: selectedStudio\n          ? selectedStudio?.split?.(\":\")?.[1]?.trim?.() || null\n          : null,\n        durationUnit: selectedDurationUnit,\n        level: selectedLevel,\n        time: courseTime,\n        date: courseDate.format(\"YYYY-MM-DD\"),\n        city: selectedCity,\n        youtubeViedoLink: form.youtubeViedoLink.value,\n      };\n\n      setIsSubmitting(true);\n\n      const response = await putData(dbPayload, COLLECTIONS.COURSES, selectedCourseId) \n      if (response.ok) {\n        clearForm(form);\n        showSnackbar(\"Open class successfully updated.\", \"success\");\n      }else{\n        showSnackbar(`Error ${response}.`, \"error\");\n      }\n\n    } catch (error) {\n      console.error(\"Error updating course: \", error);\n      showSnackbar(error?.message || \"Something went wrong\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n    document.getElementById(\"updateStudioForm\").reset();\n  };\n\n  const clearForm = (form) => {\n    form.reset();\n    setSelectedDanceStyles([]);\n    setSelectedInstructors([]);\n    setSelectedStudio(null);\n    setSelectedDurationUnit(\"\");\n    setSelectedLevel(\"\");\n    setCourseTime(\"\");\n    setCourseDate(dayjs(new Date()));\n    setSelectedCity('');\n    setSelectedCourse(null);\n    setSelectedCourseId(\"\");\n    setDescription('');\n  };\n\n  const handleDurationUnitChange = (event, value) => {\n    setSelectedDurationUnit(value);\n  };\n\n  const handleLevelChange = (event, value) => {\n    setSelectedLevel(value);\n  };\n\n  const handleCityChange = (event, value) => {\n    setSelectedCity(value);\n  };\n\n  const handleSelectStudioValue = (event, value) => {\n    setSelectedStudio(value);\n  };\n\n  const handleInstructorChange = (event, value) => {\n    setSelectedInstructors(value);\n  };\n\n  const handleTimeSelect = (startTime, endTime) => {\n    const [currentStartTime, currentEndTime] = courseTime.split(\" - \");\n    let newTime = `${currentStartTime} - ${currentEndTime}`;\n\n    if (startTime !== null) newTime = `${startTime} - ${currentEndTime}`;\n    if (endTime !== null) newTime = `${currentStartTime} - ${endTime}`;\n\n    setCourseTime(newTime);\n  };\n\n  useEffect(() => {\n    if (selectedCourse) {\n      const addedInstructors = instructors\n        .filter((instructor) =>\n          selectedCourse.instructors.includes(instructor.id)\n        )\n        .map((instructor) => `${instructor.name} - ${instructor.id}`);\n\n      setSelectedInstructors(addedInstructors);\n      if (selectedCourse && selectedCourse.danceStyles)\n        setSelectedDanceStyles(selectedCourse.danceStyles);\n\n      if (selectedCourse && selectedCourse.durationUnit)\n        setSelectedDurationUnit(selectedCourse.durationUnit);\n\n      if (selectedCourse && selectedCourse.level)\n        setSelectedLevel(selectedCourse.level);\n\n      if (selectedCourse && selectedCourse.time)\n        setCourseTime(selectedCourse.time);\n\n      if (selectedCourse && selectedCourse.date)\n        setCourseDate(dayjs(selectedCourse.date));\n\n      if (selectedCourse && selectedCourse.StudioId) {\n        const studios = studioId.map((studio) => studio.split(\":\")[1].trim());\n        const currentStudioIndex = studios.findIndex(\n          (studio) => studio === selectedCourse.StudioId\n        );\n        setSelectedStudio(studioId[currentStudioIndex] || null);\n      }\n\n      setSelectedCity(selectedCourse?.city || '');\n      setDescription(selectedCourse?.description || '');\n    }\n  }, [selectedCourse]);\n\n  useEffect(() => {\n    if (isDarkModeOn) {\n      const toolbarEle = document.getElementsByClassName(\"ql-toolbar ql-snow\")[0]\n      toolbarEle.style.backgroundColor = \"white\";\n\n      const inputEle = document.getElementsByClassName(\"ql-container ql-snow\")[0];\n      inputEle.style.backgroundColor = \"white\";\n\n      const editEle = document.getElementsByClassName(\"ql-editor \")[0];\n      console.log(editEle);\n      inputEle.style.color = \"black\";\n    }\n  }, [isDarkModeOn]);\n\n  return (\n    <div\n      style={{\n        backgroundColor: isDarkModeOn ? \"#202020\" : \"\",\n        color: isDarkModeOn ? \"white\" : \"black\",\n      }}\n    >\n      <br></br>\n      <Form id=\"updateStudioForm\" onSubmit={handleUpdateStudio}>\n        <Form.Group controlId=\"formBasicUpdate\">\n          <Form.Label>Id</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"nameId\"\n            style={{\n              ...baseStyles,\n            }}\n            onChange={handleSelectStudio}\n          >\n            <option value=\"\">Select a course...</option>\n            {courseId && courseId.length > 0 ? (\n              courseId.map((courseItem) => (\n                <option key={courseItem} value={courseItem}>\n                  {courseItem}\n                </option>\n              ))\n            ) : (\n              <option value=\"\">No course yet!</option>\n            )}\n          </Form.Control>\n\n          <div>\n            <Row>\n              <Col md={6}>\n                <ImageUpload\n                  entityId={selectedCourseId}\n                  title={\"Course Images\"}\n                  storageFolder={STORAGES.COURSEICON}\n                  maxImageCount={1}\n                ></ImageUpload>\n              </Col>\n\n              <Col md={6}>\n                <br />\n                <Form.Label>Course Name</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={selectedCourse ? selectedCourse.courseName : \"\"}\n                  style={{\n                    ...baseStyles,\n                  }}\n                  type=\"textarea\"\n                  placeholder=\"Enter course name\"\n                  name=\"name\"\n                />\n\n                <br />\n\n                <Form.Label>Dance Styles</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      ...baseStyles,\n                    }}\n                    multiple\n                    id=\"tags-standard\"\n                    options={danceStylesOptions}\n                    value={selectedDanceStyles}\n                    onChange={handleDanceStylesChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Dance Styles\"\n                        style={{\n                          ...baseStyles,\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n\n                <br />\n\n                <Form.Label>Names of Instructors</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n                  <Autocomplete\n                    style={{\n                      ...baseStyles,\n                    }}\n                    multiple\n                    id=\"tags-standard\"\n                    options={instructorNamesWithIds}\n                    value={selectedInstructors}\n                    onChange={handleInstructorChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Instructors\"\n                        style={{\n                          ...baseStyles,\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Row>\n                  <Col md={6}>\n                    <Form.Label>Duration</Form.Label>\n                    <Form.Control\n                      defaultValue={\n                        selectedCourse ? selectedCourse.duration : \"\"\n                      }\n                      rows={1}\n                      style={{\n                        ...baseStyles,\n                      }}\n                      type=\"number\"\n                      placeholder=\"Enter Duration\"\n                      name=\"duration\"\n                    />\n                  </Col>\n                  <Col md={6}>\n                    <Form.Label>Duration In Units</Form.Label>\n                    <ThemeProvider theme={darkTheme}>\n                      <CssBaseline />\n\n                      <Autocomplete\n                        style={{\n                          ...baseStyles,\n                        }}\n                        id=\"tags-standard\"\n                        options={[\"Months\", \"Weeks\", \"Days\"]}\n                        value={selectedDurationUnit}\n                        onChange={handleDurationUnitChange}\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            variant=\"standard\"\n                            placeholder=\"Select Duration In Units\"\n                            style={{\n                              ...baseStyles,\n                            }}\n                          />\n                        )}\n                      />\n                    </ThemeProvider>\n                  </Col>\n                </Row>\n              </Col>\n\n              <Col md={6}>\n                <TimeRange\n                  defaultTime={courseTime || \"00:00-00:00\"}\n                  handleSelect={handleTimeSelect}\n                />\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Course Start Date</Form.Label>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={[\"DatePicker\"]}>\n                    <ThemeProvider theme={darkTheme}>\n                      <CssBaseline />\n                      <DatePicker\n                        sx={{ width: \"100%\" }}\n                        value={courseDate}\n                        onChange={(newValue) => setCourseDate(newValue)}\n                      />\n                    </ThemeProvider>\n                  </DemoContainer>\n                </LocalizationProvider>\n              </Col>\n              <Col md={6}>\n                <Form.Label>Level</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      ...baseStyles,\n                    }}\n                    id=\"tags-standard\"\n                    options={[LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]}\n                    value={selectedLevel}\n                    onChange={handleLevelChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Level\"\n                        style={{\n                          ...baseStyles,\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Fees/Price</Form.Label>\n                <Form.Control\n                  rows={1}\n                  defaultValue={selectedCourse ? selectedCourse.price : \"\"}\n                  style={{\n                    ...baseStyles,\n                  }}\n                  type=\"number\"\n                  placeholder=\"Enter fees/price\"\n                  name=\"courseFees\"\n                />\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>City</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      ...baseStyles,\n                    }}\n                    id=\"tags-standard\"\n                    options={cities.cities}\n                    value={selectedCity}\n                    onChange={handleCityChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select City\"\n                        style={{\n                          ...baseStyles,\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n              <Col md={6}>\n                <Form.Label>Studio</Form.Label>\n                <ThemeProvider theme={darkTheme}>\n                  <CssBaseline />\n\n                  <Autocomplete\n                    style={{\n                      ...baseStyles,\n                    }}\n                    id=\"tags-standard\"\n                    options={studioId}\n                    value={selectedStudio}\n                    onChange={handleSelectStudioValue}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Select Studio\"\n                        style={{\n                          ...baseStyles,\n                        }}\n                      />\n                    )}\n                  />\n                </ThemeProvider>\n              </Col>\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col md={6}>\n                <Form.Label>Brief Description</Form.Label>\n                <ReactQuill\n                  theme=\"snow\"\n                  placeholder=\"Enter Description\"\n                  value={description}\n                  onChange={setDescription}\n                />\n              </Col>\n              <Col md={6}>\n              <Form.Label>Youtube video link</Form.Label>\n                  <Form.Control\n                    rows={1}\n                    defaultValue={\n                      selectedCourse ? selectedCourse.youtubeViedoLink : \"\"\n                    }\n                    style={{\n                      ...baseStyles,\n                    }}\n                    type=\"text\"\n                    placeholder=\"Enter youtube video link\"\n                    name=\"youtubeViedoLink\"\n                  />\n              </Col>\n            </Row>\n\n            <hr></hr>\n            <hr></hr>\n\n            <Row>\n              <Col xs={6}></Col>\n              <Col xs={6} className=\"d-flex justify-content-end\">\n                <MuiButton\n                  variant=\"contained\"\n                  style={{\n                    ...baseStyles,\n                  }}\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update Course\n                </MuiButton>\n              </Col>\n            </Row>\n          </div>\n        </Form.Group>\n        {isSubmitting && <LinearProgress />}\n      </Form>\n    </div>\n  );\n}\n\nexport default CourseUpdate;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../config\";\nimport {doc,getDoc,collection,where,getDocs,query,updateDoc} from \"firebase/firestore\";\nimport { COLLECTIONS } from \"../constants\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport { useAuth } from \"../context/AuthContext\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport { Box } from \"@mui/material\";\nimport CardSlider from \"../Components/CourseCardSlider\";\nimport CourseAdd from \"../Components/CourseAdd\";\nimport CourseUpdate from \"../Components/CourseUpdate\";\n\nfunction CreatorCourse() {\n  const [studioId, setStudioId] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [coursesId, setCoursesId] = useState([]);\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [instructors, setInstructors] = useState([]);\n  const [isCreator, setIsCreator] = useState(false);\n  const [premiumTill, setPremiumTill] = useState(-1);\n  const { currentUser } = useAuth();\n  const [value, setValue] = React.useState(\"1\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const activateCourse = async (courseId) => {\n    try {\n      const docRef = doc(db, COLLECTIONS.COURSES, courseId);\n      await updateDoc(docRef, { active: true });\n\n      setCourses((prev) =>\n        prev.map((courses) =>\n          courses.id === courseId ? { ...courses, active: true } : courses\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deactivateCourse = async (courseId) => {\n    try {\n      const docRef = doc(db, COLLECTIONS.COURSES, courseId);\n      await updateDoc(docRef, { active: false });\n\n      setCourses((prev) =>\n        prev.map((courses) =>\n          courses.id === courseId ? { ...courses, active: false } : courses\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const getCreatorMode = async (event) => {\n      try {\n        const userRef = doc(db, \"User\", currentUser.uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          if (userSnap.data() != null) {\n            setIsCreator(userSnap.data().CreatorMode);\n            setPremiumTill(userSnap.data().isPremium);\n          }\n        }\n      } catch (error) {\n        console.log(\" error\");\n      }\n    };\n\n    getCreatorMode();\n  }, [isCreator]);\n\n  useEffect(() => {\n    const fetchInstructors = async () => {\n      let userId = null;\n      if (\n        JSON.parse(localStorage.getItem(\"userInfo\")) &&\n        JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n      ) {\n        userId = JSON.parse(localStorage.getItem(\"userInfo\")).UserId;\n      }\n      if (!userId) {\n        alert(\"User not found\");\n        return;\n      }\n\n      const instructorRef = collection(db, COLLECTIONS.INSTRUCTORS);\n      const q = query(instructorRef, where(\"createdBy\", \"==\", userId));\n      const querySnapshot = await getDocs(q);\n\n      const instructorsList = [];\n      querySnapshot.forEach((doc) => {\n        instructorsList.push({\n          id: doc.id,\n          name: doc.data().name,\n        });\n      });\n      setInstructors(instructorsList);\n    };\n\n    fetchInstructors();\n  }, []);\n\n  useEffect(() => {\n    const getStudioCreated = async () => {\n      const q = query(\n        collection(db, COLLECTIONS.STUDIO),\n        where(\n          \"UserId\",\n          \"==\",\n          JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n        )\n      );\n\n      const querySnapshot = await getDocs(q);\n      const studiosOfUser = querySnapshot.docs\n        .filter((doc) => doc.data().studioName)\n        .map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n          };\n        });\n      setStudioId(\n        studiosOfUser.map(\n          (studio) => String(studio.studioName) + \" :\" + String(studio.id)\n        )\n      );\n    };\n\n    getStudioCreated();\n  }, []);\n\n  useEffect(() => {\n    const getCoursesCreated = async () => {\n      const q = query(\n        collection(db, COLLECTIONS.COURSES),\n        where(\n          \"UserId\",\n          \"==\",\n          JSON.parse(localStorage.getItem(\"userInfo\")).UserId\n        )\n      );\n      const querySnapshot = await getDocs(q);\n      const coursesOfUserPromise = querySnapshot.docs\n        .filter((doc) => doc.data().courseName)\n        .map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n          };\n        }).map(async (courses) => {\n          const docRef = doc(db, COLLECTIONS.STUDIO, courses?.StudioId);\n          const docSnap = await getDoc(docRef);\n          return { ...courses, studioDetails: docSnap.data() };\n        });\n      const coursesOfUser = await Promise.all(coursesOfUserPromise);\n      localStorage.setItem(\"CourseCreated\", JSON.stringify(coursesOfUser));\n      setCourses(coursesOfUser);\n      setCoursesId(\n        coursesOfUser.map(\n          (courses) => String(courses.courseName) + \" :\" + String(courses.id)\n        )\n      );\n    };\n\n    getCoursesCreated();\n  }, [setCourses]);\n\n  useEffect(() => {\n    const coursesOfUser =\n      JSON.parse(localStorage.getItem(\"CourseCreated\")) || [];\n      setCourses(coursesOfUser);\n\n    const coursesIdList = coursesOfUser.map(\n      (courses) => `${courses.courseName} : ${courses.id}`\n    );\n    setCoursesId(coursesIdList);\n  }, [setCoursesId]);\n\n  return (\n    <div>\n      <br></br>\n      {isCreator ? (\n        <>\n          <Box sx={{ width: \"100%\", typography: \"body1\" }}>\n            <TabContext value={value}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab\n                    style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                    label=\"Add Course\"\n                    value=\"1\"\n                  />\n                  <Tab\n                    style={{ color: isDarkModeOn ? \"white\" : \"black\" }}\n                    label=\"Update Course\"\n                    value=\"2\"\n                  />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <CourseAdd\n                  instructors={instructors}\n                  studioId={studioId}\n                  setCourses={setCourses}\n                />\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <>\n                  <CourseUpdate\n                    instructors={instructors}\n                    courseId={coursesId}\n                    studioId={studioId}\n                  />\n                </>\n              </TabPanel>\n            </TabContext>\n          </Box>\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {courses.length > 0 && (\n        <>\n          <h3 style={{ color: isDarkModeOn ? \"white\" : \"black\" }}>\n            Your Courses\n          </h3>\n\n          <CardSlider\n            dataList={courses}\n            activateCourse={activateCourse}\n            deactivateCourse={deactivateCourse}\n            actionsAllowed\n          />\n        </>\n      )}\n    </div>\n  );\n}\nexport default CreatorCourse;\n","import { COLORS, SERVER_URLS,BASEURL_DEV,BASEURL_PROD } from \"../constants\";\n\nexport async function postData(dbPayload, collection_name, notify, metadata) {\n  const BASEURL = BASEURL_PROD;\n  const endpoint = 'crud/newEntity/'; // Define your endpoint here\n  const authToken = localStorage.getItem(\"authToken\");\n  try {\n    const response = await fetch(BASEURL + endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        data: dbPayload,\n        collection_name: collection_name,\n        notify: notify,\n        metadata : metadata,\n      }),\n    });\n\n    if (!response.ok) {\n      console.log('Error in postData:', response);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return response;\n  } catch (error) {\n    console.error('Error in postData:', error);\n    throw error;\n  }\n}\n\nexport async function putData(dbPayload, collection_name, entity_id, notify = null, metadata = null) {\n  const BASEURL = BASEURL_PROD;\n  const endpoint = `crud/updateEntity/${entity_id}`;\n  const authToken = localStorage.getItem(\"authToken\");\n  try {\n    const response = await fetch(BASEURL + endpoint, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        data: dbPayload,\n        collection_name: collection_name,\n        notify: notify,\n        metadata : metadata,\n      }),\n    });\n\n    if (!response.ok) {\n      console.log('Error in postData:', response);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return response;\n  } catch (error) {\n    console.error('Error in postData:', error);\n    throw error;\n  }\n}\n\nexport const getRandomColor = () => {\n  const colorKeys = Object.keys(COLORS);\n  const randomKey = colorKeys[Math.floor(Math.random() * colorKeys.length)];\n  return COLORS[randomKey];\n};\n\nexport const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const bookEntity = async (bookingData) => {\n  const url = `${SERVER_URLS.CLOUD}bookings/bookEntity/`; \n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userId: bookingData.userId,\n        entityType: bookingData.entityType,\n        entityId: bookingData.entityId,\n        associatedStudioId: bookingData.associatedStudioId,\n        emailLearner: bookingData.emailLearner,\n        personsAllowed: bookingData.personsAllowed,\n        pricePerPerson: bookingData.pricePerPerson,\n      })\n    });\n\n    const result = await response.json();\n    \n    if (response.ok) {\n      console.log('Booking successful:', result);\n      return result;  // Return the successful result\n    } else {\n      console.error('Booking failed:', result);\n      return result;  // Return null or an error message\n    }\n    \n  } catch (error) {\n    console.error('Error occurred while booking:', error);\n    return null;  // Return null or an error message\n  }\n};\n\n\n// Function to decode a Unicode (UTF-8) encoded string back to the original text\nexport const decodeUnicode = (unicodeString) => {\n  const utf8Encoded = unicodeString.split('').map((c) => c.charCodeAt(0));\n  const textDecoder = new TextDecoder();\n  return textDecoder.decode(new Uint8Array(utf8Encoded));\n};\n\nexport const convertToHtmlEntities= (text) =>{\n  return text.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\n      return '&#' + i.charCodeAt(0) + ';';\n  });\n}\n\nexport const getYoutubeVideoId = (link)=> {\n  console.log(\"MediaDisplay\", link)\n  if (!link){\n    return null\n  }\n  const text = link.trim();\n  const youtubeRegExp = /(?:https?:\\/\\/)?(?:www\\.|m\\.)?(?:youtube\\.com\\/(?:watch\\?v=|embed\\/|v\\/|shorts\\/)|youtu\\.be\\/)([\\w\\-]+)/;\n  const match = text.match(youtubeRegExp);\n  let videoId = null;\n\n  if (match) {\n    videoId = match[1];\n  }\n  console.log(\"MediaDisplay\", videoId)\n  return videoId\n}\n\nexport const formatDateString = (dateString = \"\") => {\n  // Split the input date string\n  const [year, month, day] = dateString.split('-');\n\n  // Create an array of month names\n  const monthNames = [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n      'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n  ];\n\n  // Determine the ordinal suffix for the day\n  const daySuffix = (day) => {\n      const lastDigit = day % 10;\n      const suffix = (lastDigit === 1 && day !== '11') ? 'st' :\n                     (lastDigit === 2 && day !== '12') ? 'nd' :\n                     (lastDigit === 3 && day !== '13') ? 'rd' : 'th';\n      return `${day}${suffix}`;\n  };\n\n  // Format and return the final date string\n  return `${daySuffix(day)} ${monthNames[parseInt(month) - 1]}, ${year}`;\n}\n\nexport const gradientStyles = [\n  { background: 'linear-gradient(to bottom right, #FFD700, #FFA500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #00BFFF, #1E90FF)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #32CD32, #008000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #FFA500, #FF4500)', color: 'black' },\n  { background: 'linear-gradient(to bottom right, #DC143C, #8B0000)', color: 'white' },\n  { background: 'linear-gradient(to bottom right, #000000, #2F4F4F)', color: 'white' },\n];"],"names":["WorkshopDetailsModal","_ref","_JSON$parse","_userDetails$BookedCo","_userDetails$BookedCo2","_dataItem$studioDetai","_dataItem$studioDetai2","_dataItem$studioDetai3","open","handleClose","dataItem","activateCourse","deactivateCourse","actionsAllowed","showSnackbar","useSnackbar","isDarkModeOn","useSelector","selectDarkModeStatus","isBooking","setIsBooking","useState","userDetails","setUserDetails","currentUser","JSON","parse","localStorage","getItem","UserId","useEffect","async","userRef","doc","db","userSnap","getDoc","exists","data","error","console","log","getUser","isCreatorOfWorkshop","isBooked","BookedCourses","includes","call","id","whatsappMessage","encodeURIComponent","shareUrl","concat","window","location","host","_jsx","Modal","onClose","style","zIndex","children","_jsxs","Box","sx","position","top","left","transform","maxHeight","overflow","width","xs","md","bgcolor","borderWidth","borderStyle","borderColor","boxShadow","p","borderRadius","Grid","container","spacing","rowGap","item","lg","src","imageUrl","height","objectFit","display","flexDirection","justifyContent","flex","MUITypography","variant","component","color","dayjs","date","format","time","mt","venue","duration","durationUnit","flexWrap","alignSelf","price","Button","onClick","addDoc","collection","COLLECTIONS","BOOKINGS","StudioId","CourseId","bookingDate","Date","now","updateDoc","prev","_objectSpread","message","disabled","textTransform","fontSize","padding","border","lineHeight","backgroundColor","my","textAlign","columnGap","name","danceStyles","map","dance","ShareButton","studioDetails","studioName","whatsappNumber","IconButton","size","target","href","whatsAppImage","alt","mobileNumber","callImage","className","dangerouslySetInnerHTML","__html","description","active","mr","CourseCard","_ref2","_dataItem$studioDetai4","setImageUrl","isWorkshopDetailsModalOpen","setIsWorkshopDetailsModalOpen","workshopId","url","readDocumentWithImageUrl","STORAGES","COURSEICON","fetchImageUrl","cardStyle","marginRight","maxWidth","transition","_Fragment","Card","cursor","handleWorkshopDetailsModalOpen","AspectRatio","ratio","loading","Stack","direction","bottom","slice","form","index","Chip","marginLeft","marginBottom","trim","CardContent","paddingTop","fontWeight","textColor","underline","overlay","extDecoder","background","Typography","level","noWrap","marginTop","handleWorkshopDetailsModalClose","dataList","ImageUpload","entityId","storageFolder","title","maxImageCount","updateMode","disable","selectedFiles","setSelectedFiles","uploadedFiles","setUploadedFiles","newFiles","setNewFiles","deletedFiles","setDeletedFiles","progressDelete","setProgressDelete","progressUpdate","setProgressUpdate","filesizes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","fetchStudioImages","truncatedFiles","alert","calculateDelta","selectedFileIds","file","uploadedFileIds","imagesToDelete","filter","newImages","folderPath","folderRef","ref","storage","fileList","listAll","files","Promise","all","items","downloadURL","getDownloadURL","fileRef","filename","fileURL","STUDIOIMAGES","type","onChange","e","Array","from","updatedFiles","forEach","reader","FileReader","onloadend","push","shortid","filetype","fileimage","result","datetime","lastModifiedDate","toLocaleString","filesize","prevFiles","readAsDataURL","multiple","match","confirm","fileToDelete","find","prevDeletedFiles","handleDeleteSelectedFile","right","DeleteIcon","deleteAllImagesInFolder","uploadImages","deleteImages","hidden","value","max","defaultProps","_defaultTime$split$","defaultTime","handleSelect","startTime_i","split","endTime_i","renderTimeOptions","defaultValue","timeOptions","generateTimeOptions","options","option_AM","option_PM","hours","minutes","formattedMinutes","toString","padStart","formattedHours","option","Row","Col","Form","Group","Label","Control","as","instructors","studioId","setCourses","newCourseId","setNewCourseId","selectedInstructors","setSelectedInstructors","selectedDanceStyles","setSelectedDanceStyles","instructorNamesWithIds","instructor","danceStylesOptions","currentCity","isReady","setIsReady","selectedDurationUnit","setSelectedDurationUnit","selectedStudio","setSelectedStudio","selectedLevel","setSelectedLevel","selectedCity","setSelectedCity","courseTime","setCourseTime","courseDate","setCourseDate","isSubmitting","setIsSubmitting","step","setStep","setDescription","darkTheme","createTheme","palette","mode","clearForm","reset","document","getElementById","q","query","DRAFT_COLLECTIONS","DRAFT_COURSES","where","querySnapshot","getDocs","empty","_form$name","_form$duration","_form$courseFees","_selectedInstructors$2","_selectedStudio$split5","_selectedStudio$split6","_selectedStudio$split7","_selectedStudio$split8","courseFees","_instructor$split2","_instructor$split2$ca","_instructor$split2$ca2","_instructor$split2$ca3","author","displayName","creatorEmail","email","city","_foundCourse$danceSty","courses","foundCourse","currentStudioIndex","studio","findIndex","main","intervalId","previousState","openClasses","foundOpenClasses","openClassRef","setInterval","_form$name2","_form$courseFees2","_selectedInstructors$3","_selectedStudio$split9","_selectedStudio$split10","_selectedStudio$split11","_selectedStudio$split12","_form$duration2","currentState","_instructor$split3","_instructor$split3$ca","_instructor$split3$ca2","_instructor$split3$ca3","isEqual","err","clearInterval","getElementsByClassName","inputEle","editEle","onSubmit","event","preventDefault","validationFailed","isValidInputs","_selectedInstructors$","_selectedStudio$split","_selectedStudio$split2","_selectedStudio$split3","_selectedStudio$split4","currentUserEmail","dbPayload","courseName","_instructor$split","_instructor$split$cal","_instructor$split$cal2","_instructor$split$cal3","youtubeViedoLink","notifyEmails","metaData","entity_name","response","postData","COURSES","ok","json","studios","foundStudio","studioRef","deleteDoc","resetDraft","controlId","rows","placeholder","ThemeProvider","theme","CssBaseline","Autocomplete","handleDanceStylesChange","renderInput","params","TextField","handleInstructorChange","handleDurationUnitChange","TimeRange","handleTimeSelect","startTime","endTime","currentStartTime","currentEndTime","newTime","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DatePicker","newValue","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","handleLevelChange","cities","handleCityChange","handleSelectStudio","ReactQuill","MuiButton","LinearProgress","margin","courseId","baseStyles","selectedCourseId","setSelectedCourseId","selectedCourse","setSelectedCourse","addedInstructors","putData","selectedId","pop","studioDoc","courseItem","handleSelectStudioValue","setStudioId","coursesId","setCoursesId","setInstructors","isCreator","setIsCreator","premiumTill","setPremiumTill","useAuth","setValue","React","uid","CreatorMode","isPremium","getCreatorMode","userId","instructorRef","INSTRUCTORS","instructorsList","fetchInstructors","STUDIO","studiosOfUser","docs","String","getStudioCreated","coursesOfUserPromise","docRef","docSnap","coursesOfUser","setItem","stringify","getCoursesCreated","coursesIdList","typography","TabContext","borderBottom","TabList","handleChange","Tab","label","TabPanel","CourseAdd","CourseUpdate","CardSlider","collection_name","notify","metadata","BASEURL","BASEURL_PROD","authToken","fetch","method","headers","body","Error","status","entity_id","endpoint","bookEntity","SERVER_URLS","CLOUD","bookingData","entityType","associatedStudioId","emailLearner","personsAllowed","pricePerPerson","getYoutubeVideoId","link","videoId","formatDateString","dateString","year","month","day","lastDigit","suffix","daySuffix","parseInt"],"sourceRoot":""}