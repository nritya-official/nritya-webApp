{"version":3,"file":"static/js/1383.d2ddd2da.chunk.js","mappings":"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","sources":["Components/RenderRating.js","Components/StudioCard.js","Components/Trail.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from 'react';\nimport { FaStar, FaRegStar } from 'react-icons/fa';\n\nfunction RenderRating(rating) {\n  // round the rating to the nearest 0.5\n  const roundedRating = Math.round( parseFloat(rating.rating) * 2) / 2;\n    console.log(roundedRating,rating.rating)\n  // generate the stars\n  const fullStars = Math.floor(roundedRating);\n  const halfStars = roundedRating - fullStars;\n  const emptyStars = 5 - fullStars - halfStars;\n\n  // create an array of stars to render\n  const stars = [];\n  for (let i = 0; i < fullStars; i++) {\n    stars.push(<FaStar key={`star-${i}`} color=\"yellow\" />);\n  }\n  if (halfStars > 0) {\n    stars.push(<FaStar key=\"star-half\" color=\"yellow\" />);\n  }\n  for (let i = 0; i < emptyStars; i++) {\n    stars.push(<FaRegStar key={`star-empty-${i}`} color=\"yellow\" />);\n  }\n\n  // render the stars\n  return <>{stars}</>;\n}\n\nexport default RenderRating;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Button, Badge, ButtonGroup } from 'react-bootstrap';\nimport RenderRating from './RenderRating';\nimport { ref, getDownloadURL, listAll } from 'firebase/storage';\nimport { storage } from '../config';\nimport { STORAGES } from '../constants';\nimport {  FaMapMarker } from 'react-icons/fa';\nimport StarRating from './StarRating';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector'; \nimport './StudioCard.css'\n\nfunction StudioCard({studioName,studioAddress,studioTiming,studioPrice,studioInstructors,studioDanceStyles,\n                    studioContactNumber,studioId,averageRating,forceSmallView,}) {\n\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n\n  const [studioIconUrl, setStudioIconUrl] = useState(null);\n  //console.log(averageRating,studioName)\n  useEffect(() => {\n    // Fetch and set the studio icon URL using studioId\n    if (studioId) {\n      const storagePath = `${STORAGES.STUDIOICON}/${studioId}`;\n      const folderRef = ref(storage, storagePath);\n\n      try {\n        listAll(folderRef)\n          .then((result) => {\n            if (result.items.length > 0) {\n              const firstFileRef = result.items[0];\n              getDownloadURL(firstFileRef)\n                .then((url) => {\n                  setStudioIconUrl(url);\n                })\n                .catch((error) => {\n                  console.error('Error fetching studio icon:', error);\n                });\n            } else {\n              console.log('No files found in the folder.');\n            }\n          })\n          .catch((error) => {\n            console.error('Error listing files in the folder:', error);\n          });\n      } catch (error) {\n        console.error('Error fetching studio icon:', error);\n      }\n    }\n  }, [studioId]);\n\n  const shouldShowSmallScreenView = () => {\n    return forceSmallView === 1;\n  };\n  \n  // 2f4f4f 333333\n  // Content for small screens  \n  const smallScreenContent = (\n    <Card className={`cardContainer ${isDarkModeOn ? 'darkMode' : ''}`}>\n      <Card.Img\n        variant=\"top\"\n        src={studioIconUrl ? studioIconUrl : \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n        className=\"cardImg\"\n      />\n      <Card.Body>\n        <Card.Text className=\"cardText\">{studioName}</Card.Text>\n        {studioDanceStyles && studioDanceStyles.split(\",\").slice(0, 3).map((form, index) => (\n          <Badge\n            key={index}\n            bg={index % 2 === 0 ? \"danger\" : \"warning\"}\n            className=\"badge me-2 rounded-pill\"\n          >\n            {form.trim()}\n          </Badge>\n        ))}\n        <StarRating rating={averageRating} viewMode={true} />\n        <div className=\"starRatingContainer\">\n          <FaMapMarker size={14} className=\"mapMarkerIcon me-2\" />\n          <Card.Text>{studioAddress}</Card.Text>\n        </div>\n      </Card.Body>\n    </Card>\n\n\n  );\n\n  // Content for larger screens\n  const autoMode = (\n    <Card style={{ backgroundColor: isDarkModeOn ? '#333333' : 'white'}} key=\"dark1\" text={isDarkModeOn ? 'white' : 'dark'}>\n    <div>\n    \n      {/* Display image on top for smaller screens */}\n      <div className=\"d-block d-md-none\">\n        <div style={{ borderRadius: '5%', overflow: 'hidden', border: '1px solid #64FFDA', marginBottom: \"10px\", height: \"250px\", width: \"100%\" }}>\n          <img\n            className=\"d-block w-100\"\n            src={studioIconUrl ? studioIconUrl : \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n            style={{ height: '100%', width: '100%', objectFit: 'cover' }}\n            alt=\"pic\"\n          />\n        </div>\n      </div>\n\n      <Card.Body>\n        {/* Display rest of the content below the image for smaller screens */}\n        <div className=\"d-block d-md-none\">\n          <Card.Title style={{ fontSize: '1.5rem', textAlign: \"left\", marginBottom: \"10px\" }}>{studioName}</Card.Title>\n          <Card.Subtitle style={{ fontSize: '0.8rem', textAlign: \"left\", marginBottom: \"10px\", textTransform: \"none\", wordBreak: 'break-word' }}>{studioId}</Card.Subtitle>\n          <Card.Subtitle style={{ fontSize: '0.9rem', textAlign: \"left\", marginBottom: \"10px\", textTransform: \"none\", wordBreak: 'break-word' }}>4.2 <RenderRating rating=\"4.2\" /> 350(ratings)</Card.Subtitle>\n          <Card.Text style={{ fontSize: '1.0rem', color: '#E4A11B', textAlign: \"left\", wordBreak: 'break-word' }}>Instructor: {studioInstructors}</Card.Text>\n          <Card.Text style={{ fontSize: '1.0rem', textAlign: \"left\" }}>{studioAddress}</Card.Text>\n          <Card.Text style={{ fontSize: '1.0rem', textAlign: \"left\" }}>Timing: {studioTiming}</Card.Text>\n          <Card.Text style={{ fontSize: '1.0rem', textAlign: \"left\" }}>Price: {studioPrice}</Card.Text>\n\n          {console.log(studioDanceStyles)}\n          {studioDanceStyles && studioDanceStyles.split(\",\").map((form, index) => (\n            <Badge\n              key={index}\n              bg={index % 2 === 0 ? \"danger\" : \"info\"} // Alternate badge colors\n              className=\"me-2 rounded-pill\"\n              style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n            >\n              {form.trim()}\n            </Badge>\n          ))}\n\n          {/* Buttons in one line */}\n          <div className=\"d-flex justify-content-center\">\n            <ButtonGroup>\n              <Button variant=\"outline-info\" className=\"me-2 rounded-pill\" size=\"sm\" style={{ fontSize: '0.6rem' }}>\n                <a href={\"tel:\" + studioContactNumber} style={{ textDecoration: 'none', color: 'inherit' }}>\n                  Call\n                </a>\n              </Button>\n              <Button variant=\"outline-info\" className=\"me-2 rounded-pill\" size=\"sm\" style={{ fontSize: '0.6rem' }}>\n                <a href={\"https://wa.me/\" + studioContactNumber} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none', color: 'inherit' }}>\n                  WhatsApp\n                </a>\n              </Button>\n            </ButtonGroup>\n          </div>\n        </div>\n\n        <div style={{ backgroundColor: \"#000000\", display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n          <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px\" }}>\n            {/* Hide image for larger screens */}\n            <div className=\"d-none d-md-block\">\n              <div style={{ overflow: 'hidden', marginBottom: \"10px\", height: \"100%\", width: \"100%\" }}>\n                <img\n                  className=\"d-block w-100\"\n                  src={studioIconUrl ? studioIconUrl : \"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n                  style={{ height: '100%', width: '100%', objectFit: 'cover' }}\n                  alt=\"pic\"\n                />\n              </div>\n            </div>\n            <a href={\"#/studio/\" + studioId}>\n            <Button variant=\"outline-warning\" className=\"me-2 rounded-pill mb-2 d-flex justify-content-center align-items-center\" size=\"sm\" style={{ fontSize: '1.4rem' }}>Explore</Button>\n            </a>\n            {/* Buttons for larger screens */}\n            <div className=\"d-none d-md-flex justify-content-center\">\n              <ButtonGroup>\n                <Button variant=\"outline-info\" className=\"me-2 rounded-pill\" size=\"sm\" style={{ fontSize: '0.6rem' }}>\n                  <a href={\"tel:\" + studioContactNumber} style={{ textDecoration: 'none', color: 'inherit' }}>\n                    Call\n                  </a>\n                </Button>\n                <Button variant=\"outline-info\" className=\"me-2 rounded-pill\" size=\"sm\" style={{ fontSize: '0.6rem' }}>\n                  <a href={\"https://wa.me/\" + studioContactNumber} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none', color: 'inherit' }}>\n                    WhatsApp\n                  </a>\n                </Button>\n              </ButtonGroup>\n            </div>\n          </div>\n          {/* Display rest of the content on the right for larger screens */}\n          <div className=\"d-none d-md-block\" style={{ padding: \"20px\" }}>\n            <Card.Title style={{ fontSize: '1.5rem', textAlign: \"left\", marginBottom: \"10px\" }}>{studioName}</Card.Title>\n            <Card.Subtitle style={{ fontSize: '0.8rem', textAlign: \"left\", marginBottom: \"10px\", textTransform: \"none\", wordBreak: 'break-word' }}>{studioId}</Card.Subtitle>\n            <Card.Subtitle style={{ fontSize: '0.9rem', textAlign: \"left\", marginBottom: \"10px\", textTransform: \"none\", wordBreak: 'break-word' }}>4.2 <RenderRating rating=\"4.2\" /> 350(ratings)</Card.Subtitle>\n            <Card.Text style={{ fontSize: '1.0rem', color: '#E4A11B', textAlign: \"left\", wordBreak: 'break-word' }}>Instructor: {studioInstructors}</Card.Text>\n            <Card.Text style={{ fontSize: '1.0rem', textAlign: \"left\" }}>{studioAddress}</Card.Text>\n            \n            {console.log(studioDanceStyles)}\n            {studioDanceStyles && studioDanceStyles.split(\",\").map((form, index) => (\n              <Badge\n                key={index}\n                bg={index % 2 === 0 ? \"danger\" : \"info\"} // Alternate badge colors\n                className=\"me-2 rounded-pill\"\n                style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n              >\n                {form.trim()}\n              </Badge>\n            ))}\n\n            <br />\n          </div>\n        </div>\n      </Card.Body>\n    </div>\n    </Card>\n  );\n\n  return (\n    <div>\n    {shouldShowSmallScreenView() ? smallScreenContent : autoMode}\n\n    </div>\n  );\n}\n\nexport default StudioCard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport StudioCard from './StudioCard';\n\nfunction Trail() {\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Define a function to fetch data from your Flask API\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(`http://localhost:5000/search?query=${query}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [query]);\n\n  // Fetch data when the component mounts or when the query changes\n  useEffect(() => {\n    fetchData();\n    console.log(data)\n  }, [fetchData]);\n\n  return (\n    \n    <div>\n      <h1>Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>Error: {error.message}</p>\n      ) : (\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n          {data.map((item) => (\n            <div key={item.UserId} style={{ flex: '50%', padding: '10px' }}>\n              <StudioCard\n                studioName={item.studioName}\n                studioAddress={item.address}\n                studioTiming={item.timing}\n                studioPrice={item.price}\n                studioInstructors={item.instructors}\n                studioDanceStyles={item.danceStyles}\n                studioContactNumber={item.contactNumber}\n                studioId={item.studioId}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Trail;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["rating","roundedRating","Math","round","parseFloat","console","log","fullStars","floor","halfStars","emptyStars","stars","i","push","_jsx","FaStar","color","concat","FaRegStar","_Fragment","children","_ref","studioName","studioAddress","studioTiming","studioPrice","studioInstructors","studioDanceStyles","studioContactNumber","studioId","averageRating","forceSmallView","isDarkModeOn","useSelector","selectDarkModeStatus","studioIconUrl","setStudioIconUrl","useState","useEffect","storagePath","STORAGES","STUDIOICON","folderRef","ref","storage","listAll","then","result","items","length","firstFileRef","getDownloadURL","url","catch","error","smallScreenContent","_jsxs","Card","className","Img","variant","src","Body","Text","split","slice","map","form","index","Badge","bg","trim","StarRating","viewMode","FaMapMarker","size","autoMode","style","backgroundColor","text","borderRadius","overflow","border","marginBottom","height","width","objectFit","alt","Title","fontSize","textAlign","Subtitle","textTransform","wordBreak","RenderRating","ButtonGroup","Button","href","textDecoration","target","rel","display","gridTemplateColumns","flexDirection","justifyContent","alignItems","padding","data","setData","query","setQuery","loading","setLoading","setError","fetchData","useCallback","async","response","fetch","ok","Error","json","type","placeholder","value","onChange","e","message","flexWrap","item","flex","StudioCard","address","timing","price","instructors","danceStyles","contactNumber","UserId","_excluded","React","bsPrefix","vertical","role","as","Component","rest","_objectWithoutProperties","prefix","useBootstrapPrefix","baseClass","_objectSpread","classNames","displayName","p"],"sourceRoot":""}