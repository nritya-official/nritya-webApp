{"version":3,"file":"static/js/3467.26c5b336.chunk.js","mappings":"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","sources":["Components/CardSliderCard.js","Components/NStudioCard.js","Screens/SearchPage.js"],"sourcesContent":["import React from 'react';\nimport NStudioCard from './NStudioCard';\n\nconst CardSliderCard = ({ studio }) => {\n  return (\n    <a href={`#/studio/${studio.id}`}>\n    <NStudioCard data={studio} img_src={\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}/>\n    </a>\n\n  );\n};\n\nexport default CardSliderCard;\n","\nimport React from 'react';\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport Chip from '@mui/joy/Chip';\nimport Box from '@mui/joy/Box';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/joy/Link';\nimport Typography from '@mui/joy/Typography';\nimport { Stack } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { CHIP_LEVELS_DESIGN, COLORS, danceStylesColorChips, STUDIO_ICON_DEFAULT } from '../constants';\nimport IconButton from '@mui/joy/IconButton';\nimport Favorite from '@mui/icons-material/Favorite';\n\n\nexport default function NStudioCard({img_src,data}) {\n    const isDarkModeOn = useSelector(selectDarkModeStatus);\n    \n    const studioId = data.id?data.id:data.studioId;\n\n    const cardStyle = {\n      backgroundColor: isDarkModeOn ? '#444' : 'white',\n      padding: '0px',\n      color: isDarkModeOn ? 'white' : 'black',\n      marginRight: \"10px\",\n      width: 320,\n      maxWidth: \"100%\",\n      boxShadow: 'lg',\n      transition: 'opacity 0.3s ease',\n    };\n  \n    const cardHoverStyle = {\n      transform: 'scale(1.01)',\n    };\n  \n  return (\n    <Card variant=\"solid\" sx={{\n      ...cardStyle,\n      '&:hover': cardHoverStyle,\n    }}>\n      \n        <AspectRatio ratio=\"1.78\" style={{ position: 'relative'}}>\n          <img\n            src={data && data.iconUrl ? data.iconUrl :STUDIO_ICON_DEFAULT}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: '100%', height: 'auto', overflow: 'hidden' }}\n            \n          />\n          <Stack direction=\"row\" spacing={2} style={{ position: 'absolute', bottom: 0, left: 0, padding: '1px' }}>\n        {data && data.danceStyles && typeof data.danceStyles === 'string' ? (data.danceStyles.split(\",\").slice(0, 3).map((form, index) => (\n        <Chip\n            key={index}\n            color={index % 2 === 0 ? \"danger\" : \"success\"}  \n            sx={{ marginBottom: \"10px\", fontSize: '0.8rem',  \n                    bgcolor: danceStylesColorChips[index].backgroundColor,\n                    color: danceStylesColorChips[index].color, \n            }}\n        >\n            {form.trim()}\n        </Chip>\n        ))):(\n            <Chip\n            key={10}\n            color={10 % 2 === 0 ? \"danger\" : \"success\"} \n            style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n        >\n            {\"No danceforms\"}\n        </Chip>\n        )}\n\n        </Stack>\n\n        <Stack\n            direction=\"row\"\n            spacing={2}\n            style={{ position: \"absolute\", top: 0, left: 0, padding: \"1px\", paddingTop: \"1px\" }}\n          >\n            {data.freeTrialAvailable === \"true\" || data.freeTrialAvailable === true && (\n                <Chip\n                  key={1}\n                 \n                  sx={{\n                    marginLeft: \"10px\",\n                    marginBottom: \"10px\",\n                    fontSize: \"0.8rem\",\n                    bgcolor: COLORS.LIME.backgroundColor,  // Set the background color\n                    color: COLORS.LIME.color,  // Set the text color\n                  }}\n                >\n                  {'Free Trial Available'}\n                </Chip>\n            )}\n          </Stack>\n\n        </AspectRatio>\n      <CardContent style={{ padding: '10px' }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" columnGap={1}>\n          <Link\n            alignSelf=\"center\"\n            href={`#/studio/${studioId}`}\n            fontWeight=\"bold\"\n            color=\"neutral\"\n            textColor=\"text.primary\"\n            underline='none'\n            overlay\n            whiteSpace='nowrap'\n            overflow='hidden'\n            textOverflow='ellipsis'\n            style={{ color: isDarkModeOn ? 'white' : 'black' }}\n          >\n            {data && data.studioName ? data.studioName : \"    \"}\n          </Link>\n          {data && data.avgRating && data.avgRating>0 ?\n            <Typography width={52} flexShrink={0} alignSelf=\"center\" style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n              ⭐ {data.avgRating.toFixed(1)}\n            </Typography> : null\n          }\n        </Box>\n        <Typography style={{ color: isDarkModeOn ? 'white' : 'black' }} level=\"body-xs\">{data.street ? data.street : \".  \"}</Typography>\n        <IconButton\n          hidden\n          aria-label=\"Like minimal photography\"\n          size=\"md\"\n          variant=\"solid\"\n          color=\"danger\"\n          sx={{\n            position: 'absolute',\n            zIndex: 2,\n            borderRadius: '50%',\n            right: '1rem',\n            bottom: '2rem',\n            transform: 'translateY(50%)',\n          }}\n        >\n          <Favorite />\n        </IconButton>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography alignSelf=\"center\" fontSize={12} style={{ color: isDarkModeOn ? 'white' : 'black' }}>\n            {data && data.minFee && data.minFee>=0 &&(`@ ₹${data.minFee} onwards`)}\n          </Typography>\n          <Button\n            size='small'\n            variant=\"contained\"\n            sx={{\n              alignSelf: \"center\",\n              color: 'white',\n              backgroundColor: '#735EAB',\n              '&:hover': {\n                backgroundColor: '#735EAB',\n                color: 'white',\n              },\n              '&.Mui-disabled': {\n                backgroundColor: isDarkModeOn ? 'rgba(115, 94, 171, 0.5)' : 'rgba(115, 94, 171, 0.3)',\n                color: 'rgba(255, 255, 255, 0.5)',\n              },\n            }}\n            type='button'\n          >\n            Explore\n          </Button>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport {Form, Button, Col,Row, Modal, ButtonGroup,\n      Container,} from \"react-bootstrap\";\nimport { Badge as MuiBadge, Chip as MuiChip, Autocomplete as MuiAutocomplete,\n  TextField as MuiTextField, createTheme,ThemeProvider,\n  Stack as MuiStack,Grid as MuiGrid, Box } from \"@mui/material\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport danceStyles from \"../danceStyles.json\";\nimport CardSliderCard from \"../Components/CardSliderCard\";\nimport './SearchPage.css';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { COLLECTIONS, LEVELS, BASEURL_PROD } from \"../constants\";\nimport NWorkshopCard from \"../Components/NWorkshopCard\";\nimport NOpenClassCard from \"../Components/NOpenClassCard\";\nimport NCourseCard from \"../Components/NCourseCard\";\nimport { useMediaQuery } from '@mui/material';\nimport { useLoader } from \"../context/LoaderContext\";\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\nconst FILTER_SEARCH_TYPE_KEY = \"filterSearchType\";\nconst FILTER_DISTANCES_KEY = \"filterDistances\";\nconst FILTER_DANCE_FORMS_KEY = \"filterDanceForms\";\nconst FILTER_USER_GEO_LOC = \"browserGeoLoc\";\n\nconst levelsTypes = [LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]\nconst MAX_PRICE  = 10**10\n\nconst distances = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst searchTypes = [\n  { name: \"studio\", label: \"Studios\", collection: COLLECTIONS.STUDIO },\n  { name: \"workshop\", label: \"Workshops\", collection: COLLECTIONS.WORKSHOPS },\n  { name: \"openClass\",label: \"Open Classes\",collection: COLLECTIONS.OPEN_CLASSES},\n  { name: \"course\", label: \"Courses\", collection: COLLECTIONS.COURSES },\n];\n\nconst getCollectionForSearchType = (searchType) => {\n  const searchTypeObject = searchTypes.find(type => type.name === searchType);\n  return searchTypeObject ? searchTypeObject.collection : COLLECTIONS.STUDIO;\n};\n\nconst SearchPage = () => {\n  const { setIsLoading } = useLoader();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [selectedDistances, setSelectedDistances] = useState(\"\");\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [showFilters, setShowFilters] = useState(false);\n  const [studioIdName,setStudioIdName] = useState({});\n  const [showFilterValue, setShowFilterValue] = useState(\"distances\");\n  const [activeFilters, setActiveFilters] = useState(0);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedDanceForms, setSelectedDanceForms] = useState([]);\n  const [selectedSearchType, setSelectedSearchType] = useState(\"studio\"); \n  const [selectedLevel, setSelectedLevel] = useState(\"All\");\n  const [selectedMaxPrice, setSelectedMaxPrice] = useState(MAX_PRICE);\n  const [searchData, setSearchData] = useState({\n    workshop: [],\n    openClass: [],\n    course: [],\n  });\n\n  const danceForms = danceStyles.danceStyles.map((danceForm) => ({\n    value: danceForm,\n    label: danceForm,\n  }));\n\n  const styles = {\n    valueContainer: (base) => ({\n      ...base,\n      maxHeight: 100,\n      overflowY: \"auto\",\n    }),\n    multiValue: (base, state) => {\n      return state.data.isFixed ? { ...base, backgroundColor: \"gray\" } : base;\n    },\n    multiValueLabel: (base, state) => {\n      return state.data.isFixed\n        ? { ...base, fontWeight: \"bold\", color: \"white\", paddingRight: 6 }\n        : base;\n    },\n    multiValueRemove: (base, state) => {\n      return state.data.isFixed ? { ...base, display: \"none\" } : base;\n    },\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const themeBar = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\", // Dynamically set dark or light mode\n    },\n  });\n\n  const handleInputChange = (event, value) => {\n    setQuery(value);\n  };\n  const countActiveFilters = () => {\n    let count = 0;\n    if (localStorage.getItem(FILTER_DISTANCES_KEY)) count++;\n    // if (localStorage.getItem(FILTER_SEARCH_TYPE_KEY)) count++;\n    if (selectedLevel && selectedLevel !== LEVELS.ALL) count++;\n    if (selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) count++;\n    const storedDanceForm = localStorage.getItem(FILTER_DANCE_FORMS_KEY);\n    if (storedDanceForm) count += JSON.parse(storedDanceForm).length;\n    return count;\n  };\n  const fetchIdNameMp = async (city) => {\n    try {\n      const apiEndpoint = `${BASEURL_PROD}api/autocomplete/?&city=${city}`;\n      const response = await fetch(apiEndpoint);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      \n      const data = await response.json();\n      setStudioIdName(data);\n      \n    } catch (error) {\n      console.error(\"Error in processing:\", error);\n    }\n  };\n\n  const handleSearch = () => {\n    setIsLoading(true);\n    const storedSelectedSearchType =\n      localStorage.getItem(FILTER_SEARCH_TYPE_KEY) ||\n      selectedSearchType ||\n      \"studio\";\n\n      \n      if (query == null) {\n      setQuery(\"\");\n    }\n    let apiEndpoint = `${BASEURL_PROD}api/search/?query=${query}`;\n    const entity = getCollectionForSearchType(storedSelectedSearchType);\n\n    const city = localStorage.getItem(FILTER_LOCATION_KEY) || \"New Delhi\";\n    apiEndpoint += `&city=${encodeURIComponent(city)}`;\n    fetchIdNameMp(city)\n    if (storedSelectedSearchType) {\n      apiEndpoint += `&entity=${encodeURIComponent(entity)}`;\n    }\n    \n    const storedSelectedDanceForms = JSON.parse(localStorage.getItem(FILTER_DANCE_FORMS_KEY) || \"[]\");\n    if (storedSelectedDanceForms.length > 0) {\n      apiEndpoint += `&danceStyle=${encodeURIComponent(storedSelectedDanceForms.join(\",\"))}`;\n    }\n\n    if (entity !== COLLECTIONS.STUDIO && selectedLevel && selectedLevel !== LEVELS.ALL) {\n      apiEndpoint += `&level=${encodeURIComponent(selectedLevel)}`\n    }\n\n    if ((entity === COLLECTIONS.WORKSHOPS || entity === COLLECTIONS.COURSES) && selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) {\n      apiEndpoint += `&price=${encodeURIComponent(selectedMaxPrice)}`\n    }\n\n    const geoLocation = getGeoLocationFromLocalStorage();\n    if (selectedDistances && geoLocation && localStorage.getItem(FILTER_DISTANCES_KEY)) {\n      apiEndpoint += `&distance=${encodeURIComponent(selectedDistances)}&user_lat=${encodeURIComponent(geoLocation.latitude)}&user_lon=${encodeURIComponent(geoLocation.longitude)}`;\n    }\n\n    console.log(\"apiEndpoint \", apiEndpoint);\n    fetch(apiEndpoint)\n      .then((response) => response.json())\n      .then((data) => {\n        const formattedData = Array.isArray(data) ? data : Object.values(data);\n        setResults(formattedData);\n      })\n      .catch((error) =>\n        console.error(\"Error fetching search results:\", error)\n      ).finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n\n  const handleChange = async (event, value) => {\n    const baseUrl = `${BASEURL_PROD}api`;\n    //setQuery(event.target.value);\n    setQuery(value);\n\n    if (value.length >= 3) {\n      try {\n        const FILTER_LOCATION_KEY = \"filterLocation\";\n        const defaultCity = \"New Delhi\";\n\n        const city = localStorage.getItem(FILTER_LOCATION_KEY) || defaultCity;\n        const cityParam = encodeURIComponent(city || defaultCity);\n\n        const endpoint = `${baseUrl}/autocomplete?query=${value}&city=${cityParam}`;\n\n        //const endpoint = baseUrl + `/autocomplete?query=${value}&city=Patna`;\n        const response = await axios.get(endpoint);\n        console.log(\"Response :\",response.data)\n        const filteredSuggestions = Object.values(response.data).filter(value => value !== null);\n        setSuggestions(filteredSuggestions);\n\n      } catch (error) {\n        console.error(\"Error fetching autocomplete suggestions:\", error);\n      }\n    } else {\n      // Clear suggestions if the input length is less than 3 characters\n      setSuggestions([]);\n    }\n  };\n\n  const handleApplyFilters = () => {\n    localStorage.setItem(FILTER_DISTANCES_KEY, selectedDistances);\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, selectedSearchType);\n    localStorage.setItem(\n      FILTER_DANCE_FORMS_KEY,\n      JSON.stringify(selectedDanceForms)\n    );\n    setActiveFilters(countActiveFilters());\n    //dispatch(refreshLocation())\n    setShowFilters(false);\n    handleSearch();\n  };\n\n  const handleClearFilters = () => {\n    setSelectedDistances(\"\");\n    setSelectedDanceForms([]);\n    setSelectedSearchType(\"studio\");\n    setSelectedMaxPrice(MAX_PRICE);\n    setSelectedLevel(LEVELS.ALL);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n    localStorage.removeItem(FILTER_DANCE_FORMS_KEY);\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, \"studio\");\n    setActiveFilters(countActiveFilters());\n    setShowFilters(false);\n    handleSearch();\n  };\n\n  const handleSelectChange = (selectedOptions) => {\n    setSelectedDanceForms(\n      selectedOptions ? selectedOptions.map((option) => option.value) : []\n    );\n  };\n\n  const handleSearchTypeClick = (clickedSearchType) => {\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, clickedSearchType);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n\n    setSelectedDistances(\"\");\n    setSelectedLevel(LEVELS.ALL);\n    setSelectedMaxPrice(MAX_PRICE);\n    setSelectedSearchType(clickedSearchType);\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  const handleRemoveDistance = () => {\n    setSelectedDistances(null);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  const handleRemoveDanceForm = (danceFormToRemove) => {\n    const filteredDanceForms = selectedDanceForms.filter(\n      (danceForm) => danceForm !== danceFormToRemove\n    );\n    setSelectedDanceForms(filteredDanceForms);\n    localStorage.setItem(\n      FILTER_DANCE_FORMS_KEY,\n      JSON.stringify(filteredDanceForms)\n    );\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  useEffect(() => {\n    const storedDistances = localStorage.getItem(FILTER_DISTANCES_KEY);\n    const storedDanceForm = localStorage.getItem(FILTER_DANCE_FORMS_KEY);\n    const storedSearchType = localStorage.getItem(FILTER_SEARCH_TYPE_KEY);\n\n    if (storedSearchType) {\n      setSelectedSearchType(storedSearchType);\n    } else {\n      setSelectedSearchType(\"studio\");\n      localStorage.setItem(FILTER_SEARCH_TYPE_KEY, \"studio\");\n    }\n\n    if (storedDistances) {\n      setSelectedDistances(storedDistances);\n    }\n\n    if (storedDanceForm) {\n      setSelectedDanceForms(JSON.parse(storedDanceForm));\n    }\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  }, [selectedLevel, selectedMaxPrice]);\n\n  const [label, setLabel] = useState('Search studios, workshops, open classes, courses...');\n\n  // Function to update label based on window width\n  const updateLabel = () => {\n    if (window.innerWidth < 600) {\n      setLabel('Search...');\n    } else {\n      setLabel('Search studios, workshops, open classes, courses...');\n    }\n  };\n\n  // Update label on component mount and window resize\n  useEffect(() => {\n    updateLabel(); // Set initial label\n    window.addEventListener('resize', updateLabel); // Listen for resize\n\n    return () => {\n      window.removeEventListener('resize', updateLabel); // Clean up listener\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        backgroundColor: isDarkModeOn ? \"#202020\" : \"white\",\n        padding: \"10px\",\n        minHeight: \"75vh\",\n      }}\n    >\n      <header>\n        <Container style={{ width: \"100%\" }}>\n          <MuiGrid container alignItems=\"center\">\n            <MuiGrid item xs={12}>\n              <ThemeProvider theme={themeBar}>\n                <MuiStack\n                  style={{\n                    width: \"100%\",\n                    paddingRight: 0,\n                    marginTop: 0,\n                    marginLeft: 0,\n                    marginBottom: 0,\n                  }}\n                  direction=\"row\"\n                  spacing={1}\n                >\n                  <MuiAutocomplete\n                    value={query}\n                    onInputChange={handleChange}\n                    onChange={handleInputChange}\n                    options={suggestions}\n                    getOptionLabel={(option) => option.toString()}\n                    renderInput={(params) => (\n                      <MuiTextField\n                      className=\"autocomplete-input\" // Style for Css\n                        {...params}\n                        label={label}\n                        variant=\"outlined\"\n                        InputProps={{\n                          ...params.InputProps,\n                          endAdornment: (\n                            <InputAdornment\n                              position=\"end\"\n                              style={{\n                                marginRight: 0,\n                                marginTop: 0,\n                                marginLeft: 0,\n                                marginBottom: 0,\n                              }}\n                            >\n                              <SearchIcon\n                                style={{\n                                  cursor: \"pointer\",\n                                  color: isDarkModeOn ? \"#892CDC\" : \"black\",\n                                  marginRight: 1,\n                                  width:\"40px\"\n                                }}\n                                onClick={handleSearch}\n                              />\n                            </InputAdornment>\n                          ),\n                          style: {\n                            paddingRight: 0,\n                            marginTop: 0,\n                            marginLeft: 0,\n                            marginBottom: 0,\n                          },\n                        }}\n                      />\n                    )}\n                    style={{ flex: 1/1 }}\n                  />\n                </MuiStack>\n              </ThemeProvider>\n            </MuiGrid>\n          </MuiGrid>\n          <br></br>\n          <Row className=\"align-items-center\">\n            <div className=\"horizontal-scroll-wrapper-for-filters\">\n              {/* Studio, Workshops, Open Classes, Courses */}\n              {searchTypes.map((searchType) => (\n                <Col key={searchType.name} xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                  <button\n                    onClick={() => handleSearchTypeClick(searchType.name)} // Add this line\n                    style={{\n                      cursor: 'pointer',\n                      backgroundColor: selectedSearchType === searchType.name\n                        ? (isDarkModeOn ? \"white\" : \"black\")\n                        : (isDarkModeOn ? \"black\" : \"white\"),\n                      color: selectedSearchType === searchType.name\n                        ? (isDarkModeOn ? \"black\" : \"white\")\n                        : (isDarkModeOn ? \"white\" : \"black\"),\n                      borderRadius: '10px',\n                      fontWeight: 'bold',\n                      border: `1px solid ${isDarkModeOn ? \"white\" : \"black\"}`,\n                      padding: '5px 10px',\n                      transition: 'background-color 0.3s, color 0.3s',\n                    }}\n                  >\n                    {searchType.label}\n                  </button>\n                </Col>\n              ))}\n            </div>\n          </Row>\n\n          <Row className=\"align-items-center\">\n          <div className=\"horizontal-scroll-wrapper-for-filters\"> \n            <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n              <MuiBadge\n                onClick={toggleFilters}\n                badgeContent={activeFilters}\n                color={isDarkModeOn ? \"warning\" : \"secondary\"}\n                pill\n              >\n                <MuiChip\n                  className=\"rounded-3\"\n                  color={isDarkModeOn ? \"warning\" : \"secondary\"}\n                  label=\"&#9776; filters\"\n                  variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                />\n              </MuiBadge>\n            </Col>\n\n            {(selectedDanceForms.length || selectedDistances || (selectedLevel && selectedLevel !== LEVELS.ALL) ||(selectedMaxPrice && selectedMaxPrice !== MAX_PRICE)) && (\n              <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                <MuiBadge\n                  color=\"error\"\n                  onClick={handleClearFilters}\n                  style={{ cursor: \"pointer\" }}\n                  pill\n                >\n                  <MuiChip\n                    color=\"error\"\n                    label=\"Clear All\"\n                    onDelete={handleClearFilters}\n                    style={{ cursor: \"pointer\" }}\n                    variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                    className=\"rounded-3\"\n                  />\n                </MuiBadge>\n              </Col>\n            )}\n\n            <Box display=\"flex\">\n            {/* Filter Badges */}\n            {selectedDistances && (\n              <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                <MuiBadge color=\"success\" pill>\n                  <MuiChip\n                    className=\"rounded-3\"\n                    color=\"success\"\n                    label={`Distance: ${selectedDistances} km`}\n                    variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                    onDelete={handleRemoveDistance}\n                  />\n                </MuiBadge>\n              </Col>\n            )}\n\n            {(selectedLevel && selectedLevel !== LEVELS.ALL) &&(\n              <Col xs=\"auto\">\n                {\n                  <MuiBadge\n                    key={selectedLevel}\n                    color=\"info\"\n                    style={{\n                      marginLeft: \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Level: ${selectedLevel}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => setSelectedLevel(LEVELS.ALL)}\n                    />\n                  </MuiBadge>\n                }\n              </Col>\n            )}\n\n            {(selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) &&(\n              <Col xs=\"auto\">\n                {\n                  <MuiBadge\n                    key={selectedMaxPrice}\n                    color=\"info\"\n                    style={{\n                      marginLeft: \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Prices Upto: ${selectedMaxPrice}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => setSelectedMaxPrice(MAX_PRICE)}\n                    />\n                  </MuiBadge>\n                }\n              </Col>\n            )}\n\n            {selectedDanceForms && (\n              <Col xs=\"auto\">\n                {selectedDanceForms.map((danceForm, index) => (\n                  <MuiBadge\n                    key={index}\n                    color=\"info\"\n                    style={{\n                      marginLeft: index !== 0 ? \"0.25rem\" : \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Dance Form: ${danceForm}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => handleRemoveDanceForm(danceForm)}\n                    />\n                  </MuiBadge>\n                ))}\n              </Col>\n            )}\n            </Box>\n           </div>\n          </Row>\n        </Container>\n      </header>\n\n      <Modal show={showFilters} onHide={toggleFilters} backdrop=\"static\">\n        <Modal.Header closeButton>\n          <Modal.Title>Filters</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            {/* Left side for filters list */}\n            <Col md={4}>\n              <h5>Filter By:</h5>\n              <ul style={{ listStyleType: \"none\", padding: 0 }}>\n\n                {selectedSearchType === \"studio\" && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"distances\"), setShowFilters(true)\n                      )}\n                    >\n                      Distances\n                    </li>\n                  </>\n                )}\n\n              {(selectedSearchType === \"workshop\" || selectedSearchType === \"course\") && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"price\"), setShowFilters(true)\n                      )}\n                    >\n                      Price\n                    </li>\n                  </>\n                )}\n\n                {selectedSearchType !== \"studio\" && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"level\"), setShowFilters(true)\n                      )}\n                    >\n                      Level\n                    </li>\n                    \n                  </>\n                )}\n\n                <hr style={{ margin: \"5px 0\" }}></hr>\n                <li\n                  style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                  onClick={() => (\n                    setShowFilterValue(\"danceForm\"), setShowFilters(true)\n                  )}\n                >\n                  Dance Forms\n                </li>\n                <hr style={{ margin: \"5px 0\" }}></hr>\n              </ul>\n            </Col>\n\n            <Col md={8}>\n              {showFilters && showFilterValue === \"distances\" && (\n                <Form.Group controlId=\"filterDistances\">\n                  <Form.Label>Distances:</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedDistances}\n                    onChange={(e) => setSelectedDistances(e.target.value)}\n                  >\n                    <option value=\"\">Select distance</option>\n                    {distances.map((distance) => (\n                      <option key={distance} value={distance}>\n                        {distance} km\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"level\" && (\n                <Form.Group controlId=\"filterLevel\">\n                  <Form.Label>Level :</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedLevel}\n                    onChange={(e) => setSelectedLevel(e.target.value)}\n                  >\n                    <option value=\"\">Select Lavel</option>\n                    {levelsTypes.map((level) => (\n                      <option key={level} value={level}>\n                        {level} \n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"price\" && (\n                <Form.Group controlId=\"filterPrice\">\n                  <Form.Label>Prices :</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedMaxPrice}\n                    onChange={(e) => setSelectedMaxPrice(e.target.value)}\n                  >\n                    <option value=\"\">Prices below</option>\n                    {[499,999,1499,1999,2999,4999,9999,MAX_PRICE].map((price) => (\n                      <option key={price} value={price}>\n                        {price >= MAX_PRICE ?\"All\":price} \n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"danceForm\" && (\n                <Form.Group controlId=\"filterDanceForms\">\n                  <Form.Label>Dance Forms:</Form.Label>\n                  <Select\n                    isMulti\n                    value={danceForms.filter((option) =>\n                      selectedDanceForms.includes(option.value)\n                    )}\n                    onChange={handleSelectChange}\n                    options={danceForms}\n                    closeMenuOnSelect={false}\n                    placeholder=\"Select Dance Forms\"\n                    styles={styles}\n                  />\n                </Form.Group>\n              )}\n            </Col>\n          </Row>\n          <ButtonGroup style={{ marginTop: \"1rem\" }}>\n            <Button variant=\"primary\" onClick={handleApplyFilters}>\n              Apply\n            </Button>\n            <Button\n              variant=\"danger\"\n              onClick={handleClearFilters}\n              style={{ marginLeft: \"10px\" }}\n            >\n              Clear All Filters\n            </Button>\n          </ButtonGroup>\n        </Modal.Body>\n      </Modal>\n\n      <hr></hr>\n      {selectedSearchType === \"studio\" && (\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n          {results.length === 0 ? (\n            <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n          ) : (\n            results.map((studio, index) => (\n              <div\n                key={index}\n                className=\"studio-card-container\"\n                style={{ padding: \"0.2rem\" }}\n                md={2}\n              >\n                <a\n                  href={`#/studio/${studio.studioId}`}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <CardSliderCard studio={studio} />\n                </a>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n\n      {selectedSearchType === \"workshop\" && (\n        \n          <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n            {results.length === 0 ? (\n              <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n            ) : (\n              results.map((data, index) => (\n                <div\n                  key={index}\n                  className=\"studio-card-container\"\n                  style={{ padding: \"0.2rem\" }}\n                  md={2}\n                >\n                  \n                    <NWorkshopCard\n                    key={data.id}\n                    dataItem={data}\n                    studioIdName={studioIdName}\n                  />\n                  \n                </div>\n              ))\n            )}\n          </div>\n      \n        \n      )}\n      {selectedSearchType === \"openClass\" && (\n         <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n         {results.length === 0 ? (\n           <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n         ) : (\n           results.map((data, index) => (\n             <div\n               key={index}\n               className=\"studio-card-container\"\n               style={{ padding: \"0.2rem\" }}\n               md={2}\n             >\n               <NOpenClassCard\n                key={data.id}\n                dataItem={data}\n                studioIdName={studioIdName}\n              />\n             </div>\n           ))\n         )}\n       </div>\n      )}\n      {selectedSearchType === \"course\" && (\n       <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n       {results.length === 0 ? (\n         <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n       ) : (\n         results.map((data, index) => (\n           <div\n             key={index}\n             className=\"studio-card-container\"\n             style={{ padding: \"0.2rem\" }}\n             md={2}\n           >\n             <NCourseCard\n            key={data.id}\n            dataItem={data}\n            studioIdName={studioIdName}\n          />\n           </div>\n         ))\n       )}\n     </div>\n      )}\n    </div>\n  );\n};\n\nfunction getGeoLocationFromLocalStorage() {\n  // Retrieve the stored JSON string from localStorage\n  var geoLocString = localStorage.getItem(FILTER_USER_GEO_LOC);\n\n  // Check if the data exists in localStorage\n  if (geoLocString !== null) {\n    try {\n      // Parse the JSON string to get an object\n      var geoLocObject = JSON.parse(geoLocString);\n      // Check if the latitude and longitude properties exist in the parsed object\n      if (\n        geoLocObject &&\n        geoLocObject[\"latitude\"] &&\n        geoLocObject[\"longitude\"]\n      ) {\n        // Extract latitude and longitude from the object\n        var latitude = geoLocObject.latitude;\n        var longitude = geoLocObject.longitude;\n\n        // Return an object with latitude and longitude\n        return { latitude: latitude, longitude: longitude };\n      }\n    } catch (error) {\n      console.error(\"Error parsing JSON:\", error);\n    }\n  }\n\n  // Return null if there's no valid data or an error occurred\n  return null;\n}\n\nexport default SearchPage;\n"],"names":["_ref","studio","_jsx","href","concat","id","children","NStudioCard","data","img_src","isDarkModeOn","useSelector","selectDarkModeStatus","studioId","cardStyle","backgroundColor","padding","color","marginRight","width","maxWidth","boxShadow","transition","_jsxs","Card","variant","sx","transform","AspectRatio","ratio","style","position","src","iconUrl","STUDIO_ICON_DEFAULT","loading","alt","height","overflow","Stack","direction","spacing","bottom","left","danceStyles","split","slice","map","form","index","Chip","marginBottom","fontSize","bgcolor","danceStylesColorChips","trim","top","paddingTop","freeTrialAvailable","marginLeft","COLORS","LIME","CardContent","Box","display","justifyContent","columnGap","Link","alignSelf","fontWeight","textColor","underline","overlay","whiteSpace","textOverflow","studioName","avgRating","Typography","flexShrink","toFixed","level","street","IconButton","hidden","size","zIndex","borderRadius","right","Favorite","minFee","Button","type","FILTER_SEARCH_TYPE_KEY","FILTER_DISTANCES_KEY","FILTER_DANCE_FORMS_KEY","FILTER_USER_GEO_LOC","levelsTypes","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","MAX_PRICE","distances","searchTypes","name","label","collection","COLLECTIONS","STUDIO","WORKSHOPS","OPEN_CLASSES","COURSES","SearchPage","setIsLoading","useLoader","query","setQuery","useState","results","setResults","selectedDistances","setSelectedDistances","showFilters","setShowFilters","studioIdName","setStudioIdName","showFilterValue","setShowFilterValue","activeFilters","setActiveFilters","suggestions","setSuggestions","selectedDanceForms","setSelectedDanceForms","selectedSearchType","setSelectedSearchType","selectedLevel","setSelectedLevel","selectedMaxPrice","setSelectedMaxPrice","searchData","setSearchData","workshop","openClass","course","danceForms","danceForm","value","toggleFilters","themeBar","createTheme","palette","mode","countActiveFilters","count","localStorage","getItem","storedDanceForm","JSON","parse","length","handleSearch","storedSelectedSearchType","apiEndpoint","BASEURL_PROD","entity","searchType","searchTypeObject","find","getCollectionForSearchType","city","encodeURIComponent","async","response","fetch","ok","Error","json","error","console","fetchIdNameMp","storedSelectedDanceForms","join","geoLocation","geoLocString","geoLocObject","latitude","longitude","getGeoLocationFromLocalStorage","log","then","formattedData","Array","isArray","Object","values","catch","finally","handleClearFilters","removeItem","setItem","useEffect","storedDistances","storedSearchType","setLabel","updateLabel","window","innerWidth","addEventListener","removeEventListener","minHeight","Container","MuiGrid","container","alignItems","item","xs","ThemeProvider","theme","MuiStack","paddingRight","marginTop","MuiAutocomplete","onInputChange","event","baseUrl","FILTER_LOCATION_KEY","defaultCity","cityParam","endpoint","axios","filteredSuggestions","filter","onChange","handleInputChange","options","getOptionLabel","option","toString","renderInput","params","MuiTextField","className","InputProps","endAdornment","InputAdornment","SearchIcon","cursor","onClick","flex","Row","Col","handleSearchTypeClick","clickedSearchType","border","MuiBadge","badgeContent","pill","MuiChip","onDelete","handleRemoveDistance","danceFormToRemove","filteredDanceForms","stringify","handleRemoveDanceForm","Modal","show","onHide","backdrop","Header","closeButton","Title","Body","md","listStyleType","_Fragment","margin","Form","Group","controlId","Label","Control","as","e","target","distance","price","Select","isMulti","includes","selectedOptions","closeMenuOnSelect","placeholder","styles","valueContainer","base","maxHeight","overflowY","multiValue","state","isFixed","multiValueLabel","multiValueRemove","ButtonGroup","handleApplyFilters","flexWrap","textDecoration","CardSliderCard","NWorkshopCard","dataItem","NOpenClassCard","NCourseCard"],"sourceRoot":""}