{"version":3,"file":"static/js/961.a2243db7.chunk.js","mappings":"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","sources":["Screens/ContactUs.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { useSelector } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\n\nconst ContactUs = () => {\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [containerStyle, setContainerStyle] = useState({});\n  const [headingStyle, setHeadingStyle] = useState({});\n  const [textStyle, setTextStyle] = useState({});\n  const [formControl, setFormControl] = useState({});\n  const [formData, setFormData] = useState({\n    name: '',\n    message: ''\n  });\n\n\n  useEffect(() => {\n    setContainerStyle({\n      backgroundColor: isDarkModeOn ? '#202020' : 'white',\n      color: isDarkModeOn ? 'white' : 'black'\n    });\n    setHeadingStyle({\n      backgroundColor: isDarkModeOn ? '#202020' : 'white',\n      color: \"#00aeef\"\n    });\n    setTextStyle({\n      color: isDarkModeOn ? 'white' : 'black'\n    });\n    setFormControl({\n      backgroundColor: isDarkModeOn ? '#202020' : 'white',\n      color: isDarkModeOn ? 'white' : 'black',\n      border: `1px solid ${isDarkModeOn ? 'white' : 'black'}`, // Add border style\n      borderRadius: '5px' // Add border radius\n    });\n  }, [isDarkModeOn]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleSendEmail = (e) => {\n    e.preventDefault();\n    const recipient = 'nritya@nritya.co.in';\n    const subject = 'New Contact Form Submission';\n    const body = `Name: ${formData.name}\n\n    Message:\n    ${formData.message}`;\n  \n    const mailToUrl = `mailto:${recipient}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    window.location.href = mailToUrl;\n\n  };\n\n  \n\n  return (\n    <section>\n      <div>\n        <Container style={containerStyle}>\n          <h2 style={headingStyle}>Contact Us</h2>\n          <p style={textStyle}>\n            You may contact us via email, phone or post.\n          </p>\n        </Container>\n      </div>\n\n      <Container style={containerStyle}>\n        <Row>\n          <Col>\n            <div>\n              <div>\n                <FontAwesomeIcon icon={faHome} />\n                <div>\n                  <h4 style={headingStyle}>Address</h4>\n                  <p style={textStyle}>116/969, Roshan Nagar, Near Ujageshwar Mandir,<br/> Rawatpur, Kanpur Nagar, Rawatpur Gaon, <br/> Uttar Pradesh, India, <br/> 208019</p>\n                </div>\n              </div>\n\n              <div>\n                <FontAwesomeIcon icon={faPhone} />\n                <div>\n                  <h4 style={headingStyle}>Phone</h4>\n                  <p style={textStyle}>6392074436</p>\n                </div>\n              </div>\n\n              <div>\n                <FontAwesomeIcon icon={faEnvelope} />\n                <div>\n                  <h4 style={headingStyle}>Email</h4>\n                  <p style={textStyle}>nritya@nritya.co.in</p>\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col>\n          <div>\n          <Form style={containerStyle} onSubmit={handleSendEmail}>\n            <h2 style={headingStyle}>Send Message</h2>\n            <Form.Group controlId=\"fullname\">\n              <Form.Label style={textStyle}>Name</Form.Label>\n              <Form.Control \n                required \n                type=\"text\" \n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                placeholder=\"Full Name\" \n                style={formControl} \n              />\n            </Form.Group>\n            \n            <Form.Group controlId=\"message\">\n              <Form.Label style={textStyle}>Message</Form.Label>\n              <Form.Control \n                required \n                as=\"textarea\" \n                name=\"message\"\n                value={formData.message}\n                onChange={handleInputChange}\n                placeholder=\"Type your Message...\" \n                rows={4} \n                style={formControl} \n              />\n            </Form.Group>\n            <Button type=\"submit\" rounded className=\"me-2 rounded-pill\" style={{ textTransform: 'none', backgroundColor: isDarkModeOn ? '#892CDC' : 'black', color:'white' }}>\n              Send\n            </Button>\n          </Form>\n        </div>\n\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default ContactUs;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"names":["ContactUs","isDarkModeOn","useSelector","selectDarkModeStatus","containerStyle","setContainerStyle","useState","headingStyle","setHeadingStyle","textStyle","setTextStyle","formControl","setFormControl","formData","setFormData","name","message","useEffect","backgroundColor","color","border","borderRadius","handleInputChange","e","value","target","prevState","_jsxs","children","_jsx","Container","style","Row","Col","FontAwesomeIcon","icon","faHome","faPhone","faEnvelope","Form","onSubmit","preventDefault","body","mailToUrl","encodeURIComponent","window","location","href","Group","controlId","Label","Control","required","type","onChange","placeholder","as","rows","Button","rounded","className","textTransform","propTypes","PropTypes","tooltip","Feedback","React","_ref","ref","Component","props","classNames","displayName","FormCheckInput","id","bsPrefix","isValid","isInvalid","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","title","label","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","_Fragment","Object","assign","Input","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","classes","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Floating","Check","Text","Range","Select"],"sourceRoot":""}