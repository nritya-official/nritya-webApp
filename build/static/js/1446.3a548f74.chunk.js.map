{"version":3,"file":"static/js/1446.3a548f74.chunk.js","mappings":"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","sources":["Components/CardSliderCard.js","Components/NStudioCard.js","Screens/SearchPage.js","constants.js","utils/firebaseUtils.js"],"sourcesContent":["import React from 'react';\nimport NStudioCard from './NStudioCard';\n\nconst CardSliderCard = ({ studio }) => {\n  return (\n    <a href={`#/studio/${studio.id}`}>\n    <NStudioCard data={studio} img_src={\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}/>\n    </a>\n\n  );\n};\n\nexport default CardSliderCard;\n","\nimport React from 'react';\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport Chip from '@mui/joy/Chip';\nimport Link from '@mui/joy/Link';\nimport Typography from '@mui/joy/Typography';\nimport { Stack } from '@mui/material';\nimport { useSelector } from 'react-redux'; // Import useSelector\nimport { selectDarkModeStatus } from '../redux/selectors/darkModeSelector';\nimport { danceStylesColorChips } from '../constants';\nimport IconButton from '@mui/joy/IconButton';\nimport Favorite from '@mui/icons-material/Favorite';\n\n\nexport default function NStudioCard({img_src,data}) {\n    const isDarkModeOn = useSelector(selectDarkModeStatus);\n    \n    const studioId = data.id?data.id:data.studioId;\n\n    const cardStyle = {\n      backgroundColor: isDarkModeOn ? '#444' : 'white',\n      padding: '0px',\n      color: isDarkModeOn ? 'white' : 'black',\n      marginRight: \"10px\",\n      width: 320,\n      maxWidth: \"100%\",\n      boxShadow: 'lg',\n      transition: 'opacity 0.3s ease',\n    };\n  \n    const cardHoverStyle = {\n      transform: 'scale(1.01)',\n    };\n  \n  return (\n    <Card variant=\"solid\" sx={{\n      ...cardStyle,\n      '&:hover': cardHoverStyle,\n    }}>\n      \n        <AspectRatio ratio=\"1.78\" style={{ position: 'relative'}}>\n          <img\n            src={data && data.iconUrl ? data.iconUrl :\"https://cdn.pixabay.com/photo/2016/12/30/10/03/dance-1940245_960_720.jpg\"}\n            loading=\"lazy\"\n            alt=\"Studio Image\"\n            style={{ maxWidth: '100%', height: 'auto', overflow: 'hidden' }}\n            \n          />\n          <Stack direction=\"row\" spacing={2} style={{ position: 'absolute', bottom: 0, left: 0, padding: '1px' }}>\n        {data && data.danceStyles && typeof data.danceStyles === 'string' ? (data.danceStyles.split(\",\").slice(0, 3).map((form, index) => (\n        <Chip\n            key={index}\n            color={index % 2 === 0 ? \"danger\" : \"success\"}  \n            sx={{ marginBottom: \"10px\", fontSize: '0.8rem',  \n                    bgcolor: danceStylesColorChips[index].backgroundColor,\n                    color: danceStylesColorChips[index].color, \n            }}\n        >\n            {form.trim()}\n        </Chip>\n        ))):(\n            <Chip\n            key={10}\n            color={10 % 2 === 0 ? \"danger\" : \"success\"} \n            style={{ marginBottom: \"10px\", fontSize: '0.8rem' }}\n        >\n            {\"No danceforms\"}\n        </Chip>\n        )}\n\n        </Stack>\n\n        </AspectRatio>\n      <CardContent style={{padding:'10px'}}>\n        <Link\n          href={`#/studio/${studioId}`}\n          fontWeight=\"md\"\n          color=\"neutral\"\n          textColor=\"text.primary\"\n          underline='none'\n          overlay\n          style={{color: isDarkModeOn?'white':'black',extDecoder:\"one\"}}\n        >\n          {data && data.studioName?data.studioName:\"    \"}\n        </Link>\n        <Typography style={{color: isDarkModeOn?'white':'black'}} level=\"body-xs\">{data.street?data.street:\".  \"}</Typography>\n        <IconButton\n          hidden\n          aria-label=\"Like minimal photography\"\n          size=\"md\"\n          variant=\"solid\"\n          color=\"danger\"\n          sx={{\n            position: 'absolute',\n            zIndex: 2,\n            borderRadius: '50%',\n            right: '1rem',\n            bottom: '2rem',\n            transform: 'translateY(50%)',\n          }}\n        >\n          <Favorite />\n        </IconButton>\n        <Typography style={{color: isDarkModeOn?'white':'black'}}>⭐ {data && data.avgRating? data.avgRating.toFixed(1):\" Not rated yet\"}</Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkModeStatus } from \"../redux/selectors/darkModeSelector\";\nimport {Form, Button, Col,Row, Modal, ButtonGroup,\n      Container,} from \"react-bootstrap\";\nimport { Badge as MuiBadge, Chip as MuiChip, Autocomplete as MuiAutocomplete,\n  TextField as MuiTextField, createTheme,ThemeProvider,\n  Stack as MuiStack,Grid as MuiGrid, Box } from \"@mui/material\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport danceStyles from \"../danceStyles.json\";\nimport CardSliderCard from \"../Components/CardSliderCard\";\nimport './SearchPage.css';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { COLLECTIONS, LEVELS } from \"../constants\";\nimport NWorkshopCard from \"../Components/NWorkshopCard\";\nimport NOpenClassCard from \"../Components/NOpenClassCard\";\nimport NCourseCard from \"../Components/NCourseCard\";\n\nconst FILTER_LOCATION_KEY = \"filterLocation\";\nconst FILTER_SEARCH_TYPE_KEY = \"filterSearchType\";\nconst FILTER_DISTANCES_KEY = \"filterDistances\";\nconst FILTER_DANCE_FORMS_KEY = \"filterDanceForms\";\nconst FILTER_USER_GEO_LOC = \"browserGeoLoc\";\n\nconst levelsTypes = [LEVELS.ALL, LEVELS.BEGINNERS, LEVELS.INTERMEDIATE, LEVELS.ADVANCED]\nconst MAX_PRICE  = 10**10\n\nconst distances = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst searchTypes = [\n  { name: \"studio\", label: \"Studios\", collection: COLLECTIONS.STUDIO },\n  { name: \"workshop\", label: \"Workshops\", collection: COLLECTIONS.WORKSHOPS },\n  { name: \"openClass\",label: \"Open Classes\",collection: COLLECTIONS.OPEN_CLASSES},\n  { name: \"course\", label: \"Courses\", collection: COLLECTIONS.COURSES },\n];\n\nconst getCollectionForSearchType = (searchType) => {\n  const searchTypeObject = searchTypes.find(type => type.name === searchType);\n  return searchTypeObject ? searchTypeObject.collection : COLLECTIONS.STUDIO;\n};\n\nconst SearchPage = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [selectedDistances, setSelectedDistances] = useState(\"\");\n  const isDarkModeOn = useSelector(selectDarkModeStatus);\n  const [showFilters, setShowFilters] = useState(false);\n  const [studioIdName,setStudioIdName] = useState({});\n  const [showFilterValue, setShowFilterValue] = useState(\"distances\");\n  const [activeFilters, setActiveFilters] = useState(0);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedDanceForms, setSelectedDanceForms] = useState([]);\n  const [selectedSearchType, setSelectedSearchType] = useState(\"studio\");\n  const [selectedLevel, setSelectedLevel] = useState(\"All\");\n  const [selectedMaxPrice, setSelectedMaxPrice] = useState(MAX_PRICE);\n  const [searchData, setSearchData] = useState({\n    workshop: [],\n    openClass: [],\n    course: [],\n  });\n\n  const danceForms = danceStyles.danceStyles.map((danceForm) => ({\n    value: danceForm,\n    label: danceForm,\n  }));\n\n  const styles = {\n    valueContainer: (base) => ({\n      ...base,\n      maxHeight: 100,\n      overflowY: \"auto\",\n    }),\n    multiValue: (base, state) => {\n      return state.data.isFixed ? { ...base, backgroundColor: \"gray\" } : base;\n    },\n    multiValueLabel: (base, state) => {\n      return state.data.isFixed\n        ? { ...base, fontWeight: \"bold\", color: \"white\", paddingRight: 6 }\n        : base;\n    },\n    multiValueRemove: (base, state) => {\n      return state.data.isFixed ? { ...base, display: \"none\" } : base;\n    },\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const themeBar = createTheme({\n    palette: {\n      mode: isDarkModeOn ? \"dark\" : \"light\", // Dynamically set dark or light mode\n    },\n  });\n\n  const handleInputChange = (event, value) => {\n    setQuery(value);\n  };\n  const countActiveFilters = () => {\n    let count = 0;\n    if (localStorage.getItem(FILTER_DISTANCES_KEY)) count++;\n    if (localStorage.getItem(FILTER_SEARCH_TYPE_KEY)) count++;\n    if (selectedLevel && selectedLevel !== LEVELS.ALL) count++;\n    if (selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) count++;\n    const storedDanceForm = localStorage.getItem(FILTER_DANCE_FORMS_KEY);\n    if (storedDanceForm) count += JSON.parse(storedDanceForm).length;\n    return count;\n  };\n  const fetchIdNameMp = async (city) => {\n    try {\n      const apiEndpoint = `https://nrityaserver-2b241e0a97e5.herokuapp.com/api/autocomplete/?&city=${city}`;\n      const response = await fetch(apiEndpoint);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      \n      const data = await response.json();\n      setStudioIdName(data);\n      \n    } catch (error) {\n      console.error(\"Error in processing:\", error);\n    }\n  };\n\n  const handleSearch = () => {\n    const storedSelectedSearchType =\n      localStorage.getItem(FILTER_SEARCH_TYPE_KEY) ||\n      selectedSearchType ||\n      \"studio\";\n\n    if (query == null) {\n      setQuery(\"\");\n    }\n    let apiEndpoint = `https://nrityaserver-2b241e0a97e5.herokuapp.com/api/search/?query=${query}`;\n    const entity = getCollectionForSearchType(storedSelectedSearchType);\n\n    const city = localStorage.getItem(FILTER_LOCATION_KEY) || \"New Delhi\";\n    apiEndpoint += `&city=${encodeURIComponent(city)}`;\n    fetchIdNameMp(city)\n    if (storedSelectedSearchType) {\n      apiEndpoint += `&entity=${encodeURIComponent(entity)}`;\n    }\n\n    if (selectedDanceForms.length > 0) {\n      apiEndpoint += `&danceStyle=${encodeURIComponent(selectedDanceForms.join(\",\"))}`;\n    }\n\n    if (entity !== COLLECTIONS.STUDIO && selectedLevel && selectedLevel !== LEVELS.ALL) {\n      apiEndpoint += `&level=${encodeURIComponent(selectedLevel)}`\n    }\n\n    if ((entity === COLLECTIONS.WORKSHOPS || entity === COLLECTIONS.COURSES) && selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) {\n      apiEndpoint += `&price=${encodeURIComponent(selectedMaxPrice)}`\n    }\n\n    const geoLocation = getGeoLocationFromLocalStorage();\n    if (selectedDistances && geoLocation && localStorage.getItem(FILTER_DISTANCES_KEY)) {\n      apiEndpoint += `&distance=${encodeURIComponent(selectedDistances)}&user_lat=${encodeURIComponent(geoLocation.latitude)}&user_lon=${encodeURIComponent(geoLocation.longitude)}`;\n    }\n\n    console.log(\"apiEndpoint \", apiEndpoint);\n    fetch(apiEndpoint)\n      .then((response) => response.json())\n      .then((data) => {\n        const formattedData = Array.isArray(data) ? data : Object.values(data);\n        setResults(formattedData);\n      })\n      .catch((error) =>\n        console.error(\"Error fetching search results:\", error)\n      );\n  };\n\n\n  const handleChange = async (event, value) => {\n    const baseUrl = \"https://nrityaserver-2b241e0a97e5.herokuapp.com/api\";\n    //setQuery(event.target.value);\n    setQuery(value);\n\n    if (value.length >= 3) {\n      try {\n        const FILTER_LOCATION_KEY = \"filterLocation\";\n        const defaultCity = \"New Delhi\";\n\n        const city = localStorage.getItem(FILTER_LOCATION_KEY) || defaultCity;\n        const cityParam = encodeURIComponent(city || defaultCity);\n\n        const endpoint = `${baseUrl}/autocomplete?query=${value}&city=${cityParam}`;\n\n        //const endpoint = baseUrl + `/autocomplete?query=${value}&city=Patna`;\n        const response = await axios.get(endpoint);\n        console.log(\"Response :\",response.data)\n        const filteredSuggestions = Object.values(response.data).filter(value => value !== null);\n        setSuggestions(filteredSuggestions);\n\n      } catch (error) {\n        console.error(\"Error fetching autocomplete suggestions:\", error);\n      }\n    } else {\n      // Clear suggestions if the input length is less than 3 characters\n      setSuggestions([]);\n    }\n  };\n\n  const handleApplyFilters = () => {\n    localStorage.setItem(FILTER_DISTANCES_KEY, selectedDistances);\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, selectedSearchType);\n    localStorage.setItem(\n      FILTER_DANCE_FORMS_KEY,\n      JSON.stringify(selectedDanceForms)\n    );\n    setActiveFilters(countActiveFilters());\n    //dispatch(refreshLocation())\n    setShowFilters(false);\n    handleSearch();\n  };\n\n  const handleClearFilters = () => {\n    setSelectedDistances(\"\");\n    setSelectedDanceForms([]);\n    setSelectedSearchType(\"studio\");\n    setSelectedMaxPrice(MAX_PRICE);\n    setSelectedLevel(LEVELS.ALL);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n    localStorage.removeItem(FILTER_DANCE_FORMS_KEY);\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, \"studio\");\n    setActiveFilters(countActiveFilters());\n    setShowFilters(false);\n    handleSearch();\n  };\n\n  const handleSelectChange = (selectedOptions) => {\n    setSelectedDanceForms(\n      selectedOptions ? selectedOptions.map((option) => option.value) : []\n    );\n  };\n\n  const handleSearchTypeClick = (clickedSearchType) => {\n    localStorage.setItem(FILTER_SEARCH_TYPE_KEY, clickedSearchType);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n\n    setSelectedDistances(\"\");\n    setSelectedLevel(LEVELS.ALL);\n    setSelectedMaxPrice(MAX_PRICE);\n    setSelectedSearchType(clickedSearchType);\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  const handleRemoveDistance = () => {\n    setSelectedDistances(null);\n    localStorage.removeItem(FILTER_DISTANCES_KEY);\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  const handleRemoveDanceForm = (danceFormToRemove) => {\n    const filteredDanceForms = selectedDanceForms.filter(\n      (danceForm) => danceForm !== danceFormToRemove\n    );\n    setSelectedDanceForms(filteredDanceForms);\n    localStorage.setItem(\n      FILTER_DANCE_FORMS_KEY,\n      JSON.stringify(filteredDanceForms)\n    );\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  };\n\n  useEffect(() => {\n    const storedDistances = localStorage.getItem(FILTER_DISTANCES_KEY);\n    const storedDanceForm = localStorage.getItem(FILTER_DANCE_FORMS_KEY);\n    const storedSearchType = localStorage.getItem(FILTER_SEARCH_TYPE_KEY);\n\n    if (storedSearchType) {\n      setSelectedSearchType(storedSearchType);\n    } else {\n      setSelectedSearchType(\"studio\");\n      localStorage.setItem(FILTER_SEARCH_TYPE_KEY, \"studio\");\n    }\n\n    if (storedDistances) {\n      setSelectedDistances(storedDistances);\n    }\n\n    if (storedDanceForm) {\n      setSelectedDanceForms(JSON.parse(storedDanceForm));\n    }\n    setActiveFilters(countActiveFilters());\n    handleSearch();\n  }, []);\n\n  return (\n    <div\n      style={{\n        backgroundColor: isDarkModeOn ? \"#202020\" : \"white\",\n        padding: \"10px\",\n        minHeight: \"75vh\",\n      }}\n    >\n      <header>\n        <Container style={{ width: \"100%\" }}>\n          <MuiGrid container alignItems=\"center\">\n            <MuiGrid item xs={12}>\n              <ThemeProvider theme={themeBar}>\n                <MuiStack\n                  style={{\n                    width: \"100%\",\n                    paddingRight: 0,\n                    marginTop: 0,\n                    marginLeft: 0,\n                    marginBottom: 0,\n                  }}\n                  direction=\"row\"\n                  spacing={1}\n                >\n                  <MuiAutocomplete\n                    value={query}\n                    onInputChange={handleChange}\n                    onChange={handleInputChange}\n                    options={suggestions}\n                    getOptionLabel={(option) => option.toString()}\n                    renderInput={(params) => (\n                      <MuiTextField\n                        {...params}\n                        label=\"Search studios, workshops, open classes, courses......\"\n                        variant=\"outlined\"\n                        InputProps={{\n                          ...params.InputProps,\n                          endAdornment: (\n                            <InputAdornment\n                              position=\"end\"\n                              style={{\n                                marginRight: 0,\n                                marginTop: 0,\n                                marginLeft: 0,\n                                marginBottom: 0,\n                              }}\n                            >\n                              <SearchIcon\n                                style={{\n                                  cursor: \"pointer\",\n                                  color: isDarkModeOn ? \"#892CDC\" : \"black\",\n                                  marginRight: 1,\n                                }}\n                                onClick={handleSearch}\n                              />\n                            </InputAdornment>\n                          ),\n                          style: {\n                            paddingRight: 0,\n                            marginTop: 0,\n                            marginLeft: 0,\n                            marginBottom: 0,\n                          },\n                        }}\n                      />\n                    )}\n                    style={{ flex: 1 }}\n                  />\n                </MuiStack>\n              </ThemeProvider>\n            </MuiGrid>\n          </MuiGrid>\n          <br></br>\n          <Row className=\"align-items-center\">\n          <div className=\"horizontal-scroll-wrapper-for-filters\"> \n            {searchTypes.map((searchType) => (\n              <Col key={searchType.name} xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                <MuiChip\n                  label={searchType.label}\n                  variant={selectedSearchType === searchType.name ? \"outlined\" : \"contained\"}\n                  sx={{\n                    cursor: 'pointer',\n                    bgcolor: selectedSearchType === searchType.name ? \"black\" : \"#D9D9D9\",\n                    color: selectedSearchType === searchType.name ? \"white\" : \"black\",\n                    borderRadius: '10px',\n                    \"&:hover\": {\n                      bgcolor: selectedSearchType === searchType.name ? \"black\" : \"black\",\n                      color: selectedSearchType === searchType.name ? \"white\" : \"white\",\n                    }\n                  }}\n                  onClick={() => handleSearchTypeClick(searchType.name)}\n                />\n            </Col>\n            ))}\n           </div>\n          </Row>\n\n          <Row className=\"align-items-center\">\n          <div className=\"horizontal-scroll-wrapper-for-filters\"> \n            <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n              <MuiBadge\n                onClick={toggleFilters}\n                badgeContent={activeFilters}\n                color={isDarkModeOn ? \"warning\" : \"secondary\"}\n                pill\n              >\n                <MuiChip\n                  className=\"rounded-3\"\n                  color={isDarkModeOn ? \"warning\" : \"secondary\"}\n                  label=\"&#9776; filters\"\n                  variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                />\n              </MuiBadge>\n            </Col>\n\n            {(selectedDanceForms.length || selectedDistances || (selectedLevel && selectedLevel !== LEVELS.ALL) ||(selectedMaxPrice && selectedMaxPrice !== MAX_PRICE)) && (\n              <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                <MuiBadge\n                  color=\"error\"\n                  onClick={handleClearFilters}\n                  style={{ cursor: \"pointer\" }}\n                  pill\n                >\n                  <MuiChip\n                    color=\"error\"\n                    label=\"Clear All\"\n                    onDelete={handleClearFilters}\n                    style={{ cursor: \"pointer\" }}\n                    variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                    className=\"rounded-3\"\n                  />\n                </MuiBadge>\n              </Col>\n            )}\n\n            <Box display=\"flex\">\n            {/* Filter Badges */}\n            {selectedDistances && (\n              <Col xs=\"auto\" style={{ marginTop: \"0.5rem\" }}>\n                <MuiBadge color=\"success\" pill>\n                  <MuiChip\n                    className=\"rounded-3\"\n                    color=\"success\"\n                    label={`Distance: ${selectedDistances} km`}\n                    variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                    onDelete={handleRemoveDistance}\n                  />\n                </MuiBadge>\n              </Col>\n            )}\n\n            {(selectedLevel && selectedLevel !== LEVELS.ALL) &&(\n              <Col xs=\"auto\">\n                {\n                  <MuiBadge\n                    key={selectedLevel}\n                    color=\"info\"\n                    style={{\n                      marginLeft: \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Level: ${selectedLevel}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => setSelectedLevel(LEVELS.ALL)}\n                    />\n                  </MuiBadge>\n                }\n              </Col>\n            )}\n\n            {(selectedMaxPrice && selectedMaxPrice !== MAX_PRICE) &&(\n              <Col xs=\"auto\">\n                {\n                  <MuiBadge\n                    key={selectedMaxPrice}\n                    color=\"info\"\n                    style={{\n                      marginLeft: \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Prices Upto: ${selectedMaxPrice}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => setSelectedMaxPrice(MAX_PRICE)}\n                    />\n                  </MuiBadge>\n                }\n              </Col>\n            )}\n\n            {selectedDanceForms && (\n              <Col xs=\"auto\">\n                {selectedDanceForms.map((danceForm, index) => (\n                  <MuiBadge\n                    key={index}\n                    color=\"info\"\n                    style={{\n                      marginLeft: index !== 0 ? \"0.25rem\" : \"0\",\n                      marginTop: \"0.5rem\",\n                    }}\n                    pill\n                  >\n                    <MuiChip\n                      className=\"rounded-3\"\n                      color=\"info\"\n                      label={`Dance Form: ${danceForm}`}\n                      variant={isDarkModeOn ? \"outlined\" : \"contained\"}\n                      onDelete={() => handleRemoveDanceForm(danceForm)}\n                    />\n                  </MuiBadge>\n                ))}\n              </Col>\n            )}\n            </Box>\n           </div>\n          </Row>\n        </Container>\n      </header>\n\n      <Modal show={showFilters} onHide={toggleFilters} backdrop=\"static\">\n        <Modal.Header closeButton>\n          <Modal.Title>Filters</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            {/* Left side for filters list */}\n            <Col md={4}>\n              <h5>Filter By:</h5>\n              <ul style={{ listStyleType: \"none\", padding: 0 }}>\n\n                {selectedSearchType === \"studio\" && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"distances\"), setShowFilters(true)\n                      )}\n                    >\n                      Distances\n                    </li>\n                  </>\n                )}\n\n              {(selectedSearchType === \"workshop\" || selectedSearchType === \"course\") && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"price\"), setShowFilters(true)\n                      )}\n                    >\n                      Price\n                    </li>\n                  </>\n                )}\n\n                {selectedSearchType !== \"studio\" && (\n                  <>\n                    <hr style={{ margin: \"5px 0\" }}></hr>\n                    <li\n                      style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                      onClick={() => (\n                        setShowFilterValue(\"level\"), setShowFilters(true)\n                      )}\n                    >\n                      Level\n                    </li>\n                    \n                  </>\n                )}\n\n                <hr style={{ margin: \"5px 0\" }}></hr>\n                <li\n                  style={{ cursor: \"pointer\", margin: \"5px 0\" }}\n                  onClick={() => (\n                    setShowFilterValue(\"danceForm\"), setShowFilters(true)\n                  )}\n                >\n                  Dance Forms\n                </li>\n                <hr style={{ margin: \"5px 0\" }}></hr>\n              </ul>\n            </Col>\n\n            <Col md={8}>\n              {showFilters && showFilterValue === \"distances\" && (\n                <Form.Group controlId=\"filterDistances\">\n                  <Form.Label>Distances:</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedDistances}\n                    onChange={(e) => setSelectedDistances(e.target.value)}\n                  >\n                    <option value=\"\">Select distance</option>\n                    {distances.map((distance) => (\n                      <option key={distance} value={distance}>\n                        {distance} km\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"level\" && (\n                <Form.Group controlId=\"filterLevel\">\n                  <Form.Label>Level :</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedLevel}\n                    onChange={(e) => setSelectedLevel(e.target.value)}\n                  >\n                    <option value=\"\">Select Lavel</option>\n                    {levelsTypes.map((level) => (\n                      <option key={level} value={level}>\n                        {level} \n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"price\" && (\n                <Form.Group controlId=\"filterPrice\">\n                  <Form.Label>Prices :</Form.Label>\n                  <Form.Control\n                    className=\"p-0\"\n                    as=\"select\"\n                    value={selectedMaxPrice}\n                    onChange={(e) => setSelectedMaxPrice(e.target.value)}\n                  >\n                    <option value=\"\">Prices below</option>\n                    {[499,999,1499,1999,2999,4999,9999,MAX_PRICE].map((price) => (\n                      <option key={price} value={price}>\n                        {price >= MAX_PRICE ?\"All\":price} \n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              )}\n\n              {showFilters && showFilterValue === \"danceForm\" && (\n                <Form.Group controlId=\"filterDanceForms\">\n                  <Form.Label>Dance Forms:</Form.Label>\n                  <Select\n                    isMulti\n                    value={danceForms.filter((option) =>\n                      selectedDanceForms.includes(option.value)\n                    )}\n                    onChange={handleSelectChange}\n                    options={danceForms}\n                    closeMenuOnSelect={false}\n                    placeholder=\"Select Dance Forms\"\n                    styles={styles}\n                  />\n                </Form.Group>\n              )}\n            </Col>\n          </Row>\n          <ButtonGroup style={{ marginTop: \"1rem\" }}>\n            <Button variant=\"primary\" onClick={handleApplyFilters}>\n              Apply\n            </Button>\n            <Button\n              variant=\"danger\"\n              onClick={handleClearFilters}\n              style={{ marginLeft: \"10px\" }}\n            >\n              Clear All Filters\n            </Button>\n          </ButtonGroup>\n        </Modal.Body>\n      </Modal>\n\n      <hr></hr>\n      {selectedSearchType === \"studio\" && (\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n          {results.length === 0 ? (\n            <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n          ) : (\n            results.map((studio, index) => (\n              <div\n                key={index}\n                className=\"studio-card-container\"\n                style={{ padding: \"0.2rem\" }}\n                md={2}\n              >\n                <a\n                  href={`#/studio/${studio.studioId}`}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <CardSliderCard studio={studio} />\n                </a>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n\n      {selectedSearchType === \"workshop\" && (\n        \n          <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n            {results.length === 0 ? (\n              <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n            ) : (\n              results.map((data, index) => (\n                <div\n                  key={index}\n                  className=\"studio-card-container\"\n                  style={{ padding: \"0.2rem\" }}\n                  md={2}\n                >\n                  \n                    <NWorkshopCard\n                    key={data.id}\n                    dataItem={data}\n                    studioIdName={studioIdName}\n                  />\n                  \n                </div>\n              ))\n            )}\n          </div>\n      \n        \n      )}\n      {selectedSearchType === \"openClass\" && (\n         <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n         {results.length === 0 ? (\n           <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n         ) : (\n           results.map((data, index) => (\n             <div\n               key={index}\n               className=\"studio-card-container\"\n               style={{ padding: \"0.2rem\" }}\n               md={2}\n             >\n               <NOpenClassCard\n                key={data.id}\n                dataItem={data}\n                studioIdName={studioIdName}\n              />\n             </div>\n           ))\n         )}\n       </div>\n      )}\n      {selectedSearchType === \"course\" && (\n       <div style={{ display: \"flex\", flexWrap: \"wrap\", padding: \"10px\" }}>\n       {results.length === 0 ? (\n         <div className=\"\" style={{ minHeight: \"30vh\" }}></div>\n       ) : (\n         results.map((data, index) => (\n           <div\n             key={index}\n             className=\"studio-card-container\"\n             style={{ padding: \"0.2rem\" }}\n             md={2}\n           >\n             <NCourseCard\n            key={data.id}\n            dataItem={data}\n            studioIdName={studioIdName}\n          />\n           </div>\n         ))\n       )}\n     </div>\n      )}\n    </div>\n  );\n};\n\nfunction getGeoLocationFromLocalStorage() {\n  // Retrieve the stored JSON string from localStorage\n  var geoLocString = localStorage.getItem(FILTER_USER_GEO_LOC);\n\n  // Check if the data exists in localStorage\n  if (geoLocString !== null) {\n    try {\n      // Parse the JSON string to get an object\n      var geoLocObject = JSON.parse(geoLocString);\n      // Check if the latitude and longitude properties exist in the parsed object\n      if (\n        geoLocObject &&\n        geoLocObject[\"latitude\"] &&\n        geoLocObject[\"longitude\"]\n      ) {\n        // Extract latitude and longitude from the object\n        var latitude = geoLocObject.latitude;\n        var longitude = geoLocObject.longitude;\n\n        // Return an object with latitude and longitude\n        return { latitude: latitude, longitude: longitude };\n      }\n    } catch (error) {\n      console.error(\"Error parsing JSON:\", error);\n    }\n  }\n\n  // Return null if there's no valid data or an error occurred\n  return null;\n}\n\nexport default SearchPage;\n","import { FaSnowflake, FaWifi, FaTint, FaToilet, FaPlug, FaFireExtinguisher, FaFirstAid, FaVideo, FaCreditCard, FaParking  } from 'react-icons/fa';\n\nexport const STATUSES = {\n    SUBMITTED: \"Submitted\",\n    UNDER_REVIEW: \"Under Review\",\n    REVIEWED: \"Reviewed\",\n    VERIFIED: \"Verified\",\n    VERIFICATION_FAILED: \"Verification Failed\",\n};\n\nexport const DRAFT_COLLECTIONS = {\n    DRAFT_STUDIOS: 'DraftStudios',\n    DRAFT_WORKSHOPS: 'DraftWorkshops',\n    DRAFT_OPEN_CLASSES: 'DraftOpenClasses',\n    DRAFT_COURSES: 'DraftCourses'\n};\n\nexport const LEVELS = {\n    ALL : \"All\",\n    BEGINNERS : \"Beginner\", \n    INTERMEDIATE :\"Intermediate\", \n    ADVANCED :\"Advanced\"\n}\n\nexport const SERVER_URLS = {\n    PROD : 'https://nrityaserver-2b241e0a97e5.herokuapp.com/',\n    LOCAL : 'http://127.0.0.1:8000/'\n}\n\nexport const COLORS = {\n    GREEN: { backgroundColor: \"#28a745\", color: \"#fff\" },     // Green background, white text\n    BLUE: { backgroundColor: \"#007bff\", color: \"#fff\" },      // Blue background, white text\n    YELLOW: { backgroundColor: \"#ffc107\", color: \"#000\" },    // Yellow background, black text\n    RED: { backgroundColor: \"#dc3545\", color: \"#fff\" },       // Red background, white text\n    PURPLE: { backgroundColor: \"#6f42c1\", color: \"#fff\" },    // Purple background, white text\n    ORANGE: { backgroundColor: \"#fd7e14\", color: \"#fff\" },    // Orange background, white text\n    TEAL: { backgroundColor: \"#20c997\", color: \"#fff\" },      // Teal background, white text\n    PINK: { backgroundColor: \"#e83e8c\", color: \"#fff\" },      // Pink background, white text\n    GRAY: { backgroundColor: \"#6c757d\", color: \"#fff\" },       // Gray background, white text\n\n    LIGHTBLUE: { backgroundColor: \"#17a2b8\", color: \"#fff\" }, // Light blue background, white text\n    DARKBLUE: { backgroundColor: \"#343a40\", color: \"#fff\" },  // Dark blue background, white text\n    CYAN: { backgroundColor: \"#00bcd4\", color: \"#fff\" },      // Cyan background, white text\n    INDIGO: { backgroundColor: \"#6610f2\", color: \"#fff\" },    // Indigo background, white text\n    LIME: { backgroundColor: \"#cddc39\", color: \"#000\" },      // Lime background, black text\n    AMBER: { backgroundColor: \"#ffca28\", color: \"#000\" },     // Amber background, black text\n    BROWN: { backgroundColor: \"#795548\", color: \"#fff\" },     // Brown background, white text\n    LIGHTGREEN: { backgroundColor: \"#8bc34a\", color: \"#000\" },// Light green background, black text\n    DEEPPURPLE: { backgroundColor: \"#673ab7\", color: \"#fff\" },// Deep purple background, white text\n    DEEPORANGE: { backgroundColor: \"#ff5722\", color: \"#fff\" },// Deep orange background, white text\n    BLACK: { backgroundColor: \"#000000\", color: \"#fff\" },     // Black background, white text\n    WHITE: { backgroundColor: \"#ffffff\", color: \"#000\" },     // White background, black text\n    SILVER: { backgroundColor: \"#c0c0c0\", color: \"#000\" },    // Silver background, black text\n    GOLD: { backgroundColor: \"#ffd700\", color: \"#000\" },      // Gold background, black text\n    NAVY: { backgroundColor: \"#001f3f\", color: \"#fff\" },      // Navy background, white text\n    OLIVE: { backgroundColor: \"#3d9970\", color: \"#fff\" },     // Olive background, white text\n\n  };\n\nexport const CHIP_LEVELS_DESIGN = {\n    [LEVELS.ALL]: COLORS.GREEN,           // Green background, white text\n    [LEVELS.BEGINNERS]: COLORS.BLUE,     // Blue background, white text\n    [LEVELS.INTERMEDIATE]: COLORS.YELLOW,  // Yellow background, black text\n    [LEVELS.ADVANCED]: COLORS.RED      // Red background, white text\n  };\n  \n\n  \nexport const danceStylesColorChips = [COLORS.PURPLE,COLORS.ORANGE,COLORS.TEAL,COLORS.LIME]\n\nexport const COLLECTIONS = {\n    USER: \"User\",\n    USER_KYC:\"UserKyc\",\n    ADMIN:\"Admin\",\n    REVIEWS: \"Reviews\",\n    TRANSACTIONS: \"Transactions\",\n    STUDIO: \"Studio\",\n    INSTRUCTORS: \"Instructors\",\n    FREE_TRIAL_BOOKINGS:\"FreeTrialBookings\",\n    WORKSHOPS: 'Workshops',\n    OPEN_CLASSES: 'OpenClasses',\n    COURSES: 'Courses',\n    BOOKINGS: 'Bookings',\n}\n\nexport const STORAGES ={\n    STUDIOIMAGES:'StudioImages',\n    STUDIOICON:'StudioIcon',\n    STUDIOANNOUNCEMENTS :'StudioAnnouncements',\n    USERIMAGE:'UserImage',\n    INSTRUCTORIMAGES: 'InstructorImages',\n    WORKSHOPICON :\"WorkshopIcon\",\n    WORKSHOPIMAGES :\"WorkshopImages\",\n    OPENCLASSICON :\"OpenClassIcon\",\n    COURSEICON :\"CourseIcon\",\n    CREATORS_KYC_DOCUMENTS :\"CreatorKycDocuments\"\n}\n\nexport const SEARCH_FILTERS ={\n    DANCEFORMS:'danceforms',\n    DISTANCES:'distances',\n}\n\nexport const BASEURL_DEV = \"http://127.0.0.1:8000/\"\nexport const BASEURL_PROD= \"https://nrityaserver-2b241e0a97e5.herokuapp.com/\"\n\nexport const AMENITIES_ICONS = {\n    \"AC\": <FaSnowflake />,\n    \"Free Wifi\": <FaWifi />,\n    \"RO Water\": <FaTint />,\n    \"Toilet\": <FaToilet />,\n    \"Power Backup\": <FaPlug />,\n    \"Fire Extinguisher\": <FaFireExtinguisher />,\n    \"First Aid Kit\": <FaFirstAid />,\n    \"CCTV Camera\": <FaVideo />,\n    \"Card Payment\": <FaCreditCard />,\n    \"Parking Space\": <FaParking />,\n};\n\n","import { doc, getDoc, setDoc, updateDoc, deleteDoc, collection, query, getDocs, where, getCountFromServer } from 'firebase/firestore';\nimport { db } from '../config';\nimport {ref,listAll,getDownloadURL,uploadBytes, deleteObject  } from \"firebase/storage\";\nimport { storage } from '../config';\nimport { COLLECTIONS } from '../constants';\nimport secureLocalStorage from 'react-secure-storage';\n\nexport const setCreatorMode = async (uid) => {\n  console.log(\"setCreatorMode \",uid)\n  try{\n  const userRef = doc(db, COLLECTIONS.USER, uid);\n  const userSnap = await getDoc(userRef);\n  if (userSnap.exists()) {\n    if(userSnap.data() != null){\n      const mode = userSnap.data().CreatorMode\n      console.log(\"setCreatorMode: Is User a creator?\",mode)\n      secureLocalStorage.setItem('CreatorMode', mode);\n        \n    }else{\n      console.log(\"userSnap.data() null\")\n      \n    }\n  } else {\n    console.log(\"User not found\");\n  }\n  }catch(error){\n    console.log(\" error\");\n  }\n}\n\nexport const getCreatorMode = async () => {\n  try{\n    const mode = secureLocalStorage.getItem('CreatorMode');\n    console.log(\"getCreatorMode \",mode)\n    if (mode){\n      return mode\n    }else{\n      return false\n    }\n  } \n  catch(error){\n    console.log(\" error\");\n    return false\n  }\n}\n\n// Read operation with image URL\nexport const readDocumentWithImageUrl = async (collectionName, productId) => {\n    console.log(\"Debug \",`${collectionName}/${productId}`)\n    const storagePath = `${collectionName}/${productId}`;\n    const folderRef = ref(storage,storagePath);\n    try {\n        const result = await listAll(folderRef);\n        if (result.items.length > 0) {\n            const firstFileRef = result.items[0];\n            const url = await getDownloadURL(firstFileRef);\n            console.log('Debug URL:', url);\n            return url;\n          } else {\n            console.log('Debug No files found in the folder.');\n            return null;\n          }\n    } catch (error) {\n      console.error('Error getting image URL:', error);\n      return null;\n    }\n  };\n\n// Read operation\nexport const readDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    const docSnapshot = await getDoc(docRef);\n    return docSnapshot.exists() ? docSnapshot.data() : null;\n};\n\n// Create or Update operation\nexport const saveDocument = async (collectionName, documentId, data) => {\n    const docRef = doc(db, collectionName, documentId);\n    await setDoc(docRef, data, { merge: true });\n    return data;\n};\n\n\nexport const handleSavePostOTPSuccess = async (collectionName, documentId, phoneNumber) => {\n  const docRef = doc(db, collectionName, documentId);\n  await updateDoc(docRef, {isPhoneNumberVerified:true,phoneNumber});\n  return true;\n};\n\n// Update specific fields in a document\nexport const updateDocumentFields = async (collectionName, documentId, fields) => {\n    const docRef = doc(db, collectionName, documentId);\n    await updateDoc(docRef, fields);\n    return { id: documentId, ...fields };\n};\n\n// Delete operation\nexport const deleteDocument = async (collectionName, documentId) => {\n    const docRef = doc(db, collectionName, documentId);\n    await deleteDoc(docRef);\n    return { id: documentId };\n};\n\n// Query operation\nexport const queryDocuments = async (collectionName, conditions) => {\n    const q = query(collection(db, collectionName, conditions));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n};\n\nexport const queryDocumentsCount = async (collectionName,field,operation,value) => {\n    console.log(\"Hiii \",collectionName,field,operation,value)\n    const q = query(collection(db, collectionName), where(field,operation,value));\n    const snapshot = await getCountFromServer(q);\n    return snapshot.data().count;\n};\n\n\n  // Function to delete all images in a folder\nexport  const deleteAllImagesInFolder = async (storageFolder, entityId) => {\n    /*\n    Description: Deletes all images in the specified folder associated with the given entityId.\n\n    Args:\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: The unique identifier of the entity whose images are to be deleted eg UserId,StudioId like thing.\n    */\n    const folderPath = `${storageFolder}/${entityId}`;\n    const folderRef = ref(storage, folderPath);\n    const fileList = await listAll(folderRef);\n\n    await Promise.all(fileList.items.map(async (fileRef) => {\n      await deleteObject(fileRef);\n    }));\n  };\n\n  // Function to delete images\nexport const deleteImages = async (storageFolder,imagesToDelete,entityId) => {\n    /*\n    Description: Deletes specific images associated with the given entityId.\n\n    Args:\n      imagesToDelete <array>: An array of image objects to be deleted.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n    await Promise.all(imagesToDelete.map(async (file) => {\n      const fileRefToDelete = ref(storage, `${storageFolder}/${entityId}/${file.filename}`);\n      await deleteObject(fileRefToDelete);\n    }));\n  };\n\n  // Function to upload new images\nexport const uploadImages = async (storageFolder, newImages, entityId) => {\n    /*\n    Description: Uploads new images associated with the given entityId.\n\n    Args:\n      newImages <array>: An array of new image objects to be uploaded.\n      storageFolder <string>: The folder path in the storage where the images are stored.\n      entityId <string>: UserId,StudioId like thing.\n    */\n   console.log(storageFolder,entityId)\n    await Promise.all(newImages.map(async (newFileData) => {\n      const folderPath = `${storageFolder}/${entityId}`;\n      const fileRef = ref(storage, `${folderPath}/${newFileData.file.name}`);\n      await uploadBytes(fileRef, newFileData.file);\n    }));\n  };\n\n export const uploadOneImageAndGetURL = async (storageFolder, file, entityId) => {\n    try {\n      const folderPath = `${storageFolder}/${entityId}/${file.name}`;\n      console.log(folderPath)\n      const fileRef = ref(storage, folderPath);\n      \n      await uploadBytes(fileRef, file);\n  \n      const imageUrl = await getDownloadURL(fileRef);\n      console.log(imageUrl)\n      return imageUrl;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error; \n    }\n  };\n  \n  export const getAllImagesInFolder = async (storageFolder) => {\n    const folderPath = `${storageFolder}`;\n    const folderRef = ref(storage, folderPath);\n    \n    try {\n        const fileList = await listAll(folderRef);\n\n        const imageUrlsComprehensive = await Promise.all(\n          fileList.items.map(async (fileRef) => {\n            const downloadURL = await getDownloadURL(fileRef);\n  \n            return {\n              id: fileRef.name,\n              filename: fileRef.name,\n              fileURL: downloadURL,\n            };\n          })\n        );\n\n        // return imageUrls;\n        return imageUrlsComprehensive\n    } catch (error) {\n        console.error('Error retrieving images:', error);\n        throw error;\n    }\n};\n\n"],"names":["_ref","studio","_jsx","href","id","children","NStudioCard","data","img_src","isDarkModeOn","useSelector","selectDarkModeStatus","studioId","cardStyle","backgroundColor","padding","color","marginRight","width","maxWidth","boxShadow","transition","_jsxs","Card","variant","sx","transform","AspectRatio","ratio","style","position","src","iconUrl","loading","alt","height","overflow","Stack","direction","spacing","bottom","left","danceStyles","split","slice","map","form","index","Chip","marginBottom","fontSize","bgcolor","danceStylesColorChips","trim","CardContent","Link","fontWeight","textColor","underline","overlay","extDecoder","studioName","Typography","level","street","IconButton","hidden","size","zIndex","borderRadius","right","Favorite","avgRating","toFixed","FILTER_SEARCH_TYPE_KEY","FILTER_DISTANCES_KEY","FILTER_DANCE_FORMS_KEY","FILTER_USER_GEO_LOC","levelsTypes","LEVELS","ALL","BEGINNERS","INTERMEDIATE","ADVANCED","MAX_PRICE","distances","searchTypes","name","label","collection","COLLECTIONS","STUDIO","WORKSHOPS","OPEN_CLASSES","COURSES","SearchPage","query","setQuery","useState","results","setResults","selectedDistances","setSelectedDistances","showFilters","setShowFilters","studioIdName","setStudioIdName","showFilterValue","setShowFilterValue","activeFilters","setActiveFilters","suggestions","setSuggestions","selectedDanceForms","setSelectedDanceForms","selectedSearchType","setSelectedSearchType","selectedLevel","setSelectedLevel","selectedMaxPrice","setSelectedMaxPrice","searchData","setSearchData","workshop","openClass","course","danceForms","danceForm","value","toggleFilters","themeBar","createTheme","palette","mode","countActiveFilters","count","localStorage","getItem","storedDanceForm","JSON","parse","length","handleSearch","storedSelectedSearchType","apiEndpoint","entity","searchType","searchTypeObject","find","type","getCollectionForSearchType","city","encodeURIComponent","async","response","fetch","ok","Error","json","error","console","fetchIdNameMp","join","geoLocation","geoLocString","geoLocObject","latitude","longitude","getGeoLocationFromLocalStorage","log","then","formattedData","Array","isArray","Object","values","catch","handleClearFilters","removeItem","setItem","useEffect","storedDistances","storedSearchType","minHeight","Container","MuiGrid","container","alignItems","item","xs","ThemeProvider","theme","MuiStack","paddingRight","marginTop","marginLeft","MuiAutocomplete","onInputChange","event","FILTER_LOCATION_KEY","defaultCity","endpoint","axios","filteredSuggestions","filter","onChange","handleInputChange","options","getOptionLabel","option","toString","renderInput","params","MuiTextField","InputProps","endAdornment","InputAdornment","SearchIcon","cursor","onClick","flex","Row","className","Col","MuiChip","handleSearchTypeClick","clickedSearchType","MuiBadge","badgeContent","pill","onDelete","Box","display","handleRemoveDistance","danceFormToRemove","filteredDanceForms","stringify","handleRemoveDanceForm","Modal","show","onHide","backdrop","Header","closeButton","Title","Body","md","listStyleType","_Fragment","margin","Form","Group","controlId","Label","Control","as","e","target","distance","price","Select","isMulti","includes","selectedOptions","closeMenuOnSelect","placeholder","styles","valueContainer","base","maxHeight","overflowY","multiValue","state","isFixed","multiValueLabel","multiValueRemove","ButtonGroup","Button","handleApplyFilters","flexWrap","textDecoration","CardSliderCard","NWorkshopCard","dataItem","NOpenClassCard","NCourseCard","STATUSES","SUBMITTED","UNDER_REVIEW","REVIEWED","VERIFIED","VERIFICATION_FAILED","DRAFT_COLLECTIONS","DRAFT_STUDIOS","DRAFT_WORKSHOPS","DRAFT_OPEN_CLASSES","DRAFT_COURSES","SERVER_URLS","PROD","LOCAL","COLORS","GREEN","BLUE","YELLOW","RED","PURPLE","ORANGE","TEAL","PINK","GRAY","LIGHTBLUE","DARKBLUE","CYAN","INDIGO","LIME","AMBER","BROWN","LIGHTGREEN","DEEPPURPLE","DEEPORANGE","BLACK","WHITE","SILVER","GOLD","NAVY","OLIVE","CHIP_LEVELS_DESIGN","USER","USER_KYC","ADMIN","REVIEWS","TRANSACTIONS","INSTRUCTORS","FREE_TRIAL_BOOKINGS","BOOKINGS","STORAGES","STUDIOIMAGES","STUDIOICON","STUDIOANNOUNCEMENTS","USERIMAGE","INSTRUCTORIMAGES","WORKSHOPICON","WORKSHOPIMAGES","OPENCLASSICON","COURSEICON","CREATORS_KYC_DOCUMENTS","BASEURL_PROD","AMENITIES_ICONS","FaSnowflake","FaWifi","FaTint","FaToilet","FaPlug","FaFireExtinguisher","FaFirstAid","FaVideo","FaCreditCard","FaParking","setCreatorMode","uid","userRef","doc","db","userSnap","getDoc","exists","CreatorMode","secureLocalStorage","readDocumentWithImageUrl","collectionName","productId","storagePath","folderRef","ref","storage","result","listAll","items","firstFileRef","url","getDownloadURL","readDocument","documentId","docRef","docSnapshot","saveDocument","setDoc","merge","handleSavePostOTPSuccess","phoneNumber","updateDoc","isPhoneNumberVerified","updateDocumentFields","fields","queryDocumentsCount","field","operation","q","where","getCountFromServer","deleteAllImagesInFolder","storageFolder","entityId","folderPath","fileList","Promise","all","deleteObject","fileRef","deleteImages","imagesToDelete","fileRefToDelete","file","filename","uploadImages","newImages","newFileData","uploadBytes","getAllImagesInFolder","downloadURL","fileURL"],"sourceRoot":""}